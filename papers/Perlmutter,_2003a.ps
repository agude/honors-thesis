%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: arXiv:astro-ph/0303428v1  18 Mar 2003
%%Pages: 24
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: SymbolMT TimesNewRomanPSMT ArialMT Myriad-Roman
%%+ Helvetica Helvetica-Bold Times-BoldItalic Times-Roman
%%+ Trebuchet-BoldItalic Arial-BoldMT Tahoma-Bold
%%+ TimesNewRomanPS-ItalicMT TimesNewRomanPS-BoldItalicMT Symbol
%%+ Times-Italic
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -z -R -K1 PerlmutterSchmidtChapter.dvi -o
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 2008.02.02:0333
%%BeginProcSet: texc.pro
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texnansi.enc
% @psencodingfile{
%   author = "Y&Y, Inc.",
%   version = "1.1",
%   date = "1 December 1996",
%   filename = "texnansi.enc",
%   email = "help@YandY.com",
%   address = "45 Walden Street // Concord, MA 01742, USA",
%   codetable = "ISO/ASCII",
%   checksum = "xx",
%   docstring = "Encoding for fonts in Adobe Type 1 format for use with TeX."
% }
%
% The idea is to have all 228 characters normally included in Type 1 text
% fonts (plus a few more) available for typesetting.  This is effectively
% the character set in Adobe Standard Encoding, ISO Latin 1, plus a few more.
%
% Character code assignments were made as follows:
%
% (1) The character layout largely matches `ASCII' in the 32 -- 126 range,
% except for `circumflex' in 94 and `tilde' in 126, to match `TeX text'
% (`asciicircumflex' and `asciitilde' appear in 158 and 142 instead).
%
% (2) The character layout matches `Windows ANSI' in almost all places,
% except for `quoteright' in 39 and `quoteleft' in 96 to match ASCII
% (`quotesingle' and `grave' appear in 129 and 18 instead).
%
% (3) The character layout matches `TeX typewriter' used by CM text fonts
% in most places (except for discordant positions such as hungarumlaut
% (instead of braceright), dotaccent (instead of underscore) etc.
%
% (4) Remaining characters are assigned arbitrarily to the `control character'
% range (0 -- 31), avoiding 0, 9, 10 and 13 in case we meet dumb software
% - similarly one should really avoid 127 and 128 if possible.
% In addition, the 8 open slots in Windows ANSI between 128 and 159 are used.
%
% (5) Y&Y Lucida Bright includes some extra ligatures and such; ff, ffi, ffl,
% and `dotlessj,' these are included 11 -- 15, and 17.
%
% (6) Hyphen appears both at 45 and 173 for compatibility with both ASCII
% and Windows ANSI.
%
% (7) It doesn't really matter where ligatures appear (both real, such as ffi,
% and pseudo such as ---) since these should not be accessed directly, only
% via ligature information in the TFM file.
%
% SAMPLE USAGE (in `psfonts.map' file for DVIPS):
% 
% lbr LucidaBright "TeXnANSIEncoding ReEncodeFont" <texnansi.enc <lbr.pfb
%
% This tells DVIPS that the font called `lbr' in TeX has PostScript 
% FontName `LucidaBright.'  It also asks DVIPS to expand the file `lbr.pfb'
% into PFA form, to include the attached `texnansi.enc' encoding vector,
% and to then actually reencode the font based on that encoding vector.
%
% Revised 1996 June 1 by adding second position for `fl' to avoid Acrobat bug.
% Revised 1996 June 1 by adding second position for `fraction' for same reason.
% Revised 1997 Oct 1 by adding cwm  (used in boundary char TFM code)
% Revised 1998 Mar 1 by adding Unicode for Euro character
%
/TeXnANSIEncoding [
/.notdef % 0
/Euro % /Uni20AC 1
/.notdef % 2
/.notdef % 3
/fraction %	4
/dotaccent %	5
/hungarumlaut %	6
/ogonek	%	7
/fl	%	8
/.notdef % /fraction %	9	not used (see 4), backward compatability only
/cwm	%	10	not used, except boundary char internally maybe
/ff    %	11
/fi    %	12
/.notdef % /fl    %	13	not used (see 8), backward compatability only
/ffi   %	14
/ffl   %	15
/dotlessi %	16
/dotlessj %	17
/grave %	18
/acute %	19
/caron %	20
/breve %	21
/macron %	22
/ring  %	23
/cedilla %	24
/germandbls %	25
/ae    %	26
/oe    %	27
/oslash %	28
/AE    %	29
/OE    %	30
/Oslash %	31
/space %	32	% /suppress in TeX text
/exclam %	33
/quotedbl %	34	% /quotedblright in TeX text
/numbersign %	35
/dollar %	36
/percent %	37
/ampersand %	38
/quoteright %	39	% /quotesingle in ANSI
/parenleft %	40
/parenright %	41
/asterisk %	42
/plus  %	43
/comma %	44
/hyphen %	45
/period %	46
/slash %	47
/zero  %	48
/one   %	49
/two   %	50
/three %	51
/four  %	52
/five  %	53
/six   %	54
/seven %	55
/eight %	56
/nine  %	57
/colon %	58
/semicolon %	59
/less  %	60	% /exclamdown in Tex text
/equal %	61
/greater %	62	% /questiondown in TeX text
/question %	63
/at %	64
/A %	65
/B %	66
/C %	67
/D %	68
/E %	69
/F %	70
/G %	71
/H %	72
/I %	73
/J %	74
/K %	75
/L %	76
/M %	77
/N %	78
/O %	79
/P %	80
/Q %	81
/R %	82
/S %	83
/T %	84
/U %	85
/V %	86
/W %	87
/X %	88
/Y %	89
/Z %	90
/bracketleft %	91
/backslash %	92	% /quotedblleft in TeX text
/bracketright %	93
/circumflex %	94	% /asciicircum in ASCII
/underscore %	95	% /dotaccent in TeX text
/quoteleft %	96	% /grave accent in ANSI
/a %	97
/b %	98
/c %	99
/d %	100
/e %	101
/f %	102
/g %	103
/h %	104
/i %	105
/j %	106
/k %	107
/l %	108
/m %	109
/n %	110
/o %	111
/p %	112
/q %	113
/r %	114
/s %	115
/t %	116
/u %	117
/v %	118
/w %	119
/x %	120
/y %	121
/z %	122
/braceleft %	123	% /endash in TeX text
/bar   %	124	% /emdash in TeX test
/braceright %	125	% /hungarumlaut in TeX text
/tilde %	126	% /asciitilde in ASCII
/dieresis %	127	not used (see 168), use higher up instead
/Lslash	%	128	this position is unfortunate, but now too late to fix
/quotesingle %	129
/quotesinglbase %	130
/florin %	131
/quotedblbase %	132
/ellipsis %	133
/dagger %	134
/daggerdbl %	135
/circumflex %	136
/perthousand %	137
/Scaron %	138
/guilsinglleft %	139
/OE    %	140
/Zcaron %	141
/asciicircum %	142
/minus %	143
/lslash %	144
/quoteleft %	145
/quoteright %	146
/quotedblleft %	147
/quotedblright %	148
/bullet %	149
/endash %	150
/emdash %	151
/tilde %	152
/trademark %	153
/scaron %	154
/guilsinglright %	155
/oe    %	156
/zcaron %	157
/asciitilde %	158
/Ydieresis %	159
/nbspace %	160	% /space (no break space)
/exclamdown %	161
/cent  %	162
/sterling %	163
/currency %	164
/yen   %	165
/brokenbar %	166
/section %	167
/dieresis %	168
/copyright %	169
/ordfeminine %	170
/guillemotleft %	171
/logicalnot %	172
/sfthyphen %	173 % /hyphen (hanging hyphen)
/registered %	174
/macron %	175
/degree %	176
/plusminus %	177
/twosuperior %	178
/threesuperior %	179
/acute %	180
/mu    %	181
/paragraph %	182
/periodcentered %	183
/cedilla %	184
/onesuperior %	185
/ordmasculine %	186
/guillemotright %	187
/onequarter %	188
/onehalf %	189
/threequarters %	190
/questiondown %	191
/Agrave %	192
/Aacute %	193
/Acircumflex %	194
/Atilde %	195
/Adieresis %	196
/Aring %	197
/AE    %	198
/Ccedilla %	199
/Egrave %	200
/Eacute %	201
/Ecircumflex %	202
/Edieresis %	203
/Igrave %	204
/Iacute %	205
/Icircumflex %	206
/Idieresis %	207
/Eth   %	208
/Ntilde %	209
/Ograve %	210
/Oacute %	211
/Ocircumflex %	212
/Otilde %	213
/Odieresis %	214
/multiply %	215	% OE in T1
/Oslash %	216
/Ugrave %	217
/Uacute %	218
/Ucircumflex %	219
/Udieresis %	220
/Yacute %	221
/Thorn %	222
/germandbls %	223
/agrave %	224
/aacute %	225
/acircumflex %	226
/atilde %	227
/adieresis %	228
/aring %	229
/ae    %	230
/ccedilla %	231
/egrave %	232
/eacute %	233
/ecircumflex %	234
/edieresis %	235
/igrave %	236
/iacute %	237
/icircumflex %	238
/idieresis %	239
/eth   %	240
/ntilde %	241
/ograve %	242
/oacute %	243
/ocircumflex %	244
/otilde %	245
/odieresis %	246
/divide %	247	% oe in T1
/oslash %	248
/ugrave %	249
/uacute %	250
/ucircumflex %	251
/udieresis %	252
/yacute %	253
/thorn %	254
/ydieresis %	255	% germandbls in T1
] def

%%EndProcSet
%%BeginProcSet: 8r.enc
% File  8r.enc as of 2002-03-12 for PSNFSS 9
%
% This is the encoding vector for Type1 and TrueType fonts to be used
% with TeX.  This file is part of the PSNFSS bundle, version 9
% 
% Authors: S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry, W. Schmidt
%
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida + Euro.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (6) /Euro is assigned to 128, as in Windows ANSI
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /Euro /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: hps.pro
/HPSdict 20 dict dup begin/braindeaddistill 50 def/rfch{dup length 1 sub
1 exch getinterval}bind def/splituri{dup(#)search{exch pop}{()exch}
ifelse dup(file:)anchorsearch{pop exch pop 3 -1 roll pop false}{pop 3 -1
roll exch pop true}ifelse}bind def/lookuptarget{exch rfch dup
/TargetAnchors where{pop TargetAnchors dup 3 -1 roll known{exch get true
}{pop(target unknown:)print == false}ifelse}{pop pop
(target dictionary unknown\012)print false}ifelse}bind def/savecount 0
def/stackstopped{count counttomark sub/savecount exch store stopped
count savecount sub 1 sub dup 0 gt{{exch pop}repeat}{pop}ifelse}bind def
/tempstring 256 string def/targetvalidate{1 index dup length 255 gt exch
dup(/)search{pop pop pop exch pop true exch}{pop}ifelse cvn tempstring
cvs token pop pop length 0 ne or not}bind def/targetdump-hook where{pop}
{/targetdump-hook{dup mark exch gsave initmat setmatrix{{mark/Dest 4 2
roll targetvalidate{aload pop exch pop/Page 3 1 roll/View exch[exch
/FitH exch]/DEST pdfmark}{cleartomark}ifelse}forall}stackstopped pop
grestore}bind def}ifelse/baseurl{mark exch 1 dict dup 3 -1 roll/Base
exch put/URI exch/DOCVIEW{pdfmark}stackstopped pop}bind def
/externalhack systemdict/PDF known def/oldstyle true def/initmat matrix
currentmatrix def/actiondict 2 dict dup/Subtype/URI put def
/weblinkhandler{dup 3 1 roll mark 4 1 roll/Title 4 1 roll splituri 3 -1
roll dup length 0 gt{cvn/Dest exch 4 2 roll}{pop}ifelse{externalhack{
/HTTPFile exch}{actiondict dup 3 -1 roll/URI exch put/Action exch}
ifelse}{externalhack{/HTTPFile exch}{/File exch/Action/GoToR}ifelse}
ifelse counttomark 2 sub -1 roll aload pop/Rect 4 1 roll/Border 3 1 roll
/Color exch oldstyle{/LNK}{/Subtype/Link/ANN}ifelse gsave initmat
setmatrix{pdfmark}stackstopped grestore}bind def/externalhandler where{
pop}{/externalhandler{2 copy{weblinkhandler}exec{/externalhack
externalhack not store 2 copy{weblinkhandler}exec{/externalhack
externalhack not store/oldstyle false store 2 copy{weblinkhandler}exec{
(WARNING: external refs disabled\012)print/externalhandler{pop pop}bind
store externalhandler}{pop pop}ifelse}{pop pop/externalhack externalhack
not store}ifelse}{pop pop/externalhandler{weblinkhandler pop}bind store}
ifelse}bind def}ifelse/pdfmnew{dup type/stringtype eq{externalhandler}{
exch dup rfch exch 3 -1 roll lookuptarget{mark 4 1 roll/Title 4 1 roll
aload pop exch pop/Page 3 1 roll/View exch[exch/FitH exch]5 -1 roll
aload pop/Rect 4 1 roll/Border 3 1 roll/Color exch/LNK gsave initmat
setmatrix pdfmark grestore}{pop pop}ifelse}ifelse}bind def/pdfmold{dup
type/stringtype eq{externalhandler}{exch dup rfch exch 3 -1 roll
lookuptarget{mark 4 1 roll/Title 4 1 roll aload pop exch pop/Page 3 1
roll/View exch[exch/FitH exch]5 -1 roll aload pop pop 0 3 getinterval
/Rect 3 1 roll/Border exch/LNK gsave initmat setmatrix pdfmark grestore}
{pop pop}ifelse}ifelse}bind def/pdfm where{pop}{/pdfm
/currentdistillerparams where{pop currentdistillerparams dup
/CoreDistVersion known{/CoreDistVersion get}{0}ifelse dup
braindeaddistill le{(WARNING: switching to old pdfm because version =)
print ==/pdfmold}{pop/pdfmnew}ifelse load}{/pdfmark where{pop{dup type
/stringtype eq{externalhandler}{2 copy mark 3 1 roll{pdfmnew}
stackstopped{2 copy mark 3 1 roll{pdfmold}stackstopped{
(WARNING: pdfm disabled\012)print/pdfm{pop pop}store}{
(WARNING: new pdfm failed, switching to old pdfm\012)print/pdfm/pdfmold
load store}ifelse}{/pdfm/pdfmnew load store}ifelse pop pop}ifelse}}{{
pop pop}}ifelse}ifelse bind def}ifelse end def

%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600
(PerlmutterSchmidtChapter.dvi) @start
%DVIPSBitmapFont: Fa cmsl9 9 27
/Fa 27 120 df<EC01801403EC0F00141E5C5C5C495A495A495A130F91C7FC131E133E13
3C137C5B5B1201A2485AA2485AA2485AA348C8FCA35A123EA4127E127CA65AA81278A412
7CA3123CA37EA37EA26C7EA26C7E12017F6C7E13707F1318194A77B71E>40
D<130C130E7F6D7E6D7E801300801478A280A380A3141F80A41580AD141F1500A55C143E
A3147E147CA35CA2495AA3495AA2495AA2495A91C7FC5B131E5B137C13785B485A485A48
5A90C8FC120E123C5A5A12C0194A7FB71E>I<1670A216F0A21501821503A21507150F82
151D15191531A2ED61FE156015C0A2EC0180A24A487E821406A25C834A133FA25C147002
608002E0131F5C49B6FCA2498191C7120F1306A25BA2498116075BA25B01E08116030003
1507D80FF84A7EB549B512F05BA234367DB53A>65 D<90B7FC17E017F8903A03FC0003FE
0101EC00FFEF7F800103153F4A15C0171FA413075C173FA21880EF7F00010F5D4A495AEE
03F84C5AEE1FC091B6C7FC495C9139C0007FC0EE0FE0EE03F8707E83013F14004A8083A4
137F91C85AA34C5AA2494A5A494A5A4C5A4C5AEE7FC000014A485AB748C7FC16F816C032
337DB236>I<DB3FE01360912601FFFC13E0020FEBFF01913A3FF00F83C09139FF0003C7
D903FCEB00EF4948147FD90FE0143F495A4948EC1F8049C8FC01FE150F485A0003160748
5A491600120F5B121FA2485A1706484892C7FCA412FF90CBFCA71718A317386C16301770
A26C6C5DA26D4A5A001F4B5A6C7E4CC7FC6C6C141E6C6C5CD801FE5CD8007FEB01E09039
3FE00FC0010FB5C8FC010313FC9038003FE0333778B437>I<90B5D8FC03B512F0A3D903
FEC7380FF8006D486E5A170F13034A5DA4171F13074A5DA4173F130F4A5DA491B7FC5B95
C7FC02C0C77EA35F133F4A5CA41601137F91C75BA416035B495DA400011507B5D8FC03B5
12F0A33C337DB23A>72 D<D9FFFC923801FFFC80600103EFFE000101EE06FC02BF150D13
03023FED19F8A26E6C1431A2186313070106EEC3F06E7EEF0183EF03031807010E150690
260C07E05D170CA217186E6C140F011C1530011803605BA217C06E7E933801801F133801
30DA03005BEC00FC1606A24C133F01705C0160017E92C7FC5EA25E6001E06D5A49167E5E
12016D6DC7FCD80FF8011E14FEB5008091387FFFFC151C150C46337CB246>77
D<D9FFFE91381FFFF0A2800101923801FE006FEB00F802BF157001037F021F1560816E7E
A26E6C14E0130790260603FC5CA26E7E14006F1301010E7F010C02805BED3FC0A2ED1FE0
1703011CEB0FF0011893C7FCED07F8150316FC6F6C5A13380130903800FF06A2EE7F86A2
EE3FCE13700160EC1FEC160F17FC1607A201E01403495D16011201486C1400D80FF81578
B57E1730A23C337DB23A>I<90B612FEEEFFC017F0903A03FC0007FC0101EC01FEEE007F
0103ED3F805C18C0A2171F173F13075CA31880177F010F16005C17FE4C5A4C5AEE0FE001
1FEC7FC091B6C7FC16F802C0C9FCA3133F5CA5137F91CAFCA55B5BA41201B512FCA33233
7DB234>80 D<91390FF0018091387FFE0349B51207903A07F00FCF0090390FC001FF49C7
FC013E804980A249141E5B0001150EA31203160CA27F93C7FC7F6C7E6D7E14F86CEBFF80
6D13F815FE011F7F6D80010380D9003F7F14039138003FF0150F1507A215038200181401
00385D1230A400384A5A12784B5A127C007E4A5A007F4AC7FC6D133ED8FBC05B39F1FC03
F839F07FFFE0D8E01F138026C003FEC8FC29377CB42B>83 D<001FB81280A3903AE003FC
007FD90001140F003E1607003C130300384A13031230007017001260A214075D5AA4C700
0F91C7FC5DA5141F5DA5143F5DA5147F92C9FCA55C5CA4EB03FF0007B67EA3313377B237
>I<013FB612FCA39139F80007F802C0EB0FF049C7FC017CEC1FE00178EC3FC00170EC7F
8001F0ECFF005B4B5A49495A4B5A4848495A4B5AA24B5AC8485A4BC7FC4A5AA24A5A4A5A
4A5A4A5A4A5AA24A5A4AC8FC495A4948EB0180A2495A495A4948EB0300495A495A5E49C7
12064848140E485A4848141E163E48485C484814FC484813034848131FB7FC5EA22E337C
B22F>90 D<EB07FCEB3FFF9038F80FC03901C003E0D803F07F6D6C7EA248486C7E12035B
C8FCA21401A2EC7FF8EB07FFEB3FE1EBFF013803F803EA0FF0D81FE05BEA3FC01380007F
1560EB000748ECE0C05A140FA2141F007F90383BE180EC73E33A1F81E1FF00390FFF81FE
3901FE007823237CA126>97 D<ECFF80010713E090381F807890383E001C01FC137C4848
13FE485A0007EB01FCEBE000484813F8001F1400A2485AA2127F90C8FCA45A5AA3127EA2
007F1430A26C147015E06C6C13C0380FC0033907E007003803F03E3800FFF8EB1FC01F23
7CA122>99 D<167EED1FFE16FC153F1501A416F8A41503A216F0A4150714FE903907FFC7
E090381F81E790387E007749133F4848131F4848130F484814C0120F485AA24848131FA2
007F158090C7FCA3153F5A481500A3127E5DA2157E6C14FE14016C13036C6C487E2607C0
0E13F03803E07C3800FFF090393F80FC0027357BB32B>I<EB03FCEB0FFF90383E0FC090
38FC03E0D801F813F03803F001D807E013F8380FC000121F5B123F48C7FCA312FEB6FCA2
48C8FCA35AA51560127E15E0003EEB01C0003FEB03806CEB0700380F800E3807E07C3801
FFF038003F801D237BA122>I<163C91387F01FF903901FFE3CF903907C1FF0F90391F80
FC1F90393F007C0E017EEB3E005B153F485AA35D157E5BA25D6D5B0000495A90387C03E0
9038FE0FC02601CFFFC7FC380383F80180C8FCA21207A37F90B57E6C14F015FC6C804880
380F800048C7EA3F80003E141F48140F12FC5AA3151F16006C143E007C5C6C5C6CEB03F0
3907E01FC00001B5C7FC38003FF028337FA126>103 D<EB0380EB0FC0EB1FE0A314C0A2
EB070090C7FCAA131FEA07FFA3C67EA3137EA513FE5BA512015BA512035BA41207B5FCA3
13337EB215>105 D<EB01F8137F5C13FF1307A2130313075CA5130F5CA5131F9139801F
FF801700A2ED0FF816C0013F91C7FCEC001C5D15F0EC01C04A5AD97F0EC8FCEB7E1F5CEC
FF80EB7FDFEC9FC0EBFE0F01FC7F14078114036E7E1201496C7E81157E157F00034A7E26
7FFFC313F8A2B55C29347EB329>107 D<90260F80FFEB07F82603FF839038C01FFE4890
3A8F03E0781F913B9C01F0E00F8026007FB8D9F9C013C0D93FF0EBFB8002E0EBFF0002C0
5B02805BA202005BA2490103141F017E4A1480A501FE0107143F494A1400A50001020F5C
494A137EA40003021F14FE3D7FFFC3FFFE1FFFF0A2B500C75C3C217EA041>109
D<90380F80FE3A03FF83FF804890388F07E0EC9C0326007FB813F0EB3FF014E014C01480
A2140015075B017E14E0A4150F13FE4914C0A4151F1201491480A40003143F3A7FFFC7FF
FCA2B5FC26217EA02B>I<14FF010713C090381F81F090383E00F80178133C4848133E48
487FA248481480120F4848130FED1FC0123F90C7FCA25AA400FEEC3F80A31600007E5C15
7EA25D003E5C003F495A6C495A6C6C485A6C6C485A2603F03EC7FC3800FFF8EB3FC02223
7CA126>I<90383E03E03907FE1FF8143C000FEB71FC38007EE1EB7FC1EC81F815F091C7
FCA2137EA213FE5BA512015BA512035BA41207B512C0A31E217EA01E>114
D<903807F83890383FFF7890387C07F03801E0013803C00048481370A2120F90C712607F
A26D130013F0EBFF806C13F86C13FE6C7F6C1480013F13C013019038001FE0140F003013
071403A2007014C0A21278EC0780127CEC0F0000FE131E38F7807C38E1FFF038C07F801D
237EA11E>I<D801F0131F007FEB07FF00FF5BA2000F1300000780A249137EA415FE120F
495BA41401121F01805BA41403123F49485AA2140F6C131F819039807FFF80380FC0E738
03FFC7C6903807E000212279A02B>117 D<3A7FFF803FFCA2B538007FF8D807F8EB1FC0
6C48EB0F00150E150C7F00015C153815306D5B12005D140101FE5BD97E03C7FCA2140613
7F6D5A141C141814B0131F14E0A25C130F5C91C8FCA2130626217A9F29>I<3C7FFF1FFF
80FFF0A2B5028113E03C0FF003FC007F8000076D48EB3E00171C0003010014185FA24A6C
5B13F80001D9037C5BA20206495AA291260C7E03C7FCD800FC5C9138183E060238130E02
30130C9138703F18EB7E604A6C5AA2D97F805B16E0D93F005B150F013E5CA2013C91C8FC
131C0118130634217A9F37>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmmib10 10 1
/Fb 1 91 df<91B812F8A25B19F09226FC000313E04901C04913C092C748138002FC4A13
004A5C49484A5A4A4A5A4A495B010F5E4A495B91C7485B494A5B4C90C7FC011E4A5A4C5A
011C14FF90C7485B4B5B4B5B5F4B5B4B90C8FC4B5A4B5A4B5A4A5B4A5B5C4A5B4A5B4A90
C712704B14F04A5A4A5A4949130149495C49491303495B495E4990C71207495A4948140F
48494A5A4A143F4849147F48494AC7FC484913034890C7120F4848ECFFFE48B7FCA2B8FC
6C5E3D397BB840>90 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmti9 9 48
/Fc 48 122 df<EA0380EA0FE0121FA5EA0760120013E013C0A2120113801203EA070012
06120E5A5A5A5A5A0B177A8718>44 D<121C127F12FFA412FE12380808778718>46
D<17E0EE01F0A2EE03E0A2EE07C0160F1780EE1F00A2163EA25EA25E15015E4B5AA24B5A
A24B5A151F93C7FC153EA25DA25DA24A5A14035D4A5AA24A5AA24AC8FCA2143E147E147C
5CA2495AA2495A13075C495AA249C9FCA2133EA25B13FC5B485AA2485AA2485AA2485A12
1F90CAFC123EA25AA25AA25A5A2C4B7EB727>I<EC1FC0EC7FF0903801E0F8903807C03C
EB0F00011E131E133E013C131F5B13F85B1201A2485AA20007143F5BA2120F153E49137E
121FA348C712FCA4007EEB01F8A4007CEB03F012FCA2EC07E0A24814C0A2EC0F80A2EC1F
00A2141E5C0078137C5C387C01F0383C03E0381F0F80D80FFEC7FCEA03F8203477B127>
I<EC01801403A21407140FEC1F005C14FF5BEB1FFEEB7FBEEB7E7E1320EB007CA214FCA2
5CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA291C7FCA25BA2133EA2137E
A2137C13FCB512FCA3193277B127>I<EC0FE0EC3FF8ECF03E903803C01F903907800F80
EB0F00011EEB07C0131C5BD978C013E0EB70E0EBF06013E0120113C0ECE00F000301C013
C013801381EC801F01831480903887003F018E1400D801FC137ED800F05B90380001F84A
5A4A5A4A5A4AC7FC147E14F8EB03E0EB0FC049C8FC133E13784848EB0380485A49130748
48140048C75A121E001C141E003F143E01F85B397DFF80F838781FFF486C5BD8E0035B6D
1380D9007EC7FC23347AB127>I<010614C090380FC00F91B51280160015FC4913F015C0
D91CFEC7FC91C8FC133C1338A313781370A313F0EBE0FE9038E3FF809038EF03C03901FC
01E001F87FEBF000497F485A5BC8FCA41401A4003C130300FC5CA34A5A5A00E0495AA24A
5A4AC7FC6C137E00705B387801F8383E07F0381FFFC06C90C8FCEA03F8223478B127>53
D<D9E0F81338EBE3FC2601EFFE137801FF14F048EC01E09038FE0E03D807F814C09039F0
060F80390FC0071F90398003FF00391F0001EF001EEB001E003E5C123C485C15F8485C48
13015DC712034A5AA24A5AA2141F92C7FC5C143E147EA25CA2495AA3495AA213075CA213
0F5CA2131FA25C133FA391C8FCA2131C253476B127>55 D<EC07E0EC3FFC4A7E903801F8
1F903903E00F809038078007D90F0013C0491303131E5BA21507017C1480A2150F160001
7E131E017F133E6E5A6D6C5AECE1E090381FFBC06DB4C7FC6D5A6D7E497F011E7F90387C
7FE09038F01FF048486C7E3807C007EB8003380F0001001E1300123E003C1478127C1278
A215F800F85C5A6C495A007813035D007C495A003C011FC7FC003E133E381F81FC380FFF
F0000313C0C648C8FC223479B127>I<EC0FC0EC7FF0ECFFFC903803F07E903807C03E49
487EEB1F00013E7F017E14805BA2485AA2485A151FA212075BA2ED3F00A2485A5DA20007
14FEA21401140300035CEBE0070001131E3900F039F8EB7FF1EB0FC190380003F0A24A5A
A25D4A5A141F003891C7FC007E133E00FE137E5C48485A48485A48485A38781F80D87FFF
C8FCEA1FFCEA07E0213478B127>I<1370EA01FC1203A413F8EA00E01300B0121C127F5A
A45A12380E20779F18>I<161C163CA2167C16FCA21501821503A2ED077E150F150E151C
A21538A2157015F015E0EC01C0A2913803807F82EC0700A2140E141E141C5CA25CA25C49
B6FCA25B913880003F49C7EA1F80A2130E131E131C133C13385B13F05B12011203D80FF0
EC3FC0D8FFFE903807FFFEA32F367BB539>65 D<0107B612C04915F017FC903A003F8000
FE177FEF3F8092C7121FA24A15C0A2147EA214FE18804A143FA20101ED7F00177E4A5C16
010103EC03F04C5A4AEB1FC091B6C7FC495C9139F0007F804AEB0FC0707E010F6E7E834A
1301A2011F81A25CA2133F5F91C71203A2494A5AA2017E4A5A4C5A01FE4A5A4CC7FC49EB
01FE0001EC07FC007FB612F0B712C04BC8FC32337BB236>I<DB1FF013C09238FFFC0102
03EBFF03913A0FF00F878091393F8003CF9139FE0001EF4948EB00FFD903F01500D90FE0
80495A49488091C8123E137E13FE485A4848153CA2485AA248481538A2485A94C7FC123F
5BA3127F90CBFCA412FEA2EE03C0A25F127E160794C7FC5E160E007F151E6C5D5E6C6C14
7016F06C6C495A6C6CEB07C06C6C49C8FC6C6C133E6CB413FC90387FFFF0011F13C0D903
FEC9FC323775B437>I<0107B612C04915F017FC903A003F8001FEEE007FEF1F8092C7EA
0FC0EF07E05CEF03F0147E170102FE15F8A25CA21301A25CA2130317035CA2130718F04A
1407A2130F18E04A140F18C0011F151F18805CEF3F00133F177E91C85AA2494A5A4C5A01
7E4A5A4C5A01FE4A5A047EC7FC49495A0001EC0FF8007FB612E0B7C8FC15F835337BB23A
>I<0107B712F05B18E0903A003F80001F1707170392C7FC17015C18C0147EA214FEA24A
130EA20101EC1E03041C13804A91C7FC163C13035E9138F001F891B5FC5B5EECE0011500
130F5E5C1707011F01015BEEC00E0280141E92C7121C133F173C91C812381778495DA201
7E14014C5A01FE14074C5A49141F00014AB45A007FB7FCB8FC94C7FC34337CB234>I<01
0FB51280A216009038003FC05DA292C7FCA25CA2147EA214FEA25CA21301A25CA21303A2
5CA21307A25CA2130FA25CA2131FA25CA2133FA291C8FCA25BA2137EA213FEA25B1201B5
12F8A25C21337BB21E>73 D<0107B512C05BA29026003FC0C7FC5DA292C8FCA25CA2147E
A214FEA25CA21301A25CA21303A25CA21307A25CA2130FA25C17E0011F140117C05C1603
013F1580160791C7FCEE0F005B5E017E143EA201FE5CED01FC4913030001EC1FF8007FB6
FCB7FC5E2B337CB230>76 D<902607FFC0ED7FFC4917FF81D9003F4B1300611803023BED
077CA2027BED0EFC610273151C1838DAF1F01439F071F014E118E10101ED01C36102C1EC
0383EF070301031607050E5BEC80F8171C0107ED380F6102001470A249EDE01FDC01C090
C7FC130EEE0380011E017C5C933807003E011C140EA2013C4A137E187C01385C5E017816
FC6F485B1370ED3FC001F0EC80016000011500D807F81503277FFF803E90B512C0B5EB3C
01151C46337BB245>I<902607FF8090383FFFC0496D5BA2D9001F913803F8004A6C6D5A
6060EC3BF0027B140360EC71F8A202F11407DAF0FC91C7FC14E0A20101017E5B170E14C0
810103151EEE801CEC801FA20107ECC03C030F1338140016E049010713781770010E14F0
1503011E15F0705A011C1301A2013C14FD03005B133816FF0178147F5F0170143FA213F0
70C8FC1201EA07F8267FFF807FB5140EA23A337BB239>I<ED1FE0913801FFFC913807E0
3F91391F800FC091393E0003E002F8EB01F0495A4948EB00F8494814FC4948147C49C812
7E133E017E153E49153F485AA2485A12075B120F5B121F177F5B123FA348C912FEA4EE01
FC12FEEE03F8A217F0160717E0160F007E16C0EE1F80A2EE3F006C157E5E5E6C6C495A00
0F4A5A6D495A0007EC1F806C6C013EC7FCD801F813FC39007E07F090383FFF80D907FCC8
FC303775B43B>I<0107B612C04915F883903A003F8001FEEE003FEF1F8092C713C0170F
5C18E0147EA214FEEF1FC05CA201011680173F4A1500177E010315FE5F4AEB03F8EE07E0
0107EC3FC091B6C7FC16F802E0C9FC130FA25CA2131FA25CA2133FA291CAFCA25BA2137E
A213FEA25B1201387FFFF0B5FCA233337CB234>I<0107B512FE49ECFFC017F0903A003F
8007F8EE01FCEE007E92C7127F835C1880147EA214FEEF7F005CA2010115FE5F4A13015F
01034A5AEE0FC04A495A04FEC7FC49B512F016C09138E003E0ED01F8010F6D7E167C4A13
7EA2131FA25CA2013F14FEA291C7FCA24913015E137EEF01C001FE150318805B00011607
277FFFF0001400B5ECFE0EEE7E1CC9EA1FF8EE07E032357BB238>82
D<913901FC018091380FFF03023F13C791387E07EF903A01F801FF0049487E4A7F495A49
48133E131F91C7FC5B013E143CA3137E1638A293C7FC137FA26D7E14E014FE90381FFFC0
6D13F86D7F01017F6D6C7E020F7F1400153F6F7E150FA4120EA2001E5D121CA2151F003C
92C7FCA2003E143E5D127E007F5C6D485A9038C007E039F3F80FC000F0B5C8FC38E03FFC
38C00FF029377AB42B>I<0003B812C05A1880903AF800FC003F260FC001141F0180150F
01005B001EEE07001403121C003C4A5BA200380107140E127800705CA2020F141E00F016
1CC74990C7FCA2141FA25DA2143FA292C9FCA25CA2147EA214FEA25CA21301A25CA21303
A25CA21307A25C497E001FB512F05AA2323374B237>I<3B3FFFF801FFFE485CA2D801FE
C7EA1FC049EC0F80170049140EA2161E120349141CA2163C1207491438A21678120F4914
70A216F0121F495CA21501123F90C75BA215035A007E5DA2150712FE4892C7FCA25D150E
48141E151C153C153815786C5C5D007C1301007E495A003EEB0F806C011EC8FC380FC0FC
6CB45A000113E06C6CC9FC2F3570B239>I<EB03F0EB0FF890383E1C6090387C0FF0EBF8
07EA01F0EA03E00007EB03E0EA0FC0A2381F800715C0EA3F00A2140F481480127EA2141F
00FE14005A1506EC3F07EC3E0F150E147E007C141EECFE1CEB01FCD83C03133C393E07BE
38391F0E1E783907FC0FF03901F003C0202278A027>97 D<137EEA0FFE121F5B1200A35B
A21201A25BA21203A25BA21207A2EBC3E0EBCFF8380FDC3EEBF81F497E01E01380EA1FC0
138015C013005AA2123EA2007E131F1580127CA2143F00FC14005AA2147EA25CA2387801
F85C495A6C485A495A6C48C7FCEA0FFCEA03F01A3578B323>I<14FCEB07FF90381F0780
90383E03C0EBFC013801F8033803F0073807E00F13C0120F391F80070091C7FC48C8FCA3
5A127EA312FE5AA4007C14C0EC01E0A2EC03C06CEB0F80EC1F006C137C380F81F03803FF
C0C648C7FC1B2278A023>I<ED0FC0EC03FFA21680EC001FA31600A25DA2153EA2157EA2
157CA215FCA2903803F0F8EB0FF8EB3E1DEB7C0F496C5AEA01F0EA03E000071303D80FC0
5BA2381F8007A2D83F005BA2140F5A007E5CA2141F12FE4891C7FC1506EC3F075DEC3E0E
147E007C141EECFE1CEB01FCD83C03133C393E07BE38391F0E1E783907FC0FF03901F003
C0223578B327>I<EB03F8EB0FFEEB3E0F9038F807803801F003EA03E0EA07C0120FEA1F
801407D83F0013005C007E133EEB03F8387FFFE04848C7FC00FCC8FCA45AA4EC0180EC03
C0A2007CEB0780EC1F00003C133E6C13F8380F03E03807FF80D801FCC7FC1A2277A023>
I<151FED7FC0EDF0E0020113F0EC03E3A2EC07C316E0EDC1C091380FC0005DA4141F92C7
FCA45C143E90381FFFFEA3D9007EC7FC147CA414FC5CA513015CA413035CA413075CA313
0FA25CA3131F91C8FCA35B133E1238EA7E3CA2EAFE7812FC485AEA78E0EA3FC0000FC9FC
244582B418>I<143FECFF80903803E1E6903807C0FF90380F807FEB1F00133E017E133F
49133EA24848137EA24848137CA215FC12074913F8A21401A2D80FC013F0A21403120715
E01407140F141F3903E03FC00001137FEBF0FF38007FCF90381F0F801300141FA21500A2
5C143E1238007E137E5C00FE5B48485A387803E0387C0F80D81FFFC7FCEA07F820317CA0
23>I<EB0FC0EA03FFA25CEA001FA391C8FCA25BA2133EA2137EA2137CA213FCA29038F8
3F80ECFFE03901FBE0F09038FF80F8EC007849137C485A5B5BA2484813FC5D5BA2000F13
015D1380A2001F13035DEB0007EDC0C048ECC1E0020F13C0003E1481A2007E1483ED0380
007C1407160000FC140E151E48EB07F80070EB01F023357BB327>I<EB0180EB07E0A213
0FEB07C0EB038090C7FCABEA01F0EA03FCEA0F1E120E121C123C1238EA783E1270A2137E
EAF07CEA60FCC65AA212015BA212035BA2000713C0EBC1E0000F13C01381A21383EB0380
13071400130E131EEA07F8EA01F013337AB118>I<EB0FC0EA01FF5A5CEA001FA391C7FC
A25BA2133EA2137EA2137CA213FCA2491378EC01FE0001EB078FEC0E0F9038F01C3F1438
00031370ECE03E9038E1C01C9038E38000D807E7C7FC13EE5B13F8120F13FFEB9FC0EB83
F0EA1F81EB80F81300150C48141E151C123EA2007E143C1538127C157800FCEB787015E0
48EB3FC00070EB0F8020357BB323>107 D<133FEA07FF5A13FEEA007EA3137CA213FCA2
13F8A21201A213F0A21203A213E0A21207A213C0A2120FA21380A2121FA21300A25AA212
3EA2127EA2127C1318EAFC1C133CEAF838A21378137012F013F0EAF8E01279EA3FC0EA0F
00103579B314>I<2703C003F8137F3C0FF00FFE01FFC03C1E783C1F07C1E03C1C7CF00F
8F01F03B3C3DE0079E0026383FC001FC7FD97F805B007001005B5E137ED8F0FC90380FC0
0100E05FD860F8148012000001021F130360491400A200034A13076049013E130FF08180
0007027EEC83C0051F138049017C1403A2000F02FC1407053E130049495CEF1E0E001F01
015D183C010049EB0FF0000E6D48EB03E03A227AA03F>I<3903C007F0390FF01FFC391E
787C1E391C7CF01F393C3DE00F26383FC01380EB7F8000781300EA707EA2D8F0FC131F00
E01500EA60F8120000015C153E5BA20003147E157C4913FCEDF8180007153C0201133801
C013F0A2000F1578EDE070018014F016E0001FECE1C015E390C7EAFF00000E143E26227A
A02B>I<14FCEB07FF90381F07C090383E03E09038FC01F0EA01F83903F000F8485A5B12
0F484813FCA248C7FCA214014814F8127EA2140300FE14F05AA2EC07E0A2007CEB0FC015
80141FEC3F006C137E5C381F01F0380F83E03803FF80D800FCC7FC1E2278A027>I<011E
137C90387F81FF9039F3C387C09039E3EF03E03901E1FE01D9C1FC13F0EBC3F8000313F0
018314F814E0EA07871307000313C01200010F130316F01480A2011F130716E01400A249
EB0FC0A2013EEB1F80A2017EEB3F00017F133E5D5D9038FF81F09038FDC3E09038F8FF80
027EC7FC000190C8FCA25BA21203A25BA21207A25BB5FCA325307FA027>I<3903C00FC0
390FF03FF0391E78F078391C7DE03C393C3FC0FC00381380EB7F00007814F8D8707E1370
1500EAF0FC12E0EA60F812001201A25BA21203A25BA21207A25BA2120FA25BA2121FA290
C8FC120E1E227AA020>114 D<EB03F0EB1FFCEB3C1EEB780FEBF007EA01E0140F000313
1F13C0A2EBE00414007FEBFF8014E06C13F06C13F8EB7FFC1307EB00FE147E143E123800
FC133CA3147C00F013784813F0EAF001387803E0383C0F80381FFE00EA03F818227AA01F
>I<1303EB0F80A3131FA21400A25BA2133EA2137EA2137C387FFFF8A2B5FC3800F800A2
1201A25BA21203A25BA21207A25BA2120FA25B1460001F13F014E01300130114C0130300
1E1380EB07005BEA0F1EEA07F8EA01E015307AAE19>I<EA01F0D803FC1307D80F1E5B00
0E5C121C123C00385CD8783E133E1270A2017E137ED8F07C137CEA60FCC65A15FC00015C
5BA2140100035C13E0166002031370EDE0F0D807C014E0A20003EB07E116C09038E00FC1
EC1FC3000190383FE3809038F071E73A007FE0FF0090381F803C24227AA029>I<01F013
38D803FC13FCEA0F1E120E121C123C0038147CEA783E0070143CA2137ED8F07C1338EA60
FCC65A1578000114705BA215F0000314E05BA2EC01C0A2EBC003158014071500EBE00EA2
6C6C5A3800F878EB7FE0EB1F801E227AA023>I<D801F01538D803FC010E13FCD80F1E13
1E000E143E121C123C0038027E137CD8783E137C0070163CA2017E13FCD8F07C491338EA
60FCC65A0201147800014A137013F0A2020314F0000316E001E05BA2160117C001C013C0
0207EB0380A29039E00FE0071700021F130E3A01F03DF01E3A00F878F83C90393FF03FF0
90390FC00FC02E227AA033>I<13F0D803FC1307D80F1E130F000E141F121C123C003814
3FD8783E133E1270A2017E137ED8F07C137CEA60FCC65A15FC000114F85BA21401000314
F013E0A2140315E0EA07C0A20003130715C0EBE00F141F0001133F9038F07F8038007FEF
EB1F8FEB001F1500A25C003E133E007E137E147C5C007C5BEA7001495A38380780D83C1F
C7FCEA0FFCEA07F020317AA025>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmmi6 6 4
/Fd 4 121 df<1570A215F01401A214031407A2EC0DF8A214181430A2146014E014C049
487EA2EB03000106137CA25B131C131849137EA25B49133EA2485AA248C7FC5A001F143F
3AFFE003FFF04A13E024247DA32B>3 D<90B57E92C7FCEB07C0A2495AA449C8FCA4133E
A45BA45BED0180A2ED0300485A1506A2150E48485B153C15F800071303B6FC5D21227CA1
2A>76 D<D9FFE0EC0FFEEF1FFC010716801737010DED6F00EB0CF017CFEE018F0118159E
EE031E02781306A201304A5A16181630A2496C495A16C0A2ED018001C049485A141E1506
5DD801804A5A1518EC0F301560D803004A5A15C01580260F80071307D8FFF8903800FFFE
D9F0065C37227CA13A>I<3801F01E3907FC7F80390E1CE1C038180F8100301383007013
071260EC0380D8001EC7FCA45BA21580003014C0397878018012F8EC030038F0FC0638E1
9C1C387F0FF8381E03E01A177D9523>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmmi5 5 1
/Fe 1 106 df<137013F8A213F013E01300A6EA0F80EA1FC0EA31E01261A2EAC3C01203
EA0780A3EA0F001308EA1E18A213301370EA0FE0EA07800D1D7D9C16>105
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmsy7 7 3
/Ff 3 49 df<B712FEA327037A8F34>0 D<1338A50060130C00F8133E00FC137E00FE13
FE383FBBF83807FFC000011300EA007C48B4FC000713C0383FBBF838FE38FE00FC137E00
F8133E0060130C00001300A517197B9A22>3 D<13E0EA01F0EA03F8A3EA07F0A313E0A2
120F13C0A3EA1F80A21300A25A123EA35AA3127812F8A25A12100D1E7D9F13>48
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmr5 5 2
/Fg 2 51 df<EA01FCEA07FF380F0780381C01C0383800E0A2007813F000701370A200F0
1378AB00701370A2007813F0003813E0A2381C01C0380F07803807FF00EA01FC151D7D9B
1C>48 D<EA03FCEA0FFF383C0FC0387003E0387801F0EAFC0014F8A214781278C712F814
F0A2EB01E0EB03C0EB0780EB0F00131C5B13E03801C018EA0380EA0600481338383FFFF0
5AB5FCA2151C7D9B1C>50 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmti10 10 5
/Fh 5 115 df<14F8EB07FE90381F871C90383E03FE137CEBF801120148486C5A485A12
0FEBC001001F5CA2EA3F801403007F5C1300A21407485C5AA2140F5D48ECC1C0A2141F15
831680143F1587007C017F1300ECFF076C485B9038038F8E391F0F079E3907FE03FC3901
F000F0222677A42A>97 D<EB01C0EB07E014F0130F14E01307EB038090C7FCAB13F0EA03
FCEA071EEA0E1F121CA212385B1270A25BEAF07E12E013FEC65AA212015B1203A25B1207
5BA2000F13E013C013C1001F13C01381A2EB83801303EB0700A2130E6C5AEA07F8EA01E0
143879B619>105 D<147F903803FFC090380FC1F090381F00F8017E137C5B4848137E48
48133E0007143F5B120F485AA2485A157F127F90C7FCA215FF5A4814FEA2140115FC5AEC
03F8A2EC07F015E0140F007C14C0007EEB1F80003EEB3F00147E6C13F8380F83F03803FF
C0C648C7FC202677A42A>111 D<9039078007C090391FE03FF090393CF0787C903938F8
E03E9038787FC00170497EECFF00D9F0FE148013E05CEA01E113C15CA2D80003143FA25C
A20107147FA24A1400A2010F5C5E5C4B5A131F5EEC80035E013F495A6E485A5E6E48C7FC
017F133EEC70FC90387E3FF0EC0F8001FEC9FCA25BA21201A25BA21203A25B1207B512C0
A3293580A42A>I<3903C003F0390FF01FFC391E783C0F381C7C703A3C3EE03F8038383F
C0EB7F800078150000701300151CD8F07E90C7FCEAE0FE5BA2120012015BA312035BA312
075BA3120F5BA3121F5BA3123F90C9FC120E212679A423>114 D
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmsl10 10 46
/Fi 46 122 df<15C01401EC0780EC0F00141E5C5C5C495A495A13075C49C7FC5B131E5B
137C137813F85B12015B12035B1207A2485AA348C8FCA3123EA45AA512FC5AA85AA97EA3
1278A47EA37EA37E7E7F12037F6C7E120013707F13181A5275BD20>40
D<130613076D7E6D7E806D7E147014781438143C80A380A3EC0780A415C0A31403A91407
A8140FA21580A4EC1F00A4143EA35CA35CA25C13015C13035C13075C130F91C7FC131E13
3E133C5B13F85B485A485A485A48C8FC121E5A5A12E05A1A527FBD20>I<B512FCA51605
7C941C>45 D<121E127FEAFF80A413005A123C0909788817>I<176017F01601A2EE03E0
A2EE07C0A2EE0F80A2EE1F00A2163EA25EA25EA24B5AA24B5AA24B5AA24B5AA24BC7FCA2
153EA25D15FC5D4A5AA24A5AA24A5AA24A5AA24AC8FCA2143EA25CA25CA2495AA2495AA2
495AA2495AA249C9FCA2133EA25BA25BA2485AA2485AA2485AA2485AA248CAFCA2123EA2
5AA25AA25A12602C537EBD2A>I<160EA2161EA2163E163F5EA25EA25D83ED037FA21506
A2150C83ED183FA21530A2156083EDC01F14011580140303007F5C0206130F140E140C14
1C0218800238130714301470146091B6FC835B913880000349C7FCA2130683491401A25B
A24981A201708013F0486C4A1380D80FFC4A13C0B56C017F13FF93B6FC18FE383C7DBB3E
>65 D<017FB612F017FEEFFF8001009039C0003FE06E48EB1FF0EF07F814FF92C7EA03FC
18FEA21701A25B5CA21703A218FC010315074A15F8EF0FF0EF1FE0EF3FC0EF7F80010791
3801FF004AEB07FC91B612F05F9139F80007FCEE00FE010FED7F804AEC3FC0171F18E018
F0170F131F4A15F8A5013F16F04A141FA218E0173FEF7FC0137F4AECFF804C13004C5AEE
0FFCD801FFEC3FF0B812C094C7FC16F837397DB83B>I<DB07FC130692397FFF800E4AB5
EAE01E913A07FC01F03C913A1FE000787CDA7F80EB1CFC02FEC7120FD903FC1407495A49
48EC03F849481401495A4948140049C9FC5A4916F04848167012075B120FA248481660A2
5B003F1700A3485AA512FF5BA51703A2127FA25F17066C6C150EA25F121F6D5D000F5E7F
6C6C5D00034B5A6C6C4A5A6C6C020FC7FCD97F80131E6D6C137890390FF803F00103B512
C0010091C8FCEC1FF8373D77BA3C>I<017FB712FEA301009038C000076E481300183E02
FF151E92C8FC180EA45B4A1506A3933801800CA20103EC03004A1500A25EA25E0107141E
4A137E91B512FEA3ECF800010F143C4A131CA3160C041C1306011F0218130C5CA293C712
18A3013F16305C1870186018E0A2017F15014AEC03C01707171FEF7F80D801FFEC03FFB9
FC1800A237397DB839>69 D<017FB712FCA301009038C0000F6E481301EF007C02FF153C
92C8FC181CA45B4A150CA318181603010314064A1500A3160EA201075C4A133C16FC91B5
FCA390390FF801F89138F000781638A4011F14305CA393C8FCA2133F5CA5137F5CA44848
7EB612E0A336397DB836>I<017FB500C0B61280A24C150001009026C0000113806E486D
90C7FC5F14FF92C75BA417035B4A5DA4170713034A5DA4170F13074A5D91B7FCA302F8C7
121F130F4A5DA4173F131F4A5DA4177F133F4A5DA417FF137F4A92C8FCA448486C01037F
B60081B6FCA203015C41397DB83E>72 D<013FB512E0A25B9039007FE0006E5AA2147F5D
A514FF92C7FCA55B5CA513035CA513075CA5130F5CA5131F5CA5133F5CA4EBFFE0007FEB
FFC0A2B6FC23397EB81E>I<017FB500C090B512C01A80A2010001C0C7383FF8006E48EC
1FC096C7FC02FF151C92C85A6060EF03C04DC8FC49150E4A5C5F5FEE01C04C5A01034AC9
FC4A130E5E167016F04B7E010713034A487E151FED3BFE1573EDE1FF90380FF9C1DAF700
7F14FE4A6D7E5C4A6D7E131F4A6D7EA2160F83A2013F6E7E5C707EA2707EA2017F6E7F5C
717EA24D7E48486C4913F8B6D8800FEBFFC04C5CA242397DB841>75
D<017FB512F0A3010001C0C8FC6E5AA214FF92C9FCA55B5CA513035CA513075CA5130F5C
A4EF0180011FED03005CA25F1706A2013F150E4A140CA2171C173C1738017F15784A14F8
1601EE07F0161FD801FF14FFB8FC5FA231397DB834>I<90267FFF80923803FFFE816101
00F0FE00027FEE0DFCDA6FE0151B14EF02CFEE33F8A2DAC7F01563A219C7130102879238
0187F0DA83F8EC0307A21806190F90260381FC140C02015F1818A218306E6C151F491660
010604C05BA2037FEB0180A2943803003F130E010C03065CED3F805F5F197F011C6D6C5A
011895C7FC5FA25FDB0FE05C0138ECE180013002E3C75AA216E6ED07F604FC1301137001
604A5C150301F05C00015DD807FCEE07FEB500E0D9C003B512FC150116804F397DB84C>
I<90267FFFC00103B51280A26F1600D9007F9138003FF06FEC0F8072C7FCECEFF802CF15
06ECC7FCA2ECC3FE180E903801C1FF0281150C02807FA26F7E181C01036D7E020015186F
7EA26F7E1838496D7E010616306F7EA26F7E6F1470010E1580010C027F136017C0163F17
E0041F13E0011C15F00118020F5B17F8160717FCEE03FD013815FF01306E5BA282A2177F
137001606FC8FCA201F0811201D807FC81B512E017065C41397DB83E>I<ED0FFC92B57E
913903F80FE091390FC003F8023FC77E027E147ED901F8804948EC1F804948EC0FC04948
15E049481407013F16F049C8FC01FEED03F812014916FC1203491501000717FE485AA212
1F5BA2123F17035B127FA54848ED07FCA4EF0FF8A3EF1FF0127F18E0173F18C0EF7F806C
7EEFFF005F001F15016D4A5A000F5E6C6C4A5A4C5A6C6C4A5A6C6C4AC7FC6C6C147E017F
495A90391F8007F090390FF01FC0902601FFFEC8FC9038003FF0373D77BA41>I<017FB6
12E017FC17FF0100D9C00013C06E48EB1FE0EF0FF002FFEC07F892C7EA03FCA318FEA25B
5CA418FC010315075C18F8EF0FF0A2EF1FE00107ED3FC04AEC7F00EE01FEEE0FF891B612
E094C7FCD90FF8C9FC5CA5131F5CA5133F5CA5137F5CA448487EB67EA337397DB839>I<
DA03FC133091391FFF8070027FEBE0F0903A01FC03F1E0903903F0007B4948133F494813
1F4948130F49C71207013E15C0017E14035BA3000115014915807FA46D91C7FC7F8014E0
6C13FEECFFC06D13FC6D13FF16C06D14F00107801301D9003F7F14039138007FFE150715
036F7E81A2821218A30038157EA45EA2007C5D1501007E4A5A007F5D6D495A6D495AD8F9
F0013FC7FCD8F0FE13FE90383FFFF8D8E00F13E0D8C00190C8FC2C3D7CBA2E>83
D<0007B812FCA3903AF8007FE003D80FC090383FC00049163C000EC7127F001E4B131C12
1CA212180038170C003014FF93C7FCA25A1818A2485BC7491400A514035DA514075DA514
0F5DA5141F5DA5143F5DA3147F4A7E0003B612F85AA2363977B83C>I<B5D8FC03B500F0
90B51280A24B5D0007902780001FFEC7381FF8006C48C7D80FF8EC07E04D158000017014
03040793C7FC1A06A262A26D606C82040F5DA2041F5D161B6E013B5D017FEC33FE04314A
5A16614FC8FC16C16E1606013FEB018171130E4BC6140C191C0306151819386E48153001
1FEE80704B017F1360A24B5DA26E48EC8180010F16C14B02C3C9FC173FDAF18014C6A202
F3C713CC14FBD907FE15F8171F4A5DA24A5DA26D485D170F4A5DA295CAFC5C170E6D4814
06513B75B855>87 D<011FB71280A39126FE0001130014E0D93F80495A91C7485A013E4A
5A013C5D49141F01704A5A4C5A01605D16FF01E04990C7FC49495A4B5AA24848495AC848
5A4B5AA24B5A4B5A4A90C8FC5D14034A5A4A5A5D141F4A5A4A5A4A5AA24990C712184948
5C495AA2495A49481470494814605C017F15E0495A4890C85A49140100031503485A4848
140748484A5A163F484814FF48481307B8FC94C7FCA231397BB833>90
D<14FF010713E090381F01F8903878007C01F8137E01FE7F0001801680A35BEA007090C7
FCA4EC0FFF49B5FC90390FFC3F00EB7FC03801FE00EA03F848485B485A4848137E485A00
7F150690C7FC15FE48ECFC0C481301A21403007F9038077C18140E3A3F801C7E303A1FC0
F83FF03A07FFE01FC0C69038000F8027277CA52A>97 D<137FEA1FFF5BA212011200A35B
A512015BA512035BEC1FC0EC7FF89038F1E03E9038F7801F3A07FE000F8049EB07C04914
E04913034914F0A2000F15F8491301A41503121F5BA41507003F15F090C7FC16E0150F16
C0151F481580ED3F005D6D137E007D5C3979C001F039F0E007E039E0781F8026C01FFEC7
FC380007F0253B78B92E>I<EC7F80903803FFF090380FC07C90383F000E017C131F4913
7F000114FF485A485A120F484813FE153848481300A248C8FCA35A5AA75A7EA2151C127E
15386C143015706C6C13E0000FEB01C03907C007803903F03E003800FFF8EB1FC020277A
A525>I<EE3F80ED0FFF1700A2150082A3167EA416FEA25EA41501A25E147F903803FFE1
90380FC0F190383F003B017C131F48486D5A48481307120749130348481307121F495C12
3F90C7FC5A150F5A485DA4151FA2485DA46C143F127E4BC7FC123E003F5C6C5B6C6C487F
3A07C00F7FFC3803E03C2600FFF05B90261FC07EC7FC293B7AB92E>I<147F903803FFE0
90380F81F090383E00FC49137C48487F4848133F0007805B48481480121F5B123FA248C7
FCA3B71200A248C9FCA65A7EA2007E140EA25D6C14186C14386D5B6C6C485A3907E00380
2601F01FC7FC38007FFCEB1FE021277BA525>I<157F913801FFC0913807C1E091381F87
F0EC3F0F147E14FCA2D901F813E0ED07C04948C7FCA413075CA5130F5CA20007B512E0A3
26001FC0C7FC5CA5133F91C8FCA55B137EA513FE5BA512015BA4487EB512F0A3243B7EBA
19>I<EE07E091391FE01FF091397FF87878903A01F03FE0F8903907E01F80D90FC014F0
90261F800F1360D93F00EBC000A2017E1307150F13FE5BA44B5AA2017C49C7FC153E6D5B
013F5B90387F83F09038E7FFC0D9E0FEC8FC4848C9FCA57F7F90B512E015FE6C6E7E6D80
48B67E3A07C0003FF0D81F80130748C76C7E003E140148140012FC5AA315015E4B5A007C
1407007E4A5A6C023FC7FCD80F80137E3903F007F8C6B512C0D91FFCC8FC2D387FA52A>
I<EB01FC137F5CA213071303A35CA513075CA5130F5CED3FC0EDFFF09138C3C0F89138CF
007CD91FDC137E5C02F0133E4A133F5C5E4948137EA291C7FCA316FE5B017E5CA4150113
FE495CA415031201495CA400031407B500E1B512C0A202C114802A3A7EB92E>I<EB01C0
EB07F0130F14F8A214F0A214E0EB038090C7FCAAEB0FC0EA03FFA3EA003FEB1F80A5133F
1400A55B137EA513FE5BA512015BA41203B512C0A315387EB717>I<153815FE140115FF
A215FEA215FCEC00701500AAEC01F814FFA31407EC03F0A41407A215E0A4140FA215C0A4
141FA21580A4143FA21500A45CA2147EA414FE5CA3121CEA7F015C12FF495A5C48485A38
7C0F80D8381FC7FCEA1FFCEA07F0204986B719>I<EB01FC137F5CA213071303A35CA513
075CA5130F5CA2923807FFF0A217E0011F6D1300028013F816E016804BC7FC151E013F13
384A5A4A5AEC03801407140F90387F3FC0EB7E7FECE7E090387F87F01403017E7FEBFE01
01FC7F140081157E811201496D7E82A282486C80B500E0B5FCA25C2C3A7EB92C>I<14FC
137F14F8A213071303A314F0A5130714E0A5130F14C0A5131F1480A5133F1400A55B137E
A513FE5BA512015BA41203B512E014C0A2163A7EB917>I<90270FC03FC0EB7F80D803FF
903AFFF001FFE048903BC3C0F80781F0913BCF007C1E00F826003FDCD97E387F6D485C02
F0D93EE0137C4AD93FC0137E4A5C047F14FE494891C75AA291C7127EA44902FE1301017E
4A5CA501FE01011403494A5CA5000102031407494A5CA4486C496C497EB500E1B500C3B5
1280A202C10283140041257EA445>I<90390FC03FC0D803FFEBFFF0489038C3C0F89138
CF007C26003FDC137E6D5A02F0133E4A133F5C5E4948137EA291C7FCA316FE5B017E5CA4
150113FE495CA415031201495CA400031407B500E1B512C0A202C114802A257EA42E>I<
EC3FC0903801FFF8903807C07C90381F001F017CEB0F8049EB07C0485A4848EB03E01207
49EB01F0485A001F15F8A248C7FCA25AA2007E140312FEA416F015075A16E0150F16C07E
007EEC1F801600003E143E003F5C6C5C6C6C485A3907C007E03901F81F802600FFFEC7FC
EB1FF025277BA52A>I<903901F80FE0017FEB3FFC01FFEBF03F9139FBC00F80902607FF
0013C06D48EB07E04AEB03F05C4A14F81601010715FC5CA5130F5CA41603011F15F85CEE
07F0A2EE0FE0A2013FEC1FC01780163F6EEB7F0016FE9138E001F890397F7003F090397E
3C0FC0DA0FFFC7FCEC03F891C9FC13FEA25BA41201A25BA2487EB512E0A32E3581A42E>
I<90381F807C3903FF81FF489038878F80EC8E1F39003F9C3FEB1F3814709138601F00EC
E0044AC7FC133F5CA291C8FCA35B137EA513FE5BA512015BA4487EB512F0A321257EA421
>114 D<903803FE0C90380FFF9C90383E01FCEBF0004848137C4848133C1538485AA215
181538487E1530D807F0130013FCEBFFE06C13FC14FFC614806D13C0011F13E01300EC0F
F01407003013031401A31238007814E0A3007CEB03C0EC0780127EB4EB1F0038F3C07C38
E1FFF038C03F801E277DA521>I<1306A4130EA2130C131CA2133C137C13FC5B12031207
001FB5FCB6FCA23803F8005BA512075BA5120F5BA5001F130C1380A4141C003F13181300
7E1438EB80301470380FC0E03807C1C03803FF8038007E00183479B220>I<D801F8EB03
F0007F14FF00FF5BA20007EB000F6C48EB07E0A4150F12074914C0A4151F120F491480A4
153F121F491400A35DA2003F5C90C75A14017E14036D487E000F011E13F83807E0782601
FFF013F03A007F80FC00252679A42E>I<3A7FFFC01FFFB51280A23A07FC0007F86C48EB
03E04914C06D1480000115001506A25D7F00005C153815306D5B137E5DA24A5AEB3F0392
C7FC5C1406148C131F1498A214F0130F5C5CA25C130791C8FCA2282579A32C>I<B53A8F
FFF01FFFA3260FF80090380007F86C48017EEB03E018C00003EE0180033E130318001706
6C6C137F5F15DF5FEC019F01FC6E5A0000EB031F030F5B1406020E5C140CD97E1CEBC180
141891263807C3C7FC1430026013C6017F14E6D93FC013EC1503028013F8A202005B7F01
1E5C1501011C5C5E382579A33C>I<3B03FFFE01FFFC17F8A227001FF8001380D907F0EB
FC005E010314E06D6C485A5E6D6C48C7FCECFE06EC7E0CEC7F186E5AEC1FE05D140F8114
074A7E141FEC39F81471ECE0FC49487E903803807EEC007F01067F011C6D7E013C804913
0FD801F880D807FC497EB46C90387FFF8092B5FCA22E247FA32C>I<90B538803FFE5A15
0026000FF8EB0FF06D48EB07C017801700010314065EA26E5B0101143816305E8001005C
A24B5A1503027E90C7FC1506A25D147F6E5A1538153015E0141F5DA25D140F92C8FC140E
A2140CA25C143814305CA2003E5B127E38FE018049C9FC5BEAFC0EEA701C1378EA3FE0EA
0F802F3580A32C>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmsy10 10 8
/Fj 8 104 df<007FB81280B912C0A26C17803204799641>0 D<15301578B3A6007FB812
F8B912FCA26C17F8C80078C8FCB3A3007FB812F8B912FCA26C17F836367BB641>6
D<007FB812F8B912FCA26C17F8CCFCAE007FB812F8B912FCA26C17F8CCFCAE007FB812F8
B912FCA26C17F836287BA841>17 D<126012F812FEEA7F80EA3FE0EA0FF8EA03FEC66C7E
EB3FE0EB0FF8EB03FE903800FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03
FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FC0171FEF7F80933801FF00EE07FC
EE1FF0EE7FC04B48C7FCED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FC
EB07FCEB1FF0EB7FC04848CAFCEA07FCEA1FF0EA7FC048CBFC12FC1270CCFCAE007FB812
80B912C0A26C1780324479B441>21 D<D93F801508D9FFF0151C00037F4813FE487F4814
C09026C07FE0143C273F000FF01438003CD907FC147848EB01FE6E6C6C13F0007091383F
C00300F091391FF80FE0486EB5FC030314C06F14806F6C1300EE3FFC0040ED07F036137B
9D41>24 D<0370EBFF80912601E00713E0912603C01F13F891260F007F7F021E9038F03F
FE913A7803C00FFF9139F0078003494848486C1380902603C01E7F902607803EEC7FC049
485A011E49143F013E17E0494848141FEBF8035D2601F007150F00035CEBE00F00075CD9
C01EC8FC000F131C49C9FC121FA248CA13C0A348171F1980127EA2183F00FE1800A2183E
187E187C18FC6017016C5F4D5A6017076C6C4B5A4DC7FC171E6D5D6C6C5D5F6D4A5A6C6C
EC03806C6C020FC8FC01FF143E6C01C013F86C9038F807E06C90B512806C6C49C9FC011F
13F0010313803B3D7BBA42>79 D<EC01F8140FEC3F80ECFC00495A495A495AA2130F5CB3
A7131F5C133F49C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA03F8EA00FE137F6D7E131F80
130FB3A7801307A26D7E6D7E6D7EEC3F80EC0FF814011D537ABD2A>102
D<12FCEAFFC0EA07F0EA01FCEA007E7F80131F80130FB3A7801307806D7E6D7EEB007EEC
1FF0EC07F8EC1FF0EC7E00495A495A495A5C130F5CB3A7131F5C133F91C7FC137E485AEA
07F0EAFFC000FCC8FC1D537ABD2A>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmex10 10 9
/Fk 9 116 df<160F161F163E167C16F8ED01F0ED03E0ED07C0150FED1F801600153E15
7E5D4A5A5D14034A5A5D140F4A5AA24AC7FC143E147E5CA2495AA2495AA2495AA2130F5C
A2495AA2133F91C8FCA25B137E13FEA25B1201A25B1203A35B1207A35B120FA35BA2121F
A45B123FA690C9FC5AAA12FEB3AC127FAA7E7FA6121F7FA4120FA27FA312077FA312037F
A312017FA212007FA2137E137F7FA280131FA26D7EA2801307A26D7EA26D7EA26D7EA214
7E143E143F6E7EA26E7E1407816E7E1401816E7E157E153E811680ED0FC01507ED03E0ED
01F0ED00F8167C163E161F160F28C66E823D>18 D<12F07E127C7E7E6C7E6C7E6C7E7F6C
7E1200137C137E7F6D7E130F806D7E1303806D7EA26D7E147C147E80A26E7EA26E7EA26E
7EA2811403A26E7EA2811400A281157E157FA2811680A2151F16C0A3150F16E0A3150716
F0A31503A216F8A4150116FCA6150016FEAA167FB3AC16FEAA16FC1501A616F81503A416
F0A21507A316E0150FA316C0151FA31680153FA216005DA2157E15FE5DA214015DA24A5A
A214075DA24A5AA24A5AA24AC7FCA2147E147C14FC495AA2495A5C1307495A5C131F49C8
FC137E137C5B1201485A5B485A485A48C9FC123E5A5A5A28C67E823D>I<B512F8A500F8
C7FCB3B3B3B3B3B3B3B3B3B3A8B512F8A515C66B822C>I<B512F8A5C7FCB3B3B3B3B3B3
B3B3B3B3A8B5FCA515C67F822C>I<BB12FC86A3D87FC0C9001F7FF0007F6C6C17076C6C
050113806C6CEF007F1A1F6C6CF00FC06C6C18076C6C1803F201E06C6D17006D6C186001
3F19706E18306D7E6D6C18181B006D7E6D7E6D7EA26D7F6E7E6E7EA26E7E6E7E6E7EA26E
7E6E7E80826F7E6F7EA26F7E6F7E6F5A5EA24B5A5E4BCBFC153E157E5D5D4A5A4A5A1407
5D4A5A4ACCFC143E147E147C5C4948181801031930495A4A18704948186049CC12E04918
01017EF003C0017C180749180F4848F01F800003197F49EF01FF4848050713004848173F
48CA000FB5FC48BA5AA25ABB5AA24D537B7F58>80 D<167F923801FFC0923803C0F09238
07803892380F007892381F01FC151E153EA2157E92387C0070170015FCA44A5AA81403A4
5DA41407A94A5AAA4A5AA95DA4143FA492C8FCA7143E147EA4147C123800FE13FC5CA249
5A5CEA7803387007C0383C0F80D80FFEC9FCEA03F82E5C7C7F27>82
D<BF12E08AA38A6C90CCFC0900806C6D19076C6D07007F6C6D1A1F1D076C6DF201FF6C6D
747E6C6DF33F801E0F6C6D1B076D6CF303C06D6D1A01F600E06D7F6D6D1B706D1D30816D
6D1B186D6D1B007F816E7E6E7FA26E7F6E7F6E7FA26E7F6E7F6E7FA26F7E6F7F6F7FA26F
7F6F7F81836F7F6F7F167F83707F707F8284707F707FA2707F82715A60173F715A604D5A
4DCDFC17FEA24C5A4C5A4C5A4C5A4C5A5F163F4CCEFC16FE4B5A4B5A4B5AA24B5A4B5A4B
5A4BCFFC15FEA24A5A4A5A4A481B184A481B304A5A4B1B70023F1C604ACF12E002FE1B01
4948F303C049481B074948F30F801E1F49481B7F4948F3FF0049481A0349CE120F01FEF3
7FFEF403FF48481A7F4848077FB55A48BEFC48655AA248655ABFFC666D747B7F78>88
D<F107C0F11FF0F17C3CF1F80E0601133EF1F07F953803E0FF1807A24E5A1A7E95381F80
3C1A00A24EC7FCA260A2187E18FEA3601701A34D5AA4170760A3170FA260A2171FA260A3
173FA360177FA44DC8FCA55E5FA31603A35FA21607A35FA2160FA44C5AA5163F5FA4167F
5FA416FF5FA45D94C9FCA45D5EA54B5AA54B5AA45EA2151FA35EA2153FA35EA3157F5EA5
4BCAFCA45D1401A35DA31403A25DA21407A25DA3140F5DA44A5AA35D143FA392CBFC5CA2
147E14FE5CA2383C01F8127E12FF495A5C130700FE5B387C0F80D8701FCCFCEA3C3EEA0F
FCEA03F048B87B7F2E>90 D<1B301B78A31BF8A21BF0A31A01A21BE0A31A03A21BC0A31A
07A21B80A41A0FA21B00A362A21A1EA31A3EA21A3CA31A7CA21A78A31AF8A262A41901A2
62A31903A262A31907A262A3190FA297C7FCA461A2191EA3193EA2193CA3197CA21978A3
19F8A261A41801A261A31803A261A31807A261A3180FA296C8FCA460A2181EA3183EA218
3CA3187C131018781330A2017016F8A201F85EA212011701120360487EA2120D001D1603
1219D838FE5E123012700060160712E000C05FEA407F1200170FA295C9FCA26D7E5FA217
1EA36D7E173EA2173CA36D6C147CA21778A317F86D7E5FA316016D7E5FA416036D7E5FA3
1607A26D6C5CA3160FA294CAFC147FA25EA2161EA2EC3F80A2163EA2163CEC1FC0A2167C
A21678A2EC0FE016F8A25EA3EC07F1A25EA315F3EC03FB5EA415FF805EA48093CBFCA515
7EA5157C153CA215384DFA788353>115 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmmi7 7 22
/Fl 22 123 df<1506150E151EA2153FA25D5DA2EC01BFA2EC033F14071406020C1380A2
14181438EC301F1460A214C013011480D9030013C0A21306130E010C130F5BA25B137013
604914E0A2485A12031207120F3AFFF001FFFEA2272A7DA92E>3
D<EA01F0EA03FCEA007E7FA26D7EA2130F80A26D7EA2130380A26D7EA26D7EA2147C147E
A2147F495AEB039F01071380EB0F1F90381E0FC0133C90387807E013F03801E003000314
F0EA07C0390F8001F8EA1F00003E13004814FC5A48147E0070143F20297CA727>21
D<48B61280000715C0481580481500263C0C06C7FC127012C0EB1C0EEA0018A21338A2EB
701EA313F013E01201141F120313C0000780A2380F800FA26C486CC7FC221A7D9827>25
D<1238127C12FEA3127C123807077A8614>58 D<EC0180140314071500A25C140E141E14
1CA2143C143814781470A214F05CA213015C13035CA2130791C7FC5B130EA2131E131C13
3C1338A21378137013F05BA212015B12035BA2120790C8FCA25A120E121E121CA2123C12
3812781270A212F05AA2193B7CAB22>61 D<013FB512F816FF903A01FC001FC04AEB07E0
EE03F001031401A24A14F8A2130717F04A130317E0010F1407EE0FC04AEB1F80EE7E0001
1F495A91B512F0A291388001FC013FEB007E8291C7EA1F80160F4915C0A2137EA213FEEE
1F805BEE3F000001153E16FE49EB01F84B5A0003EC1FC0B7C7FC15F82D287DA732>66
D<4AB41308020FEBE01891397F80F038903A01F8001870D903E0EB0CF0D90F80130749C7
1203013E15E05B491401485A484815C0485A120F5B001F168090C8FC4892C7FCA2127EA4
127C00FC91387FFFE0A2923800FE00127C5EA21501007E5D123EA27E6C6C495A6C6C1307
6C6C130FD801F8131CD800FEEBF06090393FFFC020D907FEC8FC2D2A7DA834>71
D<903B3FFFF01FFFF8A2D901FCC7EAFE004A5CA2010314015F5CA2010714035F5CA2010F
14075F5CA2011F140F91B65AA2913880000F013F141F5F91C7FCA249143F94C7FC137EA2
01FE5C167E5BA2000115FE5E5BA200031401B539C07FFFE0A235287DA736>I<90383FFF
F8A2D901FCC7FC5CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C8FCA2
49141C1618137E163801FE1430167049146016E000011401ED03C0491307ED0F80000314
7FB7FC160026287DA72E>76 D<D93FFCED3FFC187F0101EEFF0002BE5DEF01BE0103ED03
7E187C023E1406170C496C15FC4D5A01061530A2010E1561EFC1F090380C0F80EE018101
1CEC03036001181406160C01381507912607C0185B01301430A20170EC600F04C05B1360
913803E18001E09038E3001F95C7FC01C013E615EC00015EDA01F8133E01805BEA03C000
074A137ED8FFFC9039C01FFFF014003E287CA73F>I<013FB512E016FC903901FC007F4A
EB0F80EE07C0010315E016035C17F01307EE07E05CA2010FEC0FC017804AEB1F00163E01
1F14F8ED07F091B51280A290393F800FE0ED03F002007F15015BA2137EA201FE1303A249
5CA20001160817184914E017380003EDF070B5D8C00113E0923800FFC0C9EA3F002D297D
A732>82 D<EB0FE0EB3FF8EBF81C3801E00E3803803E0007137EEA0F00001E137C123E00
3C1300127CA25AA45AA31404140C0078131814306C13E0381E07C0380FFF00EA03F8171B
7C991E>99 D<133EEA07FEA2EA007CA213FCA25BA21201A25BA2120314FCEBE3FF9038EF
0780D807FC13C0EBF00313E0A2EA0FC014071380A2121FEC0F801300A248EB1F00A2003E
1406143E127EEC7C0C127C151800FCEB3C30157048EB1FE00070EB0F801F297CA727>
104 D<130E131F5BA2133E131C90C7FCA7EA03E0487EEA0C78EA187C1230A212605B12C0
A2EA01F0A3485AA2485AA2EBC180EA0F81A2381F0300A213066C5A131CEA07F06C5A1128
7DA617>I<1407EC0F80141FA21500140E91C7FCA7EB03E0EB07F8EB0C3C1318EB303E13
6013C0A248485AA2C7FCA25CA4495AA4495AA4495AA4495AA21238D87C1FC7FC12FC133E
485AEA70F8EA7FE0EA1F80193380A61B>I<EB0FE0EB3FF8EBF83C3801E00E3803C00F39
07800780EA0F00121E123E003C14C0127C158048130FA31500485BA2143E143C5C12785C
383C03C0381E0F80D80FFEC7FCEA03F81A1B7C9921>111 D<9038F007C03901FC1FF039
031E78780006EBE03C90381FC01C000CEB801E14005B0018141F133E1200137E153E137C
A213FC157C5B1578000114F0A2EC01E0EC03C03903FC07809038FE1F00EBE7FCEBE1F0D8
07E0C7FCA25BA2120FA25B121FEAFFF8A22025809922>I<3807803E390FE0FF803818F3
C13930F703C0EBFE073860FC0F13F8158039C1F0070091C7FC1201A2485AA4485AA4485A
A448C8FCA2120E1A1B7D991F>114 D<131C133EA25BA45BA4485AB512E0A23801F00048
5AA4485AA4485AA448C7FC1460A214C0123EEB0180EB0300EA1E06EA1F1CEA0FF8EA03E0
13267EA419>116 D<D803E0EC0380486CEB7007D80C789038F80FC0EA187C0030903801
F0071603126001F8140100C0D903E01380A2EA01F0A2913907C00300EA03E0A33A07C00F
8006A25EA2160816180003011F5B01E0EBC0703A01F073E0E03A00FFE1FF8090261F807F
C7FC2A1B7D9930>119 D<90387C03C03901FF0FF03907079C30390E03B078000CEBF0F8
001813E1123015F0396007C0E015001200A2495AA449C7FC15301238007C1460EAFC3E15
C0EAF87E39F06F03803970C70700383F83FE381F01F81D1B7D9926>I<013E13C0137F90
38FF818048EBC3004813FF380701FE3806000C00045BC75A5C5CEB03800106C7FC5B5B5B
5B9038C00180EA038039060003005C380FF81E381FFFFE38383FFC38601FF86D5A38C007
C01A1B7D9920>122 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmmi10 10 42
/Fm 42 123 df<170C171C173E177EA217FE4C7E5EA2EE067F040C7F161C1618EE303F04
607F16E016C0923801801FDB03007F5D15064B130F4B80153815305D4B6D7E14015D4AC7
FC4A14030206815C5C023814010230815C5C010115004A8149C9FC1306010E82010C1780
5B5B0170163F016017C05B485A0003171F90CA13E012065A001FB9FC19F05A5AA2BAFC3C
3C7CBB45>1 D<4C7E8316031607A2160FA2161FA2163F167FA216DF83ED019FA2ED031F
1507ED060F150CA21518A215301570156015C0A2DA01807FA2EC03005C14064A1307A25C
A25C147014605CA2494880A249C7FC5B1306491403A25BA25B13705BA2D803F081486C14
0FB5D88003B512F0A21400343C7DBB3A>3 D<EEFFC0030F13FC92387F807F913A01FC00
1FC0DA07F0EB07E0DA1FC06D7E4A486D7E02FFC77F49486E7E495A4948157F495A494816
80A2495AA2495AA249C9FCA218FF5A491700A25F601703605B4D5A60170F00005F4D5A6D
4B5AA2017E4BC7FC177E5F013E5D4C5A1603011E5D4C5A5F010E4AC8FC00C01760041E13
E0041C5B0106EC380160EE700395C7FC00E04B5AD8FFFEECFFFEA25F495B5F393B79BA40
>10 D<1406A6ED7FC0913807FFE0ED806091381FFFE091383C7F8002F0C7FC495A495A49
5A49C8FC130E131E5B5B5BA2485AA2485A485AA248C9FCA3121EA2123E123CA3127C1278
A412F8A57EA2127C127E127F7F6C7E13F0EA1FFE380FFFC06C13F86C13FEC66D7E013F7F
01077F1300EC1FF0140714031401A35DA290381803C0131C90380F0780D903FEC7FCEB00
F8234B7CB924>16 D<EC03F0EC0FFCEC3E1EEC780F14F001011480903803E007D907C013
C0EB0F80131F14004914E0137EA25BA2485A1203A249130F1207A2485AA2ED1FC0121F5B
A290B6FC481580A3903880007F007F150090C7FCA215FEA2127E4A5AA200FE5C1403A200
7C5C4A5AA24A5AA24A5A92C7FC5C6C137E147C001E5B495A6C485A380787806CB4C8FCEA
00F8233C7EBA27>18 D<1338017E14F001FEEB07FC151F49133B15F30001EB01C3913803
83F89039F80700E0020E90C7FC00035B1478EBF0E0EBF1C03807F78001FEC9FCEBFFE014
FE390FE1FFC09038E01FE09038C007F06E7E001F6D7EA2D98000EB0180A2003F15030201
1400010013F8A2485D1606007E0100130E160C00FE151CED7C3848EC1FF00038EC07C029
267CA430>20 D<133F14C0EB07F06D7E801301A26D7EA3147FA36E7EA36E7EA36E7EA36E
7EA36E7EA36E7EA26E7EA214014A7E5C4A7E91381E3F80143C14784A6C7E1301EB03E049
486C7EEB0F80EB1F00496D7E137E5B48486D7E485A485A000F6E7E485A485A48C87E12FE
167F4816800070151F293B7CB930>I<013FB612E090B712F05A120717E0270F807006C7
FC391E00600E48140C003813E04813C048141CEAC0011200148001035BA213071400A25B
1578011E137CA3133E133C137C157E13FC5B1201157F1203497FA3D801C0131C2C257EA3
2F>25 D<15FE913803FF8091380F83E091383E01F091387C00F85C494813FC0103147C49
48137E5C130F495AA249C7FC16FE5B137EA2150113FE4914FCA20001140316F85BED07F0
1203ED0FE04914C0151F000715806DEB3F00157E6D5B390FEE01F09038E707E09038C3FF
80D9C0FCC7FC001F90C8FCA25BA2123FA290C9FCA25AA2127EA212FEA25AA2127027377E
A42B>I<027FB512C00103B612E0130F5B017F15C09026FF81FEC7FC3901FC007E48487F
485A497F484880485AA248C7FCA2127EA2153F00FE92C7FC5AA25D157E5A5DA24A5AA24A
5A007C495A5D003C495A003E013FC8FC6C137C380F81F83803FFE0C66CC9FC2B257DA32F
>I<121C127FEAFF80A5EA7F00121C0909798817>58 D<121C127FEAFF80A213C0A3127F
121C1200A412011380A2120313005A1206120E5A5A5A12600A19798817>I<EF0380EF0F
C0173FEFFF80933803FE00EE0FF8EE3FE0EEFF80DB03FEC7FCED0FF8ED3FE0EDFF80DA03
FEC8FCEC0FF8EC3FE0ECFF80D903FEC9FCEB0FF8EB3FE0EBFF80D803FECAFCEA0FF8EA3F
E0EA7F8000FECBFCA2EA7F80EA3FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB03FE903800
FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03FE923800FF80EE3FE0EE0FF8
EE03FE933800FF80EF3FC0170FEF0380323279AD41>I<150C151E153EA2153C157CA215
7815F8A215F01401A215E01403A215C01407A21580140FA215005CA2141E143EA2143C14
7CA2147814F8A25C1301A25C1303A2495AA25C130FA291C7FC5BA2131E133EA2133C137C
A2137813F8A25B1201A25B1203A25B1207A25B120FA290C8FC5AA2121E123EA2123C127C
A2127812F8A25A12601F537BBD2A>I<126012FCB4FCEA7FC0EA1FF0EA07FCEA01FF3800
7FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FC
ED01FF9238007FC0EE1FF0EE07FCEE01FF9338007F80EF1FC0A2EF7F80933801FF00EE07
FCEE1FF0EE7FC04B48C7FCED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9
FCEB07FCEB1FF0EB7FC04848CAFCEA07FCEA3FF0EA7FC048CBFC12FC1270323279AD41>
I<0103B77E4916F018FC903B0007F80003FE4BEB00FFF07F80020FED3FC0181F4B15E0A2
141FA25DA2143F19C04B143F1980027F157F190092C812FE4D5A4A4A5AEF0FF04AEC1FC0
05FFC7FC49B612FC5F02FCC7B4FCEF3FC00103ED0FE0717E5C717E1307844A1401A2130F
17035CA2131F4D5A5C4D5A133F4D5A4A4A5A4D5A017F4BC7FC4C5A91C7EA07FC49EC3FF0
B812C094C8FC16F83B397DB83F>66 D<0103B7FC4916E018F8903B0007F80007FE4BEB00
FFF03F80020FED1FC0180F4B15E0F007F0021F1503A24B15F81801143F19FC5DA2147FA2
92C8FCA25C18035CA2130119F84A1507A2130319F04A150FA2010717E0181F4A16C0A201
0FEE3F80A24AED7F00187E011F16FE4D5A4A5D4D5A013F4B5A4D5A4A4A5A057FC7FC017F
15FEEE03FC91C7EA0FF049EC7FC0B8C8FC16FC16C03E397DB845>68
D<0103B812E05BA290260007F8C7123F4B140FF003C0140F18015DA2141FA25D1980143F
A25D1760027F14E095C7FC92C75AA24A1301A24A495A16070101141F91B6FC94C8FCA290
3903FC001F824A130EA21307A24A130CA2010F141CA24A90C9FCA2131FA25CA2133FA25C
A2137FA291CBFC497EB612C0A33B397DB835>70 D<DCFF8013E0030F13F0037F9038FC01
C0913A01FF803E03913A07FC000F07DA0FE0EB038FDA3FC0903801DF804AC812FFEB01FE
D903F8157F4948ED3F00495A495A494881017F161E49C9FC5B12014848161C5B1207485A
1818121F4993C7FCA2485AA3127F5BA312FF90CCFC93387FFFFE93B5FCA29338007FC071
5A177F95C7FCA27E5F5F7F123F16016C7E5F6C6C14036D14071207D803FCEC1EF86C6C14
3C26007F80EBF07890393FF007E0010FB5EA8030010349C9FC9038003FE03B3D7DBA41>
I<0103B5D8F803B512F8495DA290260007F8C73807F8004B5DA2020F150F615DA2021F15
1F615DA2023F153F615DA2027F157F96C7FC92C8FCA24A5D605CA249B7FC60A202FCC712
0101031503605CA201071507605CA2010F150F605CA2011F151F605CA2013F153F605CA2
017F157F95C8FC91C8FC496C4A7EB690B6FCA345397DB845>I<0103B500F8903807FFFC
5BA290260007F8C813804BEDFC0019F0020F4B5AF003804B4AC7FC180E021F1538604B5C
EF0380023F4AC8FC170E4B133C1770027F5C4C5ADB0007C9FC160E4A5B167E4A13FE4B7E
01015B92380E7F80ECFC1CED383F010301E07FECFDC04A486C7EECFF00D907FC6D7E5C4A
130783130F707E5C1601011F81A24A6D7EA2013F6F7EA24A143F84137F717E91C8123F49
6C81B60107B512C0A26146397DB847>75 D<902603FFF893383FFF80496081D900079438
FF80000206DC01BFC7FCA2020E4C5A1A7E020C1606190CDA1C7E16FE4F5A02181630A202
38166162023016C1F00181DA703F158395380303F002601506A202E0ED0C076202C01518
183001016D6C140F06605B028015C0A20103923801801FDD03005B140092380FC0064917
3F4D91C8FC01065DA2010E4B5B4D137E130C6F6C5A011C17FEDCE1805B011802E3C7FCA2
013802E6130104EC5C1330ED03F8017016034C5C01F05CD807FC4C7EB500E0D9C007B512
F01680150151397CB851>77 D<0103B612F849EDFF8018E0903B0007F8001FF84BEB03FC
EF00FE020F157FA24BEC3F80A2021F16C0A25DA2143FF07F805DA2027FEDFF006092C748
5A4D5A4A4A5A4D5A4AEC1F80057FC7FC0101EC07F891B612E094C8FC9139FC000FC00103
EC03F0707E4A6D7E831307177E5C177F010F5D5F5CA2011F1401A25CA2133F16034A4A13
60A2017F17E019C091C71401496C01011480B61503933900FE0700EF7E0ECAEA1FFCEF07
F03B3B7DB83F>82 D<92391FE00380DBFFFC130002036D5A91390FE01F8F91393F0007DF
027EEB01FE02F81300495A4948147E177C4948143C495AA2011F153891C8FCA3491530A2
8094C7FC80806D7E14FEECFFE06D13FE6DEBFFC06D14F06D806D80021F7F02037FEC003F
03037F1500167F163F161FA3120C160FA2001C151F94C7FCA3003C153EA25E003E5D127E
007F4A5A6D495A6DEB0FC0D8F9F0495AD8F0FE01FEC8FC39E03FFFF8010F13E0D8C00190
C9FC313D7CBA33>I<0003B812FEA25A903AF8003FC00101C0913880007E4848163C90C7
007F141C121E001C92C7FCA2485CA200305C007017180060130112E0485CA21403C71600
5DA21407A25DA2140FA25DA2141FA25DA2143FA25DA2147FA292C9FCA25CA25CA21301A2
5CA21303A25CEB0FFC003FB6FC5AA237397EB831>I<91B712FCA25B9239E00007F84AC7
EA0FF0D903F8EC1FE04AEC3FC04AEC7F804A150049485C91C7485A4C5A010E4A5A4C5A01
0C4A5A011C4A5A01185D167F4CC7FC90C7485A4B5A4B5A4B5A5E151F4B5A4B5A4BC8FC4A
5A4A5A4A5A5D140F4A5A4A5A4A48130C4AC7FC495A4A141C01031518495A494814384948
143049481470495A49C812F0495D000115014848140348484A5A4848140F4848141F4848
EC7F804848EB07FF90B7FCB8FC94C7FC36397BB839>90 D<147E903803FF8090390FC1C3
8090391F00EFC0017E137F49133F485A4848EB1F8012075B000F143F48481400A2485A5D
007F147E90C7FCA215FE485C5AA214015D48150CA21403EDF01C16181407007C1538007E
010F1330003E131F027B13706C01E113E03A0F83C0F9C03A03FF007F80D800FCEB1F0026
267DA42C>97 D<EC3FC0903801FFF0903807E03C90380F800E90383F0007017E131F4913
7F484813FF485A485A120F4913FE001F143848481300A2127F90C8FCA35A5AA45AA31503
1507007E1406150E003E143C003F14706C14E0390F8007C03907C03F003801FFF838003F
C020267DA424>99 D<163FED1FFFA3ED007F167EA216FEA216FCA21501A216F8A21503A2
16F0A21507A2027E13E0903803FF8790380FC1CF90381F00EF017EEB7FC049133F485A48
48131F000715805B000F143F485A1600485A5D127F90C7127EA215FE5A485CA21401A248
ECF80CA21403161CEDF0181407007C1538007E010F1330003E131F027B13706C01E113E0
3A0F83C0F9C03A03FF007F80D800FCEB1F00283B7DB92B>I<14E0EB03F8A21307A314F0
EB01C090C7FCAB13F8EA03FEEA070F000E1380121C121812381230EA701F1260133F00E0
130012C05BEA007EA213FE5B1201A25B12035BA20007131813E01438000F133013C01470
EB806014E014C01381EB838038078700EA03FEEA00F815397EB71D>105
D<150FED3F80A2157FA31600151C92C7FCABEC0F80EC3FE0ECF0F0903801C0F849487E14
005B130E130C131CEB1801133801305BA2EB0003A25DA21407A25DA2140FA25DA2141FA2
5DA2143FA292C7FCA25CA2147EA214FEA25CA21301001E5B123F387F83F0A238FF87E049
5A00FE5BD87C1FC8FCEA707EEA3FF8EA0FC0214981B722>I<EB03F0EA01FFA3EA00075C
A3130F5CA3131F5CA3133F91C8FCA35B017EEB07C0ED1FF0ED783801FEEBE0F89039FC01
C1FCEC0383EC07070001130ED9F81C13F891383803F091387001E0000349C7FCEBF1C0EB
F38001F7C8FCEA07FEA2EBFFE0EBE7F8380FE0FEEBC07F6E7E141F001F80D9800F1330A2
1670003F011F136001001380A216E04815C0007E1481020F1380158300FE903807870048
EB03FE0038EB00F8263B7CB92B>I<D803E0017F14FE3D07F801FFE003FFC03D0E3C0781
F00F03E03D1C3E1E00F83C01F026383F38D9FC707F00304914E04A90387DC000007049EB
7F8000604991C7FCA200E090C700FE1301485A017E5CA200000201140301FE5F495CA203
031407000160495C180F03075D1203494A011F13601980030F023F13E00007F000C0495C
1901031F023E1380000F1803494A150061033F150E001FEF1E1C4991C7EA0FF80007C700
0EEC03E043267EA449>109 D<90390F8003F090391FE00FFC903939F03C1F903A70F870
0F80903AE0FDE007C09038C0FF80030013E00001491303018015F05CEA038113015CA2D8
00031407A25CA20107140FA24A14E0A2010F141F17C05CEE3F80131FEE7F004A137E16FE
013F5C6E485A4B5A6E485A90397F700F80DA383FC7FC90387E1FFCEC07E001FEC9FCA25B
A21201A25BA21203A25B1207B512C0A32C3583A42A>112 D<02FC13C0903803FF019038
0F838390383F01C790397E00EF8049137F485A4848133F000715005B485A001F5C157E48
5AA2007F14FE90C75AA3481301485CA31403485CA314075D140F127C141F007E495A003E
137F381F01EF380F839F3903FF1F80EA00FC1300143F92C7FCA35C147EA314FE5C130190
387FFFF0A322357DA425>I<3903E001F83907F807FE390E3C1E07391C3E381F3A183F70
3F800038EBE07F0030EBC0FF00705B00601500EC007E153CD8E07F90C7FCEAC07EA21200
13FE5BA312015BA312035BA312075BA3120F5BA3121F5B0007C9FC21267EA425>I<14FF
010313C090380F80F090383E00380178131C153C4913FC0001130113E0A33903F000F06D
13007F3801FFE014FC14FF6C14806D13C0011F13E013039038003FF014071403001E1301
127FA24814E0A348EB03C012F800E0EB07800070EB0F006C133E001E13F83807FFE00001
90C7FC1E267CA427>I<EB01C0497E1307A4130F5CA3131F5CA3133F91C7FC007FB51280
A2B6FCD8007EC7FCA313FE5BA312015BA312035BA312075BA3120FEBC006A2140E001F13
0CEB801C141814385C146014E0380F81C038078780D803FEC7FCEA00F819357EB31E>I<
01F8EB03C0D803FEEB07E0D8070F130F000E018013F0121C12180038140700301403D870
1F130112601500D8E03F14E000C090C7FC5BEA007E16C013FE5B1501000115805B150316
001203495B1506150E150C151C151815385D00015C6D485A6C6C485AD97E0FC7FCEB1FFE
EB07F024267EA428>118 D<01F816F0D803FE9138E001F8D8070F903801F003000ED980
0314FC121C12180038020713010030EDE000D8701F167C1260030F143CD8E03F163800C0
01005B5BD8007E131F183001FE5C5B033F1470000117604991C7FCA218E000034A14C049
137E17011880170318005F03FE1306170E000101015C01F801BF5B3B00FC039F8070903A
7E0F0FC0E0903A1FFC03FFC0902703F0007FC7FC36267EA43B>I<903907E001F090391F
F807FC9039783E0E0F9039E01F1C1FD801C09038383F803A03800FF07F0100EBE0FF5A00
0E4A1300000C157E021F133C001C4AC7FC1218A2C7123FA292C8FCA25CA2147EA214FEA2
4A130CA20101141C001E1518003F5BD87F81143801835C00FF1560010714E03AFE0E7C01
C0D87C1C495A2778383E0FC7FC391FF00FFC3907C003F029267EA42F>I<D901E01360D9
0FF813E0496C13C090383FFE0190397FFF038090B5EA07009038F81FFF3901E003FE9038
C0001C495B5DC85A4A5A4A5A4AC7FC140E5C5C14F0495AEB038049C8FC130E5B4913035B
495B484813064848130E48C75AD80FFC137C391FFF81F8381E0FFFD838075B486C5B0060
5CD8E00190C7FC38C0007C23267DA427>122 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmbx10 10 45
/Fn 45 123 df<913A03FF8007FE027F9039F07FFF800103B500FDB512E0010F903A00FF
FE0FF0D93FF8ECF81F90267FE0019038F03FF849485A4816E014804816C00200ED1FF081
F007C06F91C7FCA8B912E0A4000390C701C0C7FCB3ABB5D8FC3FEBFF80A43D3A7EB938>
11 D<B61280A819087F9620>45 D<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0
EA0F800D0D798C1B>I<141E143E14FE1307133FB5FCA313CFEA000FB3B3A6007FB61280
A4213779B630>49 D<EB0FFC90387FFFC048B512F0000714FC390FF03FFF261F800F1380
263F000313C05AD9C00113E0486C6C13F07FA2ED7FF8A46C5A6C5A000FC7FCC8FCEDFFF0
A216E05C16C04A138016004A5A5D4A5A4A5A4A5AEC7F8092C7FC14FEEB01F84948137849
5A495A495A013EC712F84914F05B4848130148B6FCA25A5A5A5A4815E0B7FCA425377BB6
30>I<EB03FF011F13F0017F13FC3901FC07FF2603F003138048486C13C0496C13E0EA0F
F001FC14F0121F7FA56C4814E0A23803F001C714C04A138016004A5A4A5AEC3FF090380F
FFC092C7FC15F090380007FE913801FF806E13C016E0ED7FF016F816FC153FA216FEEA1F
C0487E487E487EA416FCA249EB7FF8127F01C0EBFFF06C4814E06C6C4813C0260FFC0713
806CB61200000114FC6C6C13F0010790C7FC27387CB630>I<001C15C0D81F80130701F8
137F90B61280A216005D5D15F05D15804AC7FC14F090C9FCA8EB07FE90383FFFE090B512
F89038FC07FC9038E003FFD98001138090C713C0120EC813E0157F16F0A216F8A21206EA
3F80EA7FE012FF7FA44914F0A26C4813FF90C713E0007C15C06C5B6C491380D9C0071300
390FF01FFE6CB512F8000114E06C6C1380D90FF8C7FC25387BB630>53
D<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F80C7FCABEA0F80EA3FE0EA7F
F0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D2579A41B>58 D<DB3FFCEB01C00203B5EAC003
021FECF00791B6EAFC0F01039039FC00FF3F4901C0EB1FFFD91FFEC77E49481403D97FF0
80494880485B48177F4849153F4890C9FC181F485A180F123F5B1807127FA24993C7FC12
FFAD127F7FF003C0123FA27F001F1707A26C6C1780180F6C6D16006C6D5D6C173E6C6D15
7ED97FF85D6D6C4A5A6DB44A5A010701C0EB0FE06D01FCEBFF80010090B548C7FC021F14
F8020314E09126003FFEC8FC3A3B7BB945>67 D<B87E17F817FF18C028007FF8000713F0
9338007FF8EF1FFE717E050313807113C0A27113E0F07FF0A2F03FF8A219FC181FA219FE
A419FFAC19FEA419FC183FA219F8187F19F0F0FFE0A24D13C04D13804D1300EF1FFEEF7F
FC933807FFF0B912C095C7FC17FC178040397DB849>I<B912F0A426007FF8C7FCEF1FF8
170717031701A21700A21878A3043C137C183CA41800167CA216FC150391B5FCA4ECF803
1500167CA2163C180FA3181EA293C7FCA2183EA2183C187CA218FCA2EF01F81703170F17
3FEE01FFB9FC18F0A338397DB83F>I<DB3FFCEB01C00203B5EAC003021FECF00791B6EA
FC0F01039039FC00FF3F4901C0EB1FFFD91FFEC77E49481403D97FF080494880485B4817
7F4849153F4890C9FC181F485A180F123F5B1807127FA24993C8FC12FFAB043FB61280A2
127F7FDC0003EBC000123FA27F121FA26C7EA26C7F6C7F6C7F7ED97FF85C6D7E6DB45C01
0701C05B6D01FCEBFF3F010090B5EAFE0F021FECF8030203ECE0009126003FFEC9FC413B
7BB94B>71 D<B6D8FC03B612F0A426007FF8C70001EBE000B3A391B8FCA402F8C71201B3
A6B6D8FC03B612F0A444397DB84B>I<B612FCA439007FF800B3B3ADB612FCA41E397DB8
24>I<B600FC0103B512C0A426007FF8C8381FE00019804EC7FC18FEEF01F84D5A4D5A4D
5AEF3F80057EC8FC5F4C5A4C5AEE0FE0EE1F804CC9FC167E5EED03F84B7E4B7E4B7E4B7F
5D02F9B57EDAFBF77FDAFFE37F15C103807F4A487F4A6D7E4A133F707E707F8482707F70
7F8482717E717E8483717F717F858385B600FC017FEBFFE0A443397DB84B>75
D<B7FCA426007FF8C9FCB3ACEF0780A5170F1800A35FA25FA25F5F5E5EEE0FFE167FB8FC
A431397DB839>I<B500F80403B512F06E5EA26E5ED8007FF1E000A2D97BFF161EA20179
6D5DA201786D5DA26E6C5DA36E6C4A5AA26E6C4A5AA26E6C4A5AA26E6C4A5AA26E6C141E
A36E6D5BA26E6D5BA26F6C5BA26F6C485AA36F6C485AA26F6C485AA26F6C48C7FCA29238
03FF1EA36F13BCA26F13F8A2705AA2705AA213FCB500FC6D4848B612F0A2EE0F80EE0700
54397DB85B>I<B500FC0203B512F0A28080C66C6D90390003F0006F6E5A81017B7F1379
8101787F6E7E6E7E6E7F6E7FA26E7F6E7F6E7F6E7F6F7E153F826F13806F13C06F13E06F
13F06F13F88117FCEE7FFEEE3FFF7013817013C17013E18218F17013F97013FDEF7FFF83
83A28383838383187FA2183F181F01FC160FB500FC150718031801A244397DB84B>I<ED
FFF8020FEBFF80027F14F0903A01FFC01FFC010790380007FFD91FFC010113C0D93FF06D
6C7E49486E7E49486E7E48496E7E48834890C86C7EA248486F1380A248486F13C0A2003F
18E0A348486F13F0A400FF18F8AC007F18F06D5DA3003F18E0A26D5D001F18C0A26C6C4B
13806C18006E5C6C6D4A5A6C5F6C6D4A5A6D6C4A5AD93FFC49485A6DB401075B0107D9C0
1F90C7FC010190B512FC6D6C14F0020F1480020001F8C8FC3D3B7BB948>I<B8FC17F017
FEEFFF8028007FF8000F13C0040113E07013F0EF7FF8EF3FFCA2EF1FFEA218FFA818FEA2
EF3FFCA2EF7FF8EFFFF04C13E0040F13C091B7120017FC17E002F8C9FCB3A4B612FCA438
397DB841>I<B712FCEEFFE017FC17FF28007FF8000F13C004017F707F717E717EA2717E
A284A760A24D5A604D5A4D5A04035B041F90C8FC91B612FC17E0839139F8003FFCEE0FFF
707F707F8284A2707FA584A51A601AF084177F1901DD3FFE13E0B600FC011F130394390F
FF87C071EBFF8005011400CBEA1FFC443A7DB848>82 D<D907FF130E013FEBE01E90B5EA
F83E0003ECFE7E3A07FC01FFFE390FF0001F4848130F48481303491301007F140090C8FC
167E5A163EA27F161E7F7F6D91C7FC13FC387FFFE014FEECFFF06C14FE6F7E6C816C15F0
6C816C81C681133F010F801301D9000F1480EC007F030F13C01503818100F0157FA3163F
A27E17807E167F6C16007E6D14FE01E0495A01F813039039FF801FF800FC90B512E0D8F8
3F5CD8F00749C7FC39E0007FF02A3B7BB935>I<003FB91280A4D9F800EBF003D87FC092
38007FC049161F007EC7150FA2007C1707A200781703A400F818E0481701A4C892C7FCB3
AE010FB7FCA43B387DB742>I<EB3FFE0003B512E0000F14F8391FF00FFE003FEB03FF6D
6C7F6E7FA26F7EA26C5A6C5AEA0380C8FCA2EC3FFF010FB5FC137F3901FFF87F00071380
380FFE00EA3FF85B485A12FF5BA415FF6D5A127F263FF00713F83B1FFC1FBFFFC0390FFF
FE1F0003EBF80F39003FE0032A257DA42E>97 D<13FFB5FCA412077EAF4AB47E020F13F0
023F13FC9138FE03FFDAF00013804AEB7FC00280EB3FE091C713F0EE1FF8A217FC160FA2
17FEAA17FCA3EE1FF8A217F06E133F6EEB7FE06E14C0903AFDF001FF80903AF8FC07FE00
9039F03FFFF8D9E00F13E0D9C00390C7FC2F3A7EB935>I<903801FFC0010F13FC017F13
FFD9FF8013802603FE0013C048485AEA0FF8121F13F0123F6E13804848EB7F00151C92C7
FC12FFA9127FA27F123FED01E06C7E15036C6CEB07C06C6C14806C6C131FC69038C07E00
6DB45A010F13F00101138023257DA42A>I<EE7F80ED7FFFA4150381AF903801FF81010F
13F1013F13FD9038FFC07F0003EB001FD807FC1307000F8048487F5B123FA2485AA312FF
AA127FA27F123FA26C6C5B000F5C6C6C5B6C6C4913C02701FF80FD13FE39007FFFF9011F
13E1010313012F3A7DB935>I<903803FF80011F13F0017F13FC3901FF83FE3A03FE007F
804848133F484814C0001FEC1FE05B003FEC0FF0A2485A16F8150712FFA290B6FCA301E0
C8FCA4127FA36C7E1678121F6C6C14F86D14F000071403D801FFEB0FE06C9038C07FC06D
B51200010F13FC010113E025257DA42C>I<EC1FF0903801FFFC010713FF90391FF87F80
90383FE0FFD9FFC113C0A2481381A24813016E1380A2ED3E0092C7FCA8B6FCA4000390C8
FCB3ABB512FEA4223A7DB91D>I<161FD907FEEBFFC090387FFFE348B6EAEFE02607FE07
138F260FF801131F48486C138F003F15CF4990387FC7C0EEC000007F81A6003F5DA26D13
FF001F5D6C6C4890C7FC3907FE07FE48B512F86D13E0261E07FEC8FC90CAFCA2123E123F
7F6C7E90B512F8EDFF8016E06C15F86C816C815A001F81393FC0000F48C8138048157F5A
163FA36C157F6C16006D5C6C6C495AD81FF0EB07FCD807FEEB3FF00001B612C06C6C91C7
FC010713F02B377DA530>I<13FFB5FCA412077EAFED7FC0913803FFF8020F13FE91381F
03FFDA3C01138014784A7E4A14C05CA25CA291C7FCB3A3B5D8FC3F13FFA4303A7DB935>
I<EA01F0EA07FC487EA2487EA56C5AA26C5AEA01F0C8FCA913FF127FA412077EB3A9B512
F8A4153B7DBA1B>I<13FFB5FCA412077EB3B3ACB512FCA4163A7DB91B>108
D<01FED97FE0EB0FFC00FF902601FFFC90383FFF80020701FF90B512E0DA1F81903983F0
3FF0DA3C00903887801F000749DACF007F00034914DE6D48D97FFC6D7E4A5CA24A5CA291
C75BB3A3B5D8FC1FB50083B512F0A44C257DA451>I<01FEEB7FC000FF903803FFF8020F
13FE91381F03FFDA3C011380000713780003497E6D4814C05CA25CA291C7FCB3A3B5D8FC
3F13FFA430257DA435>I<903801FFC0010F13F8017F13FFD9FF807F3A03FE003FE04848
6D7E48486D7E48486D7EA2003F81491303007F81A300FF1680A9007F1600A3003F5D6D13
07001F5DA26C6C495A6C6C495A6C6C495A6C6C6CB45A6C6CB5C7FC011F13FC010113C029
257DA430>I<9039FF01FF80B5000F13F0023F13FC9138FE07FFDAF00113800007496C13
C06C0180EB7FE091C713F0EE3FF8A2EE1FFCA3EE0FFEAA17FC161FA217F8163F17F06E13
7F6E14E06EEBFFC0DAF00313809139FC07FE0091383FFFF8020F13E0020390C7FC91C9FC
ACB512FCA42F357EA435>I<9038FE03F000FFEB0FFEEC3FFF91387C7F809138F8FFC000
075B6C6C5A5CA29138807F80ED3F00150C92C7FC91C8FCB3A2B512FEA422257EA427>
114 D<90383FF0383903FFFEF8000F13FF381FC00F383F0003007E1301007C130012FC15
787E7E6D130013FCEBFFE06C13FCECFF806C14C06C14F06C14F81203C614FC131F903800
7FFE140700F0130114007E157E7E157C6C14FC6C14F8EB80019038F007F090B512C000F8
140038E01FF81F257DA426>I<130FA55BA45BA25B5BA25A1207001FEBFFE0B6FCA30003
90C7FCB21578A815F86CEB80F014816CEBC3E090383FFFC06D1380903803FE001D357EB4
25>I<01FFEC3FC0B5EB3FFFA4000714016C80B3A35DA25DA26C5C6E4813E06CD9C03E13
FF90387FFFFC011F13F00103138030257DA435>I<B539F001FFF8A4000390C7EA3F0016
1E6E133E6C153C6E137C6C15786E13F8017F5CECF001013F5C14F8011F495AA2ECFC0701
0F5CECFE0F010791C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E5AA26E5AA26E5AA26E5A
A22D257EA432>I<B539F01FFFF0A4000390398003F8006C01C013E06C1407D97FE05B6D
6C485A6E48C7FC90381FFC3E010F5B903807FEFC6D6C5A5D6D5B6D5B6E7E6E7E814A7EA2
4A7E903801F3FFD903E37FD907C17FEB0FC049486C7E4A6C7E013E80496D7E49130F0001
6E7EB590383FFFF8A42D257EA432>120 D<B539F001FFF8A4000390C7EA3F00161E6E13
3E6C153C6E137C6C15786E13F8017F5CECF001013F5C14F8011F495AA2ECFC07010F5CEC
FE0F010791C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E5AA26E5AA26E5AA26E5AA292C8
FCA25C141E003F133E387F803C38FFC07C147814F8EBC1F0EBC3E06C485A387D1F80D83F
FFC9FCEA1FFCEA07F02D357EA432>I<003FB612C0A3D9F0031380EB800749481300003E
5C003C495A007C133F5D0078495A14FF5D495B5BC6485B92C7FC495A131F5C495A017FEB
03C0EBFFF014E04813C05AEC80074813005A49EB0F80485A003F141F4848133F9038F001
FFB7FCA322257DA42A>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmbx12 12 36
/Fo 36 119 df<EC03C01407141F147FEB03FF133FB6FCA413C3EA0003B3B3ADB712FCA5
264177C038>49 D<ECFFE0010F13FE013F6D7E90B612E0000315F82607FC0313FE3A0FE0
007FFFD81F806D138048C7000F13C0488001C015E001F07F00FF6E13F07F17F881A46C5A
6C5A6C5AC9FC17F05DA217E05D17C04B13804B1300A2ED1FFC4B5A5E4B5A4B5A4A90C7FC
4A5A4A5AEC0FF04A5AEC3F804AC7127814FE495A494814F8D907E014F0495A495A49C8FC
017C140149140348B7FC4816E05A5A5A5A5AB8FC17C0A42D417BC038>I<ECFFF0010713
FF011F14C0017F14F049C66C7ED803F8EB3FFED807E06D7E81D80FF86D138013FE001F16
C07FA66C5A6C4815806C485BC814005D5E4B5A4B5A4B5A4A5B020F1380902607FFFEC7FC
15F815FF16C090C713F0ED3FFCED0FFEEEFF80816F13C017E0A26F13F0A217F8A3EA0FC0
EA3FF0487EA2487EA217F0A25D17E06C5A494913C05BD83F80491380D81FF0491300D80F
FEEBFFFE6CB612F800015D6C6C14C0011F49C7FC010113E02D427BC038>I<163FA25E5E
5D5DA25D5D5D5DA25D92B5FCEC01F7EC03E7140715C7EC0F87EC1F07143E147E147C14F8
EB01F0EB03E0130714C0EB0F80EB1F00133E5BA25B485A485A485A120F5B48C7FC123E5A
12FCB91280A5C8000F90C7FCAC027FB61280A531417DC038>I<0007150301E0143F01FF
EB07FF91B6FC5E5E5E5E5E16804BC7FC5D15E092C8FC01C0C9FCAAEC3FF001C1B5FC01C7
14C001DF14F09039FFE03FFC9138000FFE01FC6D7E01F06D13804915C0497F6C4815E0C8
FC6F13F0A317F8A4EA0F80EA3FE0487E12FF7FA317F05B5D6C4815E05B007EC74813C012
3E003F4A1380D81FC0491300D80FF0495AD807FEEBFFFC6CB612F0C65D013F1480010F01
FCC7FC010113C02D427BC038>I<4AB47E021F13F0027F13FC49B6FC01079038807F8090
390FFC001FD93FF014C04948137F4948EBFFE048495A5A1400485A120FA248486D13C0EE
7F80EE1E00003F92C7FCA25B127FA2EC07FC91381FFF8000FF017F13E091B512F89039F9
F01FFC9039FBC007FE9039FF8003FF17804A6C13C05B6F13E0A24915F0A317F85BA4127F
A5123FA217F07F121FA2000F4A13E0A26C6C15C06D4913806C018014006C6D485A6C9038
E01FFC6DB55A011F5C010714C0010191C7FC9038003FF02D427BC038>I<EE1F80A24C7E
A24C7EA34C7EA24B7FA34B7FA24B7FA34B7F169F031F80161F82033F80ED3E07037E8015
7C8203FC804B7E02018115F0820203814B137F0207815D173F020F814B7F021F8292C77E
A24A82023E80027E82027FB7FCA291B87EA2498302F0C8FCA20103834A157F0107834A15
3FA249488284011F8491C97E4984133E017E82B6020FB612F0A54C457CC455>65
D<DCFFF01470031F01FF14F04AB6EAE0010207EDF803023FEDFE0791B539E001FF0F4949
C7EA3F9F010701F0EC0FFF4901C0804990C87E4948814948814948167F4849163F484916
1F5A4A160F485B19074890CAFC19035A5BA2007F1801A34994C7FC12FFAE127F7F1AF0A2
123FA27F6C18011AE06C7F19036C6D17C06E16077E6C6DEE0F806C6DEE1F006D6C5E6D6C
167E6D6C6C5D6D6D4A5A6D01F0EC07F0010101FEEC1FE06D903AFFF001FF80023F90B6C7
FC020715FC020115F0DA001F1480030001F8C8FC44467AC451>67
D<B9FC18F018FE727E19E026003FFEC7001F13F805017F9438003FFF060F7F727F727F72
7F84737E737EA2737EA2737EA21B80A2851BC0A51BE0AD1BC0A51B8061A21B006162193F
624F5A19FF624E5B06075B4E5B063F90C7FC4DB45A050F13F8BA5A19C04EC8FC18F095C9
FC4B447CC356>I<BA1280A419C026003FFEC7121F1701EF007F183F181F180F180719E0
1803A31801A3EE01E0F000F0A419001603A31607160F167F91B6FCA59138FE007F160F16
071603A31601A693C9FCAFB712F0A53C447CC346>70 D<B7D88003B612FEA526003FFEC9
EBF800B3A791B9FCA54AC9FCB3AAB7D88003B612FEA54F447CC358>72
D<B712E0A5D8001F90C7FCB3B3B3A4B712E0A523447DC32A>I<B500FE067FB512806E95
B6FCA26F5EA2D8003F50C7FC013D6DEE03DFA2013C6DEE079FA26E6CEE0F1FA26E6C161E
A26E6C163CA36E6C1678A26E6C16F0A26E6DEC01E0A26E6DEC03C0A36E6DEC0780A26F6C
EC0F00A26F6C141EA26F6C5CA36F6C5CA26F6C5CA26F6D485AA26F6D485AA26F6D485AA3
706C48C7FCA293383FF81EA2706C5AA2706C5AA3706C5AA2705BA2705BA2705BA2B6057F
B6128071C7FCA2173E171C61447CC36A>77 D<B9FC18F018FE727E19E0D8001F90C7000F
7F05017F716C7E727E727E721380A21AC084A21AE0A91AC0A24E1380A21A00604E5A4E5A
4D485A050F5B92B712C096C7FC18FC18C092CBFCB3A7B712E0A543447DC34D>80
D<B812F8EFFFC018F818FE727ED8001F90C7003F13E005037F05007F727E727E727EA286
84A286A762A24E90C7FCA24E5A61187F943801FFF005075B053F138092B7C8FC18F818E0
18F892C77FEF3FFF050F7F717F717FA2717FA2717FA785A61B0F85A2187F73131F72141E
B700E06DEB803E72EBE0FC72EBFFF8060114F0726C13E0CC0007138050457DC354>82
D<DAFFE0131C010701FE133C013F9038FF807C90B6EAE0FC4815F9489038801FFF3907FC
00014848EB007F4848143F4848140F491407007F15035B1601160012FF177CA27FA26D15
3C7F7F6D92C7FC6C7EEBFFE014FE6CEBFFF015FF6C15E016FC6C816C6F7E6C826C826C6C
81011F810107811300020F80140003077FED007F82040F1380828212F082A282A27EA218
007EA26C5D6C5E6D14036D5D6D140701F84A5A01FFEC3FF002F8EBFFE0486CB65AD8FC1F
92C7FCD8F80714FC48C614F0480107138031467AC43E>I<003FBA12E0A59026FE000FEB
8003D87FE09338003FF049171F90C71607A2007E1803007C1801A300781800A400F819F8
481978A5C81700B3B3A20107B8FCA545437CC24E>I<903801FFE0011F13FE017F6D7E48
B612E03A03FE007FF84848EB1FFC6D6D7E486C6D7EA26F7FA36F7F6C5A6C5AEA00F090C7
FCA40203B5FC91B6FC1307013F13F19038FFFC01000313E0000F1380381FFE00485A5B12
7F5B12FF5BA35DA26D5B6C6C5B4B13F0D83FFE013EEBFFC03A1FFF80FC7F0007EBFFF86C
ECE01FC66CEB8007D90FFCC9FC322F7DAD36>97 D<EB7FC0B5FCA512037EB1ED0FF892B5
7E02C314E002CF14F89139DFC03FFC9139FF000FFE02FCEB03FF4A6D13804A15C04A6D13
E05CEF7FF0A218F8173FA318FCAC18F8A2177F18F0A3EFFFE06E15C06E5B6E491380027C
491300496C495A903AFC1FC07FFC496CB512F0D9F00314C049C691C7FCC8EA1FF036467D
C43E>I<EC3FFC49B512C0010F14F0013F14FC90397FF003FE9039FFC001FF0003495A48
494813805B120F485AA2485A6F1300007F6E5AED00784991C7FCA212FFAC6C7EA3123F6D
EC03C0A26C6C1407000F16806D140F6C6DEB1F006C6D133E6C01F05B3A007FFC03F86DB5
5A010F14C0010391C7FC9038003FF82A2F7CAD32>I<EE03FEED07FFA5ED001F160FB1EC
3FE0903803FFFC010FEBFF8F013F14CF9039FFF807FF48EBC00148903880007F4890C712
3F4848141F49140F121F485AA3127F5BA212FFAC127FA37F123FA26C6C141FA26C6C143F
0007157F6C6C91B5FC6CD9C00314FC6C9038F01FEF6DB5128F011FEBFE0F010713F89026
007FC0EBF80036467CC43E>I<EC3FF80103B57E010F14E0013F8090397FF83FF89039FF
C007FC48496C7E48496C7E48486D1380485A001FED7FC05B003FED3FE0A2127F5B17F016
1F12FFA290B7FCA401F0C9FCA5127FA27FA2123F17F06C7E16016C6C15E06C6C14036C6D
EB07C06C6DEB0F806C01F0EB3F0090397FFE01FE011FB55A010714F0010114C09026001F
FEC7FC2C2F7DAD33>I<EDFF80020F13E0027F13F049B512F849EB8FFC90390FFE0FFE90
381FFC1F14F8133FEB7FF0A2ED0FFCEBFFE0ED03F0ED00C01600ABB612F8A5C601E0C7FC
B3B0007FEBFFE0A527467DC522>I<DAFFE0137E010F9039FE03FF80013FEBFF8F90B812
C048D9C07F133F489038001FF84848EB0FFC4848903907FE1F80001F9238FF0F00496D90
C7FCA2003F82A8001F93C7FCA26D5B000F5D6C6C495A6C6C495A6C9038C07FF04890B55A
1680D8078F49C8FC018013E0000F90CAFCA47F7F7F90B612C016FC6CEDFF8017E06C826C
16FC7E000382000F82D81FF0C77ED83FC014074848020113808248C9FC177FA46D15FF00
7F17006D5C6C6C4A5A6C6C4A5AD80FFEEC3FF83B07FFC001FFF0000190B612C06C6C92C7
FC010F14F8D9007F90C8FC32427DAC38>I<EB7FC0B5FCA512037EB1ED07FE92383FFF80
92B512E002C114F89139C7F03FFC9138CF801F9139DF000FFE14DE14FC4A6D7E5CA25CA3
5CB3A7B60083B512FEA537457CC43E>I<137C48B4FC4813804813C0A24813E0A56C13C0
A26C13806C1300EA007C90C7FCAAEB7FC0EA7FFFA512037EB3AFB6FCA518467CC520>I<
EB7FC0B5FCA512037EB3B3B3A3B61280A519457CC420>108 D<90277F8007FEEC0FFCB5
90263FFFC090387FFF8092B5D8F001B512E002816E4880913D87F01FFC0FE03FF8913D8F
C00FFE1F801FFC0003D99F009026FF3E007F6C019E6D013C130F02BC5D02F86D496D7EA2
4A5D4A5DA34A5DB3A7B60081B60003B512FEA5572D7CAC5E>I<90397F8007FEB590383F
FF8092B512E0028114F8913987F03FFC91388F801F000390399F000FFE6C139E14BC02F8
6D7E5CA25CA35CB3A7B60083B512FEA5372D7CAC3E>I<EC1FFC49B512C0010714F0011F
14FC90397FF80FFF9026FFC0017F48496C7F4848C7EA3FE000078248486E7E49140F001F
82A2003F82491407007F82A400FF1780AA007F1700A46C6C4A5AA2001F5E6D141F000F5E
6C6C4A5AA26C6C6CEBFFE06C6D485B27007FF80F90C7FC6DB55A010F14F8010114C09026
001FFCC8FC312F7DAD38>I<90397FC00FF8B590B57E02C314E002CF14F89139DFC03FFC
9139FF001FFE000301FCEB07FF6C496D13804A15C04A6D13E05C7013F0A2EF7FF8A4EF3F
FCACEF7FF8A318F017FFA24C13E06E15C06E5B6E4913806E4913006E495A9139DFC07FFC
02CFB512F002C314C002C091C7FCED1FF092C9FCADB67EA536407DAC3E>I<90387F807F
B53881FFE0028313F0028F13F8ED8FFC91389F1FFE000313BE6C13BC14F8A214F0ED0FFC
9138E007F8ED01E092C7FCA35CB3A5B612E0A5272D7DAC2E>114
D<90391FFC038090B51287000314FF120F381FF003383FC00049133F48C7121F127E00FE
140FA215077EA27F01E090C7FC13FE387FFFF014FF6C14C015F06C14FC6C800003806C15
806C7E010F14C0EB003F020313E0140000F0143FA26C141F150FA27EA26C15C06C141FA2
6DEB3F8001E0EB7F009038F803FE90B55A00FC5CD8F03F13E026E007FEC7FC232F7CAD2C
>I<EB01E0A51303A41307A2130FA2131FA2133F137F13FF1203000F90B51280B7FCA4C6
01E0C7FCB3A3ED01E0A9150302F013C0137F150790393FF80F8090391FFC1F006DB5FC6D
13FC01015B9038003FE023407EBE2C>I<D97FC049B4FCB50103B5FCA50003EC000F6C81
B3A85EA25EA25E7E6E491380017FD901F713FE9138F807E76DB512C7010F1407010313FE
9026007FF0EBFC00372E7CAC3E>I<B6903803FFFCA5000101E09038003E006C163C8001
7F5D8017F8013F5D6E1301011F5D6E1303010F5D6E13076D5DED800F6D92C7FC15C05E6D
EBE01E163E6D143CEDF07C027F1378EDF8F8023F5B15FD021F5B15FF6E5BA36E5BA26E90
C8FCA26E5AA26E5AA21578362C7EAB3B>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmsy6 6 2
/Fp 2 49 df<B712C0A322037A8D30>0 D<EA01E0EA03F0A4EA07E0A213C0120FA21380
A2EA1F00A2121EA2123E123CA25AA3127012F05A12600C1A7E9B12>48
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmmi9 9 14
/Fq 14 123 df<ED03FF033F13E0913901FE01FC913907F0007EDA1FC0EB3F804A48EB1F
C002FEC7EA0FE04948EC07F0495A4948EC03F8130F494815FC495AA2495AA249C8FCA217
075A4916F8A2EF0FF0A2171F18E0EF3FC0A20000EE7F80180017FE017E5D16014C5A013E
5D4C5A6D4A5A5F4CC7FC6D141E5ED860079138780180170304F013004C5A6D903801C006
170E00E0ED800CB5903803FFFCA25F495B5F36357BB43B>10 D<EC01F8EC0FFE91383E0F
8091387C07C0903901F803E0EB03F0903907E001F0EB0FC01480131FD93F0013F8A2137E
A2150301FE14F05BA20001140716E05BA20003EC0FC0A249EB1F80160000075C157E6D5B
4A5A390FFC03E09038EE07C0D9C7FFC7FCEBC1F8D81FC0C8FCA25BA2123FA290C9FCA25A
A2127EA212FEA25A123825327FA028>26 D<123C127E12FFA4127E123C08087A8715>58
D<171C177EEE01FEEE07FCEE1FF0EE7FC0923801FF00ED07FCED1FF0ED7FC04A48C7FCEC
07FCEC1FF0EC7FC04948C8FCEB07FCEB1FF0EB7FC04848C9FCEA07FCEA1FF0EA7FC048CA
FCA2EA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC
07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE01FEEE007E
171C2F2E7AA93C>60 D<1530157815F8A215F01401A215E01403A215C01407A21580140F
A215005CA2143EA2143C147CA2147814F8A25C1301A25C1303A25C1307A2495AA291C7FC
5BA2131E133EA2133C137CA2137813F8A25B1201A25B1203A2485AA25B120FA290C8FC5A
A2121E123EA2123C127CA2127812F8A25A12601D4B7CB726>I<127012FCB4FCEA7FC0EA
1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF91
38007FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE01FEA2EE07FCEE1FF0EE7F
C0923801FF00ED07FCED1FF0ED7FC04A48C7FCEC07FCEC1FF0EC7FC04948C8FCEB07FCEB
1FF0EB7FC04848C9FCEA07FCEA1FF0EA7FC048CAFC12FC12702F2E7AA93C>I<010FB612
F817FF18C0903B003FC0003FE0EF0FF0EF03F84B6D7E717E027F157F8492C81380A24A15
1F19C05CA21301A25CA21303183F5CA2130719804A157FA2130F19004A5D60011F150160
5C4D5A013F5E17074A4A5A60017F4B5A4DC7FC91C8127E4C5A494A5AEE0FF049EC3FC000
014AB4C8FCB712FC16F093C9FC3A337DB23F>68 D<010FB5D8C03FB5FCA39026003FE0C7
13804B1500A24B5CA2027F14016092C7FCA24A1403605CA201011507605CA20103150F60
5C91B7FC5B6002F0C7121FA2010F153F605CA2011F157F95C7FC5CA2013F5D5F5CA2017F
14015F91C7FCA24914035F5B00011507B5D8FC03B512F0A340337DB240>72
D<90260FFFE092380FFFC06161D9003FEFE0004F5A19DFDA33F05EF0019F0273ED033F97
C7FC02631506180C02E35EDAE1F8EC187E14C118300101EE60FE61028115C0EF01800103
1681DA80FC90380301F81400170649ED0C0361010615181730010E017E140705605B010C
15C0A2011C913801800F610118EC030016060138013F141F4C5C01305CA201704A133F96
C8FC01605C6F5A01E05E4C137E000192C7FCD807F016FEB5D8801E90387FFFFC151C150C
4A337CB24A>77 D<ED01F815FFA216F01507A316E0A2150FA216C0A2151FA21680A2153F
A2D901F81300EB07FE90381F077F90387C03FF496C5AEA01F000031300485A495B120F38
1F8001A2D83F005BA214035A007E5CA2140712FE485C1640020F136016E0EDC0C0127CEC
1FC1023F1380003CEB7F81003EEBEF833A1E01C7C300390F0787C73907FE03FE3900F800
F825357EB328>100 D<D801E001FEEB07F03C07F803FF801FFC3C0E3E0F07E0783F001C
903B3C03F1E01F803C181F7001F3800F003801E0EBF70026303FC001FE14C01270006001
805B02005B0303141FD8E07F4A1480EA407E12000307143F01FE1700495C60030F147E12
01494A13FEF0FC04031F150E00030401130C49028013F8191C033F01031318000717F049
02001438050113704B15E0000F933800F1C049017EEC7F80D80380011CEC1E003F227EA0
44>109 D<011F131F90397FC07FE09039E3E1E0F09039C3E380783A01C1F7007CD981FE
133CD983FC133E00035BEB03F0163FEA0707120600025B1200010F147F167E5CA2011F14
FE16FC5CA2013FEB01F8A291380003F016E0491307ED0FC002801380ED1F009038FFC03E
9038FEE0F89038FC7FE0EC1F80000190C8FCA25BA21203A25BA21207A25BB57EA3283083
A027>112 D<01F01507D803FC903903800F80D8071E903907C01FC0D80E1F130F121C00
380180140F0030021F1307013FEC8003007013000060160149133FD8E07E168000401500
EA00FE494913030001170049137EA203FE5B00031606495B170E170CA24B131C4915186D
15384A6C5B17600001010314E03B00F8077E01C0903A7C0E3F078090273FFC0FFEC7FC90
3907F001F832227EA037>119 D<903807800390381FE00790383FF00690387FF80E9038
FFFC1C48EBFE789038E03FF03803800190C712E0EC01C0C7EA0380EC0700140E143C1470
5C495A495A49C7FC130E133C0170130C49131C484813184848133848C71278D80EC013F0
380FFE03391F3FFFE0D8381F13C0486C1380D86007130038E003FE38C000F020227DA024
>122 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr cmsy9 9 3
/Fr 3 25 df<007FB712FCB812FEA26C16FC2F047A943C>0 D<15E081B3A4007FB812C0
B912E0A26C17C0C800F0C8FCB3007FB812C0B912E0A26C17C033327CB13C>6
D<013F16402601FFE015E04813F8487F4813FF4880D83FC06D1301273E001FE014C048D9
07F8130300786D6C13070070D900FFEB0F8000F091387FE07F486EB512006F5B03075B6F
5B03005B0040ED1F8033127C9B3C>24 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fs cmbx9 9 21
/Fs 21 117 df<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C0C7A8B19>46
D<EB03FE90383FFFE090B512F848EB07FC3903FC01FE48486C7E4848EB7F8049133F001F
15C0A2003F15E049131F007F15F0A500FF15F8B1007F15F0A4003F15E06D133FA2001F15
C0A26C6CEB7F806C6CEBFF006C6C485A3901FF07FC6CEBFFF8013F13E0D903FEC7FC2532
7DB02C>48 D<147814F81303131FEA03FFB5FCA3EAFC1F1200B3B2007FB512FEA41F317A
B02C>I<EB1FFC90B57E000314E0000F14F8391FE03FFC393F800FFF48487E6D6C1380D8
FFC014C06D7E16E080A36C5A6C5A6CC7FCC8FC16C05C16805C16004A5A4A5A5D4A5AEC3F
C04A5A02FEC7FC495A495A903907E001E0EB0FC0EB1F8090383E00034914C05B48481307
48B6FC5A5A5A5A5AB71280A423317CB02C>I<EB0FFC90387FFF8048B512F03903F01FF8
3907C00FFE380F8007486C6C7E01F01480123F13F8A5D81FF014006C485AD803805BC7FC
4A5A4A5A4A5AECFFC0013F90C7FC14FCECFFC09038001FF0EC0FFC6E7E6E7E16806E13C0
A2000F15E0EA3FC0EA7FE0EAFFF0A416C0A2495AD87FC0148049481300003F5B391FF01F
FE6CB512F8000314E0C61480D91FFCC7FC23327CB02C>I<151F5D5DA25D5C5C5C5CA25C
143D147D14F9EB01F114E1EB03C1EB0781130FEB1F01133E133C137813F01201EA03E0EA
07C01380EA0F00121E123E5A5AB712FEA4C700031300A80103B512FEA427317EB02C>I<
000C140ED80FE013FE90B5FC5D5D5D5D5D92C7FC14FC14F091C8FC1380A6EB87FE9038BF
FFC090B512F09038FC0FF89038E003FE01C07F497E01001480000E6D13C0C8FCA216E0A3
121FEA7F807F487EA316C05B5CD87F801480D87C0014006C5B393F8007FE391FE01FFC00
07B512F06C14C0C691C7FCEB1FF823327CB02C>I<EC7FC0903803FFF0010F13FC90383F
E07E90387F801F4848485A4848EBFF8048485A13F8120FEA1FF0A2123F6E13004848133C
92C7FCA2142039FFE1FF8001E713E001EF13F89038FE03FC496C7E01F87F6E13805B16C0
A24914E0A5127FA5123F16C0121F6D1480000F5B01F814006C6C485A6C6C485A6CB55A6C
6C5B011F13C0D907FEC7FC23327CB02C>I<123C123F90B612F8A44815F016E016C01680
16005D007CC7127E00785C4A5A00F8495A48495A4A5A4A5AC7FC4AC7FC147E14FE5C1301
5C1303A2495AA2130FA2131FA25C133FA4137FA96D5AA2010FC8FC25337BB12C>I<EB07
FE90383FFFC090B512F03903F807FC3907C000FE4848137F8148C71380151F5A7FA27F7F
01F8133F01FE14006D6C5A6CEBE0FEECF1FC6CEBFFF815E06C5C6C14F06C806C6C7F48B5
7E4880D80FF31480D81FE014C0383FC03FEB800F48486C13E0140148EB007F48143F151F
A2150FA216C07E6C141F6D14806C6C133F6DEB7F00391FF803FE0007B512F86C5CC66C13
C0D90FFCC7FC23327CB02C>I<EB07FC90383FFF8090B512E03903FE0FF03907F807F848
486C7E001F6D7E003F80497E007F1580A212FF16C0A416E0A55C127FA2123F5CEA1FF000
0F5B6C6C5A3803FFFEC65BD93FF013C0EB00805CA2EA0780261FE0011380EA3FF01600A2
4A5AA24A5A49485A391F801FF09038C07FE06CB512806C91C7FC000113FC38003FC02332
7CB02C>I<ED1F80A24B7EA24B7EA34B7EA24A7FA34A7FA24A7F15CFA2020F7F1587021F
801503023F80EC3E01A2027E80EC7C0002FC804A137FA20101814A133F0103814A131FA2
49B67EA24981A290271F8000077F91C77EA24982013E80017E82017C80A201FC8249157F
B500F0013FB512F0A43C347DB343>65 D<B812FCA4C69038E0001FEE03FE16011600177E
173EA2171EA3923803C01F170FA403071300A2150F153F91B5FCA4ECE03F150F1507A215
03A592C8FCABB612F8A430337DB238>70 D<EB7FFE0003B512E04814F8390FF00FFC391F
F803FF806E138016C0157F6C5A6C5AEA0180C8FCEC7FFF010FB5FC90B6FC0003EBF07F00
0F1300EA1FF8485A485A485A5BA315FF7F007F5B6D4813E03A3FF80FBFFF000FB5121F00
03EBFC0F39007FE00728217EA02B>97 D<EA01FC12FFA4120F1207ADEC07FC91387FFF80
01FDB512E09039FFF00FF89138C007FC91380003FE496D7E496D1380A217C0167FA217E0
A917C0A216FF1780A26D4913006D495A9138C007FC9039F3F01FF801E1B512E0D9C07F13
809026800FF8C7FC2B347EB331>I<903807FF80013F13F090B512FC3903FE01FE484848
7EEA0FF8EA1FF0EA3FE0A2007F6D5A496C5A153000FF91C7FCA9127F7FA2003FEC07807F
6C6C130F000FEC1F00D807FE133E3903FF80FCC6EBFFF8013F13E0010790C7FC21217DA0
27>I<16F890390FFC07FE90387FFF9F48B6127F3907FC0FFC380FF003001F14FED9E001
133E003FECFF1C1600A6001F5CEBF003000F5C3907FC0FF890B512E0486C1380D90FFCC7
FC48C9FCA37F7F90B512F015FE6CECFF8016E06C15F06C15F84815FC121F393F80001F48
C7EA03FE481401481400A46C14016C6CEB03FC6C6CEB07F86C6CEB0FF0D80FFCEB7FE000
03B61280C6ECFE00010F13E028327EA12C>103 D<EA03F0487E487E487EA66C5A6C5A6C
5AC8FCA8EA01FC12FFA4120F1207B3A5B512C0A412357DB418>105
D<3901F81F8000FFEB7FF0ECFFF89038F9E3FC9038FBC7FE380FFF876C1307A213FEEC03
FCEC01F8EC0060491300B1B512F0A41F217EA024>114 D<9038FFE1C0000713FF5A383F
803F387E000F14075A14037EA26C6CC7FC13FCEBFFE06C13FC806CEBFF80000F14C06C14
E0C6FC010F13F0EB007F140F00F0130714037EA26C14E06C13076CEB0FC09038C01F8090
B5120000F913FC38E03FE01C217DA023>I<133CA5137CA313FCA21201A212031207001F
B51280B6FCA3D807FCC7FCB0EC03C0A79038FE078012033901FF0F006C13FEEB3FFCEB0F
F01A2F7EAE22>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ft cmr9 9 78
/Ft 78 128 df<91393FE00FE0903A01FFF83FF8903A07E01EF83C903A1F800FF07E903A
3F001FE0FE017E133F4914C0485A1738484890381F8000ACB812C0A33B03F0001F8000B3
A7486C497EB50083B5FCA32F357FB42D>11 D<EC1FE0ECFFFC903803F01E90390FC00780
EB1F8090393F000FC0017E131F5BA2485AED0F8092C7FCA9ED0FC0B7FCA33901F8001F15
0FB3A6486CEB1FE0267FFFC1B5FCA328357FB42B>I<EC1FF891B512C0903803F00F9038
0FC01FEB1F80EB3F00137E5B150F485AACB7FCA33901F8000FB3A7486CEB1FE0267FFFE3
B5FCA328357FB42B>I<15065D151C15181538903807F03090383FFE609038F80FE03901
E003C048486C7ED807807F390F00037848147C001EEB063C003EEB0E3E140C48497EA214
3000FC01701380146014E014C0EB0180130314005BD87C0614005B007E5CD83E18133E13
38D81F305B5BD80FE05B6C48485A6C6C485A3901F80F802603BFFEC7FCEB07F00006C9FC
120E120C121C12185A212E7EA626>28 D<017C1503D803FEED078026078780140F260F01
C0141F261E00E0EC3F00003E01F8147E003C017CEB01FE007C90397F8007FC913933FFFE
F800789038307FF900F89039380001F00218495A16075F4C5A161F4CC7FC163E5E023813
FC007801305B007C4A5AEC7003003C01605B003E9038E007C0001EEBC00FD80F015C2707
87801FC8FC3903FE003FD8007C133E90C748131F03FCEBFF809239F801E1E0913A01F003
C07002039038078030DBE00F1338DA07C0EB0018020F49131C0380140C91381F001E4A01
3E130E023E15065C14FC495A5C495A13075C4948150E011F021E130C91C7121F013E161C
017E6E1318017CED803849020713300001923803C07049913801E1E049913800FF806C48
ED1F00373C7CB740>37 D<123C127EB4FCA21380A2127F123D1201A412031300A25A1206
120E120C121C5A5A126009177AB315>39 D<14C01301EB0380EB0F00130E5B133C5B5BA2
485A485AA212075B120F90C7FC5AA2121E123EA3123C127CA55AB0127CA5123C123EA312
1E121FA27E7F12077F1203A26C7E6C7EA213787F131C7F130FEB0380EB01C01300124A79
B71E>I<12C07E1270123C121C7E120F6C7E6C7EA26C7E6C7EA27F1378137C133C133EA2
131E131FA37F1480A5EB07C0B0EB0F80A514005BA3131E133EA2133C137C137813F85BA2
485A485AA2485A48C7FC120E5A123C12705A5A124A7CB71E>I<156015F0B3A4007FB812
C0B912E0A26C17C0C800F0C8FCB3A4156033327CAB3C>43 D<123C127EB4FCA21380A212
7F123D1201A412031300A25A1206120E120C121C5A5A126009177A8715>I<B512F0A514
057F921A>I<123C127E12FFA4127E123C08087A8715>I<EB0FE0EB7FFCEBF83E3903E00F
803907C007C0EB8003000F14E0391F0001F0A24814F8A2003E1300007E14FCA500FE14FE
B2007E14FCA56CEB01F8A36C14F0A2390F8003E03907C007C0A23903E00F803900F83E00
EB7FFCEB0FE01F347DB126>48 D<13075B5B137FEA07FFB5FC13BFEAF83F1200B3B3A249
7E007FB51280A319327AB126>I<EB3FC0EBFFF0000313FC380F80FF391E007F80001CEB
3FC048EB1FE048130F15F00060130712FC6C14F87E1403A3007E1307123CC7FC15F0A214
0F15E0EC1FC0A2EC3F801500147E5C495A5C495A495A495A49C7FC133E133C4913185B48
5A48481330485A48C7FC001C1470001FB512F05A5AB612E0A31D327CB126>I<EB1FE0EB
FFFC4813FF3907E03F80390F001FC0001EEB0FE0001CEB07F0123F018013F8140313C013
80A2381F0007C7FC15F0A2EC0FE015C0141FEC3F80EC7E00EB01F8EB7FE014FCEB003FEC
1FC0EC0FE0EC07F015F8140315FC140115FEA3127EB4FCA415FC48130312780070EB07F8
6C14F0003C130F001FEB1FE0390FE03F800003B51200C613FCEB1FE01F347DB126>I<EC
01C0A214031407A2140F141FA2143F147F146F14CF1301EB038F140F1307130E130C131C
13381330137013E013C0EA0180120313001206120E120C5A123812305A12E0B71280A3C7
380FC000A94A7E0107B51280A321337EB226>I<000C14C0380FC00F90B5128015005C5C
14F014C0D80C18C7FC90C8FCA9EB0FC0EB7FF8EBF07C380FC03F9038001F80EC0FC0120E
000CEB07E0A2C713F01403A215F8A41218127E12FEA315F0140712F8006014E01270EC0F
C06C131F003C14806CEB7F00380F80FE3807FFF8000113E038003F801D347CB126>I<14
FE903807FF80011F13E090383F00F0017C13703901F801F8EBF003EA03E01207EA0FC0EC
01F04848C7FCA248C8FCA35A127EEB07F0EB1FFC38FE381F9038700F809038E007C039FF
C003E0018013F0EC01F8130015FC1400A24814FEA5127EA4127F6C14FCA26C1301018013
F8000F14F0EBC0030007EB07E03903E00FC03901F81F806CB51200EB3FFCEB0FE01F347D
B126>I<1230123C003FB6FCA34814FEA215FC0070C7123800601430157015E04814C014
01EC0380C7EA07001406140E5C141814385CA25CA2495A1303A3495AA2130FA3131F91C7
FCA25BA55BA9131C20347CB126>I<EB0FE0EB7FFC90B5FC3903F01F803907C007C0390F
0003E0000EEB01F0001E1300001C14F8003C1478A3123EA2003F14F86D13F0EBC001D81F
F013E09038F803C0390FFE07803907FF0F006C13DE6C13F87EEB3FFE8001F713C0D803E3
13E0D8078013F0390F007FF8001E131F003EEB07FC003C1303481301EC007E12F848143E
A2151EA37E153C1278007C14787E6C14F0390F8003E03907F01FC00001B5120038007FFC
EB1FE01F347DB126>I<EB0FE0EB7FF8EBFFFE3803F83F3907E00F80390FC007C0D81F80
13E0EC03F0EA3F0048EB01F8127EA200FE14FC1400A415FEA5007E1301A2127F7E1403EA
1F80000F13073807C00E3803E01C3801F03838007FF090381FC0FC90C7FC1401A215F8A2
15F01403001F14E0383F800715C0140FEC1F809038003F00001C137E381F01FC380FFFF0
000313C0C690C7FC1F347DB126>I<123C127E12FFA4127E123C1200B0123C127E12FFA4
127E123C08207A9F15>I<123C127E12FFA4127E123C1200B0123C127E12FE12FFA3127F
123F1203A412071206A3120E120C121C1238123012701260082F7A9F15>I<007FB812C0
B912E0A26C17C0CCFCAC007FB812C0B912E0A26C17C033147C9C3C>61
D<15E0A34A7EA24A7EA34A7EA3EC0DFE140CA2EC187FA34A6C7EA202707FEC601FA202E0
7FECC00FA2D901807F1507A249486C7EA301066D7EA2010E80010FB5FCA249800118C77E
A24981163FA2496E7EA3496E7EA20001821607487ED81FF04A7ED8FFFE49B512E0A33336
7DB53A>65 D<B7FC16E016F83A03FC0003FE0001EC00FFEE7F80EE3FC0161F17E0160F17
F0A617E0161F17C0EE3F80EE7F0016FEED03FC90B612F05E9039FC0007FCED00FEEE3F80
EE1FC0EE0FE017F0160717F8160317FCA617F81607A2EE0FF0EE1FE0163FEE7FC0000391
3803FF00B75A16F816C02E337DB236>I<DA03FE130C91393FFF801C91B512E0903A03FE
01F83C903A0FF0003C7CD91FC0EB0EFCD97F80130701FEC7120348481401000315005B48
48157C485A173C485A171C123F5B007F160CA390C9FC481600AB7E6D150CA3123F7F001F
161C17186C7E17386C6C15306C6C15706D15E012016C6CEC01C0D97F80EB0380D91FC0EB
0F00D90FF0131ED903FE13FC0100B512F0023F13C0DA03FEC7FC2E377CB437>I<B77E16
F016FE3A01FE0001FF00009138003FC0EE0FE0707E707E707E707E177E177FEF3F80A2EF
1FC0A3EF0FE0A418F0AA18E0A3171F18C0A21880173F18005F17FE5F4C5AEE07F04C5AEE
3FC000014AB45AB748C7FC16F8168034337EB23B>I<B812C0A3D803FCC7127F0001150F
EE03E01601A21600A21760A403061330A41700150EA2151E157E90B512FEA39038FC007E
151E150EA21506170CA3171892C7FCA41738A21770A217F01601160316070003157FB812
E0A32E337DB234>I<B81280A3D803FCC7FC0001151FEE07C01603A21601A21600A41760
150CA31700A2151CA2153C15FC90B5FCA3EBFC00153C151CA2150CA592C8FCAB487EB512
FEA32B337DB232>I<DA03FE130C91393FFF801C91B512E0903A03FE01F83C903A0FF000
3C7CD91FC0EB0EFCD97F80130701FEC7120348481401000315005B4848157C485A173C48
5A171C123F5B007F160CA390C9FC4893C7FCAA0303B512E07E7F92390003FE00705A123F
7F121FA26C7E7F12076C7E7F6C6C14036C7E6D6C1307D91FC0EB0E7CD90FF0EB1C3CD903
FEEBF81C0100B5EAF00C023F01C0C7FCDA03FEC8FC33377CB43C>I<B5D8FE03B512F8A3
000190C73807FC006C486E5AB390B7FCA349C71203B3A3486C4A7EB5D8FE03B512F8A335
337EB23A>I<B512FEA3000113006C5AB3B3A7487EB512FEA317337EB21C>I<017FB5FCA3
9038003FE0EC1FC0B3B1127EB4FCA4EC3F805A0060140000705B6C13FE6C485A380F03F0
3803FFC0C690C7FC20357DB227>I<B500FE903807FFF8A3000190C7000113006C48EC00
FC17F04C5A4C5A4CC7FC160E5E5E5E5E4B5A4B5A4BC8FC150E5D5D15F84A7E14034A7EEC
0EFF5C4A6C7E4A6C7EECE01FD9FFC07F4A6C7E4A6C7E5B6F7E6F7EA26F7E707EA2707E70
7E160F83707E707EA283486C913807FF80B500FE013F13FCA336337EB23C>I<B512FEA3
D803FEC9FC6C5AB3A9EE0180A416031700A45EA25E5E5E5E16FE00031407B7FCA329337D
B230>I<D8FFFC923801FFF86D5DA20003EFFE00D801BFED06FCA3D99F80140CA2D98FC0
1418A3D987E01430A2D983F01460A3D981F814C0A3D980FCEB0180A2027EEB0300A36E13
06A26E6C5AA36E6C5AA36E6C5AA26E6C5AA36E6C5AA3913800FD80A2037FC7FCA3486C13
3ED80FF04B7EB5011C90387FFFF8A33D337CB246>I<D8FFFE91381FFFF87F80C6030013
006E143CD9DFE01418EBCFF0A2EBC7F8EBC3FCA2EBC1FEEBC0FF6E7EA26E7E6E7EA26E7E
6E7E6E7EA26E7E6E7EA2ED7F80ED3FC0ED1FE0A2ED0FF0ED07F8A2ED03FCED01FEED00FF
A2EE7F98EE3FD8A2EE1FF8160F1607A216031601A2486C1400D807F81578B500C01438A2
171835337EB23A>I<EC07FC91387FFFC0903901FC07F0903907E000FCD90F80133E013F
C76C7E017E6E7E496E7E48486E7E48486E7EA248486E7E000F8249157E001F167FA24848
ED3F80A2007F17C0A290C9121FA24817E0AB6C17C06D153FA3003F17806D157FA2001F17
006D5D000F5E6C6C4A5AA26C6C4A5A00015E6C6C4A5A017E4A5A6D4A5AD91FC0017FC7FC
D907E013FC903901FC07F09039007FFFC0DA07FCC8FC33377CB43C>I<B612FEEDFFC016
F03A03FC0007FC0001EC00FE167FEE3F80EE1FC017E0160FA217F0A617E0A2EE1FC0A2EE
3F80EE7F0016FEED07F890B65A168001FCC9FCB3A2487EB512F8A32C337DB234>I<B612
FCEDFF8016F03A01FE0007FC0000EC01FEED007F707E707E83160F83A65FA24C5AA24C5A
047EC7FC4B5AED0FF090B612C093C8FC9039FE001FC0ED07F06F7E6F7E150082167E167F
A583A5180C17C0A2043F131C486C1618B500FEEB1FE0040F1338933807F070C93801FFE0
9338003F8036357EB239>82 D<90381FE00390387FFC0748B5FC3907F01FCF390F8003FF
48C7FC003E80814880A200788000F880A46C80A27E92C7FC127F13C0EA3FF013FF6C13F0
6C13FF6C14C06C14F0C680013F7F01037F9038003FFF140302001380157F153FED1FC015
0F12C0A21507A37EA26CEC0F80A26C15006C5C6C143E6C147E01C05B39F1FC03F800E0B5
12E0011F138026C003FEC7FC22377CB42B>I<007FB712FEA390398007F001D87C00EC00
3E0078161E0070160EA20060160600E01607A3481603A6C71500B3AB4A7E011FB512FCA3
30337DB237>I<B500FE90381FFFF8A3000190C813006C48153C1718B3AF1738017F1530
A217706D6C1460011F15E06E495A010F14036D6C495A6D6C49C7FCD901FC131E6DB413FC
91383FFFF0020F13C0020190C8FC35357EB23A>I<B500F0903803FFF8A3D807FEC8EA7F
C06C48ED1F000001161E6D151C00001618A26D15386D1530A26D6C5CA26E14E0011F5DA2
6D6C495AA28001074AC7FCA26D6C1306A28001015CA26E131C01001418806E5BA2ED8070
023F1360A26E6C5AA215E1020F5BA2DA07F3C8FCA215FBEC03FEA36E5AA26E5AA31570A2
35357EB23A>I<B5D8F007B539800FFFF0A3000390C7273FF000011300D801FC6E48EB00
7C1A386D140F00001930836D020715706D1860A26E496C14E0013F60A26ED919FC130101
1F60A26ED930FE1303010F95C7FCA26ED9607F5B01071706A26E9039C03F800E0103170C
A2913BFC01801FC01C01011718A2913BFE03000FE03801001730A2DAFF06EB07F0027F5E
A2038CEB03F8023F5EA203D8EB01FC021FEDFD80A203F0EB00FF020F93C8FCA24B800207
157EA24B143E0203153CA24B141C020115184C357FB24F>I<267FFFFC90B512C0A30001
01E090381FF80026007F80EB0FC0013F6E5A6E91C7FC6D6C130E010F140C6E5B6D6C1338
01035C6E13606D6C13E06D6C485A5EDA7F83C8FCEC3FC715C6EC1FECEC0FFC5D14076E7E
A26E7E815C6F7E9138063FC0140E4A6C7E9138180FF0EC380702707F91386003FCECC001
0101804A6C7E49C77E4981010E6E7E010C6E7E131C496E7E01786E7E13FCD807FEEC1FFE
B56C90B512F8A335337EB23A>I<B500F8ECFFFEA300030180EC3FE06C90C8EA1F806CEE
0E006D6C5C6D6C141817386D6C14305F6D6C14E06D6C5C16016D6C5C6D6C49C7FC5E6D6C
13065E91387F801C91383FC018163891381FE0306E6C5A16E06E6C5AEDF980EC03FF6E90
C8FC5D1400B14A7E91B512FCA337337FB23A>I<EAFFF0A4EAF000B3B3B3ADEAFFF0A40C
4B79B715>91 D<EAFFF0A41200B3B3B3AD12FFA40C4B7FB715>93
D<EB7F803803FFF0380F80FC381C003E003F133F6D6C7E6E7EA26E7EEA1F00C7FCA4EB01
FF131FEBFF873803FC07EA0FF0EA1FC0EA3F80127F13004815C05AA3140FA26C131F6C13
3B3A3F8071F180391FC1E1FF2607FFC013003900FE003C22237DA126>97
D<EA03F012FFA312071203AEEC3F80ECFFE09038F3C0F89038F7007E01FE7F49EB1F8049
EB0FC05BED07E016F0A2150316F8AA16F0150716E0A2ED0FC07F6DEB1F8001ECEB3F0001
CF137C90388381F8903801FFE0C76CC7FC25357EB32B>I<EB07F8EB3FFF9038FC07C039
01F000E03903E003F03807C007120FEA1F80123F90380003E04890C7FCA2127E12FEAA12
7FA26C14187F001F14386D1330000F14706C6C13E03903F001C03900FC0F8090383FFE00
EB07F01D237EA122>I<153FEC0FFFA3EC007F81AEEB07F0EB3FFCEBFC0F3901F003BF39
07E001FF48487E48487F8148C7FCA25A127E12FEAA127E127FA27E6C6C5BA26C6C5B6C6C
4813803A03F007BFFC3900F81E3FEB3FFCD90FE0130026357DB32B>I<EB0FE0EB7FFCEB
F83F3903F00F80D807E013C0390FC007E0381F800315F0EA3F0014014814F8127EA212FE
A2B6FCA248C8FCA5127E127FA26C1418A26C6C1338000F14306D13706C6C13E03901F003
C03900FC0F00EB3FFEEB07F01D237EA122>I<EB01FCEB07FF90381F078090383E0FC0EB
7C1F13FCEA01F8A20003EB070049C7FCACB512F0A3D803F0C7FCB3A7487E387FFFE0A31A
357FB417>I<151F90391FC07F809039FFF8E3C03901F07FC73907E03F033A0FC01F8380
9039800F8000001F80EB00074880A66C5CEB800F000F5CEBC01F6C6C48C7FCEBF07C380E
FFF8380C1FC0001CC9FCA3121EA2121F380FFFFEECFFC06C14F06C14FC4880381F000100
3EEB007F4880ED1F8048140FA56C141F007C15006C143E6C5C390FC001F83903F007E0C6
B51280D91FFCC7FC22337EA126>I<EA03F012FFA312071203AEEC1FC0EC7FF09038F1E0
FC9038F3807C9038F7007E13FE497FA25BA25BB3486CEB7F80B538C7FFFCA326347EB32B
>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCAAEA07E012FFA3120F1207B3A6EA0FF0
B5FCA310337EB215>I<EB03C0EB07E0EB0FF0A4EB07E0EB03C090C7FCAAEB03F013FFA3
13071303B3B01238127C00FE13E0130714C0130F007C138038381F00EA1FFCEA07F01443
84B217>I<EA03F012FFA312071203AF913803FFE0A36E1300EC00F8EC01E05D4A5A020F
C7FC141C5C5C14F0EBF3F8EBF7FC13FEEBFC7EEBF87F496C7E141F6E7E8114076E7E8114
016E7E81486CEBFF80B500C313F0A324347EB329>I<EA07E012FFA3120F1207B3B3A7EA
0FF0B5FCA310347EB315>I<2703F01FE013FF00FF90267FF80313C0903BF1E07C0F03E0
903BF3803E1C01F02807F7003F387FD803FE1470496D486C7EA2495CA2495CB3486C496C
487EB53BC7FFFE3FFFF0A33C217EA041>I<3903F01FC000FFEB7FF09038F1E0FC9038F3
807C3907F7007EEA03FE497FA25BA25BB3486CEB7F80B538C7FFFCA326217EA02B>I<EB
07F0EB3FFE9038FC1F803901F007C03903C001E000078048486C7E48C7127CA248147E00
3E143E007E143FA300FE1580A8007E1500A36C147EA26C147C6D13FC6C6C485A00075C39
03F007E03900FC1F80D93FFEC7FCEB07F021237EA126>I<3903F03F8000FFEBFFE09038
F3C0F89038F7007ED807FE7F6C48EB1F804914C049130F16E0ED07F0A3ED03F8A9150716
F0A216E0150F16C06D131F6DEB3F80160001FF13FC9038F381F89038F1FFE0D9F07FC7FC
91C8FCAA487EB512C0A325307EA02B>I<903807F00390383FFC07EBFC0F3901F8038F38
07E001000F14DF48486CB4FC497F123F90C77E5AA25A5AA9127FA36C6C5B121F6D5B000F
5B3907E003BF3903F0073F3800F81EEB3FF8EB0FE090C7FCAAED7F8091380FFFFCA32630
7DA029>I<3803E07C38FFE1FF9038E38F809038E71FC0EA07EEEA03ECA29038FC0F8049
C7FCA35BB2487EB512E0A31A217FA01E>I<EBFF06000713CE381F00FE003C133E48131E
140E5A1406A27EA200FE90C7FC6C7EEA7FFC383FFFC014F0000F7F6C7FC67FEB0FFF1300
EC3F8000C0131F140F6C1307A37E15006C5B6C130E6C5B38F7807838E1FFE038C07F8019
237EA11E>I<1330A51370A313F0A21201A212031207381FFFFEB5FCA23803F000AF1403
A814073801F806A23800FC0EEB7E1CEB1FF8EB07E0182F7FAD1E>I<D803F0133F00FFEB
0FFFA30007EB007F000380B35DA35D12016D4813800000903803BFFC90387E073FEB1FFE
D907F8130026227EA02B>I<B5EBFFF0A3D80FF0EB3F800007EC1F000003140E150C6D13
1C00011418A26C6C5BA26D1370017E1360137F6D5BA290381F8180A214C3010F90C7FCA2
EB07E6A214FE6D5AA26D5AA36D5AA2146024217E9F29>I<B53A1FFF81FFF0A33C07F801
FC003F8001F049EB1E0000030100141C816C6C017C1318A26D017E1338000002FE1330A2
90267E01FF5B159F168090263F030F5BA216C0903A1F8607C180A202C613E390260FCC03
90C7FCA2D907FC13F6ECF80116FE6D486C5AA36D481378A36D48133034217F9F37>I<B5
3801FFF8A32603FE0013806C48EB7C0000001478017E1370017F5B90383F81C090381F83
80D90FC3C7FCEB07E614FE6D5A6D5A6D7E80805B9038039F809038071FC09038060FE0EB
0C0790381C03F0496C7E01707FEBF000000180000FECFF8026FFFC0313FCA326207F9F29
>I<3A7FFF807FF8A33A07F8001FC00003EC0F800001EC070015066C6C5BA26D131C017E
1318A26D5BA2EC8070011F1360ECC0E0010F5BA2903807E180A214F3010390C7FC14FBEB
01FEA26D5AA31478A21430A25CA214E05CA2495A1278D8FC03C8FCA21306130EEA701CEA
7838EA1FF0EA0FC025307F9F29>I<003FB512F0A2EB000F003C14E00038EB1FC00030EB
3F800070137F1500006013FE495A13035CC6485A495AA2495A495A49C7FC153013FE485A
12035B48481370485A001F14604913E0485A387F000348130F90B5FCA21C207E9F22>I<
001C1370387F01FC00FF13FEA4007F13FC381C0070170879B226>127
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fu cmr6 6 3
/Fu 3 51 df<13FF000313C0380781E0380F00F0001E137848133CA248131EA400F8131F
AD0078131EA2007C133E003C133CA26C13786C13F0380781E03803FFC0C6130018227DA0
1E>48 D<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>I<EA01FC3807
FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C1278003013FCC7FC14F8A2
EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA0380380600185A5A383FFF
F85AB512F0A216217CA01E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fv cmr7 7 10
/Fv 10 83 df<140EB3A2B812E0A3C7000EC8FCB3A22B2B7DA333>43
D<EB3F803801FFF03803E0F83807803C48487E001E7F003E1480A2003C1307007C14C0A4
00FC14E0AE007C14C0A36CEB0F80A36CEB1F006C131E6C6C5A3803E0F86CB45A38003F80
1B277EA521>48 D<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521
>I<13FF000313E0380E03F0381800F848137C48137E00787F12FC6CEB1F80A4127CC7FC
15005C143E147E147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA0180390300
030012065A001FB5FC5A485BB5FCA219267DA521>I<13FF000313E0380F01F8381C007C
0030137E003C133E007E133FA4123CC7123E147E147C5C495AEB07E03801FF8091C7FC38
0001E06D7E147C80143F801580A21238127C12FEA21500485B0078133E00705B6C5B381F
01F03807FFC0C690C7FC19277DA521>I<0018130C001F137CEBFFF85C5C1480D819FCC7
FC0018C8FCA7137F3819FFE0381F81F0381E0078001C7F0018133EC7FC80A21580A21230
127C12FCA3150012F00060133E127000305B001C5B380F03E03803FFC0C648C7FC19277D
A521>53 D<EB0FE0EB3FF8EBF81C3801E0063803C01F48485AEA0F005A121E003E131E91
C7FC5AA21304EB3FC038FCFFF038FDC078EB003CB4133E48131E141FA2481480A4127CA4
003C1400123E001E131E143E6C133C6C6C5A3803C1F03801FFC06C6CC7FC19277DA521>
I<137F3803FFE0380781F8380E007C48131E5A801278A3127C007E131EEA3F80EBE03C6C
6C5A380FFCF03807FFC06C5BC613E0487F38079FFC380F07FEEA1E0348C67E48133FEC1F
8048130FA21407A315001278140E6C5B6C5B380F80F03803FFE0C66CC7FC19277DA521>
56 D<137F3801FFC03807C1E0380F0070001E1378003E7F003C133E007C131EA200FC13
1FA41580A4007C133FA2123C003E137F001E135F380F01DF3807FF9F3801FE1FD8001013
001300A2143E123C007E133CA25C5C007C5B383003C0381C0780D80FFFC7FCEA03F81927
7DA521>I<B67E15F03907F000FC0003143FED0F806F7E82150382A55E15075E4B5A033F
C7FC15FC90B512F0A29038F001FCEC007F6F7E151F82150FA71730A3923807E070486C15
60B539C003F0E0923800FFC0C9EA3F002C297EA730>82 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fw cmr10 10 84
/Fw 84 124 df<DA0FF813FC91397FFF07FF903B01F807DF83C0903A07E001FF0F903B1F
8007FE1FE090393F000FFC137E16F85B9338F007804848010790C7FC1503ACB812F8A328
01F80003F0C7FCB3AB486C497E267FFFE0B512F0A3333B7FBA30>11
D<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007017E497EA25B
A2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C497E267FFFE0B5
12C0A32A3B7FBA2E>I<EC0FFC91387FFF70903901F803F0903807E00790381F800FEB3F
00137EA25B150748481303ADB7FCA33901F80003B3AB486C497E267FFFE0B512C0A32A3B
7FBA2E>I<DA0FF0EB1FF0DA7FFEEBFFFC903B01F80F83F00F903C07E001CFC00380903C
1F8000FF0001C090273F0007FE130F017E4948497EA2495CA248485C03076E5A03030203
C7FC95C8FCA9F007E0BAFCA33C01F80003F0001F1807B3AA486C496C497E267FFFE0B500
C1B51280A3413B7FBA45>I<ED0180ED03005D1506150E150C903803F81C90381FFF1890
387C07F0EBF0013903E000F85B48487F390F0001DE48149F001EEB038F003EEC0F801406
007E15C0007CEB0C07141C00FC011813E0143814301460A214C0A2EB018013031400D87C
0714C01306D87E0C130F003E15805BD81F38EB1F00D80F30131E01F0133E6C485B00035C
6C6C485A9038FC07C0D99FFFC7FC380307FC48C9FC1206120E120C121C12185A23347DAB
2A>28 D<001C131C007F137F39FF80FF80A26D13C0A3007F137F001C131C00001300A400
01130101801380A20003130301001300485B00061306000E130E485B485B485B00601360
1A197DB92A>34 D<017C166048B416F02607C3801401260F81C01403D900E04A5A001E01
784A5A003E6D141F003C013FEC7F80007C90271BE003FFC7FC0218B512BF007891381FFC
3E00F8011CC75A020C14FC5F4C5A16035F4C5A160F5F4CC8FC021C5B00780118133E007C
5D16FC003C01385B003E90383001F0001EEB70036C01E05B903981C007C03907C3800F26
01FF005BD8007C49C9FC90C748EB07C0033EEB1FF04BEB3C3803FCEBF81C4B497E913A01
F001E00602030103130703E0497E912607C0071480020F15011580DA1F00018013C04A01
0F1300143E5C14FC5C495A13035C495A130F4A0107130149C701C013805B013E16034902
03140001FC6F5A49020113064848913800F00E0003705A49ED3C3849ED1FF06C48ED07C0
3A437BBD45>37 D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A
1206120E5A5A5A12600A1979B917>39 D<146014E0EB01C0EB0380EB0700130E131E5B5B
A25B485AA2485AA212075B120F90C7FCA25A121EA2123EA35AA65AB2127CA67EA3121EA2
121F7EA27F12077F1203A26C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00E0146013
5278BD20>I<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C133E13
1EA2131F7FA21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E133C
137C1378A25BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<15301578B3
A6007FB812F8B912FCA26C17F8C80078C8FCB3A6153036367BAF41>43
D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A
12600A19798817>I<B512FCA516057F941C>I<121C127FEAFF80A5EA7F00121C09097988
17>I<150C151E153EA2153C157CA2157815F8A215F01401A215E01403A215C01407A215
80140FA215005CA2141E143EA2143C147CA2147814F8A25C1301A25C1303A2495AA25C13
0FA291C7FC5BA2131E133EA2133C137CA2137813F8A25B1201A25B1203A25B1207A25B12
0FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A12601F537BBD2A>I<EB03F8EB
1FFF90387E0FC09038F803E03901E000F0484813780007147C48487FA248C77EA2481580
A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C1580A36C15006D5B000F143EA26C
6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB03F8233A7DB72A>I<EB01C0
13031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A31C3879B72A>I<EB0FF0
EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E486D7E123000706D7E126012FC
B4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D140F4A5A4A5A92C7FC14
7C5C495A495A495A495A91C8FC011EEB01805B5B49130348481400485A485A000EC75A00
0FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF4913C03901F80FF03903C007F8
48486C7E380E0001000F80381FE0006D7FA56C5A6C5AC85A1401A25D4A5AA24A5A5DEC0F
80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E7EED7F80A216C0A2153F16E0A2
121EEA7F80487EA416C049137F007F1580007EC7FC0070ECFF006C495A121E390F8003F8
3907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A>I<1538A2157815F8A2140114
031407A2140F141F141B14331473146314C313011483EB030313071306130C131C131813
301370136013C01201EA038013005A120E120C5A123812305A12E0B712F8A3C73803F800
AB4A7E0103B512F8A325397EB82A>I<0006140CD80780133C9038F003F890B5FC5D5D15
8092C7FC14FC38067FE090C9FCABEB07F8EB3FFE9038780F803907E007E090388003F049
6C7E12066E7EC87EA28181A21680A4123E127F487EA490C71300485C12E000605C127000
30495A00385C6C1303001E495A6C6C485A3907E03F800001B5C7FC38007FFCEB1FE0213A
7CB72A>I<EC3FC0903801FFF0010713FC90380FE03E90383F800790387E001F49EB3F80
4848137F485AA2485A000FEC3F0049131E001F91C7FCA2485AA3127F90C9FCEB01FC9038
07FF8039FF1E07E090383801F0496C7E01607F01E0137E497FA249148016C0151FA290C7
13E0A57EA56C7E16C0A2121FED3F807F000F15006C6C5B15FE6C6C5B6C6C485A3900FE07
F090383FFFC06D90C7FCEB03FC233A7DB72A>I<12301238123E003FB612E0A316C05A16
8016000070C712060060140E5D151800E01438485C5D5DC712014A5A92C7FC5C140E140C
141C5CA25CA214F0495AA21303A25C1307A2130FA3495AA3133FA5137FA96DC8FC131E23
3B7BB82A>I<EB03F8EB1FFF017F13C09038FC07F03901E001F848486C7E4848137C90C7
7E48141E000E141F001E80A3121FA27F5D01E0131E6C6C133E01FC133C6D5B6C6C6C5AEC
C1E06CEBF3C06C01FFC7FC6C5BEB3FFF6D13C081017F13F801F07F3903E07FFE3907801F
FF48486C1380481303003E6D13C0003CEB007F007C143F0078EC0FE000F814075A1503A2
1501A36C15C012781503007C15806CEC07006C5C6C6C131ED807E0137C3903F803F0C6B5
5A013F1380D907FCC7FC233A7DB72A>I<EB03F8EB1FFF017F13C09038FC07E03903F803
F048486C7E48486C7E49137E121F48487FA2007F158090C7FCA248EC1FC0A616E0A56C14
3FA27F123F001F147FA26C6C13FF3907E001DF0003149F3801F0033900FC0F1FD93FFC13
C0EB07F090C7FC153F1680A316005D000F147E487E486C5BA24A5A4A5A49485A6C48485A
001C495A260F807FC7FC3807FFFC000113F038003FC0233A7DB72A>I<121C127FEAFF80
A5EA7F00121CC7FCB2121C127FEAFF80A5EA7F00121C092479A317>I<121C127FEAFF80
A5EA7F00121CC7FCB2121C127F5A1380A4127F121D1201A412031300A25A1206A2120E5A
121812385A1260093479A317>I<007FB812F8B912FCA26C17F8CCFCAE007FB812F8B912
FCA26C17F836167B9F41>61 D<EB3FE03801FFFE3907C03F80390E000FC0003CEB07F000
301303007014F8007C130100FE14FC7EA4127E003CEB03F8C7FCEC07F0A2EC0FE0EC1F80
EC3F00147E147C5C495A5C495A5CA249C7FCA31306AA90C8FCA8130EEB3F80497EA56D5A
010EC7FC1E3B7CBA27>63 D<1538A3157CA315FEA34A7EA34A6C7EA202077FEC063FA202
0E7FEC0C1FA2021C7FEC180FA202387FEC3007A202707FEC6003A202C07F1501A2D90180
7F81A249C77F167FA20106810107B6FCA24981010CC7121FA2496E7EA3496E7EA3496E7E
A213E0707E1201486C81D80FFC02071380B56C90B512FEA3373C7DBB3E>65
D<B712E016FC16FF0001903980007FC06C90C7EA1FE0707E707E707EA2707EA283A75F16
035F4C5A4C5A4C5A4C5AEEFF8091B500FCC7FCA291C7EA7F80EE1FE0EE07F0707E707E83
707EA21880177F18C0A7188017FFA24C13005F16034C5AEE1FF8486DEB7FF0B812C094C7
FC16F832397DB83B>I<913A01FF800180020FEBE003027F13F8903A01FF807E07903A03
FC000F0FD90FF0EB039F4948EB01DFD93F80EB00FF49C8127F01FE153F12014848151F48
48150FA248481507A2485A1703123F5B007F1601A35B00FF93C7FCAD127F6DED0180A312
3F7F001F160318006C7E5F6C7E17066C6C150E6C6C5D00001618017F15386D6C5CD91FE0
5C6D6CEB03C0D903FCEB0F80902701FF803FC7FC9039007FFFFC020F13F002011380313D
7BBA3C>I<B712C016F816FE000190398001FF806C90C7EA3FE0EE0FF0EE03F8707E707E
177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4EF0FF0A218E0A2171F
18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8C7FC16F816C036397D
B83F>I<B812FCA30001903880000F6C90C71201EE007E173E171E170EA31706A3170783
16C0A394C7FCA31501A21503150F91B5FCA3EC000F15031501A21500A21860A318E093C7
12C0A41701A3EF0380A21707A2170F173F177F486D903807FF00B9FCA333397DB839>I<
B812F8A30001903880001F6C90C71201EE00FC177C173C171CA2170CA4170E1706A2ED01
80A21700A41503A21507151F91B5FCA3EC001F15071503A21501A692C8FCAD4813C0B612
C0A32F397DB836>I<DBFF8013C0020FEBF001023F13FC9139FF803F03903A03FC000787
D90FF0EB03CF4948EB00EF4948147F4948143F49C8121F485A4848150F48481507A24848
1503A2485A1701123F5B007F1600A448481600AB93B6FCA26C7E9338007FE0EF3FC0A212
3F7F121FA26C7EA26C7EA26C7E6C7E6C6C157F6D7E6D6C14FF6D6C14EFD90FF8EB03C7D9
03FEEB0783903A00FFC03F0191393FFFFC00020F01F0130002001380383D7CBA41>I<B6
48B512FEA30001902680000313006C90C76C5AB3A491B6FCA391C71201B3A6486D497EB6
48B512FEA337397DB83E>I<B612C0A3C6EBC0006D5AB3B3AD497EB612C0A31A397EB81E>
I<013FB512E0A39039001FFC00EC07F8B3B3A3123FEA7F80EAFFC0A44A5A1380D87F005B
0070131F6C5C6C495A6C49C7FC380781FC3801FFF038007F80233B7DB82B>I<B649B5FC
A3000101809038007FF06C90C8EA3F80053EC7FC173C17385F5F4C5A4C5A4CC8FC160E5E
5E5E5E4B5AED0780030EC9FC5D153E157E15FF5C4A7F4A6C7E140E4A6C7E4A6C7E14704A
6C7E4A6C7E14804A6C7E6F7EA26F7F707EA2707E707EA2707EA2707E707EA2707E707F84
84486D497FB6011FEBFF80A339397DB841>I<B612E0A3000101C0C8FC6C90C9FCB3AD17
18A517381730A31770A317F0A216011603160FEE1FE0486D13FFB8FCA32D397DB834>I<
B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8A2D9CFE01533A3D9C7F01563A3D9C3
F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F1406A36E6C130CA36E6C1318A26E6C13
30A36E6C1360A26E6C13C0A3913901FC0180A3913900FE0300A2ED7F06A3ED3F8CA2ED1F
D8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500C00203B512F8A2ED018045397DB84C
>I<B5913807FFFE8080C69238007FE06EEC1F80D9DFF0EC0F001706EBCFF8EBC7FCA2EB
C3FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E8114036E7E168080ED7FC016E0153F
ED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2EE7FC6EE3FE6A2EE1FF6EE0FFEA216
071603A216011600A2177E486C153E487ED80FFC151EB500C0140EA2170637397DB83E>
I<EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F8049486D7ED93F80EB07F049
C76C7E01FE6E7E48486E7E49157E0003167F4848ED3F80A24848ED1FC0A2001F17E04915
0F003F17F0A3007F17F8491507A300FF17FCAC007F17F86D150FA3003F17F0A26C6CED1F
E0A36C6CED3FC0000717806D157F000317006C6C15FEA26C6C4A5A017F4A5A6D6C495A6D
6C495AD907E0EB1F80D903F8017FC7FC903900FE01FC91381FFFE0020390C8FC363D7BBA
41>I<B712C016F816FE000190398001FF806C90C7EA3FC0EE0FE0EE07F0EE03F817FC17
FE1601A217FFA717FEA2EE03FCA2EE07F817F0EE0FE0EE3FC0923801FF0091B512FC16F0
91C9FCB3A5487FB6FCA330397DB839>I<EC03FF021F13E09138FE01FC903901F8007ED9
07E0EB1F8049486D7ED93F80EB07F049C76C7E01FE6E7E48486E7EA24848157F00071780
49153F000F17C049151F001F17E0A24848ED0FF0A3007F17F8A2491507A200FF17FCAC00
7F17F8A26D150FA2003F17F0A26C6CED1FE0A36C6CED3FC00007027C14804AB4FC3C03F8
0383807F003B01FC0701C0FEEC0E002600FE0CEBE1FC017FEC63F8D93F8CEB77F0D91FCC
EB3FE0D907EE14806DB449C7FC0100D981FC130CEC1FFF0203131C91C7001E131C161F18
3CEF807CEFC0F8EE0FFFA318F08218E07013C07013809338007E00364B7BBA41>I<B612
FEEDFFE016F8000190388007FE6C90C76C7EEE3FC0707E707E707EA2707EA283A65FA24C
5AA24C5A4C5AEE3F8004FFC8FCED07FC91B512E05E9138000FF0ED03F8ED00FE82707E70
7EA2161F83A583A6F00180A217F8160F1803486D01071400B66D6C5A04011306933800FE
0ECAEA3FFCEF07F0393B7DB83D>I<D90FF813C090383FFE0190B512813903F807E33907
E000F74848137F4848133F48C7121F003E140F007E1407A2007C140312FC1501A36C1400
A37E6D14006C7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14FEC680013F14800107
14C0EB007F020713E0EC007FED3FF0151F150FED07F8A200C01403A21501A37EA216F07E
15036C15E06C14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8010F
13E0D8C00190C7FC253D7CBA2E>I<003FB812E0A3D9C003EB001F273E0001FE130348EE
01F00078160000701770A300601730A400E01738481718A4C71600B3B0913807FF80011F
B612E0A335397DB83C>I<B6903807FFFEA3000101809038007FE06C90C8EA1F80EF0F00
1706B3B2170E6D150C80171C133F17186D6C14385F6D6C14F06D6C5C6D6C495A6D6CEB07
806D6C49C7FC91387F807E91381FFFF8020713E09138007F80373B7DB83E>I<B500FC91
387FFF80A30003018091380FFC006C90C8EA07E0715A6C705A6E1403017F93C7FCA28001
3F1506A26E140E011F150C80010F5DA28001075DA26E147001031560A26D6C5CA2806D4A
5AA2ED8003027F91C8FCA291383FC006A215E0021F5BA2EDF01C020F1318A26E6C5AA215
FC02035BA2EDFEE002015BA26E6C5AA36FC9FCA3153EA2151CA3393B7EB83E>I<B5D8FC
07B5D8F001B5FCA30007902780001FFEC7EA1FF86C48C7D80FF8EC07E000010307ED03C0
1B807F6C6F6C1500A26E5F017F6E6C1406A280013F4A6C5CA280011F4A6D5BEE067FA26D
6C010E6D5BEE0C3FA26D6C011C6D5BEE181FA26D6C6F5BEE300FA26D6C6F485AEE6007A2
6D6C4CC7FC9338C003FCA203805D913B7F818001FE06A203C1150EDA3FC3C7EAFF0CA203
E3151CDA1FE6EC7F98A215F6DA0FFCEC3FF0A302075E4B141FA202035E4B140FA202015E
4B1407A2020093C8FC4B80503B7EB855>I<003FB7FCA39039FC0001FE01C0130349495A
003EC7FC003C4A5A5E0038141F00784A5A12704B5A5E006014FF4A90C7FCA24A5A5DC712
074A5AA24A5A5D143F4A5AA24A5A92C8FC5B495AA2495A5C130F4948EB0180A2495A5C13
7F495A16034890C7FC5B1203485AEE0700485A495C001F5D48485C5E4848495A49130FB8
FCA329397BB833>90 D<EAFFF8A4EAF000B3B3B3B3A3EAFFF8A40D5378BD17>I<390180
0180000313033907000700000E130E485B00181318003813380030133000701370006013
60A200E013E0485BA400CE13CE39FF80FF806D13C0A3007F137FA2393F803F80390E000E
001A1974B92A>I<EAFFF8A4EA0078B3B3B3B3A3EAFFF8A40D537FBD17>I<121E123FEA7F
80A2EAFFC0EA7F80A2EA3F00121E0A097AB717>95 D<EB1FE0EBFFFC3803E03F3907000F
80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EBFE00EA
03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA31401A26C13036CEB077C903980063E18
383FC01E3A0FE0781FF03A03FFF00FE03A007F8007C026277DA52A>97
D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9039F3801F809039F7000FC001
FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167FAA167E16FEA216FC15016D14
F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881E07E903800FFF8C7EA1FC028
3B7EB92E>I<EB03FC90381FFF8090387E03E03901F80070484813F83907E001FC380FC0
03A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E127FA26C14067F001F14
0E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C090381FFF00EB07F81F277D
A525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F9038F801EF3903F0
007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA127E127FA27EA26C6C
131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F90381FFE0FD907F813
C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F803E03903F001F0D807E013F8380F
C0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA5127EA2127FA26C14
037F001F14076C6C13060007140E6D131CD801F013386C6C137090387E03E090381FFF80
903803FC0020277EA525>I<147E903803FF8090380FC1E0EB1F8790383F0FF0137EA213
FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8A31C3B7FBA19>I<
ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE03903E007C03A07C003E0
10000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D485A6D48C7FC38073FFC38
060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF804815C03A0F80007FE048
C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC03E0003F1407D80F80EB
0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A>I<EA03F012FFA3
120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3800FC0EBF70013FE496D7EA25B
A35BB3A3486C497EB500C1B51280A3293A7EB92E>I<EA0380EA0FE0487EA56C5AEA0380
C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717>I<EB01C0EB07F0EB0F
F8A5EB07F0EB01C090C7FCAAEB01F813FFA313071301B3B3A2123C127E00FF13F01303A2
14E038FE07C0127C383C0F00EA0FFEEA03F8154984B719>I<EA03F012FFA3120F1203B1
913801FFFCA39138007FC01600157C15705D4A5A4A5A4AC7FC141E1438147814FC13F1EB
F3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E811400157E157F811680ED1FC0486C
EB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA3120F1203B3B3AD487EB512C0A312
3A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF03F01E07E903BF1C01F8380
3F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB0FC0A2495CA3495CB3A348
6C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F00FF000FFEB3FFCECF03F90
39F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3A3486C497EB500C1B51280
A329257EA42E>I<EB03FE90380FFF8090383E03E09038F800F84848137C48487F48487F
4848EB0F80001F15C090C712074815E0A2007EEC03F0A400FE15F8A9007E15F0A2007F14
076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C137EC66C13F890387E03F090
381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000FFEB7FF89038F1E07E9039F3801F
803A0FF7000FC0D803FEEB07E049EB03F04914F849130116FC150016FEA3167FAA16FEA3
ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F009038F1E07E9038F0FF
F8EC1FC091C8FCAB487EB512C0A328357EA42E>I<D903F813C090381FFE0190387E0781
9038FC01C33903F000E3000714774848133749133F001F141F485A150F48C7FCA312FEAA
127FA37E6D131F121F6D133F120F6C6C137F6C6C13EF3901F801CF39007E078F90381FFE
0FEB07F890C7FCABED1FE00203B5FCA328357DA42C>I<3807E01F00FFEB7FC09038E1E3
E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300A45BB3A2487EB512
F0A31C257EA421>I<EBFF03000313E7380F80FF381E003F487F487F00707F12F0A2807E
A27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F01071380EB007F141F00C0EB
0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38E1FFF038C03F801A27
7DA521>I<1318A51338A31378A313F8120112031207001FB5FCB6FCA2D801F8C7FCB215
C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220>I<D803F0EB07E0
00FFEB01FFA3000FEB001F00031407B3A4150FA3151F12016D133F0000EC77F86D9038E7
FF8090383F03C790381FFF87903A03FC07E00029267EA42E>I<B538803FFEA33A0FF800
0FF06C48EB07E00003EC03C06D148000011500A26C6C1306A26D130E017E130CA26D5BA2
EC8038011F1330A26D6C5AA214E001075BA2903803F180A3D901FBC7FCA214FF6D5AA214
7CA31438A227257EA32C>I<B53A1FFFE03FFEA3260FF8009038000FF86C48017EEB03E0
18C00003023EEB0180A26C6C013FEB0300A36C6CEC8006156FA2017E9038EFC00C15C7A2
D93F016D5A15830281EBF038D91F831430150102C3EBF87090260FC6001360A2D907E66D
5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A7FA20100141E4A130E0260130C37
257EA33C>I<B538807FFFA33A03FE003FF00001EC1F80000092C7FC017E131C6D13186D
6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A7E8114CF903801C7
E090380383F090380703F8EB0601496C7E011C137E49137F01787F496D7E486C80000FEC
3FF0D8FFFE90B51280A329247FA32C>I<B538803FFEA33A0FF8000FF06C48EB07C00003
EC03806C7E16007F00001406A2017E5BA2137F6D5BA26D6C5AA2ECC070010F1360A26D6C
5AA214F101035BA2D901FBC7FCA214FF6D5AA2147CA31438A21430A214701460A25CA2EA
7C0100FE5B130391C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC027357EA32C>I<003FB5
12FCA2EB8003D83E0013F8003CEB07F00038EB0FE012300070EB1FC0EC3F800060137F15
0014FE495AA2C6485A495AA2495A495A495AA290387F000613FEA2485A485A0007140E5B
4848130C4848131CA24848133C48C7127C48EB03FC90B5FCA21F247EA325>I<B81280A2
290280962A>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fx cmbx12 14.4 20
/Fx 20 122 df<B600FC073FB512FE6F61A26F96B6FCA2D80007F5C00070EF01EFA202EF
6DEF03CFA202E76DEF078FA202E36DEF0F0FA202E16D171EA302E06D173CA26F6C1778A2
6F6C17F0A26F6DED01E0A26F6DED03C0A36F6DED0780A26F6DED0F00A26F6D151EA26F6D
5DA3706C5DA2706C5DA2706D495AA2706D495AA2706D495AA3706D49C7FCA2706D131EA2
706D5BA2716C5BA3716C5BA271EB81E0A271EBC3C0A271EBE780A27101FFC8FCA3715BA2
715BA2725AA2725AA2D93FFC6F5AB74DB712FEA2725AA2725A77527CD180>77
D<91260FFF80130791B500F85B010702FF5B011FEDC03F49EDF07F9026FFFC006D5A4801
E0EB0FFD4801800101B5FC4848C87E48488149150F001F824981123F4981007F82A28412
FF84A27FA26D82A27F7F6D93C7FC14C06C13F014FF15F86CECFF8016FC6CEDFFC017F06C
16FC6C16FF6C17C06C836C836D826D82010F821303010082021F16801400030F15C0ED00
7F040714E01600173F050F13F08383A200788200F882A3187FA27EA219E07EA26CEFFFC0
A27F6D4B13806D17006D5D01FC4B5A01FF4B5A02C04A5A02F8EC7FF0903B1FFFC003FFE0
486C90B65AD8FC0393C7FC48C66C14FC48010F14F048D9007F90C8FC3C5479D24B>83
D<EC7FFF0107B512F0013F14FE90B77E48D9E00F7F2703FE000113F0486C6D7F6EEB3FFC
48826E131F83707FA36C496D7FA26C90C7FC6C5AC9FCA6037FB5FC020FB6FC91B7FC0107
1487013FEBF0074913803901FFFC004813F0485B485B485B4890C7FC5A5BA2485AA45EA2
6D5C007F151D163D6C6C02797F6C6D01F113F86C9026C003E1EBFFE06C9026F81FC014F0
6C90B5487EC6ED001F011F01FC010713E0010101E090C8FC3C387CB641>97
D<913801FFF8021FEBFF8091B612F0010315FC010F9038C00FFE903A1FFE0001FFD97FFC
491380D9FFF05B4817C048495B5C5A485BA2486F138091C7FC486F1300705A4892C8FC5B
A312FFAD127F7FA27EA2EF03E06C7F17076C6D15C07E6E140F6CEE1F806C6DEC3F006C6D
147ED97FFE5C6D6CEB03F8010F9038E01FF0010390B55A01001580023F49C7FC020113E0
33387CB63C>99 D<913803FFC0023F13FC49B6FC010715C04901817F903A3FFC007FF849
486D7E49486D7E4849130F48496D7E48178048497F18C0488191C7FC4817E0A248815B18
F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218E06CEE01F06E14037E6C6DEC07E0
A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91FFEEB03FE903A0FFFC03FF8010390
B55A010015C0021F49C7FC020113F034387CB63D>101 D<DA3FFF14FF0103B5D8F00713
C0010FDAFC1F13E0013FECFF7F90267FFC0F9038FF9FF09026FFE001EBF83F48496C13E0
484990387FF01F4890C7D83FF813E0489338FC0FC0F0078048486E6CC7FCA2003F82A900
1F5EA26C6C4A5AA26C5E6C6D495A6C6D495A6C6D485BDAFC0F5B4890B6C8FCD803EF14FC
01C314F02607C03F90C9FC91CBFCA2120FA37FA213F813FE90B7FC6C16F817FF18C06C83
6C836C836D828448B9FC12074848C700031480D81FF8EC003F4848150748486F13C08348
5A83A56D5D007F18806D5D003F18006C6C4B5AD80FFEED1FFC6C6C6CEC7FF86C01E04948
5A6C01FE011F5B6C6CB71280010F03FCC7FC010115E0D9000F01FCC8FC3C4F7CB543>
103 D<EB3FF0B5FCA51203C6FCB3A4EE1FFC93B512C0030314F0030F8092391FE07FFC92
393F001FFE037C8003F07FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8
F807B612C0A542537BD24B>I<137F497E000313E0487FA2487FA76C5BA26C5BC613806D
C7FC90C8FCADEB3FF0B5FCA512017EB3B3A6B612E0A51B547BD325>I<EB3FF0B5FCA512
017EB3B3B3B1B612F0A51C537BD225>108 D<D93FF0D91FFCEDFFE0B591B500C0010713
FE030302F0011F6D7E030F6E017F8092271FE07FFCD9FF037F922A3F001FFE01F8007F00
03027C9126FF03E080C602F06DD90780137FDAF1E0038FC77FDAF3C0159EDAF7806D01BC
143F07FC8102FFC75C4A5EA24A5EA44A5EB3ACB6D8F807B6D8C03FB512FEA567367BB570
>I<D93FF0EB1FFCB591B512C0030314F0030F8092391FE07FFC92393F001FFE0003027C
80C602F07FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A5
42367BB54B>I<913801FFE0021F13FE91B612C0010315F0010F9038807FFC903A1FFC00
0FFED97FF86D6C7E49486D7F48496D7F48496D7F4A147F48834890C86C7EA24883A24848
6F7EA3007F1880A400FF18C0AC007F1880A3003F18006D5DA26C5FA26C5F6E147F6C5F6C
6D4A5A6C6D495B6C6D495B6D6C495BD93FFE011F90C7FC903A0FFF807FFC6D90B55A0100
15C0023F91C8FC020113E03A387CB643>I<903A3FF001FFE0B5010F13FE033FEBFFC092
B612F002F301017F913AF7F8007FFE0003D9FFE0EB1FFFC602806D7F92C76C7F4A824A6E
7F4A6E7FA2717FA285187F85A4721380AC1A0060A36118FFA2615F616E4A5BA26E4A5B6E
4A5B6F495B6F4990C7FC03F0EBFFFC9126FBFE075B02F8B612E06F1480031F01FCC8FC03
0313C092CBFCB1B612F8A5414D7BB54B>I<90397FE003FEB590380FFF80033F13E04B13
F09238FE1FF89139E1F83FFC0003D9E3E013FEC6ECC07FECE78014EF150014EE02FEEB3F
FC5CEE1FF8EE0FF04A90C7FCA55CB3AAB612FCA52F367CB537>114
D<903903FFF00F013FEBFE1F90B7FC120348EB003FD80FF81307D81FE0130148487F4980
127F90C87EA24881A27FA27F01F091C7FC13FCEBFFC06C13FF15F86C14FF16C06C15F06C
816C816C81C681013F1580010F15C01300020714E0EC003F030713F015010078EC007F00
F8153F161F7E160FA27E17E07E6D141F17C07F6DEC3F8001F8EC7F0001FEEB01FE9039FF
C00FFC6DB55AD8FC1F14E0D8F807148048C601F8C7FC2C387CB635>I<143EA6147EA414
FEA21301A313031307A2130F131F133F13FF5A000F90B6FCB8FCA426003FFEC8FCB3A9EE
07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC6DEBFFF86D6C5B021F5B0203
13802A4D7ECB34>I<D93FF8913801FFC0B50207B5FCA50003ED001FC61607B3AE5FA35F
A2017F5D173B177B6D6C14F3DC01E313F06D6CD907C3EBFFC0903A0FFFC03F836D90B512
03010114FE6D6C13F8020701E091C7FC42377BB54B>I<B600F00107B5FCA5000101F8C8
EA7FE06C6DED3F00A2017F163E6E157E013F167C6E15FC6D5E6F13016D5E8117036D5E6F
13076D5E6F130F6D5E6F131F6D93C7FC815F6E6C133E177E023F147C6F13FC6E5C16816E
5C16C3A26EEBE3E016E76E5C16FF6E5CA26E91C8FCA26F5AA36F5AA26F5AA26F5AA26F5A
6F5A40367DB447>I<B6D8E07FB5D8C003B512C0A5000101F0C701F0C7381FF8006E027F
ED07E06C715DA26E023F150F017F705DA26E181F013F4B6C92C7FC6E606D70143E94B5FC
6F177E6D4A6E137C03C001F315FC6D715B160303E001E114016D020702E05B03F013C06D
71485A160F03F8D9807F13076D05F85B93381F003F03FC160F027F4902FC5BDBFE3E011F
131F023F04FE90C8FC167EDBFF7C010F5B6E01FCECFF3E4C6D137E6E5FA24C7F6E5F4C7F
6E5FA24C7F6E5F4C147FA26E5F93C8123F6F5EA2033E6FC9FC5A367DB461>I<B600F001
07B5FCA5C601F8C8EA7FE06EED3F00A26D6C153E187E013F167C6E15FC6D5E6F13016D5E
6F13036D5E8117076D6D5C170F6D6D5C171F6D93C7FC6F5B027F143E6F137E023F147C6F
13FCA26E6D5A16816EEBC1F016C36E5C16E76E5C16FF6E5CA26E91C8FCA36F5AA26F5AA2
6F5AA26F5AA26F5AA35E150F5E151F93C9FC5DD81FC0133E486C137E486C137C486C13FC
5D14015D14034A5A6C48485A49485A263FC07FCAFCEB81FE6CB45A6C13F000035BC690CB
FC404D7DB447>121 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize

HPSdict begin
/TargetAnchors
0 dict dup begin
end targetdump-hook def
TeXDict begin
%%EndSetup
%%Page: 1 1
gsave %matrix defaultmatrix setmatrix
90 rotate /stampsize 20 def /Times-Roman findfont stampsize scalefont setfont
currentfont /FontBBox get aload pop /pdf@top exch 1000 div stampsize mul def
pop /pdf@bottom exch 1000 div stampsize mul def pop
265 -32 moveto
currentpoint /pdf@lly exch pdf@bottom add def /pdf@llx exch 2 sub def
0.5 setgray (arXiv:astro-ph/0303428v1  18 Mar 2003) show
currentpoint /pdf@ury exch pdf@top add def /pdf@urx exch 2 add def
/pdfmark where{pop}{userdict /pdfmark /cleartomark load put}ifelse
[ /H /I /Border [0 0 1] /BS <</S/D/D[2 6]/W 1>> /Color [0 1 1]
/Action << /Subtype /URI /URI (http://arXiv.org/abs/astro-ph/0303428v1)>>
/Subtype /Link /Rect[pdf@llx pdf@lly pdf@urx pdf@ury] /ANN pdfmark
grestore
1 0 bop 523 415 a Fx(Measuring)45 b(cosmology)h(with)g(Sup)t(erno)l(v)
-7 b(ae)523 704 y Fw(Saul)28 b(P)n(erlm)n(utter)1103
674 y Fv(1)1166 704 y Fw(and)g(Brian)e(P)-7 b(.)28 b(Sc)n(hmidt)1955
674 y Fv(2)523 846 y Fu(1)596 878 y Ft(Ph)n(ysics)e(Division,)g(La)n
(wrence)h(Berk)n(eley)f(National)g(Lab)r(oratory)-6 b(,)27
b(Univ)n(ersit)n(y)d(of)j(California,)596 969 y(Berk)n(eley)-6
b(,)26 b(CA)f(94720,)j(USA)523 1029 y Fu(2)596 1060 y
Ft(Researc)n(h)e(Sc)n(ho)r(ol)g(of)h(Astronom)n(y)d(and)h(Astroph)n
(ysics,)h(The)g(Australian)g(National)596 1152 y(Univ)n(ersit)n(y)-6
b(,)25 b(via)g(Cotter)i(Rd,)e(W)-6 b(eston)25 b(Creek,)i(A)n(CT)f
(2611,)h(Australia)523 1409 y Fs(Abstract.)42 b Ft(Ov)n(er)19
b(the)g(past)g(decade,)h(sup)r(erno)n(v)l(ae)f(ha)n(v)n(e)f(emerged)h
(as)h(some)f(of)h(the)f(most)g(p)r(o)n(w)n(er-)523 1500
y(ful)f(to)r(ols)i(for)f(measuring)f(extragalactic)i(distances.)f(A)e
(w)n(ell)j(dev)n(elop)r(ed)d(ph)n(ysical)h(understanding)523
1591 y(of)28 b(t)n(yp)r(e)f(I)r(I)f(sup)r(erno)n(v)l(ae)h(allo)n(w)i
(them)d(to)i(b)r(e)f(used)g(to)g(measure)g(distances)h(indep)r(enden)n
(t)e(of)i(the)523 1683 y(extragalactic)20 b(distance)f(scale.)h(T)n(yp)
r(e)e(Ia)g(sup)r(erno)n(v)l(ae)g(are)h(empirical)g(to)r(ols)h(whose)f
(precision)g(and)523 1774 y(in)n(trinsic)32 b(brigh)n(tness)g(mak)n(e)f
(them)f(sensitiv)n(e)i(prob)r(es)g(of)h(the)e(cosmological)j
(expansion.)f(Both)523 1865 y(t)n(yp)r(es)28 b(of)h(sup)r(erno)n(v)l
(ae)g(are)g(consisten)n(t)g(with)f(a)h(Hubble)f(Constan)n(t)h(within)g
Fr(\030)p Ft(10\045)g(of)g Fq(H)3182 1873 y Fu(0)3242
1865 y Ft(=)d(70)549 1957 y(km)e(s)709 1925 y Fp(\000)p
Fu(1)817 1957 y Ft(Mp)r(c)966 1925 y Fp(\000)p Fu(1)1049
1957 y Ft(.)d(Tw)n(o)g(teams)f(ha)n(v)n(e)g(used)h(t)n(yp)r(e)e(Ia)i
(sup)r(erno)n(v)l(ae)f(to)g(trace)h(the)f(expansion)h(of)g(the)523
2048 y(Univ)n(erse)g(to)h(a)g(lo)r(ok-bac)n(k)g(time)f(more)h(than)f
(60\045)h(of)h(the)e(age)i(of)g(the)e(Univ)n(erse.)h(These)g(observ)l
(a-)523 2139 y(tions)f(sho)n(w)g(an)f(accelerating)j(Univ)n(erse)d
(whic)n(h)g(is)h(curren)n(tly)f(b)r(est)g(explained)g(b)n(y)g(a)g
(cosmological)523 2231 y(constan)n(t)28 b(or)h(other)f(form)f(of)i
(dark)f(energy)g(with)g(an)g(equation)g(of)h(state)f(near)g
Fq(w)g Ft(=)d Fq(p=\032)f Ft(=)h Fr(\000)p Ft(1.)523
2322 y(While)c(there)g(are)h(man)n(y)d(p)r(ossible)k(remaining)e
(systematic)f(e\013ects,)i(none)f(app)r(ears)h(large)g(enough)523
2413 y(to)32 b(c)n(hallenge)h(these)f(curren)n(t)f(results.)i(F)-6
b(uture)31 b(exp)r(erimen)n(ts)f(are)j(planned)e(to)h(b)r(etter)g(c)n
(harac-)523 2505 y(terize)i(the)g(equation)f(of)i(state)f(of)h(the)e
(dark)g(energy)h(leading)g(to)g(the)g(observ)n(ed)f(acceleration)523
2596 y(b)n(y)c(observing)h(h)n(undreds)f(or)h(ev)n(en)f(thousands)h(of)
h(ob)t(jects.)g(These)g(exp)r(erimen)n(ts)e(will)i(need)f(to)523
2687 y(carefully)f(con)n(trol)g(systematic)e(errors)i(to)g(ensure)e
(future)h(conclusions)h(are)g(not)f(dominated)f(b)n(y)523
2779 y(e\013ects)f(unrelated)g(to)f(cosmology)-6 b(.)523
3061 y Fo(1)112 b(In)m(tro)s(duction)523 3260 y Fw(Understanding)19
b(the)h(global)e(history)h(of)g(the)h(Univ)n(erse)e(is)h(a)g(fundamen)n
(tal)h(goal)e(of)h(cosmol-)523 3359 y(ogy.)i(One)i(of)f(the)h
(conceptually)f(simplest)g(tests)h(in)f(the)h(rep)r(ertoire)e(of)i(the)
g(cosmologist)d(is)523 3459 y(observing)i(ho)n(w)h(a)g(standard)f
(candle)h(dims)h(as)e(a)h(function)h(of)g(redshift.)f(The)h(nearb)n(y)e
(Uni-)523 3559 y(v)n(erse)j(pro)n(vides)f(the)j(curren)n(t)e(rate)g(of)
h(expansion,)f(and)h(with)g(more)f(distan)n(t)h(ob)5
b(jects)26 b(it)g(is)523 3658 y(p)r(ossible)f(to)h(start)f(seeing)g
(the)h(v)-5 b(aried)25 b(e\013ects)g(of)h(cosmic)f(curv)-5
b(ature)25 b(and)g(the)h(Univ)n(erse's)523 3758 y(expansion)34
b(history)g(\(usually)g(expressed)g(as)g(the)h(rate)f(of)h
(acceleration/deceleration\).)523 3858 y(Ov)n(er)19 b(the)h(past)g(sev)
n(eral)e(decades)h(a)h(paradigm)f(for)g(understanding)h(the)g(global)f
(prop)r(erties)523 3957 y(of)k(the)h(Univ)n(erse)e(has)h(emerged)g
(based)f(on)h(General)g(Relativit)n(y)g(with)h(the)f(assumption)g(of)
523 4057 y(a)i(homogeneous)e(and)j(isotropic)e(Univ)n(erse.)g(The)i
(relev)-5 b(an)n(t)24 b(constan)n(ts)g(in)i(this)g(mo)r(del)f(are)523
4156 y(the)g(Hubble)h(constan)n(t)d(\(or)i(curren)n(t)e(rate)h(of)h
(cosmic)f(expansion\),)g(the)h(relativ)n(e)f(fractions)523
4256 y(of)30 b(sp)r(ecies)g(of)h(matter)f(that)g(con)n(tribute)g(to)h
(the)f(energy)f(densit)n(y)i(of)f(the)h(Univ)n(erse,)e(and)523
4356 y(these)f(sp)r(ecies')f(equation)g(of)h(state.)648
4455 y(Early)e(luminosit)n(y)i(distance)g(in)n(v)n(estigations)e(used)i
(the)g(brigh)n(test)g(ob)5 b(jects)27 b(a)n(v)-5 b(ailable)523
4555 y(for)27 b(measuring)f(distance)h({)f(brigh)n(t)h(galaxies)e
([3,39],)h(but)i(these)f(e\013orts)g(w)n(ere)f(hamp)r(ered)523
4655 y(b)n(y)32 b(the)h(impreciseness)f(of)h(the)g(distance)f
(indicators)g(and)g(the)h(c)n(hanging)e(prop)r(erties)h(of)523
4754 y(the)i(distance)g(indicators)e(as)h(a)h(function)g(of)g(lo)r(ok)f
(bac)n(k)f(time.)j(Although)e(man)n(y)h(other)523 4854
y(metho)r(ds)29 b(for)g(measuring)f(the)h(global)f(curv)-5
b(ature)28 b(and)h(cosmic)f(deceleration)g(exist)h(\(see,)p
eop
%%Page: 2 2
2 1 bop 523 232 a Ft(2)237 b(P)n(erlm)n(utter)25 b(and)g(Sc)n(hmidt)523
415 y Fw(e.g.,)36 b([66]\),)f(sup)r(erno)n(v)-5 b(ae)35
b(\(SNe\))i(ha)n(v)n(e)d(emerged)h(as)h(one)f(of)h(the)g(preeminen)n(t)
g(distance)523 515 y(metho)r(ds)e(due)f(to)g(their)h(signi\014can)n(t)e
(in)n(trinsic)h(brigh)n(tness)f(\(whic)n(h)i(allo)n(ws)e(them)h(to)h(b)
r(e)523 614 y(observ)-5 b(able)21 b(in)i(the)g(distan)n(t)f(Univ)n
(erse\),)g(ubiquit)n(y)h(\(they)g(are)e(visible)i(in)f(b)r(oth)h(the)g
(nearb)n(y)523 714 y(and)32 b(distan)n(t)f(Univ)n(erse\),)g(and)h
(their)f(precision)g(\(t)n(yp)r(e)h(Ia)f(SNe)h(pro)n(vide)f(distances)g
(that)523 814 y(ha)n(v)n(e)26 b(a)i(precision)e(of)i(appro)n(ximately)e
(8\045\).)523 1079 y Fo(2)112 b(Sup)s(erno)m(v)-6 b(ae)39
b(as)f(Distance)f(Indicators)523 1279 y Fn(2.1)95 b(T)m(yp)s(e)32
b(I)s(I)g(Sup)s(erno)m(v)-5 b(ae)32 b(and)g(the)g(Expanding)g
(Photosphere)f(Metho)s(d)523 1445 y Fw(Massiv)n(e)c(stars)h(come)g(in)h
(a)f(wide)h(v)-5 b(ariet)n(y)27 b(of)i(luminosities)f(and)h(sizes)f
(and)g(w)n(ould)h(seem-)523 1544 y(ingly)20 b(not)f(b)r(e)i(useful)f
(ob)5 b(jects)19 b(for)h(making)f(distance)g(measuremen)n(ts)g(under)h
(the)g(standard)523 1644 y(candle)27 b(assumption.)g(Ho)n(w)n(ev)n(er,)
f(from)h(a)h(radiativ)n(e)e(transfer)g(standp)r(oin)n(t)i(these)f(ob)5
b(jects)523 1743 y(are)21 b(relativ)n(ely)f(simple)i(and)g(can)f(b)r(e)
h(mo)r(deled)g(with)g(su\016cien)n(t)g(accuracy)e(to)i(measure)e(dis-)
523 1843 y(tances)27 b(to)h(appro)n(ximately)e(10\045.)h(The)h
(expanding)f(photosphere)g(metho)r(d)h(\(EPM\),)g(w)n(as)523
1943 y(dev)n(elop)r(ed)j(b)n(y)h(Kirshner)e(and)i(Kw)n(an)f([44],)g
(and)h(implemen)n(ted)g(on)g(a)f(large)f(n)n(um)n(b)r(er)i(of)523
2042 y(ob)5 b(jects)27 b(b)n(y)g(Sc)n(hmidt)i(et)e(al.)h([86])e(after)i
(considerable)e(impro)n(v)n(emen)n(t)g(in)i(the)g(theoretical)523
2142 y(understanding)f(of)h(t)n(yp)r(e)f(I)r(I)h(SN)g(\(SNI)r(I\))h
(atmospheres)d([15,16,99].)648 2242 y(EPM)g(assumes)h(that)h(SNI)r(I)g
(radiate)f(as)g(dilute)h(blac)n(kb)r(o)r(dies)1472 2503
y Fm(\022)1511 2515 y Fl(ph)1611 2503 y Fw(=)1708 2447
y Fm(R)1771 2459 y Fl(ph)p 1708 2484 141 4 v 1743 2560
a Fm(D)1882 2503 y Fw(=)1969 2356 y Fk(s)p 2052 2356
382 4 v 2194 2447 a Fm(F)2247 2459 y Fl(\025)p 2062 2484
362 4 v 2062 2560 a Fm(\020)2104 2536 y Fv(2)2142 2560
y Fm(\031)s(B)2255 2572 y Fl(\025)2299 2560 y Fw(\()p
Fm(T)12 b Fw(\))2433 2503 y Fm(;)843 b Fw(\(1\))523 2718
y(where)27 b Fm(\022)802 2730 y Fl(ph)907 2718 y Fw(is)h(the)g(angular)
e(size)i(of)f(the)h(photosphere)f(of)h(the)g(SN,)g Fm(R)2756
2730 y Fl(ph)2861 2718 y Fw(is)g(the)g(radius)f(of)523
2817 y(the)g(photosphere,)f Fm(D)j Fw(is)d(the)i(distance)e(to)h(the)g
(SN,)g Fm(F)2253 2829 y Fl(\025)2324 2817 y Fw(is)f(the)h(observ)n(ed)f
(\015ux)g(densit)n(y)h(of)523 2917 y(the)32 b(SN,)g(and)f
Fm(B)1061 2929 y Fl(\025)1105 2917 y Fw(\()p Fm(T)12
b Fw(\))31 b(is)g(the)h(Planc)n(k)e(function)i(at)f(a)g(temp)r(erature)
h Fm(T)12 b Fw(.)30 b(Since)i(SNI)r(I)g(are)523 3017
y(not)j(p)r(erfect)g(blac)n(kb)r(o)r(dies,)g(w)n(e)f(include)i(a)e
(correction)g(factor,)g Fm(\020)6 b Fw(,)36 b(whic)n(h)f(is)g
(calculated)523 3116 y(from)27 b(radiate)g(transfer)g(mo)r(dels)g(of)h
(SNI)r(I.)g(SNe)g(freely)f(expand,)h(and)1536 3315 y
Fm(R)1599 3327 y Fl(ph)1699 3315 y Fw(=)23 b Fm(v)1827
3327 y Fl(ph)1904 3315 y Fw(\()p Fm(t)c Fj(\000)f Fm(t)2098
3327 y Fv(0)2135 3315 y Fw(\))h(+)f Fm(R)2332 3327 y
Fv(0)2369 3315 y Fm(;)907 b Fw(\(2\))523 3465 y(where)22
b Fm(v)798 3477 y Fl(ph)899 3465 y Fw(is)h(the)g(observ)n(ed)e(v)n(elo)
r(cit)n(y)h(of)h(material)f(at)h(the)g(p)r(osition)g(of)g(the)g
(photosphere,)523 3565 y(and)d Fm(t)g Fw(is)h(the)f(time)h(elapsed)f
(since)g(the)g(time)h(of)f(explosion,)g Fm(t)2414 3577
y Fv(0)2451 3565 y Fw(.)g(F)-7 b(or)20 b(most)g(stars,)f(the)i(stellar)
523 3664 y(radius)g(,)p Fm(R)853 3676 y Fv(0)891 3664
y Fw(,)h(at)f(the)i(time)f(of)g(explosion)f(is)h(negligible,)f(and)h
(Eqs.)f(\(1{2\))g(can)h(b)r(e)g(com)n(bined)523 3764
y(to)28 b(yield)1637 3992 y Fm(t)23 b Fw(=)g Fm(D)1863
3875 y Fk(\022)1934 3936 y Fm(\022)1973 3948 y Fl(ph)p
1934 3973 118 4 v 1934 4049 a Fm(v)1974 4061 y Fl(ph)2061
3875 y Fk(\023)2141 3992 y Fw(+)18 b Fm(t)2254 4004 y
Fv(0)3299 3992 y Fw(\(3\))648 4189 y(By)27 b(observing)f(a)i(SNI)r(I)g
(at)g(sev)n(eral)e(ep)r(o)r(c)n(hs,)h(measuring)g(the)h(\015ux)g
(densit)n(y)f(and)h(tem-)523 4288 y(p)r(erature)k(of)h(the)g(SN)g
(\(via)g(broad)e(band)i(photometry\))g(and)f Fm(v)2573
4300 y Fl(ph)2683 4288 y Fw(from)h(the)g(minima)g(of)523
4388 y(the)c(w)n(eak)n(est)d(lines)i(in)h(the)f(SN)h(sp)r(ectrum,)g(w)n
(e)e(can)h(solv)n(e)f(sim)n(ultaneously)g(for)h(the)g(time)523
4487 y(of)34 b(explosion)g(and)g(distance)g(to)g(the)h(SNI)r(I.)g(The)f
(k)n(ey)g(to)g(successfully)g(measuring)f(dis-)523 4587
y(tances)d(via)g(EPM)g(is)g(an)g(accurate)f(calculation)h(of)g
Fm(\020)6 b Fw(\()p Fm(T)12 b Fw(\).)31 b(Requisite)g(calculations)e(w)
n(ere)523 4687 y(p)r(erformed)35 b(b)n(y)h(Eastman)e(et)i(al.)f([16])g
(but,)i(unfortunately)-7 b(,)35 b(no)g(other)h(calculations)e(of)523
4786 y Fm(\020)6 b Fw(\()p Fm(T)12 b Fw(\))28 b(ha)n(v)n(e)e(y)n(et)i
(b)r(een)g(published)g(for)f(t)n(ypical)g(SNI)r(IP)h(progenitors.)p
eop
%%Page: 3 3
3 2 bop 1829 232 a Ft(Measuring)27 b(cosmology)g(with)e(Sup)r(erno)n(v)
l(ae)237 b(3)648 415 y Fw(Ham)n(uy)35 b(et)i(al.)f([34])f(and)h
(Leonard)f(et)h(al.)g([52])g(ha)n(v)n(e)f(measured)g(the)h(distances)g
(to)523 515 y(SN1999em,)25 b(and)h(they)g(ha)n(v)n(e)f(in)n(v)n
(estigated)g(other)g(asp)r(ects)h(of)g(EPM.)f(Ham)n(uy)h(et)g(al.)g
([34])523 614 y(c)n(hallenged)38 b(the)h(prescription)f(of)h(measuring)
f(v)n(elo)r(cities)h(from)f(the)i(minima)f(of)g(w)n(eak)523
714 y(lines)34 b(and)g(dev)n(elop)r(ed)f(a)h(framew)n(ork)e(of)i(cross)
f(correlating)f(sp)r(ectra)h(with)i(syn)n(thesized)523
814 y(sp)r(ectra)e(to)g(estimate)g(the)h(v)n(elo)r(cit)n(y)e(of)i
(material)e(at)h(the)h(photosphere.)f(This)g(di\013eren)n(t)523
913 y(prescription)22 b(do)r(es)h(lead)g(to)h(small)f(systematic)g
(di\013erences)g(in)g(estimated)h(v)n(elo)r(cit)n(y)e(using)523
1013 y(w)n(eak)32 b(lines)h(but,)h(pro)n(vided)e(the)h(mo)r(deled)h(sp)
r(ectra)e(are)g(go)r(o)r(d)h(represen)n(tations)e(of)i(real)523
1112 y(ob)5 b(jects,)27 b(this)g(metho)r(d)g(should)g(b)r(e)g(more)f
(correct.)g(A)n(t)h(presen)n(t,)f(a)h(revision)f(of)h(the)g(EPM)523
1212 y(distance)g(scale)g(using)g(this)h(metho)r(d)g(of)g(estimating)f
Fm(v)2267 1224 y Fl(ph)2372 1212 y Fw(has)h(not)f(b)r(een)h(made.)648
1312 y(Leonard)f(et)j(al.)f([51])f(ha)n(v)n(e)g(obtained)h(sp)r(ectrop)
r(olarimetry)e(of)i(SN1999em)f(at)h(man)n(y)523 1411
y(ep)r(o)r(c)n(hs)f(and)g(see)g(p)r(olarization)e(in)n(trinsic)i(to)g
(the)h(SN)g(whic)n(h)f(is)g(consisten)n(t)f(with)i(the)g(SN)523
1511 y(ha)n(v)n(e)22 b(asymmetries)h(of)g(10)10 b Fj(\000)g
Fw(20\045.)23 b(Asymmetries)g(at)h(this)f(lev)n(el)h(are)e(found)i(in)g
(most)f(SNI)r(I)523 1611 y([101],)f(and)g(ma)n(y)h(ultimately)g(limit)g
(the)h(accuracy)d(EPM)h(can)g(ac)n(hiev)n(e)g(on)g(a)h(single)f(ob)5
b(ject)523 1710 y(\()p Fm(\033)27 b Fj(\030)22 b Fw(10\045\).)28
b(Ho)n(w)n(ev)n(er,)d(the)j(mean)g(of)f(all)h(SNI)r(I)g(distances)f
(should)g(remain)g(un)n(biased.)648 1810 y(T)n(yp)r(e)21
b(I)r(I)h(SNe)f(ha)n(v)n(e)g(pla)n(y)n(ed)f(an)h(imp)r(ortan)n(t)g
(role)g(in)h(measuring)e(the)i(Hubble)g(constan)n(t)523
1910 y(indep)r(enden)n(t)33 b(of)g(the)g(rest)f(of)h(the)f
(extragalactic)f(distance)h(scale.)g(In)h(the)g(next)f(decade)523
2009 y(it)d(is)g(quite)g(lik)n(ely)f(that)h(surv)n(eys)e(will)i(b)r
(egin)g(to)g(turn)g(up)g(signi\014can)n(t)f(n)n(um)n(b)r(ers)g(of)h
(these)523 2109 y(ob)5 b(jects)26 b(at)h Fm(z)f Fj(\030)d
Fw(0)p Fm(:)p Fw(5)j(and,)g(therefore,)g(the)h(p)r(ossibilit)n(y)g
(exists)f(that)h(SNI)r(I)h(will)f(b)r(e)g(able)f(to)523
2208 y(mak)n(e)d(a)h(con)n(tribution)f(to)h(the)h(measuremen)n(t)e(of)h
(cosmological)e(parameters)g(b)r(ey)n(ond)i(the)523 2308
y(Hubble)d(Constan)n(t.)f(Since)h(SNI)r(I)g(do)f(not)h(ha)n(v)n(e)e
(the)i(precision)e(of)i(the)g(SNIa)f(\(next)h(section\))523
2408 y(and)28 b(are)f(signi\014can)n(tly)g(harder)f(to)i(measure,)f
(they)h(will)g(not)g(replace)f(the)h(SNIa)g(but)h(will)523
2507 y(remain)f(an)f(indep)r(enden)n(t)i(class)f(of)g(ob)5
b(jects)27 b(whic)n(h)h(ha)n(v)n(e)f(the)i(p)r(oten)n(tial)f(to)g
(con\014rm)g(the)523 2607 y(in)n(teresting)f(results)g(that)h(ha)n(v)n
(e)e(emerged)h(from)g(the)h(SNIa)g(studies.)523 2844
y Fn(2.2)95 b(T)m(yp)s(e)32 b(Ia)g(Sup)s(erno)m(v)-5
b(ae)32 b(as)g(Standardized)h(Candles)523 2998 y Fw(SNIa)e(ha)n(v)n(e)f
(b)r(een)i(used)f(as)g(extragalactic)e(distance)h(indicators)h(since)g
(Ko)n(w)n(al)e([42])h(\014rst)523 3098 y(published)f(his)f(Hubble)h
(diagram)e(\()p Fm(\033)h Fw(=)c(0)p Fm(:)p Fw(6)k(mag\))g(for)f(t)n
(yp)r(e)i(I)f(SNe.)h(W)-7 b(e)29 b(no)n(w)f(recognize)523
3197 y(that)f(the)f(old)g(t)n(yp)r(e)h(I)f(SNe)h(sp)r(ectroscopic)e
(class)g(is)i(comprised)e(of)h(t)n(w)n(o)g(distinct)h(ph)n(ysical)523
3297 y(en)n(tities:)h(SNIb/c)g(whic)n(h)g(are)f(massiv)n(e)g(stars)f
(that)j(undergo)d(core)h(collapse)g(\(or)g(in)i(some)523
3397 y(rare)i(cases)h(migh)n(t)h(undergo)f(a)g(thermon)n(uclear)f
(detonation)i(in)g(their)g(cores\))e(after)i(los-)523
3496 y(ing)27 b(their)h(h)n(ydrogen)e(atmospheres,)g(and)h(SNIa)g(whic)
n(h)h(are)e(most)i(lik)n(ely)f(thermon)n(uclear)523 3596
y(explosions)32 b(of)h(white)h(dw)n(arfs.)e(In)h(the)h(mid-1980s)d(it)i
(w)n(as)g(recognized)e(that)j(studies)f(of)523 3696 y(the)27
b(t)n(yp)r(e)h(I)f(SN)g(sample)g(had)g(b)r(een)g(confused)g(b)n(y)g
(these)g(similar)f(app)r(earing)g(SNe,)h(whic)n(h)523
3795 y(w)n(ere)35 b(henceforth)g(classi\014ed)g(as)f(t)n(yp)r(e)i(Ib)g
([59,94,102])c(and)j(t)n(yp)r(e)h(Ic)f([36].)g(By)g(the)h(late)523
3895 y(1980s/early)27 b(1990s,)h(a)i(strong)f(case)h(w)n(as)f(b)r(eing)
i(made)f(that)h(the)g(v)-5 b(ast)30 b(ma)5 b(jorit)n(y)29
b(of)i(the)523 3995 y(true)j(t)n(yp)r(e)g(Ia)f(SNe)i(had)e(strikingly)g
(similar)h(ligh)n(t)f(curv)n(e)g(shap)r(es)h([11,46{48],)d(sp)r(ectral)
523 4094 y(time)39 b(series)e([6,18,28,62],)e(and)j(absolute)f
(magnitudes)h([47,54].)e(There)i(w)n(ere)f(a)g(small)523
4194 y(minorit)n(y)28 b(of)g(clearly)f(p)r(eculiar)h(t)n(yp)r(e)g(Ia)g
(SNe)h(\(e.g.,)f(SN1986G)f([63],)g(SN1991bg)g([19,49],)523
4293 y(and)32 b(SN1991T)e([19,78]\),)h(but)i(these)f(could)g(b)r(e)g
(iden)n(ti\014ed)h(and)f(remo)n(v)n(ed)e(b)n(y)i(their)g(un-)523
4393 y(usual)26 b(sp)r(ectral)h(features.)f(A)h(1992)e(review)h(b)n(y)g
(Branc)n(h)f(and)i(T)-7 b(ammann)27 b([7])f(of)h(a)f(v)-5
b(ariet)n(y)523 4493 y(of)33 b(studies)h(in)g(the)f(literature)g
(concluded)g(that)h(the)g(in)n(trinsic)f(disp)r(ersion)f(in)i(B)f(and)h
(V)523 4592 y(maxim)n(um)23 b(for)f(t)n(yp)r(e)h(Ia)f(SNe)h(m)n(ust)g
(b)r(e)g Fm(<)g Fw(0)p Fm(:)p Fw(25)f(mag,)g(making)g(them)h(\\the)g(b)
r(est)g(standard)523 4692 y(candles)k(kno)n(wn)g(so)g(far.")648
4792 y(In)g(fact,)h(the)f(Branc)n(h)f(and)i(T)-7 b(ammann)27
b(review)f(indicated)i(that)f(the)h(magnitude)f(dis-)523
4891 y(p)r(ersion)35 b(w)n(as)g(probably)f(ev)n(en)i(smaller,)e(but)j
(the)f(measuremen)n(t)f(uncertain)n(ties)g(in)h(the)p
eop
%%Page: 4 4
4 3 bop 523 232 a Ft(4)237 b(P)n(erlm)n(utter)25 b(and)g(Sc)n(hmidt)523
415 y Fw(a)n(v)-5 b(ailable)36 b(datasets)g(w)n(ere)f(to)r(o)i(large)e
(to)i(tell.)g(The)g Fi(Calan/T)-7 b(ololo)34 b(Sup)r(erno)n(v)-5
b(a)36 b(Searc)n(h)523 515 y(\(CTSS\))p Fw(,)f(a)e(program)e(b)r(egun)j
(b)n(y)g(Ham)n(uy)f(et)h(al.)f([31])g(in)h(1990,)e(to)r(ok)h(the)h
(\014eld)g(a)f(dra-)523 614 y(matic)j(step)g(forw)n(ard)e(b)n(y)i
(obtaining)f(a)g(crucial)g(set)h(of)g(high)g(qualit)n(y)f(SN)i(ligh)n
(t)e(curv)n(es)523 714 y(and)c(sp)r(ectra.)g(By)h(targeting)e(a)h
(magnitude)g(range)f(that)i(w)n(ould)f(disco)n(v)n(er)f(t)n(yp)r(e)i
(Ia)f(SNe)523 814 y(in)i(the)h(redshift)f(range)e Fm(z)36
b Fw(=)31 b(0)p Fm(:)p Fw(01)21 b Fj(\000)g Fw(0)p Fm(:)p
Fw(1,)32 b(the)i Fi(CTSS)f Fw(w)n(as)f(able)g(to)h(compare)f(the)h(p)r
(eak)523 913 y(magnitudes)27 b(of)g(SNe)g(whose)g(relativ)n(e)f
(distance)h(could)g(b)r(e)g(deduced)g(from)g(their)g(Hubble)523
1013 y(v)n(elo)r(cities.)648 1112 y(The)h Fi(CTSS)i Fw(observ)n(ed)d
(some)h(25)g(\014elds)h(\(out)g(of)g(a)f(total)h(sample)f(of)h(45)f
(\014elds\))h(t)n(wice)523 1212 y(a)j(mon)n(th)h(for)f(o)n(v)n(er)f
(three)h(and)h(one)f(half)h(y)n(ears)e(with)i(photographic)e(plates)h
(or)g(\014lm)h(at)523 1312 y(the)24 b Fi(Cerro)f(T)-7
b(ololo)23 b(In)n(ter-American)f(Observ)-5 b(atory)22
b(\(CTIO\))i Fw(Curtis)g(Sc)n(hmidt)g(telescop)r(e,)523
1411 y(and)i(then)h(organized)e(extensiv)n(e)h(follo)n(w-up)g
(photometry)g(campaigns)f(primarily)g(on)i(the)523 1511
y Fi(CTIO)k Fw(0.9)g(m)h(telescop)r(e,)g(and)f(sp)r(ectroscopic)g
(observ)-5 b(ation)30 b(on)h(either)h(the)g Fi(CTIO)f
Fw(4)h(m)523 1611 y(or)j(1.5)g(m)h(telescop)r(e.)g(T)-7
b(o)n(w)n(ard)33 b(the)k(end)f(of)f(this)h(searc)n(h,)f(Ham)n(uy)g(et)h
(al.)g([31])f(p)r(oin)n(ted)523 1710 y(out)26 b(the)f(di\016cult)n(y)h
(of)g(this)g(comprehensiv)n(e)e(pro)5 b(ject:)24 b(\\Unfortunately)-7
b(,)26 b(the)g(app)r(earance)523 1810 y(of)38 b(a)f(SN)h(is)g(not)g
(predictable.)f(As)h(a)f(consequence)g(of)h(this)g(w)n(e)f(cannot)g(sc)
n(hedule)h(the)523 1910 y(follo)n(wup)29 b(observ)-5
b(ations)27 b Fh(a)32 b(priori)p Fw(,)f(and)f(w)n(e)e(generally)g(ha)n
(v)n(e)g(to)i(rely)e(on)h(someone)g(else's)523 2009 y(telescop)r(e)37
b(time.)g(This)g(mak)n(es)f(the)h(execution)g(of)g(this)g(pro)5
b(ject)36 b(somewhat)h(di\016cult.")523 2109 y(Despite)31
b(these)f(c)n(hallenges,)f(the)h(searc)n(h)f(w)n(as)g(a)h(ma)5
b(jor)29 b(success;)g(with)i(the)f(co)r(op)r(eration)523
2208 y(of)c(man)n(y)f(visiting)h Fi(CTIO)g Fw(astronomers)d(and)j
Fi(CTIO)g Fw(sta\013,)g(it)g(con)n(tributed)g(30)f(new)h(t)n(yp)r(e)523
2308 y(Ia)38 b(SN)i(ligh)n(t)e(curv)n(es)g(to)g(the)h(p)r(o)r(ol)g
([32])f(with)h(an)g(almost)f(unpreceden)n(ted)h(con)n(trol)e(of)523
2408 y(measuremen)n(t)27 b(uncertain)n(ties.)648 2507
y(As)19 b(the)i Fi(CTSS)f Fw(data)f(b)r(egan)g(to)h(b)r(ecome)f(a)n(v)
-5 b(ailable,)19 b(sev)n(eral)f(metho)r(ds)i(w)n(ere)f(presen)n(ted)523
2607 y(that)k(could)g(select)g(for)f(the)i(\\most)e(standard")g(subset)
g(of)h(the)h(t)n(yp)r(e)f(Ia)g(standard)f(candles,)523
2707 y(a)27 b(subset)g(whic)n(h)g(remained)f(the)i(dominan)n(t)f(ma)5
b(jorit)n(y)25 b(of)i(the)h(ev)n(er-gro)n(wing)c(sample)i([8].)523
2806 y(F)-7 b(or)26 b(example,)g(V)-7 b(aughan)26 b(et)h(al.)g([97])e
(presen)n(ted)h(a)h(cut)g(on)f(the)h(B-V)f(color)g(at)g(maxim)n(um)523
2906 y(that)35 b(w)n(ould)f(select)h(what)g(w)n(ere)f(later)g(called)g
(the)i(\\Branc)n(h)d(Normal")g(SNIa,)i(with)g(an)523
3005 y(observ)n(ed)26 b(disp)r(ersion)h(of)g(less)h(than)f(0.25)g(mag.)
648 3105 y(Phillips)33 b([64])g(found)h(a)f(tigh)n(t)h(correlation)e(b)
r(et)n(w)n(een)i(the)g(rate)f(at)g(whic)n(h)h(a)f(t)n(yp)r(e)h(Ia)523
3205 y(SN's)22 b(luminosit)n(y)f(declines)g(and)g(its)g(absolute)g
(magnitude,)g(a)g(relation)f(whic)n(h)h(apparen)n(tly)523
3304 y(applied)h(not)f(only)h(to)f(the)h(Branc)n(h)f(Normal)g(t)n(yp)r
(e)h(Ia)f(SNe,)h(but)g(also)f(to)g(the)i(p)r(eculiar)e(t)n(yp)r(e)523
3404 y(Ia)36 b(SNe.)h(Phillips)f(plotted)g(the)h(absolute)f(magnitude)g
(of)g(the)h(existing)f(set)g(of)g(nearb)n(y)523 3504
y(SNIa,)h(whic)n(h)h(had)f(dense)g(photo)r(electric)g(or)f(CCD)i(co)n
(v)n(erage,)c(v)n(ersus)i(the)h(parameter)523 3603 y
Fm(\001m)665 3615 y Fv(15)735 3603 y Fw(\(B\),)26 b(the)f(amoun)n(t)g
(the)g(SN)h(decreased)e(in)h(brigh)n(tness)f(in)h(the)h(B-band)e(o)n(v)
n(er)f(the)j(15)523 3703 y(da)n(ys)k(follo)n(wing)g(maxim)n(um)h(ligh)n
(t.)f(The)h(sample)g(sho)n(w)n(ed)f(a)g(strong)g(correlation)f(whic)n
(h,)523 3802 y(if)j(remo)n(v)n(ed,)e(dramatically)g(impro)n(v)n(ed)g
(the)i(predictiv)n(e)f(p)r(o)n(w)n(er)f(of)h(SNIa.)h(Ham)n(uy)f(et)g
(al.)523 3902 y([33])c(used)h(this)g(empirical)f(relation)g(to)h
(reduce)f(the)i(scatter)e(in)h(the)g(Hubble)h(diagram)d(to)523
4002 y Fm(\033)h(<)22 b Fw(0)p Fm(:)p Fw(2)27 b(mag)g(in)h(V)g(for)f(a)
g(sample)g(of)h(nearly)e(30)h(SNIa)g(from)h(the)g Fi(CTSS)g
Fw(searc)n(h.)648 4101 y(Impressed)f(b)n(y)h(the)h(success)e(of)i(the)f
Fm(\001m)1963 4113 y Fv(15)2034 4101 y Fw(\(B\))h(parameter,)e(Riess)h
(et)g(al.)g([79])g(dev)n(el-)523 4201 y(op)r(ed)20 b(the)h
Fi(m)n(ulti-color)d(ligh)n(t)i(curv)n(e)g(shap)r(e)f(metho)r(d)i
(\(MLCS\))p Fw(,)g(whic)n(h)f(parameterized)f(the)523
4301 y(shap)r(e)24 b(of)h(SN)g(ligh)n(t)f(curv)n(es)f(as)h(a)g
(function)h(of)g(their)f(absolute)g(magnitude)h(at)f(maxim)n(um.)523
4400 y(This)32 b(metho)r(d)g(also)f(included)i(a)e(sophisticated)h
(error)e(mo)r(del)i(and)g(\014tted)h(observ)-5 b(ations)523
4500 y(in)34 b(all)g(colors)e(sim)n(ultaneously)-7 b(,)33
b(allo)n(wing)f(a)h(color)g(excess)g(to)g(b)r(e)h(included.)h(This)e
(color)523 4599 y(excess,)21 b(whic)n(h)h(w)n(e)g(attribute)g(to)g(in)n
(terv)n(ening)f(dust,)h(enabled)g(the)g(extinction)g(to)g(b)r(e)h(mea-)
523 4699 y(sured.)f(Another)g(metho)r(d)h(that)f(has)g(b)r(een)h(used)f
(widely)h(in)f(cosmological)e(measuremen)n(ts)523 4799
y(with)33 b(SNIa)f(is)f(the)i(\\stretc)n(h")d(metho)r(d)j(describ)r(ed)
f(in)g(P)n(erlm)n(utter)f(et)h(al.)g([74,77].)e(This)p
eop
%%Page: 5 5
5 4 bop 1829 232 a Ft(Measuring)27 b(cosmology)g(with)e(Sup)r(erno)n(v)
l(ae)237 b(5)523 415 y Fw(metho)r(d)31 b(is)g(based)f(on)g(the)h
(observ)-5 b(ation)30 b(that)h(the)g(en)n(tire)f(range)f(of)i(SNIa)g
(ligh)n(t)f(curv)n(es,)523 515 y(at)c(least)f(in)h(the)g(B)g(and)f
(V-bands,)h(can)f(b)r(e)h(represen)n(ted)f(with)h(a)g(simple)g(time)g
(stretc)n(hing)523 614 y(\(or)31 b(shrinking\))g(of)h(a)f(canonical)g
(ligh)n(t)g(curv)n(e.)g(The)h(coupled)g(stretc)n(hed)f(B)h(and)f(V)h
(ligh)n(t)523 714 y(curv)n(es)f(serv)n(e)g(as)h(a)g(parameterized)f
(set)h(of)g(ligh)n(t)h(curv)n(e)e(shap)r(es)h([26],)g(pro)n(viding)f
(man)n(y)523 814 y(of)h(the)g(b)r(ene\014ts)h(of)f(the)h(MLCS)f(metho)r
(d)g(but)h(as)e(a)h(m)n(uc)n(h)g(simpler)g(\(and)g(constrained\))523
913 y(set.)k(This)f(metho)r(d,)h(as)f(w)n(ell)g(as)g(recen)n(t)g
(implemen)n(tations)g(of)h Fm(\001m)2743 925 y Fv(15)2813
913 y Fw(\(B\))g([24,65],)e(also)523 1013 y(allo)n(ws)g(extinction)h
(to)g(b)r(e)h(directly)e(incorp)r(orated)g(in)n(to)h(the)g(SNIa)h
(distance)e(measure-)523 1112 y(men)n(ts.)f(Other)f(metho)r(ds)i(that)f
(correct)e(for)i(in)n(trinsic)f(luminosit)n(y)h(di\013erences)f(or)g
(limit)523 1212 y(the)38 b(input)g(sample)f(b)n(y)f(v)-5
b(arious)36 b(criteria)h(ha)n(v)n(e)f(also)g(b)r(een)h(prop)r(osed)g
(to)g(increase)f(the)523 1312 y(precision)c(of)i(t)n(yp)r(e)f(Ia)g(SNe)
h(as)e(distance)i(indicators)e([9,17,93,95].)e(While)k(these)f(latter)
523 1411 y(tec)n(hniques)c(are)f(not)i(as)f(dev)n(elop)r(ed)f(as)h(the)
h Fm(\001m)2102 1423 y Fv(15)2172 1411 y Fw(\(B\),)g
Fi(MLCS)p Fw(,)g(and)f(stretc)n(h)g(metho)r(ds,)523 1511
y(they)35 b(all)f(pro)n(vide)f(distances)g(that)i(are)e(comparable)g
(in)i(precision,)e(roughly)g Fm(\033)38 b Fw(=)33 b(0)p
Fm(:)p Fw(18)523 1611 y(mag)27 b(ab)r(out)h(the)g(in)n(v)n(erse)e
(square)h(la)n(w,)g(equating)g(to)g(a)h(fundamen)n(tal)g(precision)e
(of)i(SNIa)523 1710 y(distances)i(of)g Fj(\030)d Fw(6\045)j(\(0.12)g
(mag\),)g(once)f(photometric)h(uncertain)n(ties)g(and)g(p)r(eculiar)g
(v)n(e-)523 1810 y(lo)r(cities)k(are)f(remo)n(v)n(ed.)g(Finally)-7
b(,)34 b(a)g(\\p)r(o)r(or)f(man's")h(distance)g(indicator,)f(the)i
(snapshot)523 1910 y(metho)r(d)g([80],)e(com)n(bines)g(information)h
(con)n(tained)f(in)h(one)g(or)f(more)h(SN)g(sp)r(ectra)f(with)523
2009 y(as)25 b(little)i(as)e(one)h(nigh)n(t's)g(m)n(ulti-color)e
(photometry)-7 b(.)26 b(This)g(metho)r(d's)g(accuracy)f(dep)r(ends)523
2109 y(critically)i(on)g(ho)n(w)g(m)n(uc)n(h)h(information)e(is)i(a)n
(v)-5 b(ailable.)523 2372 y Fo(3)112 b(Cosmological)35
b(P)m(arameters)523 2570 y Fw(The)27 b(standard)e(mo)r(del)i(for)f
(describing)f(the)i(global)f(ev)n(olution)f(of)i(the)g(Univ)n(erse)e
(is)i(based)523 2669 y(on)32 b(t)n(w)n(o)g(equations)g(that)g(mak)n(e)g
(some)g(simple,)h(and)f(hop)r(efully)h(v)-5 b(alid,)33
b(assumptions.)f(If)523 2769 y(the)26 b(Univ)n(erse)e(is)h(isotropic)f
(and)h(homogenous)e(on)i(large)f(scales,)g(the)h(Rob)r(ertson-W)-7
b(alk)n(er)523 2869 y(Metric,)1312 3100 y Fm(ds)1394
3066 y Fv(2)1454 3100 y Fw(=)23 b Fm(dt)1615 3066 y Fv(2)1671
3100 y Fj(\000)18 b Fm(a)p Fw(\()p Fm(t)p Fw(\))1906
2983 y Fk(\024)2032 3044 y Fm(dr)2114 3014 y Fv(2)p 1960
3081 266 4 v 1960 3157 a Fw(1)g Fj(\000)g Fm(k)s(r)2188
3133 y Fv(2)2254 3100 y Fw(+)g Fm(r)2376 3066 y Fv(2)2414
3100 y Fm(d\022)2498 3066 y Fv(2)2536 2983 y Fk(\025)2593
3100 y Fm(:)683 b Fw(\(4\))523 3298 y(giv)n(es)26 b(the)h(line)h
(elemen)n(t)f(distance\(s\))g(b)r(et)n(w)n(een)g(t)n(w)n(o)f(ob)5
b(jects)27 b(with)g(co)r(ordinates)f Fm(r)r Fw(,)p Fm(\022)k
Fw(and)523 3398 y(time)40 b(separation,)d Fm(t)p Fw(.)j(The)f(Univ)n
(erse)f(is)h(assumed)g(to)g(ha)n(v)n(e)e(a)i(simple)g(top)r(ology)f
(suc)n(h)523 3497 y(that,)d(if)g(it)g(has)f(negativ)n(e,)f(zero,)h(or)f
(p)r(ositiv)n(e)h(curv)-5 b(ature,)34 b Fm(k)j Fw(tak)n(es)d(the)h(v)-5
b(alue)34 b Fj(\000)p Fw(1)p Fm(;)14 b Fw(0)p Fm(;)g
Fw(1)n(,)523 3597 y(resp)r(ectiv)n(ely)-7 b(.)31 b(These)h(mo)r(dels)f
(of)h(the)h(Univ)n(erse)e(are)f(said)i(to)g(b)r(e)g(op)r(en,)g(\015at,)
g(or)f(closed,)523 3697 y(resp)r(ectiv)n(ely)-7 b(.)29
b(The)h(dynamic)f(ev)n(olution)g(of)h(the)g(Univ)n(erse)f(needs)g(to)h
(b)r(e)g(input)g(in)n(to)g(the)523 3796 y(Rob)r(ertson-W)-7
b(alk)n(er)19 b(Metric)h(b)n(y)h(the)g(sp)r(eci\014cation)g(of)g(the)g
(scale)f(factor)g Fm(a)p Fw(\()p Fm(t)p Fw(\),)h(whic)n(h)g(giv)n(es)
523 3896 y(the)26 b(radius)f(of)h(curv)-5 b(ature)25
b(of)h(the)g(Univ)n(erse)f(o)n(v)n(er)f(time)i({)f(or)g(more)g(simply)
-7 b(,)26 b(pro)n(vides)f(the)523 3995 y(relativ)n(e)g(size)i(of)f(a)g
(piece)h(of)g(space)e(at)i(an)n(y)f(time.)h(This)f(description)g(of)h
(the)g(dynamics)f(of)523 4095 y(the)j(Univ)n(erse)f(is)h(deriv)n(ed)f
(from)g(General)g(Relativit)n(y,)h(and)f(is)h(kno)n(wn)f(as)g(the)h(F)
-7 b(riedman)523 4195 y(equation)1458 4416 y Fm(H)1534
4382 y Fv(2)1595 4416 y Fj(\021)22 b Fw(\()10 b(_)-33
b Fm(a=a)p Fw(\))1876 4382 y Fv(2)1936 4416 y Fw(=)2034
4360 y(8)p Fm(\031)s(G\032)p 2034 4397 201 4 v 2113 4473
a Fw(3)2262 4416 y Fj(\000)2373 4360 y Fm(k)p 2355 4397
82 4 v 2355 4473 a(a)2399 4449 y Fv(2)2446 4416 y Fm(:)830
b Fw(\(5\))648 4592 y(The)28 b(expansion)e(rate)i(of)f(our)h(Univ)n
(erse)f(\()p Fm(H)7 b Fw(\),)28 b(is)g(called)f(the)i(Hubble)f
(parameter)f(\(or)523 4692 y(the)j(Hubble)h(constan)n(t,)e
Fm(H)1388 4704 y Fv(0)1425 4692 y Fw(,)h(at)g(the)g(presen)n(t)g(ep)r
(o)r(c)n(h\))g(and)f(dep)r(ends)i(on)e(the)i(con)n(ten)n(t)e(of)523
4792 y(the)e(Univ)n(erse.)e(Here)h(w)n(e)g(assume)g(the)g(Univ)n(erse)g
(is)g(comp)r(osed)g(of)g(a)g(set)g(of)g(comp)r(onen)n(ts,)523
4891 y(eac)n(h)h(ha)n(ving)f(a)i(fraction,)f Fm(\012)1441
4903 y Fl(i)1468 4891 y Fw(,)h(of)g(the)g(critical)f(densit)n(y)p
eop
%%Page: 6 6
6 5 bop 523 232 a Ft(6)237 b(P)n(erlm)n(utter)25 b(and)g(Sc)n(hmidt)
1624 515 y Fm(\012)1688 527 y Fl(i)1739 515 y Fw(=)1880
459 y Fm(\032)1923 471 y Fl(i)p 1837 496 158 4 v 1837
572 a Fm(\032)1880 584 y Fl(cr)r(it)2028 515 y Fw(=)2163
459 y Fm(\032)2206 471 y Fl(i)p 2125 496 146 4 v 2136
552 a Fv(3)p Fl(H)2227 532 y Fg(2)2223 572 y(0)p 2135
579 126 4 v 2135 627 a Fv(8)p Fl(\031)r(G)2281 515 y
Fm(;)995 b Fw(\(6\))523 743 y(with)26 b(an)f(equation)f(of)i(state)f
(whic)n(h)g(relates)f(the)i(densit)n(y)-7 b(,)25 b Fm(\032)2433
755 y Fl(i)2460 743 y Fw(,)h(and)f(pressure,)f Fm(p)3055
755 y Fl(i)3082 743 y Fw(,)i(as)e Fm(w)3289 755 y Fl(i)3340
743 y Fw(=)523 842 y Fm(p)565 854 y Fl(i)592 842 y Fm(=\032)677
854 y Fl(i)705 842 y Fw(.)30 b(F)-7 b(or)31 b(example,)f
Fm(w)1321 854 y Fl(i)1380 842 y Fw(tak)n(es)g(the)h(v)-5
b(alue)30 b(0)h(for)f(normal)g(matter,)g(+1/3)f(for)h(photons,)523
942 y(and)e(-1)f(for)g(the)i(cosmological)c(constan)n(t.)i(The)h
(equation)f(of)h(state)g(parameter)e(do)r(es)i(not)523
1041 y(need)e(to)g(remain)f(\014xed;)h(if)h(scalar)d(\014elds)i(are)f
(presen)n(t,)g(the)h(e\013ectiv)n(e)g Fm(w)j Fw(will)d(c)n(hange)f(o)n
(v)n(er)523 1141 y(time.)31 b(Most)f(reasonable)f(forms)h(of)g(matter)h
(or)e(scalar)g(\014elds)i(ha)n(v)n(e)e Fm(w)2778 1153
y Fl(i)2834 1141 y Fj(\025)f(\000)p Fw(1,)i(although)523
1241 y(nothing)35 b(seems)g(manifestly)g(forbidden.)g(Com)n(bining)g
(Eqs.)f(\(4{6\))h(yields)g(solutions)f(to)523 1340 y(the)28
b(global)e(ev)n(olution)h(of)h(the)g(Univ)n(erse)e([13].)648
1440 y(The)37 b(luminosit)n(y)g(distance,)g Fm(D)1669
1452 y Fl(L)1718 1440 y Fw(,)h(whic)n(h)f(is)g(de\014ned)h(as)e(the)i
(apparen)n(t)e(brigh)n(tness)523 1540 y(of)d(an)g(ob)5
b(ject)34 b(as)e(a)h(function)h(of)g(its)f(redshift)h
Fm(z)j Fw({)c(the)g(amoun)n(t)g(an)g(ob)5 b(ject's)33
b(ligh)n(t)h(has)523 1639 y(b)r(een)27 b(stretc)n(hed)f(b)n(y)h(the)g
(expansion)e(of)i(the)g(Univ)n(erse)e({)i(can)f(b)r(e)h(deriv)n(ed)f
(from)g(Eqs.)g(\(4{)523 1739 y(6\))35 b(b)n(y)f(solving)g(for)g(the)h
(surface)f(area)f(as)h(a)h(function)g(of)g Fm(z)t Fw(,)f(and)g(taking)g
(in)n(to)h(accoun)n(t)523 1838 y(the)d(e\013ects)h(of)f(time)g
(dilation)g([25,26,50,82])c(and)k(energy)f(dim)n(unition)h(as)g
(photons)f(get)523 1938 y(stretc)n(hed)c(tra)n(v)n(eling)f(through)h
(the)h(expanding)f(Univ)n(erse.)g Fm(D)2513 1950 y Fl(L)2590
1938 y Fw(is)h(giv)n(en)e(b)n(y)i(the)g(n)n(umer-)523
2038 y(ically)f(in)n(tegrable)f(equation,)565 2346 y
Fm(D)634 2358 y Fl(L)706 2346 y Fw(=)839 2290 y Fm(c)p
804 2327 107 4 v 804 2403 a(H)873 2415 y Fv(0)920 2346
y Fw(\(1)8 b(+)g Fm(z)t Fw(\))p Fm(\024)1198 2303 y Ff(\000)p
Fv(1)p Fl(=)p Fv(2)1198 2368 y(0)1353 2346 y Fm(S)d Fj(f)p
Fm(\024)1499 2303 y Fv(1)p Fl(=)p Fv(2)1499 2368 y(0)1617
2233 y Fk(Z)1700 2254 y Fl(z)1663 2422 y Fv(0)1752 2346
y Fm(dz)1838 2312 y Ff(0)1860 2346 y Fw([)1883 2267 y
Fk(X)1932 2444 y Fl(i)2017 2346 y Fm(\012)2081 2358 y
Fl(i)2109 2346 y Fw(\(1)j(+)g Fm(z)2307 2312 y Ff(0)2329
2346 y Fw(\))2361 2312 y Fv(3+3)p Fl(w)2526 2320 y Fe(i)2566
2346 y Fj(\000)g Fm(\024)2687 2358 y Fv(0)2724 2346 y
Fw(\(1)g(+)g Fm(z)2922 2312 y Ff(0)2944 2346 y Fw(\))2976
2312 y Fv(2)3013 2346 y Fw(])3036 2312 y Ff(\000)p Fv(1)p
Fl(=)p Fv(2)3193 2346 y Fj(g)p Fm(:)41 b Fw(\(7\))523
2606 y Fm(S)5 b Fw(\()p Fm(x)p Fw(\))29 b(=)e(sin\()p
Fm(x)p Fw(\),)32 b Fm(x)p Fw(,)f(or)e(sinh\()p Fm(x)p
Fw(\))j(for)e(closed,)g(\015at,)g(and)h(op)r(en)f(mo)r(dels)g(resp)r
(ectiv)n(ely)-7 b(,)30 b(and)523 2706 y(the)e(curv)-5
b(ature)27 b(parameter)f Fm(\024)1483 2718 y Fv(0)1520
2706 y Fw(,)i(is)f(de\014ned)h(as)f Fm(\024)2090 2718
y Fv(0)2150 2706 y Fw(=)2238 2643 y Fk(P)2326 2730 y
Fl(i)2367 2706 y Fm(\012)2431 2718 y Fl(i)2477 2706 y
Fj(\000)18 b Fw(1.)648 2805 y(Historically)-7 b(,)31
b(Eq.)g(\(7\))h(has)g(not)g(b)r(een)g(easily)f(in)n(tegrated)g(and)h
(has)g(b)r(een)g(expanded)523 2905 y(in)c(a)f(T)-7 b(a)n(ylor)26
b(series)g(to)i(giv)n(e)1278 3133 y Fm(D)1347 3145 y
Fl(L)1420 3133 y Fw(=)1552 3077 y Fm(c)p 1517 3114 V
1517 3190 a(H)1586 3202 y Fv(0)1633 3133 y Fj(f)p Fm(z)22
b Fw(+)c Fm(z)1862 3099 y Fv(2)1912 3016 y Fk(\022)1983
3077 y Fw(1)g Fj(\000)g Fm(q)2163 3089 y Fv(0)p 1983
3114 218 4 v 2071 3190 a Fw(2)2210 3016 y Fk(\023)2290
3133 y Fw(+)g Fj(O)r Fw(\()p Fm(z)2516 3099 y Fv(3)2553
3133 y Fw(\))p Fj(g)p Fm(;)649 b Fw(\(8\))523 3328 y(where)27
b(the)h(deceleration)f(parameter,)f Fm(q)1825 3340 y
Fv(0)1862 3328 y Fw(,)i(is)f(giv)n(en)g(b)n(y)1541 3545
y Fm(q)1578 3557 y Fv(0)1639 3545 y Fw(=)1736 3489 y(1)p
1736 3526 42 4 v 1736 3602 a(2)1802 3467 y Fk(X)1850
3643 y Fl(i)1936 3545 y Fm(\012)2000 3557 y Fl(i)2027
3545 y Fw(\(1)19 b(+)f(3)p Fm(w)2304 3557 y Fl(i)2331
3545 y Fw(\))p Fm(:)913 b Fw(\(9\))648 3772 y(F)-7 b(rom)18
b(Eq.)h(\(9\))g(w)n(e)g(can)g(see)f(that,)i(in)f(the)h(nearb)n(y)e
(Univ)n(erse,)g(the)i(luminosit)n(y)f(distances)523 3872
y(scale)29 b(linearly)g(with)i(redshift,)f(with)g Fm(H)1804
3884 y Fv(0)1871 3872 y Fw(serving)f(as)g(the)i(constan)n(t)e(of)h
(prop)r(ortionalit)n(y)-7 b(.)523 3971 y(In)35 b(the)g(more)f(distan)n
(t)h(Univ)n(erse,)f Fm(D)1725 3983 y Fl(L)1809 3971 y
Fw(dep)r(ends)i(to)e(\014rst)h(order)e(on)i(the)g(rate)f(of)h(accel-)
523 4071 y(eration/deceleration)d(\()p Fm(q)1356 4083
y Fv(0)1394 4071 y Fw(\))k(or,)e(equiv)-5 b(alen)n(tly)e(,)35
b(on)g(the)g(amoun)n(t)g(and)g(t)n(yp)r(es)g(of)g(matter)523
4171 y(that)29 b(mak)n(e)e(up)i(the)f(Univ)n(erse.)g(F)-7
b(or)27 b(example,)h(since)g(normal)g(matter)g(has)f
Fm(w)3014 4183 y Fl(M)3113 4171 y Fw(=)c(0)28 b(and)523
4270 y(the)g(cosmological)e(constan)n(t)h(has)h Fm(w)1690
4282 y Fl(\003)1765 4270 y Fw(=)23 b Fj(\000)p Fw(1,)k(a)h(univ)n(erse)
f(comp)r(osed)g(of)h(only)g(these)g(t)n(w)n(o)523 4370
y(forms)h(of)h(matter/energy)d(has)i Fm(q)1591 4382 y
Fv(0)1655 4370 y Fw(=)d Fm(\012)1810 4382 y Fl(M)1884
4370 y Fm(=)p Fw(2)18 b Fj(\000)i Fm(\012)2135 4382 y
Fl(\003)2185 4370 y Fw(.)30 b(In)g(a)f(univ)n(erse)f(comp)r(osed)h(of)h
(these)523 4469 y(t)n(w)n(o)c(t)n(yp)r(es)h(of)f(matter,)h(if)g
Fm(\012)1425 4481 y Fl(\003)1498 4469 y Fm(<)c(\012)1650
4481 y Fl(M)1724 4469 y Fm(=)p Fw(2,)j Fm(q)1894 4481
y Fv(0)1958 4469 y Fw(is)g(p)r(ositiv)n(e)g(and)h(the)g(univ)n(erse)f
(is)g(decelerat-)523 4569 y(ing.)i(These)h(decelerating)e(univ)n(erses)
g(ha)n(v)n(e)h Fm(D)2008 4581 y Fl(L)2086 4569 y Fw(smaller)g(as)g(a)g
(function)h(of)f Fm(z)k Fw(than)d(their)523 4669 y(accelerating)d(coun)
n(terparts.)648 4768 y(If)j(distance)g(measuremen)n(ts)f(are)g(made)g
(at)h(a)g(lo)n(w-)p Fm(z)i Fw(and)e(a)g(small)f(range)g(of)h(redshift)
523 4868 y(at)34 b(higher)f Fm(z)k Fw(\(e.g.,)c(0)p Fm(:)p
Fw(3)f Fm(>)h(z)k(>)32 b Fw(0)p Fm(:)p Fw(5\),)h(there)h(is)f(a)h
(degeneracy)e(b)r(et)n(w)n(een)h Fm(\012)2992 4880 y
Fl(M)3100 4868 y Fw(and)g Fm(\012)3331 4880 y Fl(\003)3382
4868 y Fw(.)p eop
%%Page: 7 7
7 6 bop 1829 232 a Ft(Measuring)27 b(cosmology)g(with)e(Sup)r(erno)n(v)
l(ae)237 b(7)783 3413 y @beginspecial 49 @llx 61 @lly
539 @urx 700 @ury 2834 @rwi @setspecial
%%BeginDocument: PerlmutterSchmidtfig1.eps
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: 11 16 601 776
%AI3_DocumentPreview: Header
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -469 883 1 1578 1051 18 0 1 14 104 0 0
%AI5_OpenViewLayers: 7
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 50 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 40 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIDataProc null def
	/XIVersion 6 def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
end
currentdict /_colorimage known not {
	/colorimage where {
		/colorimage get /_colorimage exch def
	}{
		/_colorimage null def
	} ifelse
} if
/_image systemdict /image get def
/_currenttransfer systemdict /currenttransfer get def
/FourEqual {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual { 
				/plateindex 0 def
			}{
				0 1 0 0 FourEqual { 
					/plateindex 1 def
				}{
					0 0 1 0 FourEqual {
						/plateindex 2 def
					}{
						0 0 0 1 FourEqual { 
							/plateindex 3 def
						}{
							0 0 0 0 FourEqual {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/clrspaceissepn {
	type /arraytype eq 
} def
/clrspacegetname {
	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse
} def
/clrspacegetalt {
	aload pop pop pop colormake
} def
/clrspacegetcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/clrspacemarksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				/findcmykcustomcolor where {
					pop
					dup length 2 sub get
					0.1 0.1 0.1 0.1 5 -1 roll
					findcmykcustomcolor 1 setcustomcolor
					systemdict /currentgray get exec
					1 ne
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/colormake {
	dup clrspacegetcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/colorexpand {
	dup clrspacegetname exch
	dup clrspaceissepn {
		clrspacegetalt
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				clrspacegetalt colortint colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/WalkRGBString {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/CMYKToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/SeparateCMYKImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne {
			sourcearray plateindex get exec
		}{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub {
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/ColorImageCompositeEmulator {
	pop true eq {
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/colorimage {
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index
 end
	
	dup 8 eq exch 1 eq or not {
		/_colorimage load null ne {
			_colorimage
		}{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}{
		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {
			/_colorimage load null eq {
				ColorImageCompositeEmulator
			}{
				dup 1 eq {
					pop pop image
				}{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						grestore
					} if
				} ifelse
			} ifelse
		}{
			dup 1 eq {
				pop pop
				image
			}{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0 {			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace clrspacegetcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] makeimagedict _image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] makeimagedict _image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} stringapply
			} concatprocs _image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} stringapply
			} concatprocs false _pticomps
			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse
		} ifelse
	} ifelse
} def
/graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray proctintimage
} def
/cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK proctintimage
} def
/rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB proctintimage
} def
/tintimage {
	TestPlateIndex -1 eq {
		colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop graytintimage
		}{
			dup /DeviceRGB eq {
				pop rgbtintimage
			}{
				pop cmyktintimage
			} ifelse
		} ifelse
	}{
		dup clrspacemarksplate {
			plateindex 5 lt {
				colortocmyk plateindex get 1 exch sub
				exch {1 0}{0 1} ifelse () graytintimage
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage
			} ifelse
		}{
			pop pop pop
			{pop 1} 0 1 () /DeviceGray proctintimage
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace tintimage
} def
/XIImage {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIType 1 eq {
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEncoding 0 ne XIVersion 6 le and {
			currentfile 128 string readline pop pop
		} if
		XICompression 0 eq {
			/XIBuffer1 XIRowBytes string def
			XIEncoding 0 eq {
				{currentfile XIBuffer1 readhexstring pop}
			}{
				{currentfile XIBuffer1 readstring pop}
			} ifelse
		}{
			/XIBuffer1 256 string def
			/XIBuffer2 XIRowBytes string def
			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
			/ASCIIHexDecode filter /DCTDecode filter
			/XIFile exch def
			{XIFile XIBuffer2 readstring pop}
		} ifelse
		/XIDataProc exch def
		
		XIVersion 6 le {
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIType 1 eq {
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		XIEnable {
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		grestore
 end
} def
end
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
userdict /_useSmoothShade true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRider
currentpacking true setpacking
/TimesNewRomanPSMT havefont not {
/TimesNewRomanPSMT
15 dict dup begin
/FontName /TimesNewRomanPSMT def
/FontType 3 def
/FontMatrix [ 0.000977 0 0 0.000977 0 0 ] def
/FontAscent 1024 def
/FontDescent -314 def
/FontScript 0 def
/FontBBox [ 0 -512 1024 1024 ] def
/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
/l /lineto load def
/m /moveto load def
/c /curveto load def
/BuildChar {
	Adobe_Illustrator_AI5_vars exch /_bitlobyte exch put
	Adobe_Illustrator_AI5_vars exch /_bitfont exch put
	Adobe_Illustrator_AI5_vars /_bithibyte 0 put

	_bitlobyte 16 4 string cvrs dup length (K) dup length
	dup 4 -1 roll add string Adobe_Illustrator_AI5_vars exch /_bitkey exch put
	exch _bitkey copy pop _bitkey exch 3 -1 roll putinterval
	_bitfont /CharMetrics get _bitkey cvn get dup type /arraytype
	eq { aload pop setcachedevice }
	{ 0 setcharwidth } ifelse
	_bitfont /CharStrings get _bitkey cvn get exec
} bind def
18 dict dup begin
/KA {
} bind def
/KD {
} bind def
/K20 {
} bind def
/K28 {
{
newpath
236 -127 m
215 -101 199 -74 186 -46 c
174 -19 163 18 155 64 c
144 123 138 187 138 259 c
138 324 145 387 158 448 c
171 508 190 558 217 597 c
243 636 277 667 318 690 c
318 711 l
236 674 170 613 119 528 c
68 443 42 349 42 246 c
42 175 55 107 81 41 c
107 -25 144 -82 192 -130 c
226 -164 268 -194 318 -219 c
318 -200 l
284 -177 257 -152 236 -127 c
closepath
} exec
fill
} bind def
/K29 {
{
newpath
105 617 m
126 591 143 564 155 537 c
168 509 178 472 186 426 c
197 368 203 303 203 232 c
203 166 197 103 184 43 c
171 -18 151 -68 125 -107 c
98 -146 64 -177 23 -200 c
23 -219 l
105 -182 172 -121 223 -36 c
274 49 299 143 299 247 c
299 318 286 386 260 451 c
234 517 197 574 150 623 c
116 657 74 686 23 711 c
23 690 l
57 667 85 642 105 617 c
closepath
} exec
fill
} bind def
/K2D {
{
newpath
42 192 m
301 192 l
301 268 l
42 268 l
42 192 l
closepath
} exec
fill
} bind def
/K4D {
{
newpath
436 0 m
697 571 l
697 118 l
697 80 693 56 686 45 c
674 28 654 19 624 19 c
600 19 l
600 0 l
890 0 l
890 19 l
866 19 l
839 19 820 26 807 40 c
798 50 793 76 793 118 c
793 560 l
793 598 797 622 804 633 c
816 650 837 659 866 659 c
890 659 l
890 678 l
697 678 l
455 147 l
209 678 l
16 678 l
16 659 l
44 659 64 656 77 649 c
90 643 98 635 103 625 c
110 612 113 590 113 560 c
113 118 l
113 80 109 56 102 45 c
90 28 69 19 40 19 c
16 19 l
16 0 l
254 0 l
254 19 l
230 19 l
203 19 183 26 171 40 c
162 50 157 76 157 118 c
157 571 l
419 0 l
436 0 l
closepath
} exec
fill
} bind def
/K61 {
{
newpath
306 8 m
316 -3 329 -9 345 -9 c
380 -9 415 16 453 66 c
453 94 l
433 74 419 62 412 58 c
408 55 404 54 398 54 c
393 54 389 56 385 59 c
381 62 378 69 377 79 c
375 89 374 115 374 159 c
374 314 l
374 358 371 388 365 402 c
356 424 341 440 322 451 c
296 464 262 471 222 471 c
169 471 127 459 98 435 c
69 411 54 384 54 356 c
54 341 58 329 66 320 c
74 311 84 307 96 307 c
109 307 119 311 127 320 c
135 328 139 340 139 355 c
138 384 l
138 399 144 412 157 423 c
169 434 186 440 207 440 c
234 440 255 432 269 415 c
284 398 291 366 291 321 c
291 303 l
212 274 156 250 122 230 c
88 210 65 189 51 166 c
41 150 36 130 36 108 c
36 73 46 44 67 23 c
87 1 113 -10 145 -10 c
165 -10 185 -6 203 3 c
215 8 244 29 291 65 c
291 38 296 19 306 8 c
closepath
190 48 m
172 48 155 56 141 72 c
126 87 119 107 119 131 c
119 150 125 168 136 184 c
148 200 166 215 193 230 c
208 238 240 252 291 272 c
291 98 l
249 65 216 48 190 48 c
190 48 l
closepath
} exec
fill
} bind def
/K64 {
{
newpath
355 -14 m
378 -14 l
515 42 l
509 60 l
494 54 482 52 473 52 c
466 52 459 54 454 59 c
448 63 444 71 442 83 c
439 95 438 128 438 181 c
438 711 l
415 711 l
278 655 l
285 637 l
299 642 311 645 319 645 c
327 645 334 643 339 639 c
345 634 349 626 351 614 c
354 602 355 570 355 518 c
355 432 l
329 458 295 471 255 471 c
190 471 137 444 96 389 c
55 335 34 275 34 210 c
34 144 53 90 90 49 c
127 7 171 -14 221 -14 c
245 -14 268 -9 290 1 c
311 11 333 28 355 52 c
355 -14 l
closepath
267 41 m
232 41 199 59 170 95 c
141 130 126 182 126 249 c
126 315 141 366 171 401 c
194 427 220 440 249 440 c
265 440 281 435 298 426 c
314 416 327 402 337 384 c
347 365 353 344 355 321 c
355 87 l
327 56 298 41 267 41 c
267 41 l
closepath
} exec
fill
} bind def
/K65 {
{
newpath
426 285 m
426 342 409 387 376 420 c
343 454 301 471 250 471 c
189 471 139 449 98 405 c
58 362 38 301 38 223 c
38 150 58 93 97 50 c
136 7 183 -14 238 -14 c
289 -14 331 5 365 42 c
399 80 419 122 426 168 c
410 178 l
395 137 376 109 354 93 c
332 76 306 68 276 68 c
231 68 192 87 159 126 c
125 164 109 217 109 285 c
426 285 l
closepath
147 403 m
169 424 194 435 222 435 c
240 435 257 430 274 419 c
291 409 303 394 311 375 c
317 364 320 343 322 314 c
109 314 l
113 352 125 382 147 403 c
closepath
} exec
fill
} bind def
/K66 {
{
newpath
330 422 m
330 458 l
212 458 l
212 491 l
212 563 214 607 219 625 c
224 642 231 654 242 663 c
253 671 266 675 281 675 c
294 675 305 672 316 666 c
326 659 337 647 350 629 c
362 611 372 599 381 593 c
389 588 397 585 405 585 c
415 585 424 589 433 598 c
442 607 446 617 446 627 c
446 645 436 662 417 677 c
388 700 355 711 320 711 c
283 711 249 701 218 682 c
188 662 166 636 151 605 c
136 573 129 534 129 488 c
129 458 l
40 458 l
40 422 l
129 422 l
129 121 l
129 88 127 66 123 55 c
119 44 111 35 100 28 c
89 21 77 18 64 18 c
43 18 l
43 0 l
317 0 l
317 18 l
276 18 l
255 18 238 25 226 40 c
217 51 212 78 212 121 c
212 422 l
330 422 l
closepath
} exec
fill
} bind def
/K67 {
{
newpath
89 100 m
80 85 75 71 75 60 c
75 49 79 40 86 32 c
93 24 105 14 123 4 c
91 -29 74 -47 72 -50 c
54 -72 42 -89 37 -101 c
33 -109 31 -117 31 -125 c
31 -143 43 -161 68 -177 c
113 -206 167 -221 231 -221 c
315 -221 382 -197 434 -148 c
469 -115 487 -80 487 -42 c
487 -15 478 8 459 27 c
441 45 416 57 385 61 c
365 64 321 67 252 69 c
215 70 192 71 182 73 c
166 75 156 79 150 84 c
145 90 142 95 142 101 c
142 107 145 115 150 124 c
155 134 165 145 179 157 c
203 150 226 147 249 147 c
304 147 347 162 380 193 c
413 223 429 259 429 302 c
429 339 420 370 401 394 c
461 394 l
475 394 484 395 486 396 c
489 397 490 398 491 400 c
493 403 494 409 494 418 c
494 425 493 431 491 434 c
490 436 488 437 486 438 c
484 439 475 439 461 439 c
364 439 l
332 460 294 471 251 471 c
197 471 153 455 119 422 c
85 389 68 350 68 305 c
68 276 75 249 90 224 c
105 200 127 181 155 167 c
121 138 99 116 89 100 c
closepath
307 413 m
330 383 341 342 341 289 c
341 249 333 219 317 200 c
300 181 280 172 254 172 c
228 172 206 183 189 205 c
166 234 155 274 155 327 c
155 367 163 397 180 417 c
196 436 217 446 242 446 c
268 446 290 435 307 413 c
307 413 l
closepath
322 -12 m
373 -13 407 -18 425 -25 c
442 -32 450 -44 450 -62 c
450 -85 436 -108 407 -129 c
379 -150 335 -160 276 -160 c
213 -160 165 -150 132 -129 c
113 -117 103 -103 103 -87 c
103 -75 107 -62 115 -47 c
123 -33 135 -17 150 0 c
190 -6 248 -10 322 -12 c
322 -12 l
closepath
} exec
fill
} bind def
/K68 {
{
newpath
144 711 m
7 655 l
14 637 l
30 642 41 645 48 645 c
57 645 64 643 69 639 c
74 634 78 626 80 614 c
83 602 84 570 84 518 c
84 104 l
84 75 82 56 78 47 c
74 37 69 31 62 28 c
50 21 34 18 14 18 c
14 0 l
241 0 l
241 18 l
218 18 201 21 192 26 c
182 31 176 37 172 45 c
169 53 167 72 167 104 c
167 345 l
192 371 213 388 231 397 c
248 406 265 410 282 410 c
298 410 311 406 323 398 c
334 391 342 379 347 363 c
352 348 355 315 355 265 c
355 104 l
355 78 355 62 354 57 c
350 44 344 34 336 28 c
328 21 313 18 292 18 c
281 18 l
281 0 l
506 0 l
506 18 l
485 18 470 20 462 25 c
454 30 448 36 445 44 c
440 55 438 75 438 104 c
438 266 l
438 322 435 361 429 382 c
420 413 406 435 387 450 c
368 464 346 471 320 471 c
298 471 277 465 255 454 c
233 442 204 416 167 375 c
167 711 l
144 711 l
closepath
} exec
fill
} bind def
/K69 {
{
newpath
112 696 m
102 686 97 674 97 660 c
97 646 102 634 112 624 c
122 614 134 609 148 609 c
162 609 174 614 184 624 c
194 634 199 646 199 660 c
199 674 194 686 184 696 c
174 706 162 711 148 711 c
134 711 122 706 112 696 c
closepath
168 471 m
30 415 l
37 397 l
50 402 62 405 71 405 c
80 405 87 402 92 398 c
97 394 100 387 103 376 c
106 361 107 329 107 279 c
107 104 l
107 76 105 56 100 46 c
96 36 90 29 82 25 c
74 20 59 18 37 18 c
37 0 l
260 0 l
260 18 l
238 18 223 20 215 25 c
207 30 200 37 196 46 c
192 56 190 75 190 104 c
190 471 l
168 471 l
closepath
} exec
fill
} bind def
/K6D {
{
newpath
169 471 m
147 471 l
9 415 l
17 397 l
30 402 41 405 50 405 c
59 405 66 402 71 398 c
76 394 79 387 82 376 c
85 361 86 328 86 278 c
86 104 l
86 76 84 56 79 46 c
75 37 69 29 60 25 c
52 20 37 18 16 18 c
16 0 l
243 0 l
243 18 l
218 18 202 20 194 25 c
185 29 179 36 175 45 c
171 54 169 74 169 104 c
169 348 l
184 366 205 383 233 397 c
250 407 268 412 286 412 c
312 412 333 401 348 380 c
359 363 364 337 364 300 c
364 104 l
364 77 363 60 362 54 c
358 42 351 33 342 27 c
332 21 315 18 290 18 c
290 0 l
521 0 l
521 18 l
498 18 481 21 472 26 c
462 31 456 37 452 45 c
449 53 447 72 447 104 c
447 321 l
445 342 l
446 348 l
471 372 493 388 511 397 c
529 406 547 410 565 410 c
593 410 614 399 627 378 c
636 363 641 337 641 300 c
641 104 l
641 77 640 61 639 55 c
636 43 630 35 623 30 c
612 22 596 18 577 18 c
567 18 l
567 0 l
792 0 l
792 18 l
772 18 758 21 749 26 c
740 31 734 37 730 45 c
726 55 724 75 724 104 c
724 300 l
724 342 720 372 713 391 c
702 419 687 440 668 452 c
649 465 627 471 603 471 c
578 471 554 465 530 452 c
506 439 477 413 443 373 c
436 405 422 429 401 446 c
381 463 356 471 327 471 c
310 471 293 467 276 460 c
259 453 243 443 228 431 c
222 426 202 406 169 373 c
169 471 l
closepath
} exec
fill
} bind def
/K72 {
{
newpath
146 471 m
7 415 l
12 397 l
25 402 37 405 47 405 c
56 405 63 402 69 398 c
75 393 79 385 81 375 c
83 365 84 333 84 280 c
84 104 l
84 77 83 61 82 55 c
78 43 72 35 64 29 c
53 22 35 18 12 18 c
12 0 l
247 0 l
247 18 l
226 18 211 21 200 27 c
189 33 181 40 177 49 c
170 62 167 82 167 107 c
167 326 l
183 357 198 380 213 393 c
220 400 227 403 233 403 c
240 403 250 397 265 386 c
279 375 292 369 304 369 c
316 369 326 374 335 383 c
344 392 348 403 348 416 c
348 430 342 443 330 454 c
318 465 303 471 285 471 c
244 471 205 437 167 368 c
167 471 l
146 471 l
closepath
} exec
fill
} bind def
/K73 {
{
newpath
312 471 m
308 463 304 458 301 456 c
298 453 294 452 289 452 c
283 452 272 455 255 460 c
229 467 207 471 189 471 c
148 471 115 458 89 433 c
63 408 50 376 50 338 c
50 309 57 285 72 266 c
87 247 119 225 167 201 c
216 178 248 158 265 142 c
281 127 289 108 289 85 c
289 66 282 50 267 36 c
253 23 234 16 211 16 c
178 16 149 28 123 52 c
96 75 78 110 69 157 c
52 157 l
52 -7 l
69 -7 l
73 1 79 5 87 5 c
94 5 103 3 114 0 c
150 -9 182 -14 210 -14 c
249 -14 284 -1 316 24 c
347 50 363 83 363 125 c
363 179 329 222 261 255 c
188 291 l
157 306 135 320 125 334 c
114 347 109 363 109 382 c
109 397 116 410 131 423 c
145 435 164 441 187 441 c
218 441 243 432 263 415 c
283 397 299 364 312 315 c
329 315 l
329 471 l
312 471 l
closepath
} exec
fill
} bind def
/K74 {
{
newpath
150 609 m
136 575 126 552 118 539 c
103 515 86 494 67 477 c
47 460 28 447 10 440 c
10 424 l
83 424 l
83 115 l
83 82 87 57 94 41 c
101 26 111 13 126 5 c
141 -4 156 -8 171 -8 c
194 -8 216 0 237 17 c
259 33 275 58 287 91 c
267 91 l
261 78 253 67 243 60 c
233 53 222 50 211 50 c
198 50 187 55 179 66 c
170 76 166 96 166 126 c
166 423 l
273 424 l
273 458 l
166 458 l
166 609 l
150 609 l
closepath
} exec
fill
} bind def
end /CharStrings exch def
18 dict dup begin
/KA [797 0 143 0 654 640] def
Encoding 10 /KA put
/KD [797 0 143 0 654 640] def
Encoding 13 /KD put
/K20 [256 0 0 0 0 0] def
Encoding 32 /K20 put
/K28 [341 0 42 -218 318 712] def
Encoding 40 /K28 put
/K29 [341 0 23 -218 299 712] def
Encoding 41 /K29 put
/K2D [341 0 42 193 301 268] def
Encoding 45 /K2D put
/K4D [911 0 15 0 890 679] def
Encoding 77 /K4D put
/K61 [455 0 36 -9 453 472] def
Encoding 97 /K61 put
/K64 [512 0 34 -13 515 712] def
Encoding 100 /K64 put
/K65 [455 0 38 -13 425 472] def
Encoding 101 /K65 put
/K66 [341 0 39 0 445 710] def
Encoding 102 /K66 put
/K67 [512 0 31 -221 493 472] def
Encoding 103 /K67 put
/K68 [512 0 7 0 506 712] def
Encoding 104 /K68 put
/K69 [285 0 31 0 260 712] def
Encoding 105 /K69 put
/K6D [797 0 9 0 791 472] def
Encoding 109 /K6D put
/K72 [341 0 7 0 347 472] def
Encoding 114 /K72 put
/K73 [399 0 50 -13 362 472] def
Encoding 115 /K73 put
/K74 [285 0 10 -7 287 609] def
Encoding 116 /K74 put
end /CharMetrics exch def
end
definefont pop
} if
/SymbolMT havefont not {
/SymbolMT
15 dict dup begin
/FontName /SymbolMT def
/FontType 3 def
/FontMatrix [ 0.000977 0 0 0.000977 0 0 ] def
/FontAscent 1024 def
/FontDescent -225 def
/FontScript 0 def
/FontBBox [ 0 -512 1024 1024 ] def
/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
/l /lineto load def
/m /moveto load def
/c /curveto load def
/BuildChar {
	Adobe_Illustrator_AI5_vars exch /_bitlobyte exch put
	Adobe_Illustrator_AI5_vars exch /_bitfont exch put
	Adobe_Illustrator_AI5_vars /_bithibyte 0 put

	_bitlobyte 16 4 string cvrs dup length (K) dup length
	dup 4 -1 roll add string Adobe_Illustrator_AI5_vars exch /_bitkey exch put
	exch _bitkey copy pop _bitkey exch 3 -1 roll putinterval
	_bitfont /CharMetrics get _bitkey cvn get dup type /arraytype
	eq { aload pop setcachedevice }
	{ 0 setcharwidth } ifelse
	_bitfont /CharStrings get _bitkey cvn get exec
} bind def
15 dict dup begin
/KA {
} bind def
/KD {
} bind def
/K20 {
} bind def
/K28 {
{
newpath
213 -93 m
188 -53 170 -4 158 57 c
146 117 140 184 140 258 c
140 324 147 387 160 447 c
173 508 192 558 219 597 c
245 636 279 667 320 690 c
320 711 l
238 674 171 613 120 528 c
69 443 43 349 43 245 c
43 145 67 54 116 -30 c
165 -114 233 -178 320 -221 c
320 -200 l
274 -168 238 -132 213 -93 c
closepath
} exec
fill
} bind def
/K2C {
{
newpath
168 -102 m
192 -73 204 -41 204 -6 c
204 26 195 51 178 70 c
161 89 142 99 120 99 c
102 99 86 93 74 82 c
61 70 55 56 55 40 c
55 23 60 9 70 -1 c
79 -10 92 -15 108 -15 c
115 -15 122 -13 128 -10 c
140 -3 147 0 149 0 c
153 0 156 -2 159 -5 c
162 -8 163 -14 163 -21 c
163 -48 154 -73 135 -97 c
116 -121 89 -138 55 -150 c
55 -172 l
107 -155 144 -132 168 -102 c
closepath
} exec
fill
} bind def
/K2E {
{
newpath
168 80 m
157 91 144 96 129 96 c
113 96 100 91 89 80 c
78 69 73 56 73 41 c
73 25 78 12 89 1 c
100 -10 113 -15 129 -15 c
144 -15 157 -10 168 1 c
179 12 184 25 184 41 c
184 56 179 69 168 80 c
closepath
} exec
fill
} bind def
/K30 {
{
newpath
91 101 m
134 24 188 -14 253 -14 c
285 -14 319 -2 354 23 c
390 48 418 88 441 144 c
464 199 475 266 475 345 c
475 458 449 547 398 613 c
356 666 310 693 257 693 c
232 693 206 686 181 671 c
155 656 133 636 113 609 c
87 574 68 532 55 484 c
43 437 37 386 37 334 c
37 244 55 166 91 101 c
91 101 l
closepath
148 500 m
157 558 173 602 197 629 c
215 650 235 660 257 660 c
277 660 293 654 307 643 c
326 627 341 601 353 563 c
369 511 377 447 377 372 c
377 265 369 183 354 126 c
344 88 329 61 310 45 c
291 28 272 20 254 20 c
226 20 202 36 182 67 c
151 119 135 208 135 333 c
135 385 139 441 148 500 c
closepath
} exec
fill
} bind def
/K31 {
{
newpath
128 596 m
150 606 167 612 179 612 c
187 612 195 609 201 604 c
207 599 212 591 214 581 c
217 567 219 535 219 486 c
219 120 l
219 81 218 57 215 50 c
211 40 204 32 194 27 c
184 22 163 20 132 19 c
132 0 l
388 0 l
388 19 l
357 20 337 23 327 28 c
317 33 310 40 307 49 c
304 59 302 82 302 120 c
302 693 l
285 693 l
120 612 l
128 596 l
closepath
} exec
fill
} bind def
/K33 {
{
newpath
68 542 m
103 597 146 625 197 625 c
229 625 256 614 278 593 c
299 572 310 544 310 510 c
310 483 304 459 292 437 c
280 415 261 396 235 381 c
208 365 182 355 156 352 c
156 337 l
172 337 l
198 337 224 331 249 320 c
274 309 294 297 308 284 c
319 274 329 257 339 235 c
348 213 353 190 353 167 c
353 130 340 98 315 72 c
290 45 261 32 227 32 c
213 32 200 34 187 37 c
179 39 165 46 145 56 c
125 66 113 72 107 74 c
98 77 90 78 82 78 c
71 78 61 74 53 67 c
45 60 41 51 41 41 c
41 27 49 15 66 3 c
83 -8 113 -14 157 -14 c
254 -14 327 16 375 75 c
410 118 427 167 427 224 c
427 265 416 301 395 332 c
373 362 342 386 300 402 c
362 455 393 506 393 556 c
393 586 382 614 361 640 c
332 675 290 693 236 693 c
192 693 155 681 125 656 c
96 631 71 596 52 550 c
68 542 l
closepath
} exec
fill
} bind def
/K37 {
{
newpath
38 517 m
52 512 l
69 544 92 567 120 583 c
136 592 163 596 200 596 c
387 596 l
184 -14 l
240 -14 l
466 660 l
466 679 l
103 679 l
38 517 l
closepath
} exec
fill
} bind def
/K3D {
{
newpath
19 331 m
543 331 l
543 380 l
19 380 l
19 331 l
closepath
19 144 m
543 144 l
543 193 l
19 193 l
19 144 l
closepath
} exec
fill
} bind def
/K44 {
{
newpath
328 694 m
13 0 l
614 0 l
328 694 l
closepath
76 41 m
296 525 l
496 41 l
76 41 l
closepath
} exec
fill
} bind def
/K4C {
{
newpath
340 694 m
122 133 l
104 87 85 55 66 38 c
53 27 34 21 10 19 c
10 0 l
214 0 l
214 19 l
188 21 171 26 161 34 c
152 42 147 52 147 65 c
147 75 152 94 163 120 c
322 528 l
478 123 l
489 95 494 75 494 64 c
494 51 490 40 481 32 c
472 25 456 20 432 19 c
432 0 l
693 0 l
693 19 l
667 20 647 26 632 37 c
612 54 595 80 581 118 c
359 694 l
340 694 l
closepath
} exec
fill
} bind def
/K4D {
{
newpath
437 0 m
698 572 l
698 118 l
698 80 694 56 687 45 c
675 28 655 19 625 19 c
601 19 l
601 0 l
891 0 l
891 19 l
867 19 l
840 19 821 26 808 40 c
799 50 794 76 794 118 c
794 561 l
794 599 798 623 805 634 c
817 651 838 660 867 660 c
891 660 l
891 679 l
699 679 l
456 148 l
211 679 l
17 679 l
17 660 l
29 660 l
59 660 81 653 94 640 c
107 626 114 600 114 561 c
114 118 l
114 80 110 56 103 45 c
91 28 70 19 41 19 c
17 19 l
17 0 l
255 0 l
255 19 l
231 19 l
204 19 184 26 172 40 c
163 50 158 76 158 118 c
158 570 l
419 0 l
437 0 l
closepath
} exec
fill
} bind def
/K57 {
{
newpath
758 139 m
739 139 l
737 119 730 104 718 95 c
706 86 685 81 654 81 c
516 81 l
520 116 l
585 131 639 164 679 215 c
720 266 740 326 740 395 c
740 451 725 503 696 550 c
666 597 624 633 570 657 c
515 682 456 694 391 694 c
285 694 200 665 138 608 c
76 550 45 479 45 395 c
45 328 64 270 102 220 c
140 171 194 136 264 116 c
264 81 l
129 81 l
99 81 76 87 62 98 c
52 105 47 119 46 139 c
27 139 l
27 0 l
309 0 l
297 140 l
251 157 217 185 194 224 c
171 264 160 317 160 384 c
160 468 182 535 227 584 c
271 633 326 658 391 658 c
457 658 513 634 557 585 c
601 537 623 467 623 377 c
623 311 612 260 590 224 c
568 188 533 160 486 140 c
474 0 l
758 0 l
758 139 l
closepath
} exec
fill
} bind def
end /CharStrings exch def
15 dict dup begin
/KA [615 0 51 0 564 640] def
Encoding 10 /KA put
/KD [615 0 51 0 564 640] def
Encoding 13 /KD put
/K20 [256 0 0 0 0 0] def
Encoding 32 /K20 put
/K28 [341 0 43 -220 318 712] def
Encoding 40 /K28 put
/K2C [256 0 55 -172 205 98] def
Encoding 44 /K2C put
/K2E [256 0 73 -15 183 95] def
Encoding 46 /K2E put
/K30 [512 0 37 -13 475 692] def
Encoding 48 /K30 put
/K31 [512 0 120 0 388 692] def
Encoding 49 /K31 put
/K33 [512 0 42 -13 427 692] def
Encoding 51 /K33 put
/K37 [512 0 38 -13 467 679] def
Encoding 55 /K37 put
/K3D [562 0 18 143 544 379] def
Encoding 61 /K3D put
/K44 [627 0 13 0 613 694] def
Encoding 68 /K44 put
/K4C [703 0 10 0 694 694] def
Encoding 76 /K4C put
/K4D [911 0 17 0 892 679] def
Encoding 77 /K4D put
/K57 [787 0 29 0 760 694] def
Encoding 87 /K57 put
end /CharMetrics exch def
end
definefont pop
} if
setpacking
%AI3_EndRider
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _SymbolMT SymbolMT
[/_SymbolMT/SymbolMT 0 0 0 TZ
%AI3_EndEncoding TrueType
%AI55J_Tsume: None
%AI3_BeginEncoding: _TimesNewRomanPSMT TimesNewRomanPSMT
[/_TimesNewRomanPSMT/TimesNewRomanPSMT 0 0 0 TZ
%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
13 Bn
%AI5_BeginGradient: (Black, White Radial)
(Black, White Radial) 1 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 0 1 50 0 %_Bs
0 0 0 1 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Emerald Eye)
(Emerald Eye) 1 3 Bd
[
<
E4E4E4E4E5E5E5E5E5E5E5E5E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8
E8E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
ECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEF
EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
>
<
7675737271706E6D6C6B6A68676665646361605F5E5D5C5B5A595857565554535251504F4E4D4C4B
4A4948474646454443424141403F3E3D3C3C3B3A39393837363635343433323131302F2F2E2E2D2C
2C2B2A2A292928282726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1B1A1A19191818
181717171616151515141414131313121212111111101010100F0F0F0E0E0E0E0D0D0D0D0C0C0C0C
0B0B0B0B0B0A0A0A0A0A090909090908080808080807070707070706060606060606050505050505
05050404040404040404040403030303030303030303030302020202020202020202020202020202
01010101010101010101010101010101010101010101010101010101010000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000
>
<
F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F9F9
F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFB
FBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
9896959391908E8D8B8A8886858382807F7E7C7B79787675747271706E6D6C6A6968676564636261
5F5E5D5C5B5A5957565554535251504F4E4D4C4B4A49484746454443424241403F3E3D3C3C3B3A39
3837373635343433323131302F2F2E2D2D2C2B2B2A2929282727262625242423232222212120201F
1F1E1E1D1D1C1C1B1B1A1A1919181818171716161615151414141313131212121111111010100F0F
0F0F0E0E0E0D0D0D0D0C0C0C0C0B0B0B0B0A0A0A0A0A090909090908080808080707070707070606
06060606050505050505050504040404040404040403030303030303030303030202020202020202
02020202020202020101010101010101010101010101010101010101010101010101010000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000
>
1 %_Br
<
F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEDEDEDEDECECECECEBEBEBEAEAEAEAE9E9E9E8E8E8E7E7E6E6
E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DFDFDFDEDEDDDDDCDCDBDBDBDADAD9D9D8D8D7D7D6D6D5D5
D4D4D3D3D2D2D1D1D0D0CFCFCECECDCDCCCCCBCBCACAC9C8C8C7C7C6C6C5C5C4C3C3C2C2C1C1C0BF
BFBEBEBDBCBCBBBBBAB9B9B8B8B7B6B6B5B5B4B3B3B2B1B1B0B0AFAEAEADACACABAAAAA9A8A8A7A6
A6A5A4A4A3A2A2A1A0A09F9E9E9D9C9C9B9A9A99989797969595949393929190908F8E8E8D8C8B8B
8A89888887868685848383828180807F7E7D7D7C7B7A7A797877767675747373727170706F6E6D6C
6C6B6A696868676665646463626160605F5E5D5C5C5B5A5958575756555453535251504F4E4E4D4C
4B4A4948484746454443434241403F3E3D3C3C3B3A39383736363534333231302F2F2E2D2C2B2A29
282727262524232221201F1E1E1D1C1B1A19181716151414131211100F0E0D0C0B0A090807070605
0403020100
>
0
<
FFFFFFFFFFFEFEFEFEFEFDFDFDFDFDFCFCFCFCFBFBFBFAFAFAF9F9F9F8F8F8F7F7F7F6F6F6F5F5F4
F4F4F3F3F3F2F2F1F1F0F0F0EFEFEEEEEDEDECECECEBEBEAEAE9E9E8E8E7E7E6E6E5E5E4E4E3E3E2
E2E1E1E0E0DFDEDEDDDDDCDCDBDBDADAD9D8D8D7D7D6D6D5D4D4D3D3D2D1D1D0D0CFCECECDCDCCCB
CBCAC9C9C8C8C7C6C6C5C4C4C3C2C2C1C0C0BFBEBEBDBCBCBBBABAB9B8B8B7B6B6B5B4B4B3B2B2B1
B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A09F9F9E9D9C9C9B9A999998979696959493
939291908F8F8E8D8C8C8B8A898888878685848483828180807F7E7D7C7B7B7A7978777676757473
727171706F6E6D6C6C6B6A6968676666656463626160605F5E5D5C5B5A5959585756555453525151
504F4E4D4C4B4A49484847464544434241403F3E3E3D3C3B3A39383736353433323130302F2E2D2C
2B2A292827262524232221201F1E1D1D1C1B1A191817161514131211100F0E0D0C0B0A0908070605
0403020100
>
0
1 %_Br
[
0.8941 0.4627 0.9608 0.5961 1 16.2162 28.6517 %_Bs
0.9412 0 1 0 1 61.5385 64.6067 %_Bs
0 0 0 0 1 50 78.6517 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
F9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2
D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAA
A9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878685848382
81807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A
595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635343332
31302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A
0908070605040302
>
0.9882
<
05050505050505050505050505050505050505050505050505050505050505050505050505050505
05050606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606070707070707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707070707070707070707070707070707
07070707070708080808080808080808080808080808080808080808080808080808080808080808
0808080808080808
>
0
1 %_Br
<
E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEB
EBEBEBEBEBEBEBEBECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9
>
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B
8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3
B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADB
DCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC
>
<
09090909090909090909090909090909090909090909090909090909090908080808080808080808
08080808080808080808080808080808080808080808080808080808080808080808080808080808
08080808080808080707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
060606050505050505050505050505050505050505050505050505050505050505
>
0
1 %_Br
<
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8
>
<
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414
>
<
EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8
C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A0
9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978
77767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525150
4F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928
27262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09
>
0
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC
>
<
05050505050505050506060606060606060606060606060606070707070707070707070707070707
070808080808080808080808080808080808090909090909090909090909090909090A0A0A0A0A0A
0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C
0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F
0F0F0F0F0F0F0F0F0F0F0F0F10101010101010101010101010101010111111111111111111111111
1111111112121212121212121212121212121212131313131313131313
>
<
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEF
>
0
1 %_Br
<
03030303030303030303030303030303030303030303030304040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040505050505050505
05050505050505050505050505050505050505050505050505050505050505050505050505050505
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707080808080808080808080808080808080808080808080808
08
>
<
F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCE
CDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6
A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E
7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756
5554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706
05
>
0.9137
0
1 %_Br
[
0.0078 0.9882 0.0314 0 1 50 100 %_Bs
0.9765 0.9882 0.0196 0 1 50 80 %_Bs
0.9098 0.0784 0.0353 0 1 50 60 %_Bs
0.9255 0.0745 0.9373 0 1 50 40 %_Bs
0.0314 0.0196 0.9137 0 1 50 20 %_Bs
0.0118 0.9608 0.9137 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar II)
(Steel Bar II) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A
>
0 %_Br
<
1A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041
42434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263646566676869
6A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F9091
92939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9
BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1
E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0.1 0 50 100 %_Bs
1 0 50 39.8876 %_Bs
0.1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Sunset)
(Sunset) 0 5 Bd
[
<
EEEDEDECECEBEBEAE9E9E8E8E7E6E6E5E5E4E4E3E2E2E1E1E0DFDFDEDEDDDDDCDBDBDADAD9D9D8D7
D7D6D6D5D4D4D3D3D2D2D1
>
<
3534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E
0D0C0B0A09080706050403
>
1
<
807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160605F5E5D5C5B5A
595857565554535251504F
>
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE
>
<
050505060606060607070707080808080809090909090A0A0A0A0A0B0B0B0B0B0C0C0C0C0D0D0D0D
0D0E0E0E0E0E0F0F0F0F0F1010101010111111111212121212131313131314141414141515151515
161616161717171717181818181819191919191A1A1A1A1A1B1B1B1B1C1C1C1C1C1D1D1D1D1D1E1E
1E1E1E1F1F1F1F1F2020202021212121212222222222232323232324242424252525252526262626
2627272727272828282828292929292A2A2A2A2A2B2B2B2B2B2C2C2C2C2C2D2D2D2D2D2E2E2E2E2F
2F2F2F2F303030303031313131313232323232333333333434343434353535
>
<
E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECEDEDED
EDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F1
F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4
F4F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8
F8F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFC
FCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF
>
<
0001010202030304040506060707080809090A0B0B0C0C0D0D0E0E0F101011111212131314151516
161717181819191A1B1B1C1C1D1D1E1E1F2020212122222323242525262627272828292A2A2B2B2C
2C2D2D2E2F2F3030313132323334343535363637373839393A3A3B3B3C3C3D3E3E3F3F4040414142
434344444545464647484849494A4A4B4B4C4D4D4E4E4F4F50505151525353545455555656575858
59595A5A5B5B5C5D5D5E5E5F5F6060616262636364646565666767686869696A6A6B6C6C6D6D6E6E
6F6F7071717272737374747576767777787879797A7B7B7C7C7D7D7E7E7F7F
>
1 %_Br
<
33333232323231313131303030302F2F2F2E2E2E2E2D2D2D2D2C2C2C2C2B2B2B2B2A2A2A29292929
282828282727272726262625252525242424242323232322222221212121202020201F1F1F1F1E1E
1E1E1D1D1D1C1C1C1C1B1B1B1B1A1A1A1A1919191818181817171717161616161515151414141413
13131312121212111111101010100F0F0F0F0E0E0E0E0D0D0D0D0C0C0C0B0B0B0B0A0A0A0A090909
090808
>
<
A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A89888786858483828180
7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A5958
57565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736353433323130
2F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A0908
070605
>
<
F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1
F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECEC
ECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9
E9E9E9
>
<
1111111111101010101010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D
0D0D0D0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0909090909090909
09090808080808080808080707070707070707070706060606060606060605050505050505050505
04040404040404040403030303030303030303020202020202020202010101010101010101010000
000000
>
1 %_Br
<
F6F5F4F4F3F2F1F0F0EFEEEDECECEBEAE9E8E8E7E6E5E4E4E3E2E1E1E0DFDEDDDDDCDBDAD9D9D8D7
D6D6D5D4D3D2D2D1D0CFCFCECDCCCBCBCAC9C8C8C7C6C5C4C4C3C2C1C1C0BFBEBEBDBCBBBABAB9B8
B7B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A5A5A4A3A2A2A1A09F9F9E9D9C9C9B9A
9A999897979695949493929291908F8F8E8D8C8C8B8A8A89888787868585848382828180807F7E7E
7D7C7B7B7A7979787777767574747372727170706F6E6E6D6C6C6B6A6A6968686766666564646362
626160605F5E5E5D5C5C5B5A5A595858575756555554535352525150504F4E4E4D4D4C4B4B4A4A49
484847474646454444434342424140403F3F3E3E3D3D3C3C3B3B3A39393938383737363635353434
343333
>
<
EAEAE9E9E9E9E8E8E8E8E7E7E7E6E6E6E6E5E5E5E5E4E4E4E3E3E3E3E2E2E2E2E1E1E1E0E0E0E0DF
DFDFDFDEDEDEDDDDDDDDDCDCDCDCDBDBDBDBDADADAD9D9D9D9D8D8D8D8D7D7D7D7D6D6D6D6D5D5D5
D4D4D4D4D3D3D3D3D2D2D2D2D1D1D1D1D0D0D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCBCBCBCBCA
CACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1
C0C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBDBCBCBCBCBBBBBBBBBABABABABAB9B9B9B9B8B8B8B8B7B7
B7B7B7B6B6B6B6B5B5B5B5B5B4B4B4B4B3B3B3B3B3B2B2B2B2B1B1B1B1B1B0B0B0B0B0AFAFAFAFAF
AEAEAEAEAEADADADADADACACACACACABABABABABAAAAAAAAAAAAA9A9A9A9A9A9A8A8A8A8A8A8A7A7
A7A7A7
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
2728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F40414243434445464748494A4B4C4D
4E4F50515253545556565758595A5B5C5D5E5F60616263646465666768696A6B6C6D6E6F70707172
737475767778797A7A7B7C7D7E7F80818283848485868788898A8B8C8C8D8E8F9091929394949596
9798999A9A9B9C9D9E9FA0A1A1A2A3A4A5A6A7A7A8A9AAABACACADAEAFB0B1B2B2B3B4B5B6B6B7B8
B9BABBBBBCBDBEBFBFC0C1C2C3C3C4C5C6C7C7C8C9CACBCBCCCDCECECFD0D1D2D2D3D4D5D5D6D7D8
D8D9DADADBDCDDDDDEDFDFE0E1E2E2E3E4E4E5E6E6E7E8E8E9EAEAEBECECEDEDEEEFEFF0F0F1F1F2
F2F3F3
>
<
00000000000000000101010101010101010101010101020202020202020202020202020202030303
03030303030303030303030404040404040404040404040404040505050505050505050505050505
05060606060606060606060606060606070707070707070707070707070707070808080808080808
08080808080808090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D
0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F
0F0F0F0F0F0F0F0F1010101010101010101010101010101010101010101111111111111111111111
111111
>
1 %_Br
[
0.8196 0.01 1 0.31 1 50 100 %_Bs
0.9333 0.2078 1 0.5 1 50 57.3034 %_Bs
0.0314 0.0196 0.9137 0 1 50 55.618 %_Bs
0.2 0.6549 0.9529 0.0667 1 50 49.4382 %_Bs
0.9647 0.9176 0 0 1 45 32.5843 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient)
(Unnamed gradient) 0 6 Bd
[
<
F9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2
D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAA
A9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878685848382
81807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A
595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635343332
31302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A
0908070605040302
>
0.9882
<
05050505050505050505050505050505050505050505050505050505050505050505050505050505
05050606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606070707070707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707070707070707070707070707070707
07070707070708080808080808080808080808080808080808080808080808080808080808080808
0808080808080808
>
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010100000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000
>
1 %_Br
<
E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEB
EBEBEBEBEBEBEBEBECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9
>
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B
8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3
B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADB
DCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC
>
<
09090909090909090909090909090909090909090909090909090909090908080808080808080808
08080808080808080808080808080808080808080808080808080808080808080808080808080808
08080808080808080707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
060606050505050505050505050505050505050505050505050505050505050505
>
0.0039
1 %_Br
<
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8
>
<
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414
>
<
EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8
C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A0
9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978
77767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525150
4F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928
27262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09
>
<
03030303030303030303030303030303030303030303030303030303030303030303030303030303
03030303030303030303030303030303030303020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101
>
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC
>
<
05050505050505050506060606060606060606060606060606070707070707070707070707070707
070808080808080808080808080808080808090909090909090909090909090909090A0A0A0A0A0A
0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C
0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F
0F0F0F0F0F0F0F0F0F0F0F0F10101010101010101010101010101010111111111111111111111111
1111111112121212121212121212121212121212131313131313131313
>
<
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020203030303030303030303
0303030303030303030303030303030303030303030303030303030303
>
1 %_Br
<
03030303030303030303030303030303030303030303030304040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040505050505050505
05050505050505050505050505050505050505050505050505050505050505050505050505050505
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707080808080808080808080808080808080808080808080808
08
>
<
F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCE
CDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6
A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E
7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756
5554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706
05
>
0.9137
0
1 %_Br
[
0.0078 0.9882 0.0314 0 1 50 100 %_Bs
0.9765 0.9882 0.0196 0.0039 1 50 80 %_Bs
0.9098 0.0784 0.0353 0.0039 1 50 60 %_Bs
0.9255 0.0745 0.9373 0.0118 1 50 40 %_Bs
0.0314 0.0196 0.9137 0 1 50 20 %_Bs
0.0118 0.9608 0.9137 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 13)
(Unnamed gradient 13) 1 2 Bd
[
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000001010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010102020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020303030303030303030303030303030303030303030303030303
03030303030303030303030303030303030303030303030303030303030303030303030303030303
03030303030303030303030303030303030303030303030303030303030303030303030303030303
03030303030303030303030303030303030303030303030303030303030303030303030303030303
03030303030303030303030303030303030303030303030303030303030303030303030303030303
03030303030303030303030303030303030303030303030303030303030303030303030303
>
<
000102030405060708090A0B0C0D0E0F10111213141516161718191A1B1C1D1E1F20212223242525
262728292A2B2C2D2E2F2F30313233343536363738393A3B3C3D3D3E3F4041424343444546474848
494A4B4C4D4D4E4F505151525354555656575859595A5B5C5D5D5E5F606161626364646566676768
696A6A6B6C6D6D6E6F6F70717272737475757677777879797A7B7C7C7D7E7E7F8080818282838484
858686878888898A8A8B8C8C8D8E8E8F8F909191929393949495969697979899999A9A9B9C9C9D9D
9E9F9FA0A0A1A1A2A3A3A4A4A5A5A6A6A7A8A8A9A9AAAAABABACACADADAEAEAFB0B0B1B1B2B2B3B3
B4B4B5B5B6B6B7B7B8B8B8B9B9BABABBBBBCBCBDBDBEBEBFBFBFC0C0C1C1C2C2C3C3C3C4C4C5C5C6
C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCCCDCDCECECECFCFD0D0D0D1D1D1D2D2D2D3D3D3D4D4D5D5
D5D6D6D6D7D7D7D8D8D8D9D9D9DADADADADBDBDBDCDCDCDDDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1
E1E2E2E2E2E3E3E3E3E4E4E4E4E5E5E5E5E6E6E6E6E7E7E7E7E7E8E8E8E8E8E9E9E9E9EAEAEAEAEA
EAEBEBEBEBEBECECECECECECEDEDEDEDEDEDEEEEEEEEEEEEEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F1
F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5
>
<
00010203040506070808090A0B0C0D0E0F10111213141415161718191A1B1C1D1D1E1F2021222324
2425262728292A2B2B2C2D2E2F3030313233343535363738393A3A3B3C3D3E3F3F40414243434445
46464748494A4A4B4C4D4E4E4F505151525354545556575758595A5A5B5C5D5D5E5F5F6061626263
6464656667676869696A6B6B6C6D6D6E6F6F7071727273747475767677777879797A7B7B7C7D7D7E
7F7F808081828283848485858687878888898A8A8B8B8C8D8D8E8E8F8F9091919292939394959596
969797989899999A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9AAAA
ABABACACADADAEAEAFAFAFB0B0B1B1B2B2B3B3B3B4B4B5B5B6B6B6B7B7B8B8B9B9B9BABABBBBBBBC
BCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C2C3C3C4C4C4C5C5C5C6C6C6C7C7C7C8C8C8C9C9C9CACACA
CBCBCBCCCCCCCDCDCDCECECECFCFCFCFD0D0D0D1D1D1D1D2D2D2D3D3D3D3D4D4D4D5D5D5D5D6D6D6
D6D7D7D7D7D8D8D8D8D9D9D9D9D9DADADADADBDBDBDBDBDCDCDCDCDCDDDDDDDDDDDEDEDEDEDEDFDF
DFDFDFE0E0E0E0E0E0E1E1E1E1E1E1E2E2E2E2E2E2E2E3E3E3E3E3E3E3E4E4E4E4E4E4E4E4E5E5E5
E5E5E5E5E5E5E6E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8
E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
>
0
1 %_Br
[
0 0 0 0 1 28 0 %_Bs
0.0118 0.9608 0.9137 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 2)
(Unnamed gradient 2) 1 6 Bd
[
<
03030303030303030303030303030303030303030303030304040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040505050505050505
05050505050505050505050505050505050505050505050505050505050505050505050505050505
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707080808080808080808080808080808080808080808080808
08
>
<
F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCE
CDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6
A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E
7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756
5554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706
05
>
0.9137
0
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC
>
<
05050505050505050506060606060606060606060606060606070707070707070707070707070707
070808080808080808080808080808080808090909090909090909090909090909090A0A0A0A0A0A
0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C
0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F
0F0F0F0F0F0F0F0F0F0F0F0F10101010101010101010101010101010111111111111111111111111
1111111112121212121212121212121212121212131313131313131313
>
<
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020203030303030303030303
0303030303030303030303030303030303030303030303030303030303
>
1 %_Br
<
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8
>
<
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414
>
<
EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8
C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A0
9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978
77767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525150
4F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928
27262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09
>
<
03030303030303030303030303030303030303030303030303030303030303030303030303030303
03030303030303030303030303030303030303020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101
>
1 %_Br
<
E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEB
EBEBEBEBEBEBEBEBECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9
>
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B
8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3
B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADB
DCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC
>
<
09090909090909090909090909090909090909090909090909090909090908080808080808080808
08080808080808080808080808080808080808080808080808080808080808080808080808080808
08080808080808080707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
060606050505050505050505050505050505050505050505050505050505050505
>
0.0039
1 %_Br
<
F9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2
D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAA
A9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878685848382
81807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A
595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635343332
31302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A
0908070605040302
>
0.9882
<
05050505050505050505050505050505050505050505050505050505050505050505050505050505
05050606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606070707070707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707070707070707070707070707070707
07070707070708080808080808080808080808080808080808080808080808080808080808080808
0808080808080808
>
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010100000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000
>
1 %_Br
[
0.0118 0.9608 0.9137 0 1 50 0 %_Bs
0.0314 0.0196 0.9137 0 1 50 20 %_Bs
0.9255 0.0745 0.9373 0.0118 1 50 40 %_Bs
0.9098 0.0784 0.0353 0.0039 1 50 60 %_Bs
0.9765 0.9882 0.0196 0.0039 1 50 80 %_Bs
0.0078 0.9882 0.0314 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 24)
(Unnamed gradient 24) 0 3 Bd
[
<
161717171818181919191A1A1B1B1B1C1C1C1D1D1D1E1E1E1F1F1F20202021212122222223232324
242425252526262627272828282929292A2A2A2B2B2B2C2C2C2D2D2D2E2E2E2F2F2F2F3030303131
313232323333333434343535353636363737373838383939393A3A3A3A3B3B3B3C3C3C3D3D3D3E3E
3E3F3F3F404040404141414242424343434344444445454546464646474747484848494949494A4A
4A4B4B4B4B4C4C4C4D4D4D4D4E4E4E4E4F4F4F505050505151515152525252535353535454545454
555555
>
<
3E3F40404142434445464748494A4B4C4D4E4F50515253535455565758595A5B5C5D5E5F60616263
636465666768696A6B6C6D6E6F70707172737475767778797A7B7B7C7D7E7F808182838485858687
88898A8B8C8D8E8E8F90919293949596969798999A9B9C9D9E9E9FA0A1A2A3A4A5A5A6A7A8A9AAAB
ABACADAEAFB0B1B1B2B3B4B5B6B6B7B8B9BABBBBBCBDBEBFC0C0C1C2C3C4C4C5C6C7C8C9C9CACBCC
CCCDCECFD0D0D1D2D3D4D4D5D6D7D7D8D9DADADBDCDCDDDEDFDFE0E1E1E2E3E3E4E5E5E6E7E7E8E8
E9EAEA
>
<
404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667
68696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F80818283848586868788898A8B8C8D
8E8F90919293949596969798999A9B9C9D9E9FA0A1A2A2A3A4A5A6A7A8A9AAABACACADAEAFB0B1B2
B3B4B5B5B6B7B8B9BABBBCBDBDBEBFC0C1C2C3C3C4C5C6C7C8C9CACACBCCCDCECFCFD0D1D2D3D4D4
D5D6D7D8D9D9DADBDCDDDDDEDFE0E1E1E2E3E4E4E5E6E7E7E8E9EAEAEBECECEDEEEFEFF0F1F1F2F2
F3F4F4
>
<
111213141515161718191A1B1C1C1D1E1F2021222223242526272828292A2B2C2D2E2E2F30313233
33343536373839393A3B3C3D3E3E3F4041424343444546474848494A4B4C4D4D4E4F505151525354
5556565758595A5A5B5C5D5E5E5F6061626363646566676768696A6A6B6C6D6E6E6F707172727374
757576777879797A7B7C7C7D7E7F7F808182828384858586878888898A8B8B8C8D8E8E8F90919192
939394959696979898999A9A9B9C9C9D9E9E9FA0A0A1A2A2A3A4A4A5A6A6A7A7A8A9A9AAAAABABAC
ADADAD
>
1 %_Br
<
555554545453535352525251515050504F4F4F4E4E4E4D4D4D4C4C4C4B4B4B4A4A4A494948484847
474746464645454544444443434342424241414040403F3F3F3E3E3E3D3D3D3C3C3C3B3B3B3A3A3A
393938383837373736363635353534343433333332323231313030302F2F2F2E2E2E2D2D2D2C2C2C
2B2B2B2A2A29292928282827272726262625252524242423232322222121212020201F1F1F1E1E1E
1D1D1D1C1C1C1B1B1B1A1A19191918181817171716
>
<
EAE9E8E7E6E5E4E3E2E1E0DFDEDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C8C7C6C5
C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E
9D9C9B9A9A999897969594939291908F8E8D8C8B8A89888786858484838281807F7E7D7C7B7A7978
77767574737271706F6E6D6D6C6B6A696867666564636261605F5E5D5C5B5A595857565655545352
51504F4E4D4C4B4A494847464544434241403F3F3E
>
<
F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECD
CCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5
A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D
7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A5958575655
54535251504F4E4D4C4B4A49484746454443424140
>
<
4141404040403F3F3F3F3E3E3E3E3D3D3D3C3C3C3C3B3B3B3B3A3A3A3A3939393838383837373737
36363636353535343434343333333332323232313131313030302F2F2F2F2E2E2E2E2D2D2D2D2C2C
2C2B2B2B2B2A2A2A2A29292929282828272727272626262625252525242424232323232222222221
2121212020201F1F1F1F1E1E1E1E1D1D1D1D1C1C1C1B1B1B1B1A1A1A1A1919191918181817171717
161616161515151514141414131313121212121111
>
1 %_Br
[
0.3333 0.9176 0.9569 0.68 1 50 100 %_Bs
0.0877 0.2415 0.2518 0.0671 1 46.0177 37.0786 %_Bs
0.3333 0.9176 0.9569 0.2549 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 37)
(Unnamed gradient 37) 1 2 Bd
[
<
C4C3C3C2C1C1C0C0BFBEBEBDBCBCBBBABAB9B9B8B7B7B6B5B5B4B3B3B2B2B1B0B0AFAEAEADADACAB
ABAAA9A9A8A8A7A6A6A5A4A4A3A2A2A1A1A09F9F9E9E9D9C9C9B9A9A999998979796959594949392
929191908F8F8E8D8D8C8C8B8A8A898988878786868584848382828181807F7F7E7E7D7C7C7B7B7A
79797878777676757574737372727170706F6F6E6D6D6C6C6B6B6A69696868676666656564646362
626161605F5F5E5E5D5D5C5B5B5A5A5959585757565655555453535252515150504F4E4E4D4D4C4C
4B4B4A494948484747464645444443434242414140403F3F3E3E3D3C3C3B3B3A3A39393838373736
363535343433333232313130302F2F2F2E2E2D2D2C2C2B2B2B2A2A
>
<
0001020203040506070708090A0B0C0C0D0E0F101011121314151516171819191A1B1C1D1E1E1F20
21222223242526262728292A2A2B2C2D2E2F2F3031323333343536373738393A3B3B3C3D3E3F3F40
41424343444546464748494A4A4B4C4D4E4E4F505152525354555556575859595A5B5C5C5D5E5F60
6061626363646566676768696A6A6B6C6D6D6E6F707171727374747576777778797A7A7B7C7D7D7E
7F80808182838384858686878889898A8B8C8C8D8E8F8F90919192939494959697979899999A9B9C
9C9D9E9E9FA0A1A1A2A3A3A4A5A5A6A7A8A8A9AAAAABACACADAEAEAFB0B0B1B2B2B3B4B4B5B6B6B7
B8B8B9BABABBBCBCBDBDBEBFBFC0C0C1C2C2C3C3C4C5C5C6C6C7C7
>
<
02030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F20212223242526272829
2A2B2C2D2E2F30313232333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50
515253545455565758595A5B5C5D5E5F60616263646566676869696A6B6C6D6E6F70717273747576
7778797A7A7B7C7D7E7F80818283848586878888898A8B8C8D8E8F90919293939495969798999A9B
9C9D9E9E9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFAFB0B1B2B3B4B5B6B7B7B8B9BABBBCBDBEBE
BFC0C1C2C3C4C4C5C6C7C8C9CACACBCCCDCECFCFD0D1D2D3D4D4D5D6D7D8D8D9DADBDCDDDDDEDFE0
E0E1E2E3E4E4E5E6E7E7E8E9EAEAEBECEDEDEEEFEFF0F1F1F2F2F3
>
<
00000000000000000000000101010101010101010101010101010101010101010101020202020202
02020202020202020202020202020202030303030303030303030303030303030303030303030304
04040404040404040404040404040404040404040405050505050505050505050505050505050505
05050505050606060606060606060606060606060606060606060606070707070707070707070707
07070707070707070707070708080808080808080808080808080808080808080808080808090909
09090909090909090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A
0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B
>
1 %_Br
[
0.7686 0 0.0078 0 1 46.6292 0.5618 %_Bs
0.1647 0.7804 0.9529 0.0431 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 8)
(Unnamed gradient 8) 0 5 Bd
[
<
F6F5F4F4F3F2F1F0F0EFEEEDECECEBEAE9E8E8E7E6E5E4E4E3E2E1E0E0DFDEDDDCDCDBDAD9D8D8D7
D6D5D4D3D3D2D1D0CFCFCECDCCCBCBCAC9C8C7C7C6C5C4C3C3C2C1C0BFBFBEBDBCBBBBBAB9B8B7B7
B6B5B4B3B3B2B1B0AFAFAEADACABABAAA9A8A7A7A6A5A4A3A3A2A1A09F9F9E9D9C9B9B9A99989797
96959493929291908F8E8E8D8C8B8A8A8988878686858483828281807F7E7E7D7C7B7A7A79787776
76757473727271706F6E6E6D6C6B6A6A6968676666656463626261605F5E5E5D5C5B5A5A59585756
56555453525151504F4E4D4D4C4B4A494948474645454443424141403F3E3D3D3C3B3A3939383736
35353433
>
<
EAEAE9E9E9E9E8E8E8E8E7E7E7E6E6E6E6E5E5E5E4E4E4E4E3E3E3E3E2E2E2E1E1E1E1E0E0E0E0DF
DFDFDEDEDEDEDDDDDDDCDCDCDCDBDBDBDBDADADAD9D9D9D9D8D8D8D8D7D7D7D6D6D6D6D5D5D5D4D4
D4D4D3D3D3D3D2D2D2D1D1D1D1D0D0D0D0CFCFCFCECECECECDCDCDCCCCCCCCCBCBCBCBCACACAC9C9
C9C9C8C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C4C3C3C3C3C2C2C2C1C1C1C1C0C0C0C0BFBFBFBEBE
BEBEBDBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B9B8B8B8B8B7B7B7B6B6B6B6B5B5B5B5B4B4B4B3B3
B3B3B2B2B2B1B1B1B1B0B0B0B0AFAFAFAEAEAEAEADADADADACACACABABABABAAAAAAA9A9A9A9A8A8
A8A8A7A7
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3
>
<
00000000000000000101010101010101010101010101020202020202020202020202020203030303
03030303030303030303030404040404040404040404040404050505050505050505050505050506
06060606060606060606060606070707070707070707070707070707080808080808080808080808
080809090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B
0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E
0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010101011111111
11111111
>
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
>
<
05060708090A0B0C0D0E0F10111212131415161718191A1B1C1D1E1F202122232425262728292A2B
2B2C2D2E2F303132333435363738393A3B3C3D3E3F40414243444445464748494A4B4C4D4E4F5051
52535455565758595A5B5C5D5E5E5F606162636465666768696A6B6C6D6E6F707172737475767777
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919192939495969798999A9B9C9D9E
9FA0A1A2A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C4
C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDDDEDFE0E1E2E3E4E5E6E7E8E9EA
>
<
E9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D1D0CFCECDCCCBCAC9C8C7C6C5C4C3
C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A3A2A1A09F9E9D9C
9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574
74737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D
4C4B4A49484746464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726
2524232221201F1E1D1C1B1A19181717161514131211100F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAA
A9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878685848382
81807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A
595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635343332
31302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A
0908
>
<
00000000000000000000000000000000000000000001010101010101010101010101010101010101
01010101010101010101010101010101010101010102020202020202020202020202020202020202
02020202020202020202020202020202020202020203030303030303030303030303030303030303
03030303030303030303030303030303030303030304040404040404040404040404040404040404
04040404040404040404040404040404040404040405050505050505050505050505050505050505
0505
>
<
FFFFFFFFFFFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFB
FBFBFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F6F6
F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F2F2F2F2F2
F2F2F2F2F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEE
EDEDEDEDEDEDEDEDEDECECECECECECECECECECEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAE9E9E9
E9E9
>
<
4F4F4E4E4D4D4D4C4C4C4B4B4A4A4A49494848484747464646454544444443434242424141404040
3F3F3F3E3E3D3D3D3C3C3B3B3B3A3A39393938383737373636353535343434333332323231313030
302F2F2E2E2E2D2D2C2C2C2B2B2A2A2A292929282827272726262525252424232323222221212120
201F1F1F1E1E1D1D1D1C1C1C1B1B1A1A1A1919181818171716161615151414141313121212111111
10100F0F0F0E0E0D0D0D0C0C0B0B0B0A0A0909090808070707060606050504040403030202020101
0000
>
1 %_Br
<
EEEDEDECECEBEBEAEAE9E9E8E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDBDBDADA
D9D9D8D8D8D7D7D6D6D5D5D5D4D4D3D3D3D2D2D2D1D1
>
<
3534333231302F2E2D2C2B2A29282726252423222120201F1E1D1C1B1A1918171615151413121110
0F0F0E0D0C0B0A0A0908070706050404030202010000
>
1
<
807F7E7D7C7B7A79787776767574737271706F6E6E6D6C6B6A6968686766656464636261605F5F5E
5D5C5C5B5A5959585756565554545352525151504F4F
>
1 %_Br
[
0.2 0.6549 0.9529 0.0667 1 50 100 %_Bs
0.9647 0.9176 0 0 1 50 57.3034 %_Bs
0.0314 0.0196 0.9137 0 1 50 55.618 %_Bs
0.8196 0 1 0.31 1 50 49.4382 %_Bs
0.9333 0.2078 1 0.5 1 45 32.5843 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 9)
(Unnamed gradient 9) 0 5 Bd
[
<
EEEDEDECECEBEBEAEAE9E8E8E7E7E6E6E5E5E4E3E3E2E2E1E1E0DFDFDEDEDDDDDCDCDBDADAD9D9D8
D8D7D7D6D5D5D4D4D3D3D2D2D1
>
<
3534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1A191817161514131211100F0E0D
0C0B0A09080706050403020100
>
1
<
807F7E7D7C7B7A79787776757473727271706F6E6D6C6B6A69686766656464636261605F5E5D5C5B
5A59585757565554535251504F
>
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE
>
<
050505060606060607070707080808080809090909090A0A0A0A0A0B0B0B0B0B0C0C0C0C0D0D0D0D
0D0E0E0E0E0E0F0F0F0F0F1010101010111111111212121212131313131314141414141515151515
161616161717171717181818181819191919191A1A1A1A1A1B1B1B1B1C1C1C1C1C1D1D1D1D1D1E1E
1E1E1E1F1F1F1F1F2020202021212121212222222222232323232324242424252525252526262626
2627272727272828282828292929292A2A2A2A2A2B2B2B2B2B2C2C2C2C2C2D2D2D2D2D2E2E2E2E2F
2F2F2F2F303030303031313131313232323232333333333434343434353535
>
<
E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECEDEDED
EDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F1
F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4
F4F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8
F8F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFC
FCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF
>
<
0001010202030304040506060707080809090A0B0B0C0C0D0D0E0E0F101011111212131314151516
161717181819191A1B1B1C1C1D1D1E1E1F2020212122222323242525262627272828292A2A2B2B2C
2C2D2D2E2F2F3030313132323334343535363637373839393A3A3B3B3C3C3D3E3E3F3F4040414142
434344444545464647484849494A4A4B4B4C4D4D4E4E4F4F50505151525353545455555656575858
59595A5A5B5B5C5D5D5E5E5F5F6060616262636364646565666767686869696A6A6B6C6C6D6D6E6E
6F6F7071717272737374747576767777787879797A7B7B7C7C7D7D7E7E7F7F
>
1 %_Br
<
33333232323231313131303030302F2F2F2E2E2E2E2D2D2D2D2C2C2C2C2B2B2B2B2A2A2A29292929
282828282727272726262625252525242424242323232322222221212121202020201F1F1F1F1E1E
1E1E1D1D1D1C1C1C1C1B1B1B1B1A1A1A1A1919191818181817171717161616161515151414141413
13131312121212111111101010100F0F0F0F0E0E0E0E0D0D0D0D0C0C0C0B0B0B0B0A0A0A0A090909
090808
>
<
A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A89888786858483828180
7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A5958
57565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736353433323130
2F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A0908
070605
>
<
F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1
F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECEC
ECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9
E9E9E9
>
<
1111111111101010101010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D
0D0D0D0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0909090909090909
09090808080808080808080707070707070707070706060606060606060605050505050505050505
04040404040404040403030303030303030303020202020202020202010101010101010101010000
000000
>
1 %_Br
<
F6F5F4F4F3F2F1F0F0EFEEEDECECEBEAE9E8E8E7E6E5E4E4E3E2E1E1E0DFDEDDDDDCDBDAD9D9D8D7
D6D6D5D4D3D2D2D1D0CFCFCECDCCCBCBCAC9C8C8C7C6C5C4C4C3C2C1C1C0BFBEBEBDBCBBBABAB9B8
B7B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A5A5A4A3A2A2A1A09F9F9E9D9C9C9B9A
9A999897979695949493929291908F8F8E8D8C8C8B8A8A89888787868585848382828180807F7E7E
7D7C7B7B7A7979787777767574747372727170706F6E6E6D6C6C6B6A6A6968686766666564646362
626160605F5E5E5D5C5C5B5A5A595858575756555554535352525150504F4E4E4D4D4C4B4B4A4A49
484847474646454444434342424140403F3F3E3E3D3D3C3C3B3B3A39393938383737363635353434
343333
>
<
EAEAE9E9E9E9E8E8E8E8E7E7E7E6E6E6E6E5E5E5E5E4E4E4E3E3E3E3E2E2E2E2E1E1E1E0E0E0E0DF
DFDFDFDEDEDEDDDDDDDDDCDCDCDCDBDBDBDBDADADAD9D9D9D9D8D8D8D8D7D7D7D7D6D6D6D6D5D5D5
D4D4D4D4D3D3D3D3D2D2D2D2D1D1D1D1D0D0D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCBCBCBCBCA
CACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1
C0C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBDBCBCBCBCBBBBBBBBBABABABABAB9B9B9B9B8B8B8B8B7B7
B7B7B7B6B6B6B6B5B5B5B5B5B4B4B4B4B3B3B3B3B3B2B2B2B2B1B1B1B1B1B0B0B0B0B0AFAFAFAFAF
AEAEAEAEAEADADADADADACACACACACABABABABABAAAAAAAAAAAAA9A9A9A9A9A9A8A8A8A8A8A8A7A7
A7A7A7
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
2728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F40414243434445464748494A4B4C4D
4E4F50515253545556565758595A5B5C5D5E5F60616263646465666768696A6B6C6D6E6F70707172
737475767778797A7A7B7C7D7E7F80818283848485868788898A8B8C8C8D8E8F9091929394949596
9798999A9A9B9C9D9E9FA0A1A1A2A3A4A5A6A7A7A8A9AAABACACADAEAFB0B1B2B2B3B4B5B6B6B7B8
B9BABBBBBCBDBEBFBFC0C1C2C3C3C4C5C6C7C7C8C9CACBCBCCCDCECECFD0D1D2D2D3D4D5D5D6D7D8
D8D9DADADBDCDDDDDEDFDFE0E1E2E2E3E4E4E5E6E6E7E8E8E9EAEAEBECECEDEDEEEFEFF0F0F1F1F2
F2F3F3
>
<
00000000000000000101010101010101010101010101020202020202020202020202020202030303
03030303030303030303030404040404040404040404040404040505050505050505050505050505
05060606060606060606060606060606070707070707070707070707070707070808080808080808
08080808080808090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D
0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F
0F0F0F0F0F0F0F0F1010101010101010101010101010101010101010101111111111111111111111
111111
>
1 %_Br
[
0.8196 0 1 0.31 1 50 100 %_Bs
0.9333 0.2078 1 0.5 1 50 57.3034 %_Bs
0.0314 0.0196 0.9137 0 1 50 55.618 %_Bs
0.2 0.6549 0.9529 0.0667 1 50 49.4382 %_Bs
0.9647 0.9176 0 0 1 45 32.5843 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (White, Black)
(White, Black) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 1 1 50 100 %_Bs
0 0 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Azure Rings)
(Azure Rings) 22.5 22.5 58.5 58.5 [
%AI3_Tile
(0 O 0 R 0.9569 0.9294 0 0 k
 0.9569 0.9294 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1.75 w 4 M []0 d
0 XR
40.5 58.5 m
40.5 48.5586 32.4409 40.5 22.5 40.5 c
12.5591 40.5 4.5 48.5586 4.5 58.5 c
4.5 68.4414 12.5591 76.5 22.5 76.5 c
32.4409 76.5 40.5 68.4414 40.5 58.5 c
s
40.5 22.5 m
40.5 12.5586 32.4409 4.5 22.5 4.5 c
12.5591 4.5 4.5 12.5586 4.5 22.5 c
4.5 32.4414 12.5591 40.5 22.5 40.5 c
32.4409 40.5 40.5 32.4414 40.5 22.5 c
s
40.5 40.5 m
40.5 30.5586 32.4409 22.5 22.5 22.5 c
12.5591 22.5 4.5 30.5586 4.5 40.5 c
4.5 50.4414 12.5591 58.5 22.5 58.5 c
32.4409 58.5 40.5 50.4414 40.5 40.5 c
s
58.5 58.5 m
58.5 48.5586 50.4409 40.5 40.5 40.5 c
30.5591 40.5 22.5 48.5586 22.5 58.5 c
22.5 68.4414 30.5591 76.5 40.5 76.5 c
50.4409 76.5 58.5 68.4414 58.5 58.5 c
s
58.5 22.5 m
58.5 12.5586 50.4409 4.5 40.5 4.5 c
30.5591 4.5 22.5 12.5586 22.5 22.5 c
22.5 32.4414 30.5591 40.5 40.5 40.5 c
50.4409 40.5 58.5 32.4414 58.5 22.5 c
s
58.5 40.5 m
58.5 30.5586 50.4409 22.5 40.5 22.5 c
30.5591 22.5 22.5 30.5586 22.5 40.5 c
22.5 50.4414 30.5591 58.5 40.5 58.5 c
50.4409 58.5 58.5 50.4414 58.5 40.5 c
s
76.5 58.5 m
76.5 48.5586 68.4409 40.5 58.5 40.5 c
48.5591 40.5 40.5 48.5586 40.5 58.5 c
40.5 68.4414 48.5591 76.5 58.5 76.5 c
68.4409 76.5 76.5 68.4414 76.5 58.5 c
s
76.5 22.5 m
76.5 12.5586 68.4409 4.5 58.5 4.5 c
48.5591 4.5 40.5 12.5586 40.5 22.5 c
40.5 32.4414 48.5591 40.5 58.5 40.5 c
68.4409 40.5 76.5 32.4414 76.5 22.5 c
s
76.5 40.5 m
76.5 30.5586 68.4409 22.5 58.5 22.5 c
48.5591 22.5 40.5 30.5586 40.5 40.5 c
40.5 50.4414 48.5591 58.5 58.5 58.5 c
68.4409 58.5 76.5 50.4414 76.5 40.5 c
s
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Camouflage)
(Camouflage) 1 1 73 73 [
%AI3_Tile
(0 O 0 R 0.5961 0.1412 0.949 0.0275 k
 0.5961 0.1412 0.949 0.0275 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
1 73 m
1 1 L
73 1 L
73 73 L
1 73 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.498 0.349 0.9725 0.2 k
 0.498 0.349 0.9725 0.2 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
18.5449 73 m
18.5449 1 L
46.7832 1 L
46.7832 73 L
18.5449 73 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1882 0.1098 0.9255 0.0157 k
 0.1882 0.1098 0.9255 0.0157 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
11.9512 1 m
11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c
9.2314 10.2334 4.25 10.2334 4.25 13.8735 c
4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c
10.0313 24.832 10.208 24.832 10.208 28.5654 c
10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c
5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c
11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c
7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c
5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c
4.6631 69.1636 11.9512 69.3184 11.9512 73 C
27.9268 73 L
27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c
22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c
28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c
25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c
28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c
22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c
26.3945 24.832 24.4248 24.832 24.4248 21.0991 c
24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c
20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c
24.6055 2.8813 27.9268 4.7129 27.9268 1 C
11.9512 1 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.9255 0.2157 0.9647 0.0745 k
 0.9255 0.2157 0.9647 0.0745 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
41.875 1 m
41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c
42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c
40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c
41.5742 24.832 43.6484 24.832 43.6484 28.5659 c
43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c
39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c
39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c
45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c
40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c
40.6289 69.1636 41.875 69.3184 41.875 73 C
59.0752 73 L
59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c
53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c
55.8945 55.502 61.0059 55.502 61.0059 51.7886 c
61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c
60.5635 40.897 59.9277 40.897 59.9277 37.2842 c
59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c
56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c
61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c
52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c
55.7461 3.978 59.0752 4.6484 59.0752 1 C
41.875 1 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Clown Attack)
(Clown Attack) 5.25 11 41.25 47 [
%AI3_Tile
(0 O 0 R 0.9255 0 1 0 k
 0.9255 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
17.5 18.25 m
17.5 15.2119 15.0376 12.75 12 12.75 c
8.9624 12.75 6.5 15.2119 6.5 18.25 c
6.5 21.2881 8.9624 23.75 12 23.75 c
15.0376 23.75 17.5 21.2881 17.5 18.25 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0078 0.9529 0 0 k
 0.0078 0.9529 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
22.25 34.125 m
22.25 31.2939 19.9556 29 17.125 29 c
14.2944 29 12 31.2939 12 34.125 c
12 36.9561 14.2944 39.25 17.125 39.25 c
19.9556 39.25 22.25 36.9561 22.25 34.125 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0118 0.9608 0.9137 0 k
 0.0118 0.9608 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
30 31.625 m
30 29.4854 28.2646 27.75 26.125 27.75 c
23.9849 27.75 22.25 29.4854 22.25 31.625 c
22.25 33.7646 23.9849 35.5 26.125 35.5 c
28.2646 35.5 30 33.7646 30 31.625 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
23.25 24.5 m
23.25 22.4287 21.5713 20.75 19.5 20.75 c
17.4287 20.75 15.75 22.4287 15.75 24.5 c
15.75 26.5713 17.4287 28.25 19.5 28.25 c
21.5713 28.25 23.25 26.5713 23.25 24.5 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.9569 0.9294 0 0 k
 0.9569 0.9294 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
36 22.25 m
36 19.0742 33.4258 16.5 30.25 16.5 c
27.0742 16.5 24.5 19.0742 24.5 22.25 c
24.5 25.4258 27.0742 28 30.25 28 c
33.4258 28 36 25.4258 36 22.25 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1882 0.1216 0.8 0.0157 k
 0.1882 0.1216 0.8 0.0157 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
24.25 16.5 m
24.25 14.8438 22.9067 13.5 21.25 13.5 c
19.5933 13.5 18.25 14.8438 18.25 16.5 c
18.25 18.1563 19.5933 19.5 21.25 19.5 c
22.9067 19.5 24.25 18.1563 24.25 16.5 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8353 0 0 0 k
 0.8353 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
37.25 43.875 m
37.25 39.5264 33.7236 36 29.375 36 c
25.0264 36 21.5 39.5264 21.5 43.875 c
21.5 48.2236 25.0264 51.75 29.375 51.75 c
33.7236 51.75 37.25 48.2236 37.25 43.875 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0078 0.1961 0.9373 0 k
 0.0078 0.1961 0.9373 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
38.75 26.625 m
38.75 25.7275 38.0225 25 37.125 25 c
36.2275 25 35.5 25.7275 35.5 26.625 c
35.5 27.5225 36.2275 28.25 37.125 28.25 c
38.0225 28.25 38.75 27.5225 38.75 26.625 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0196 0.5961 0.9137 0 k
 0.0196 0.5961 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
19.875 42 m
19.875 41.1025 19.1475 40.375 18.25 40.375 c
17.3525 40.375 16.625 41.1025 16.625 42 c
16.625 42.8975 17.3525 43.625 18.25 43.625 c
19.1475 43.625 19.875 42.8975 19.875 42 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0118 0.9608 0.9137 0 k
 0.0118 0.9608 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
12.75 28.125 m
12.75 26.8135 11.6865 25.75 10.375 25.75 c
9.0635 25.75 8 26.8135 8 28.125 c
8 29.4365 9.0635 30.5 10.375 30.5 c
11.6865 30.5 12.75 29.4365 12.75 28.125 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.9255 0 1 0 k
 0.9255 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
43.25 33 m
43.25 30.998 41.627 29.375 39.625 29.375 c
37.623 29.375 36 30.998 36 33 c
36 35.002 37.623 36.625 39.625 36.625 c
41.627 36.625 43.25 35.002 43.25 33 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
13.25 43.75 m
13.25 40.9883 11.0117 38.75 8.25 38.75 c
5.4883 38.75 3.25 40.9883 3.25 43.75 c
3.25 46.5117 5.4883 48.75 8.25 48.75 c
11.0117 48.75 13.25 46.5117 13.25 43.75 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.3922 0.9451 0 0 k
 0.3922 0.9451 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
6.5 22.25 m
6.5 20.7314 5.2686 19.5 3.75 19.5 c
2.2314 19.5 1 20.7314 1 22.25 c
1 23.7686 2.2314 25 3.75 25 c
5.2686 25 6.5 23.7686 6.5 22.25 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0235 0.0118 0.6 0 k
 0.0235 0.0118 0.6 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
34.4883 32.75 m
34.4883 31.9277 33.8223 31.2617 33 31.2617 c
32.1777 31.2617 31.5117 31.9277 31.5117 32.75 c
31.5117 33.5723 32.1777 34.2383 33 34.2383 c
33.8223 34.2383 34.4883 33.5723 34.4883 32.75 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
49.25 43.75 m
49.25 40.9883 47.0117 38.75 44.25 38.75 c
41.4883 38.75 39.25 40.9883 39.25 43.75 c
39.25 46.5117 41.4883 48.75 44.25 48.75 c
47.0117 48.75 49.25 46.5117 49.25 43.75 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.3922 0.9451 0 0 k
 0.3922 0.9451 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
42.5 22.25 m
42.5 20.7314 41.2686 19.5 39.75 19.5 c
38.2314 19.5 37 20.7314 37 22.25 c
37 23.7686 38.2314 25 39.75 25 c
41.2686 25 42.5 23.7686 42.5 22.25 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
49.25 7.752 m
49.25 4.9902 47.0117 2.752 44.25 2.752 c
41.4883 2.752 39.25 4.9902 39.25 7.752 c
39.25 10.5137 41.4883 12.752 44.25 12.752 c
47.0117 12.752 49.25 10.5137 49.25 7.752 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8353 0 0 0 k
 0.8353 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
37.25 7.875 m
37.25 3.5264 33.7236 0 29.375 0 c
25.0264 0 21.5 3.5264 21.5 7.875 c
21.5 12.2236 25.0264 15.75 29.375 15.75 c
33.7236 15.75 37.25 12.2236 37.25 7.875 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
13.25 7.75 m
13.25 4.9883 11.0117 2.75 8.25 2.75 c
5.4883 2.75 3.25 4.9883 3.25 7.75 c
3.25 10.5117 5.4883 12.75 8.25 12.75 c
11.0117 12.75 13.25 10.5117 13.25 7.75 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.9255 0 1 0 k
 0.9255 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
7.25 33 m
7.25 30.998 5.627 29.375 3.625 29.375 c
1.623 29.375 0 30.998 0 33 c
0 35.002 1.623 36.625 3.625 36.625 c
5.627 36.625 7.25 35.002 7.25 33 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0235 0.4078 0 0 k
 0.0235 0.4078 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
39.6533 16.0381 m
39.6533 15.1064 38.8975 14.3506 37.9658 14.3506 c
37.0342 14.3506 36.2783 15.1064 36.2783 16.0381 c
36.2783 16.9697 37.0342 17.7256 37.9658 17.7256 c
38.8975 17.7256 39.6533 16.9697 39.6533 16.0381 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Pyramids)
(Pyramids) 1 1 19.5 19.5 [
%AI3_Tile
(0 O 0 R 0.1882 0.1294 0.102 0.0118 k
 0.1882 0.1294 0.102 0.0118 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
1 19.5 m
10.25 10.25 l
19.5 19.5 l
1 19.5 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6235 0.4863 0.4863 0.4784 k
 0.6235 0.4863 0.4863 0.4784 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
19.5 1 m
10.25 10.25 l
1 1 l
19.5 1 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.3529 0.2549 0.2235 0.0667 k
 0.3529 0.2549 0.2235 0.0667 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
1 1 m
10.25 10.25 l
1 19.5 l
1 1 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.4902 0.3647 0.3451 0.2196 k
 0.4902 0.3647 0.3451 0.2196 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
19.5 19.5 m
10.25 10.25 l
19.5 1 l
19.5 19.5 l
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Red Stripe)
(Red Stripe) 37 19 73 55 [
%AI3_Tile
(0 O 0 R 0 0.9608 0.9137 0 k
 0 0.9608 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 18 w 4 M []0 d
0 XR
37 37 m
73 37 l
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Red Tablecloth)
(Red Tablecloth) 0 0 24 24 [
%AI3_Tile
(0 O 0 R 0.25 1 1 0 k
 0.25 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
6 18 m
0 18 L
0 24 L
6 24 L
6 18 L
f
18 18 m
12 18 L
12 24 L
18 24 L
18 18 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1225 0.5 0.5 0 k
 0.1225 0.5 0.5 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
12 18 m
6 18 L
6 24 L
12 24 L
12 18 L
f
24 18 m
18 18 L
18 24 L
24 24 L
24 18 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
12 12 m
6 12 L
6 18 L
12 18 L
12 12 L
f
24 12 m
18 12 L
18 18 L
24 18 L
24 12 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1225 0.5 0.5 0 k
 0.1225 0.5 0.5 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
6 12 m
0 12 L
0 18 L
6 18 L
6 12 L
f
18 12 m
12 12 L
12 18 L
18 18 L
18 12 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.25 1 1 0 k
 0.25 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
6 6 m
0 6 L
0 12 L
6 12 L
6 6 L
f
18 6 m
12 6 L
12 12 L
18 12 L
18 6 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1225 0.5 0.5 0 k
 0.1225 0.5 0.5 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
12 6 m
6 6 L
6 12 L
12 12 L
12 6 L
f
24 6 m
18 6 L
18 12 L
24 12 L
24 6 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
12 0 m
6 0 L
6 6 L
12 6 L
12 0 L
f
24 0 m
18 0 L
18 6 L
24 6 L
24 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1225 0.5 0.5 0 k
 0.1225 0.5 0.5 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
6 0 m
0 0 L
0 6 L
6 6 L
6 0 L
f
18 0 m
12 0 L
12 6 L
18 6 L
18 0 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 k
([Registration]) Pc
0 0 0 0 k
(White) Pc
0 0 0 1 k
(Black) Pc
0 0 0 0.8 k
(80% Black) Pc
0 0 0 0.6 k
(60% Black) Pc
0 0 0 0.4 k
(40% Black) Pc
0 0 0 0.2 k
(20% Black) Pc
0 1 1 0 k
(Red M=100 Y=100) Pc
0 0.75 0.75 0 k
(75% Red M=75 Y=75) Pc
0 0.5 0.5 0 k
(50% Red M=50 Y=50) Pc
0 0.25 0.25 0 k
(25% Red M=25 Y=25) Pc
0.8 0 1 0 k
(Green C=80 Y=100) Pc
0.6 0 0.75 0 k
(75% Green C=60 Y=75) Pc
0.4 0 0.5 0 k
(50% Green C=40 Y=50) Pc
0.2 0 0.25 0 k
(25% Green C=20 Y=25) Pc
1 0.5 0 0 k
(Blue C=100 M=50) Pc
0.75 0.375 0 0 k
(75% Blue C=75 M=37.5) Pc
0.5 0.25 0 0 k
(50% Blue C=50 M=25) Pc
0.25 0.125 0 0 k
(25% Blue C=25 M=12.5) Pc
0 0.5 1 0 k
(Orange M=50 Y=100) Pc
0 0.375 0.75 0 k
(75% Orange M=37.5 Y=75) Pc
0 0.25 0.5 0 k
(50% Orange M=25 Y=50) Pc
0 0.125 0.25 0 k
(25% Orange M=12.5 Y=25) Pc
0.5 0.9 0 0 k
(Violet C=50 M=90) Pc
0.375 0.675 0 0 k
(75% Violet C=37.5 M=67.5) Pc
0.25 0.45 0 0 k
(50% Violet C=25 M=45 ) Pc
0.125 0.225 0 0 k
(25% Violet C=12.5 M=22.5) Pc
0.8 0 0 0 k
(Azure C=80) Pc
0.6 0 0 0 k
(75% Azure C=60) Pc
0.4 0 0 0 k
(50% Azure C=40) Pc
0.2 0 0 0 k
(25% Azure C=20) Pc
0 0 1 0 k
(Yellow) Pc
0 0 0.75 0 k
(75% Yellow) Pc
0 0 0.5 0 k
(50% Yellow) Pc
0 0 0.25 0 k
(25% Yellow) Pc
Bb
2 (White, Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(White, Black) Pc
Bb
0 0 0 0 Bh
2 (Black, White Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Black, White Radial) Pc
Bb
2 (Steel Bar II) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Steel Bar II) Pc
Bb
2 (Rainbow) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Rainbow) Pc
Bb
0 0 0 0 Bh
2 (Emerald Eye) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Emerald Eye) Pc
Bb
2 (Sunset) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Sunset) Pc
(Red Tablecloth) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Red Tablecloth) Pc
(Pyramids) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Pyramids) Pc
(Azure Rings) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Azure Rings) Pc
(Red Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Red Stripe) Pc
(Clown Attack) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Clown Attack) Pc
(Camouflage) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Camouflage) Pc
PB
%AI5_EndPalette
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
*u
300 Ar
0 R
0 G
1 J 1 j 1 w 10 M []0 d
0 XR
103.6802 399.3599 m
535.6797 399.3599 l
S
300 Ar
103.6802 399.3599 m
103.6802 405.3599 l
S
300 Ar
103.6802 399.3599 m
103.6802 411.6001 l
S
300 Ar
180.2402 399.3599 m
180.2402 411.6001 l
S
300 Ar
224.8804 399.3599 m
224.8804 405.3599 l
S
300 Ar
256.8003 399.3599 m
256.8003 405.3599 l
S
300 Ar
281.52 399.3599 m
281.52 411.6001 l
S
300 Ar
301.4399 399.3599 m
301.4399 405.3599 l
S
300 Ar
318.4805 399.3599 m
318.4805 405.3599 l
S
300 Ar
333.3594 399.3599 m
333.3594 405.3599 l
S
300 Ar
346.3203 399.3599 m
346.3203 405.3599 l
S
300 Ar
357.8398 399.3599 m
357.8398 405.3599 l
S
300 Ar
357.8398 399.3599 m
357.8398 411.6001 l
S
300 Ar
434.4004 399.3599 m
434.4004 411.6001 l
S
300 Ar
479.2793 399.3599 m
479.2793 405.3599 l
S
300 Ar
510.9609 399.3599 m
510.9609 405.3599 l
S
300 Ar
535.6797 399.3599 m
535.6797 411.6001 l
S
300 Ar
103.6802 699.3599 m
535.6797 699.3599 l
S
300 Ar
103.6802 699.3599 m
103.6802 693.3599 l
S
300 Ar
103.6802 699.3599 m
103.6802 687.1201 l
S
300 Ar
180.2402 699.3599 m
180.2402 687.1201 l
S
300 Ar
224.8804 699.3599 m
224.8804 693.3599 l
S
300 Ar
256.8003 699.3599 m
256.8003 693.3599 l
S
300 Ar
281.52 699.3599 m
281.52 687.1201 l
S
300 Ar
301.4399 699.3599 m
301.4399 693.3599 l
S
300 Ar
318.4805 699.3599 m
318.4805 693.3599 l
S
300 Ar
333.3594 699.3599 m
333.3594 693.3599 l
S
300 Ar
346.3203 699.3599 m
346.3203 693.3599 l
S
300 Ar
357.8398 699.3599 m
357.8398 693.3599 l
S
300 Ar
357.8398 699.3599 m
357.8398 687.1201 l
S
300 Ar
434.4004 699.3599 m
434.4004 687.1201 l
S
300 Ar
479.2793 699.3599 m
479.2793 693.3599 l
S
300 Ar
510.9609 699.3599 m
510.9609 693.3599 l
S
300 Ar
535.6797 699.3599 m
535.6797 687.1201 l
S
300 Ar
103.6802 399.3599 m
103.6802 699.3599 l
S
300 Ar
103.6802 409.4399 m
109.6802 409.4399 l
S
300 Ar
103.6802 422.1602 m
109.6802 422.1602 l
S
300 Ar
103.6802 434.6401 m
109.6802 434.6401 l
S
300 Ar
103.6802 447.3599 m
115.9204 447.3599 l
S
300 Ar
103.6802 459.8398 m
109.6802 459.8398 l
S
300 Ar
103.6802 472.5601 m
109.6802 472.5601 l
S
300 Ar
103.6802 485.04 m
109.6802 485.04 l
S
300 Ar
103.6802 497.7603 m
115.9204 497.7603 l
S
300 Ar
103.6802 510.2402 m
109.6802 510.2402 l
S
300 Ar
103.6802 522.96 m
109.6802 522.96 l
S
300 Ar
103.6802 535.4399 m
109.6802 535.4399 l
S
300 Ar
103.6802 548.1602 m
115.9204 548.1602 l
S
300 Ar
103.6802 560.6401 m
109.6802 560.6401 l
S
300 Ar
103.6802 573.3604 m
109.6802 573.3604 l
S
300 Ar
103.6802 585.8398 m
109.6802 585.8398 l
S
300 Ar
103.6802 598.5601 m
115.9204 598.5601 l
S
300 Ar
103.6802 611.04 m
109.6802 611.04 l
S
300 Ar
103.6802 623.7603 m
109.6802 623.7603 l
S
300 Ar
103.6802 636.2402 m
109.6802 636.2402 l
S
300 Ar
103.6802 648.96 m
115.9204 648.96 l
S
300 Ar
103.6802 661.4399 m
109.6802 661.4399 l
S
300 Ar
103.6802 674.1602 m
109.6802 674.1602 l
S
300 Ar
103.6802 686.6401 m
109.6802 686.6401 l
S
300 Ar
103.6802 699.3599 m
115.9204 699.3599 l
S
300 Ar
89.2803 451.2002 m
89.2803 444 l
S
300 Ar
89.7603 451.9199 m
89.7603 444 l
S
300 Ar
1 D
89.7603 451.9199 m
85.4399 446.1602 l
91.6802 446.1602 l
S
300 Ar
0 D
88.0801 444 m
90.7202 444 l
S
300 Ar
1 D
95.7603 451.9199 m
94.5601 451.4399 l
93.8403 450.48 l
93.6001 448.5601 l
93.6001 447.3599 l
93.8403 445.4399 l
94.5601 444.2402 l
95.7603 444 l
96.48 444 l
97.6802 444.2402 l
98.4004 445.4399 l
98.8804 447.3599 l
98.8804 448.5601 l
98.4004 450.48 l
97.6802 451.4399 l
96.48 451.9199 l
95.7603 451.9199 l
95.04 451.4399 l
94.5601 451.2002 l
94.3203 450.48 l
93.8403 448.5601 l
93.8403 447.3599 l
94.3203 445.4399 l
94.5601 444.7202 l
95.04 444.2402 l
95.7603 444 l
S
300 Ar
96.48 444 m
97.2002 444.2402 l
97.6802 444.7202 l
98.1602 445.4399 l
98.4004 447.3599 l
98.4004 448.5601 l
98.1602 450.48 l
97.6802 451.2002 l
97.2002 451.4399 l
96.48 451.9199 l
S
300 Ar
0 D
89.2803 501.6001 m
89.2803 494.3999 l
S
300 Ar
89.7603 502.3203 m
89.7603 494.3999 l
S
300 Ar
1 D
89.7603 502.3203 m
85.4399 496.5601 l
91.6802 496.5601 l
S
300 Ar
0 D
88.0801 494.3999 m
90.7202 494.3999 l
S
300 Ar
93.8403 500.8799 m
94.3203 500.3999 l
93.8403 500.1602 l
93.6001 500.3999 l
93.6001 500.8799 l
93.8403 501.6001 l
94.3203 501.8398 l
95.2803 502.3203 l
96.96 502.3203 l
98.1602 501.8398 l
98.4004 501.6001 l
98.8804 500.8799 l
98.8804 500.1602 l
98.4004 499.2002 l
97.2002 498.48 l
95.2803 497.7603 l
94.5601 497.2803 l
93.8403 496.5601 l
93.6001 495.3599 l
93.6001 494.3999 l
S
300 Ar
96.96 502.3203 m
97.6802 501.8398 l
98.1602 501.6001 l
98.4004 500.8799 l
98.4004 500.1602 l
98.1602 499.2002 l
96.96 498.48 l
95.2803 497.7603 l
S
300 Ar
1 D
93.6001 495.1201 m
93.8403 495.3599 l
94.5601 495.3599 l
96.48 494.6401 l
97.6802 494.6401 l
98.4004 495.1201 l
98.8804 495.3599 l
S
300 Ar
94.5601 495.3599 m
96.48 494.3999 l
98.1602 494.3999 l
98.4004 494.6401 l
98.8804 495.3599 l
98.8804 496.3203 l
S
300 Ar
0 D
89.2803 552 m
89.2803 544.7998 l
S
300 Ar
89.7603 552.7202 m
89.7603 544.7998 l
S
300 Ar
1 D
89.7603 552.7202 m
85.4399 546.96 l
91.6802 546.96 l
S
300 Ar
0 D
88.0801 544.7998 m
90.7202 544.7998 l
S
300 Ar
96.96 552 m
96.96 544.7998 l
S
300 Ar
97.2002 552.7202 m
97.2002 544.7998 l
S
300 Ar
1 D
97.2002 552.7202 m
93.1201 546.96 l
99.1201 546.96 l
S
300 Ar
0 D
95.7603 544.7998 m
98.4004 544.7998 l
S
300 Ar
89.2803 602.3999 m
89.2803 595.2002 l
S
300 Ar
89.7603 603.1201 m
89.7603 595.2002 l
S
300 Ar
1 D
89.7603 603.1201 m
85.4399 597.3599 l
91.6802 597.3599 l
S
300 Ar
0 D
88.0801 595.2002 m
90.7202 595.2002 l
S
300 Ar
1 D
98.1602 601.9199 m
97.6802 601.6802 l
98.1602 601.2002 l
98.4004 601.6802 l
98.4004 601.9199 l
98.1602 602.6401 l
97.2002 603.1201 l
96.2402 603.1201 l
95.04 602.6401 l
94.3203 601.9199 l
93.8403 601.2002 l
93.6001 599.7598 l
93.6001 597.3599 l
93.8403 596.1602 l
94.5601 595.4399 l
95.7603 595.2002 l
96.48 595.2002 l
97.6802 595.4399 l
98.4004 596.1602 l
98.8804 597.3599 l
98.8804 597.8398 l
98.4004 599.04 l
97.6802 599.7598 l
96.48 600 l
96.2402 600 l
95.04 599.7598 l
94.3203 599.04 l
93.8403 597.8398 l
S
300 Ar
96.2402 603.1201 m
95.2803 602.6401 l
94.5601 601.9199 l
94.3203 601.2002 l
93.8403 599.7598 l
93.8403 597.3599 l
94.3203 596.1602 l
95.04 595.4399 l
95.7603 595.2002 l
S
300 Ar
96.48 595.2002 m
97.2002 595.4399 l
98.1602 596.1602 l
98.4004 597.3599 l
98.4004 597.8398 l
98.1602 599.04 l
97.2002 599.7598 l
96.48 600 l
S
300 Ar
0 D
89.2803 652.7998 m
89.2803 645.6001 l
S
300 Ar
89.7603 653.52 m
89.7603 645.6001 l
S
300 Ar
1 D
89.7603 653.52 m
85.4399 647.7603 l
91.6802 647.7603 l
S
300 Ar
0 D
88.0801 645.6001 m
90.7202 645.6001 l
S
300 Ar
1 D
95.2803 653.52 m
94.3203 653.04 l
93.8403 652.3203 l
93.8403 651.3599 l
94.3203 650.3999 l
95.2803 650.1602 l
96.96 650.1602 l
98.1602 650.3999 l
98.4004 651.3599 l
98.4004 652.3203 l
98.1602 653.04 l
96.96 653.52 l
95.2803 653.52 l
94.5601 653.04 l
94.3203 652.3203 l
94.3203 651.3599 l
94.5601 650.3999 l
95.2803 650.1602 l
S
300 Ar
96.96 650.1602 m
97.6802 650.3999 l
98.1602 651.3599 l
98.1602 652.3203 l
97.6802 653.04 l
96.96 653.52 l
S
300 Ar
95.2803 650.1602 m
94.3203 649.6802 l
93.8403 649.4399 l
93.6001 648.48 l
93.6001 647.04 l
93.8403 646.3203 l
94.3203 645.8398 l
95.2803 645.6001 l
96.96 645.6001 l
98.1602 645.8398 l
98.4004 646.3203 l
98.8804 647.04 l
98.8804 648.48 l
98.4004 649.4399 l
98.1602 649.6802 l
96.96 650.1602 l
S
300 Ar
95.2803 650.1602 m
94.5601 649.6802 l
94.3203 649.4399 l
93.8403 648.48 l
93.8403 647.04 l
94.3203 646.3203 l
94.5601 645.8398 l
95.2803 645.6001 l
S
300 Ar
96.96 645.6001 m
97.6802 645.8398 l
98.1602 646.3203 l
98.4004 647.04 l
98.4004 648.48 l
98.1602 649.4399 l
97.6802 649.6802 l
96.96 650.1602 l
S
300 Ar
0 D
535.6797 399.3599 m
535.6797 699.3599 l
S
300 Ar
535.6797 409.4399 m
529.6797 409.4399 l
S
300 Ar
535.6797 422.1602 m
529.6797 422.1602 l
S
300 Ar
535.6797 434.6401 m
529.6797 434.6401 l
S
300 Ar
535.6797 447.3599 m
523.4395 447.3599 l
S
300 Ar
535.6797 459.8398 m
529.6797 459.8398 l
S
300 Ar
535.6797 472.5601 m
529.6797 472.5601 l
S
300 Ar
535.6797 485.04 m
529.6797 485.04 l
S
300 Ar
535.6797 497.7603 m
523.4395 497.7603 l
S
300 Ar
535.6797 510.2402 m
529.6797 510.2402 l
S
300 Ar
535.6797 522.96 m
529.6797 522.96 l
S
300 Ar
535.6797 535.4399 m
529.6797 535.4399 l
S
300 Ar
535.6797 548.1602 m
523.4395 548.1602 l
S
300 Ar
535.6797 560.6401 m
529.6797 560.6401 l
S
300 Ar
535.6797 573.3604 m
529.6797 573.3604 l
S
300 Ar
535.6797 585.8398 m
529.6797 585.8398 l
S
300 Ar
535.6797 598.5601 m
523.4395 598.5601 l
S
300 Ar
535.6797 611.04 m
529.6797 611.04 l
S
300 Ar
535.6797 623.7603 m
529.6797 623.7603 l
S
300 Ar
535.6797 636.2402 m
529.6797 636.2402 l
S
300 Ar
535.6797 648.96 m
523.4395 648.96 l
S
300 Ar
535.6797 661.4399 m
529.6797 661.4399 l
S
300 Ar
535.6797 674.1602 m
529.6797 674.1602 l
S
300 Ar
535.6797 686.6401 m
529.6797 686.6401 l
S
300 Ar
535.6797 699.3599 m
523.4395 699.3599 l
S
300 Ar
103.6802 99.3604 m
535.6797 99.3604 l
S
300 Ar
103.6802 99.3604 m
103.6802 105.3604 l
S
300 Ar
103.6802 99.3604 m
103.6802 111.5996 l
S
300 Ar
180.2402 99.3604 m
180.2402 111.5996 l
S
300 Ar
224.8804 99.3604 m
224.8804 105.3604 l
S
300 Ar
256.8003 99.3604 m
256.8003 105.3604 l
S
300 Ar
281.52 99.3604 m
281.52 111.5996 l
S
300 Ar
301.4399 99.3604 m
301.4399 105.3604 l
S
300 Ar
318.4805 99.3604 m
318.4805 105.3604 l
S
300 Ar
333.3594 99.3604 m
333.3594 105.3604 l
S
300 Ar
346.3203 99.3604 m
346.3203 105.3604 l
S
300 Ar
357.8398 99.3604 m
357.8398 105.3604 l
S
300 Ar
357.8398 99.3604 m
357.8398 111.5996 l
S
300 Ar
434.4004 99.3604 m
434.4004 111.5996 l
S
300 Ar
479.2793 99.3604 m
479.2793 105.3604 l
S
300 Ar
510.9609 99.3604 m
510.9609 105.3604 l
S
300 Ar
535.6797 99.3604 m
535.6797 111.5996 l
S
300 Ar
1 D
99.8403 88.7998 m
99.6001 88.3203 l
99.8403 88.0801 l
100.3203 88.3203 l
99.8403 88.7998 l
S
300 Ar
0 D
103.6802 94.5605 m
104.4004 94.7998 l
105.6001 96 l
105.6001 88.0801 l
S
300 Ar
105.3604 95.5205 m
105.3604 88.0801 l
S
300 Ar
103.6802 88.0801 m
107.2803 88.0801 l
S
300 Ar
1 D
176.4004 88.7998 m
176.1602 88.3203 l
176.4004 88.0801 l
176.8804 88.3203 l
176.4004 88.7998 l
S
300 Ar
0 D
179.52 94.5605 m
180 94.0801 l
179.52 93.8398 l
179.04 94.0801 l
179.04 94.5605 l
179.52 95.2803 l
180 95.5205 l
180.96 96 l
182.6401 96 l
183.8403 95.5205 l
184.0801 95.2803 l
184.5601 94.5605 l
184.5601 93.8398 l
184.0801 92.8799 l
182.8804 92.1602 l
180.96 91.4404 l
180.2402 90.96 l
179.52 90.2402 l
179.04 89.04 l
179.04 88.0801 l
S
300 Ar
182.6401 96 m
183.3604 95.5205 l
183.8403 95.2803 l
184.0801 94.5605 l
184.0801 93.8398 l
183.8403 92.8799 l
182.6401 92.1602 l
180.96 91.4404 l
S
300 Ar
1 D
179.04 88.7998 m
179.52 89.04 l
180.2402 89.04 l
182.1602 88.3203 l
183.3604 88.3203 l
184.0801 88.7998 l
184.5601 89.04 l
S
300 Ar
180.2402 89.04 m
182.1602 88.0801 l
183.8403 88.0801 l
184.0801 88.3203 l
184.5601 89.04 l
184.5601 90 l
S
300 Ar
277.4399 88.7998 m
277.2002 88.3203 l
277.4399 88.0801 l
277.9204 88.3203 l
277.4399 88.7998 l
S
300 Ar
0 D
281.04 96 m
280.0801 92.1602 l
281.04 92.6396 l
282 92.8799 l
283.2002 92.8799 l
284.3999 92.6396 l
285.1201 91.9199 l
285.6001 90.7197 l
285.6001 90.2402 l
285.1201 89.04 l
284.3999 88.3203 l
283.2002 88.0801 l
282 88.0801 l
281.04 88.3203 l
280.5601 88.7998 l
280.0801 89.5205 l
280.0801 90 l
280.5601 90.2402 l
281.04 90 l
280.5601 89.5205 l
S
300 Ar
283.2002 92.8799 m
283.9204 92.6396 l
284.8804 91.9199 l
285.1201 90.7197 l
285.1201 90.2402 l
284.8804 89.04 l
283.9204 88.3203 l
283.2002 88.0801 l
S
300 Ar
281.04 96 m
284.8804 96 l
S
300 Ar
1 D
281.04 95.5205 m
282.96 95.5205 l
284.8804 96 l
S
300 Ar
0 D
356.6406 94.5605 m
357.3594 94.7998 l
358.3203 96 l
358.3203 88.0801 l
S
300 Ar
358.0801 95.5205 m
358.0801 88.0801 l
S
300 Ar
356.6406 88.0801 m
360 88.0801 l
S
300 Ar
432 94.5605 m
432.4805 94.0801 l
432 93.8398 l
431.7598 94.0801 l
431.7598 94.5605 l
432 95.2803 l
432.4805 95.5205 l
433.6797 96 l
435.1211 96 l
436.3203 95.5205 l
436.5605 95.2803 l
437.041 94.5605 l
437.041 93.8398 l
436.5605 92.8799 l
435.5996 92.1602 l
433.6797 91.4404 l
432.9609 90.96 l
432 90.2402 l
431.7598 89.04 l
431.7598 88.0801 l
S
300 Ar
435.1211 96 m
435.8398 95.5205 l
436.3203 95.2803 l
436.5605 94.5605 l
436.5605 93.8398 l
436.3203 92.8799 l
435.1211 92.1602 l
433.6797 91.4404 l
S
300 Ar
1 D
431.7598 88.7998 m
432 89.04 l
432.9609 89.04 l
434.6406 88.3203 l
435.8398 88.3203 l
436.5605 88.7998 l
437.041 89.04 l
S
300 Ar
432.9609 89.04 m
434.6406 88.0801 l
436.3203 88.0801 l
436.5605 88.3203 l
437.041 89.04 l
437.041 90 l
S
300 Ar
0 D
533.7598 96 m
533.041 92.1602 l
533.7598 92.6396 l
534.9609 92.8799 l
535.9199 92.8799 l
537.1191 92.6396 l
537.8398 91.9199 l
538.3203 90.7197 l
538.3203 90.2402 l
537.8398 89.04 l
537.1191 88.3203 l
535.9199 88.0801 l
534.9609 88.0801 l
533.7598 88.3203 l
533.2793 88.7998 l
533.041 89.5205 l
533.041 90 l
533.2793 90.2402 l
533.7598 90 l
533.2793 89.5205 l
S
300 Ar
535.9199 92.8799 m
536.8809 92.6396 l
537.5996 91.9199 l
537.8398 90.7197 l
537.8398 90.2402 l
537.5996 89.04 l
536.8809 88.3203 l
535.9199 88.0801 l
S
300 Ar
533.7598 96 m
537.5996 96 l
S
300 Ar
1 D
533.7598 95.5205 m
535.6797 95.5205 l
537.5996 96 l
S
300 Ar
0 D
103.6802 399.3599 m
535.6797 399.3599 l
S
300 Ar
103.6802 399.3599 m
103.6802 393.3604 l
S
300 Ar
103.6802 399.3599 m
103.6802 387.1201 l
S
300 Ar
180.2402 399.3599 m
180.2402 387.1201 l
S
300 Ar
224.8804 399.3599 m
224.8804 393.3604 l
S
300 Ar
256.8003 399.3599 m
256.8003 393.3604 l
S
300 Ar
281.52 399.3599 m
281.52 387.1201 l
S
300 Ar
301.4399 399.3599 m
301.4399 393.3604 l
S
300 Ar
318.4805 399.3599 m
318.4805 393.3604 l
S
300 Ar
333.3594 399.3599 m
333.3594 393.3604 l
S
300 Ar
346.3203 399.3599 m
346.3203 393.3604 l
S
300 Ar
357.8398 399.3599 m
357.8398 393.3604 l
S
300 Ar
357.8398 399.3599 m
357.8398 387.1201 l
S
300 Ar
434.4004 399.3599 m
434.4004 387.1201 l
S
300 Ar
479.2793 399.3599 m
479.2793 393.3604 l
S
300 Ar
510.9609 399.3599 m
510.9609 393.3604 l
S
300 Ar
535.6797 399.3599 m
535.6797 387.1201 l
S
300 Ar
103.6802 99.3604 m
103.6802 399.3599 l
S
300 Ar
103.6802 99.3604 m
115.9204 99.3604 l
S
300 Ar
103.6802 115.2002 m
109.6802 115.2002 l
S
300 Ar
103.6802 131.04 m
109.6802 131.04 l
S
300 Ar
103.6802 146.6396 m
109.6802 146.6396 l
S
300 Ar
103.6802 162.4805 m
109.6802 162.4805 l
S
300 Ar
103.6802 178.3203 m
115.9204 178.3203 l
S
300 Ar
103.6802 194.1602 m
109.6802 194.1602 l
S
300 Ar
103.6802 210 m
109.6802 210 l
S
*U
*u
300 Ar
103.6802 225.5996 m
109.6802 225.5996 l
S
300 Ar
103.6802 241.4404 m
109.6802 241.4404 l
S
300 Ar
103.6802 257.2803 m
115.9204 257.2803 l
S
300 Ar
103.6802 273.1201 m
109.6802 273.1201 l
S
300 Ar
103.6802 288.7197 m
109.6802 288.7197 l
S
300 Ar
103.6802 304.5605 m
109.6802 304.5605 l
S
300 Ar
103.6802 320.4004 m
109.6802 320.4004 l
S
300 Ar
103.6802 336.2402 m
115.9204 336.2402 l
S
300 Ar
103.6802 352.0801 m
109.6802 352.0801 l
S
300 Ar
103.6802 367.6797 m
109.6802 367.6797 l
S
300 Ar
103.6802 383.5205 m
109.6802 383.5205 l
S
300 Ar
103.6802 399.3599 m
109.6802 399.3599 l
S
300 Ar
84.2402 178.3203 m
90.96 178.3203 l
S
300 Ar
94.5601 181.4404 m
95.2803 181.6797 l
96.48 182.8799 l
96.48 174.96 l
S
300 Ar
96 182.4004 m
96 174.96 l
S
300 Ar
94.5601 174.96 m
97.9204 174.96 l
S
300 Ar
81.3604 257.2803 m
88.0801 257.2803 l
S
300 Ar
1 D
90.7202 254.6396 m
90.48 254.1602 l
90.7202 253.9199 l
91.2002 254.1602 l
90.7202 254.6396 l
S
300 Ar
0 D
94.3203 261.8398 m
93.6001 258 l
94.3203 258.4805 l
95.2803 258.7197 l
96.48 258.7197 l
97.6802 258.4805 l
98.4004 257.7598 l
98.8804 256.5605 l
98.8804 256.0801 l
98.4004 254.8799 l
97.6802 254.1602 l
96.48 253.9199 l
95.2803 253.9199 l
94.3203 254.1602 l
93.8403 254.6396 l
93.6001 255.3604 l
93.6001 255.8398 l
93.8403 256.0801 l
94.3203 255.8398 l
93.8403 255.3604 l
S
300 Ar
96.48 258.7197 m
97.2002 258.4805 l
98.1602 257.7598 l
98.4004 256.5605 l
98.4004 256.0801 l
98.1602 254.8799 l
97.2002 254.1602 l
96.48 253.9199 l
S
300 Ar
94.3203 261.8398 m
98.1602 261.8398 l
S
300 Ar
1 D
94.3203 261.3604 m
96.2402 261.3604 l
98.1602 261.8398 l
S
300 Ar
95.52 340.7998 m
94.5601 340.3203 l
93.6001 339.3604 l
93.3604 337.4404 l
93.3604 336.2402 l
93.6001 334.3203 l
94.5601 333.1201 l
95.52 332.8799 l
96.2402 332.8799 l
97.4399 333.1201 l
98.1602 334.3203 l
98.6401 336.2402 l
98.6401 337.4404 l
98.1602 339.3604 l
97.4399 340.3203 l
96.2402 340.7998 l
95.52 340.7998 l
94.8003 340.3203 l
94.5601 340.0801 l
94.0801 339.3604 l
93.6001 337.4404 l
93.6001 336.2402 l
94.0801 334.3203 l
94.5601 333.5996 l
94.8003 333.1201 l
95.52 332.8799 l
S
300 Ar
96.2402 332.8799 m
97.2002 333.1201 l
97.4399 333.5996 l
97.9204 334.3203 l
98.1602 336.2402 l
98.1602 337.4404 l
97.9204 339.3604 l
97.4399 340.0801 l
97.2002 340.3203 l
96.2402 340.7998 l
S
300 Ar
0 D
535.6797 99.3604 m
535.6797 399.3599 l
S
300 Ar
535.6797 99.3604 m
523.4395 99.3604 l
S
300 Ar
535.6797 115.2002 m
529.6797 115.2002 l
S
300 Ar
535.6797 131.04 m
529.6797 131.04 l
S
300 Ar
535.6797 146.6396 m
529.6797 146.6396 l
S
300 Ar
535.6797 162.4805 m
529.6797 162.4805 l
S
300 Ar
535.6797 178.3203 m
523.4395 178.3203 l
S
300 Ar
535.6797 194.1602 m
529.6797 194.1602 l
S
300 Ar
535.6797 210 m
529.6797 210 l
S
300 Ar
535.6797 225.5996 m
529.6797 225.5996 l
S
300 Ar
535.6797 241.4404 m
529.6797 241.4404 l
S
300 Ar
535.6797 257.2803 m
523.4395 257.2803 l
S
300 Ar
535.6797 273.1201 m
529.6797 273.1201 l
S
300 Ar
535.6797 288.7197 m
529.6797 288.7197 l
S
300 Ar
535.6797 304.5605 m
529.6797 304.5605 l
S
300 Ar
535.6797 320.4004 m
529.6797 320.4004 l
S
300 Ar
535.6797 336.2402 m
523.4395 336.2402 l
S
300 Ar
535.6797 352.0801 m
529.6797 352.0801 l
S
300 Ar
535.6797 367.6797 m
529.6797 367.6797 l
S
300 Ar
535.6797 383.5205 m
529.6797 383.5205 l
S
300 Ar
535.6797 399.3599 m
529.6797 399.3599 l
S
*U
U
/BBAccumRotation (0.000000) XT
u
100 Ar
0 0 0 0.8 K
2 w
175.1685 351.999 m
150.3228 349.292 126.855 346.7363 103.5894 345.6777 C
103.771 341.6816 L
127.1626 342.7461 151.7876 345.4287 175.6016 348.0225 c
236.6489 354.6729 299.7744 361.5488 357.0273 344.1221 c
420.4629 324.8125 463.2881 275.1367 493.5098 234.0156 c
507.4785 215.0088 520.7646 194.8779 532.999 174.1826 C
536.4424 176.2178 L
524.1406 197.0273 510.7803 217.2705 496.7324 236.3848 c
466.1445 278.0039 422.7549 328.2969 358.1914 347.9482 c
300.1558 365.6143 236.6157 358.6924 175.1685 351.999 c
s
300 Ar
0 0 0 0.4 K
103.6802 343.6797 m
185.9146 347.4209 277.1362 370.5303 357.6094 346.0352 c
416.8701 327.9971 459.6748 283.4297 495.1211 235.2002 c
509.25 215.9756 522.498 195.876 534.7207 175.2002 c
S
U
u
300 Ar
1 D
0 G
103.6802 403.4399 m
236.313 472.7705 366.3457 546.7261 483.3594 640.3203 c
500.71 654.1982 518.3193 668.0664 534.7207 683.04 c
S
U
u
100 Ar
0 D
0 0 0 0.8 K
1 w
500.5039 637.7642 m
494.6816 634.4321 488.6611 630.9868 482.8447 627.4976 c
454.9688 610.7729 426.6943 593.6089 399.3506 577.0098 c
303.481 518.8101 204.3467 458.6294 103.2168 405.7661 C
104.1436 403.9937 L
205.3301 456.8867 304.4917 517.0845 400.3887 575.2998 c
427.7295 591.8979 456.002 609.061 483.874 625.7827 c
489.6719 629.2612 495.6836 632.7017 501.4971 636.0283 c
512.7949 642.4941 524.4775 649.1797 535.2832 656.5332 C
534.1582 658.1865 L
523.417 650.877 511.7686 644.2109 500.5039 637.7642 c
s
300 Ar
1 D
0 0 0 0.4 K
103.6802 404.8799 m
233.7065 472.8481 357.8105 551.3169 483.3594 626.6401 c
500.4092 636.8691 518.3828 646.2412 534.7207 657.3599 c
S
U
u
300 Ar
0 D
0 G
3 w
103.6802 336.2402 m
234.6401 336.2402 365.6006 336.2402 496.5605 336.2402 c
509.2803 336.2402 522.001 336.2402 534.7207 336.2402 c
S
U
u
300 Ar
1 D
2 w [12 ]0 d
103.6802 402 m
230.9526 468.5288 358.2324 534.8369 483.3594 605.04 c
500.4551 614.6318 518.0068 623.7637 534.7207 633.8398 c
S
U
u
300 Ar
0 D
3 w
103.6802 327.3604 m
189.2417 321.5205 274.5923 305.3242 347.5195 258.7197 c
405.876 221.4268 449.1064 165.2529 486.7207 108.7197 c
488.7734 105.6338 491.1279 102.3457 493.4395 99.3604 c
S
U
u
300 Ar
2 J 2 w [4 ]0 d
103.6802 333.3604 m
236.0854 330.3486 395.9316 327.9092 495.8408 228 c
508.8223 215.0186 523.8584 203.9834 534.7207 189.3604 c
S
U
u
300 Ar
1 D
103.6802 403.2002 m
235.0479 468.8809 361.2324 543.8398 483.3594 624.96 c
500.5645 636.3882 517.667 647.9102 534.7207 659.52 c
S
U
0 To
1 0.0046 -0.0046 1 452.6357 341.5928 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
0 J 0 j 1 w 4 M []0 d
%_ 0 50 XQ
/_SymbolMT 16.2 16.2 -3.5596 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
1 TA
%_ 0 XL
0 TY
0 TV
48.6 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
0 Tc
0 Tw
(W=0) Tx 1 0 Tk
(\r) TX 
TO
/BBAccumRotation (0.004574) XT
u
0 To
0.9454 -0.326 0.326 0.9454 351.708 317.8359 0 Tp
0 Tv
TP
0 Tr
36 0 Xb
XB
(W  =0.3) Tx 1 0 Tk
(\r) TX 1 0 Tk
TO
0 To
0.9454 -0.326 0.326 0.9454 360.7139 308.0654 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 12.15 12.15 -2.6697 Tf
(M) Tx 1 0 Tk
(\r) TX 1 0 Tk
TO
U
u
0 To
0.8371 -0.547 0.547 0.8371 321.4395 259.0977 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 16.2 16.2 -3.5596 Tf
(W  =1.0) Tx 1 0 Tk
(\r) TX 1 0 Tk
TO
0 To
0.8371 -0.547 0.547 0.8371 327.7881 247.4229 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 12.15 12.15 -2.6697 Tf
(M) Tx 1 0 Tk
(\r) TX 1 0 Tk
TO
U
u
0 To
0.9475 0.3198 -0.3198 0.9475 268.1406 369.7305 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 9 9 -1.9775 Tf
(\r) TX 1 0 Tk
TO
/BBAccumRotation (0.325468) XT
u
0 To
1 -0.0066 0.0066 1 208.0332 367.2051 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 16.2 16.2 -3.5596 Tf
(W  =0.3, W  =0.7) Tx 1 0 Tk
(\r) TX 1 0 Tk
TO
0 To
1 -0.0066 0.0066 1 219.6895 360.8291 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 12.15 12.15 -2.6697 Tf
(M) Tx 1 0 Tk
(\r) TX 1 0 Tk
TO
U
0 To
1 -0.0066 0.0066 1 276.4189 362.2129 0 Tp
0 Tv
TP
0 Tr
(L) Tx 1 0 Tk
(\r) TX 1 0 Tk
TO
U
0 To
0 1 -1 0 67.667 539.6675 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPSMT 18 18 -5.5195 Tf
(m-M \(mag\)) Tx 1 0 Tk
(\r) TX 
TO
/BBAccumRotation (1.570796) XT
0 To
0 1 -1 0 67.667 173.4238 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 18 18 -3.9551 Tf
(D\() Tx 1 0 Tk
/_TimesNewRomanPSMT 18 18 -5.5195 Tf
(m-M\)     \(mag\)) Tx 1 0 Tk
(\r) TX 1 0 Tk
TO
/BBAccumRotation (1.570796) XT
0 To
0 1 -1 0 73.3862 231.4248 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 11 11 -2.417 Tf
18 0 Tl
(W=0) Tx 1 0 Tk
(\r) TX 
TO
/BBAccumRotation (1.570796) XT
0 To
1 0 0 1 292.3335 67 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPSMT 18 18 -5.5195 Tf
0 0 Tl
(redshift) Tx 1 0 Tk
(\r) TX 
TO
LB
%AI5_EndLayer--
gsave annotatepage grestore showpage
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec

%%EndDocument
 @endspecial 523 3529 a Fs(Fig.)15 b(1.)71 b Fq(D)890
3537 y Fd(L)970 3529 y Ft(expressed)33 b(as)h(distance)g(mo)r(dulus)e
(\()p Fq(m)22 b Fr(\000)g Fq(M)8 b Ft(\))33 b(for)i(four)e(relev)l(an)n
(t)g(cosmological)523 3620 y(mo)r(dels;)i Fq(\012)871
3628 y Fd(M)974 3620 y Ft(=)g(0,)g Fq(\012)1222 3628
y Fd(\003)1305 3620 y Ft(=)h(0)e(\(empt)n(y)f(Univ)n(erse,)h
Fc(solid)h(line)p Ft(\);)f Fq(\012)2545 3628 y Fd(M)2648
3620 y Ft(=)i(0)p Fq(:)p Ft(3,)f Fq(\012)2956 3628 y
Fd(\003)3039 3620 y Ft(=)h(0)e(\()p Fc(short)523 3712
y(dashe)l(d)c(line)p Ft(\);)c Fq(\012)1029 3720 y Fd(M)1119
3712 y Ft(=)c(0)p Fq(:)p Ft(3,)28 b Fq(\012)1406 3720
y Fd(\003)1475 3712 y Ft(=)22 b(0)p Fq(:)p Ft(7)28 b(\()p
Fc(hatche)l(d)i(line)p Ft(\);)c(and)g Fq(\012)2397 3720
y Fd(M)2487 3712 y Ft(=)c(1)p Fq(:)p Ft(0,)28 b Fq(\012)2774
3720 y Fd(\003)2843 3712 y Ft(=)23 b(0)j(\()p Fc(long)i(dashe)l(d)523
3803 y(line)p Ft(\).)34 b(In)f(the)h(b)r(ottom)g(panel)g(the)g(empt)n
(y)e(Univ)n(erse)i(has)g(b)r(een)g(subtracted)g(from)g(the)g(other)523
3894 y(mo)r(dels)26 b(to)f(highligh)n(t)i(the)e(di\013erences.)523
4158 y Fw(It)36 b(is)f(imp)r(ossible)g(to)g(pin)h(do)n(wn)f(the)g
(absolute)g(amoun)n(t)g(of)g(either)g(sp)r(ecies)g(of)g(matter.)523
4257 y(One)c(can)g(only)g(determine)g(their)h(relativ)n(e)e(dominance,)
h(whic)n(h,)g(at)g Fm(z)i Fw(=)c(0,)i(is)g(giv)n(en)f(b)n(y)523
4357 y(Eq.)35 b(\(9\).)i(Ho)n(w)n(ev)n(er,)d(Go)r(obar)g(and)i(P)n
(erlm)n(utter)f([27])g(p)r(oin)n(ted)h(out)g(that)g(b)n(y)g(observing)
523 4457 y(ob)5 b(jects)27 b(o)n(v)n(er)f(a)i(larger)d(range)i(of)h
(high)f(redshift)h(\(e.g.,)g(0)p Fm(:)p Fw(3)22 b Fm(>)h(z)k(>)c
Fw(1)p Fm(:)p Fw(0\))k(this)h(degeneracy)523 4556 y(can)34
b(b)r(e)g(brok)n(en,)f(pro)n(viding)g(a)h(measuremen)n(t)f(of)h(the)g
(absolute)g(fractions)f(of)h Fm(\012)3163 4568 y Fl(M)3271
4556 y Fw(and)523 4656 y Fm(\012)587 4668 y Fl(\003)638
4656 y Fw(.)648 4756 y(T)-7 b(o)20 b(illustrate)h(the)g(e\013ect)h(of)f
(cosmological)d(parameters)h(on)i(the)g(luminosit)n(y)g(distance,)523
4855 y(in)29 b(Fig.)g(1)g(w)n(e)g(plot)g(a)f(series)g(of)i(mo)r(dels)e
(for)h(b)r(oth)h Fm(\003)e Fw(and)h(non-)p Fm(\003)f
Fw(univ)n(erses.)g(In)i(the)f(top)p eop
%%Page: 8 8
8 7 bop 523 232 a Ft(8)237 b(P)n(erlm)n(utter)25 b(and)g(Sc)n(hmidt)783
3475 y @beginspecial 58 @llx 66 @lly 554 @urx 726 @ury
2834 @rwi @setspecial
%%BeginDocument: PerlmutterSchmidtfig2.eps
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: 13 13 599 779
%AI3_DocumentPreview: Header
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 1 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -479 935 1 1586 1095 26 0 1 8 66 0 0
%AI5_OpenViewLayers: 7
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 50 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 40 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIDataProc null def
	/XIVersion 6 def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
end
currentdict /_colorimage known not {
	/colorimage where {
		/colorimage get /_colorimage exch def
	}{
		/_colorimage null def
	} ifelse
} if
/_image systemdict /image get def
/_currenttransfer systemdict /currenttransfer get def
/FourEqual {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual { 
				/plateindex 0 def
			}{
				0 1 0 0 FourEqual { 
					/plateindex 1 def
				}{
					0 0 1 0 FourEqual {
						/plateindex 2 def
					}{
						0 0 0 1 FourEqual { 
							/plateindex 3 def
						}{
							0 0 0 0 FourEqual {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/clrspaceissepn {
	type /arraytype eq 
} def
/clrspacegetname {
	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse
} def
/clrspacegetalt {
	aload pop pop pop colormake
} def
/clrspacegetcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/clrspacemarksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				/findcmykcustomcolor where {
					pop
					dup length 2 sub get
					0.1 0.1 0.1 0.1 5 -1 roll
					findcmykcustomcolor 1 setcustomcolor
					systemdict /currentgray get exec
					1 ne
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/colormake {
	dup clrspacegetcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/colorexpand {
	dup clrspacegetname exch
	dup clrspaceissepn {
		clrspacegetalt
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				clrspacegetalt colortint colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/WalkRGBString {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/CMYKToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/SeparateCMYKImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne {
			sourcearray plateindex get exec
		}{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub {
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/ColorImageCompositeEmulator {
	pop true eq {
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/colorimage {
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index
 end
	
	dup 8 eq exch 1 eq or not {
		/_colorimage load null ne {
			_colorimage
		}{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}{
		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {
			/_colorimage load null eq {
				ColorImageCompositeEmulator
			}{
				dup 1 eq {
					pop pop image
				}{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						grestore
					} if
				} ifelse
			} ifelse
		}{
			dup 1 eq {
				pop pop
				image
			}{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0 {			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace clrspacegetcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] makeimagedict _image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] makeimagedict _image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} stringapply
			} concatprocs _image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} stringapply
			} concatprocs false _pticomps
			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse
		} ifelse
	} ifelse
} def
/graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray proctintimage
} def
/cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK proctintimage
} def
/rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB proctintimage
} def
/tintimage {
	TestPlateIndex -1 eq {
		colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop graytintimage
		}{
			dup /DeviceRGB eq {
				pop rgbtintimage
			}{
				pop cmyktintimage
			} ifelse
		} ifelse
	}{
		dup clrspacemarksplate {
			plateindex 5 lt {
				colortocmyk plateindex get 1 exch sub
				exch {1 0}{0 1} ifelse () graytintimage
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage
			} ifelse
		}{
			pop pop pop
			{pop 1} 0 1 () /DeviceGray proctintimage
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace tintimage
} def
/XIImage {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIType 1 eq {
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEncoding 0 ne XIVersion 6 le and {
			currentfile 128 string readline pop pop
		} if
		XICompression 0 eq {
			/XIBuffer1 XIRowBytes string def
			XIEncoding 0 eq {
				{currentfile XIBuffer1 readhexstring pop}
			}{
				{currentfile XIBuffer1 readstring pop}
			} ifelse
		}{
			/XIBuffer1 256 string def
			/XIBuffer2 XIRowBytes string def
			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
			/ASCIIHexDecode filter /DCTDecode filter
			/XIFile exch def
			{XIFile XIBuffer2 readstring pop}
		} ifelse
		/XIDataProc exch def
		
		XIVersion 6 le {
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIType 1 eq {
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		XIEnable {
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		grestore
 end
} def
end
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
userdict /_useSmoothShade true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _TimesNewRomanPSMT TimesNewRomanPSMT
[/_TimesNewRomanPSMT/TimesNewRomanPSMT 0 0 0 TZ
%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
13 Bn
%AI5_BeginGradient: (Black, White Radial)
(Black, White Radial) 1 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 0 1 50 0 %_Bs
0 0 0 1 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Emerald Eye)
(Emerald Eye) 1 3 Bd
[
<
E4E4E4E4E5E5E5E5E5E5E5E5E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8
E8E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
ECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEF
EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
>
<
7675737271706E6D6C6B6A68676665646361605F5E5D5C5B5A595857565554535251504F4E4D4C4B
4A4948474646454443424141403F3E3D3C3C3B3A39393837363635343433323131302F2F2E2E2D2C
2C2B2A2A292928282726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1B1A1A19191818
181717171616151515141414131313121212111111101010100F0F0F0E0E0E0E0D0D0D0D0C0C0C0C
0B0B0B0B0B0A0A0A0A0A090909090908080808080807070707070706060606060606050505050505
05050404040404040404040403030303030303030303030302020202020202020202020202020202
01010101010101010101010101010101010101010101010101010101010000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000
>
<
F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F9F9
F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFB
FBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
9896959391908E8D8B8A8886858382807F7E7C7B79787675747271706E6D6C6A6968676564636261
5F5E5D5C5B5A5957565554535251504F4E4D4C4B4A49484746454443424241403F3E3D3C3C3B3A39
3837373635343433323131302F2F2E2D2D2C2B2B2A2929282727262625242423232222212120201F
1F1E1E1D1D1C1C1B1B1A1A1919181818171716161615151414141313131212121111111010100F0F
0F0F0E0E0E0D0D0D0D0C0C0C0C0B0B0B0B0A0A0A0A0A090909090908080808080707070707070606
06060606050505050505050504040404040404040403030303030303030303030202020202020202
02020202020202020101010101010101010101010101010101010101010101010101010000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000
>
1 %_Br
<
F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEDEDEDEDECECECECEBEBEBEAEAEAEAE9E9E9E8E8E8E7E7E6E6
E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DFDFDFDEDEDDDDDCDCDBDBDBDADAD9D9D8D8D7D7D6D6D5D5
D4D4D3D3D2D2D1D1D0D0CFCFCECECDCDCCCCCBCBCACAC9C8C8C7C7C6C6C5C5C4C3C3C2C2C1C1C0BF
BFBEBEBDBCBCBBBBBAB9B9B8B8B7B6B6B5B5B4B3B3B2B1B1B0B0AFAEAEADACACABAAAAA9A8A8A7A6
A6A5A4A4A3A2A2A1A0A09F9E9E9D9C9C9B9A9A99989797969595949393929190908F8E8E8D8C8B8B
8A89888887868685848383828180807F7E7D7D7C7B7A7A797877767675747373727170706F6E6D6C
6C6B6A696868676665646463626160605F5E5D5C5C5B5A5958575756555453535251504F4E4E4D4C
4B4A4948484746454443434241403F3E3D3C3C3B3A39383736363534333231302F2F2E2D2C2B2A29
282727262524232221201F1E1E1D1C1B1A19181716151414131211100F0E0D0C0B0A090807070605
0403020100
>
0
<
FFFFFFFFFFFEFEFEFEFEFDFDFDFDFDFCFCFCFCFBFBFBFAFAFAF9F9F9F8F8F8F7F7F7F6F6F6F5F5F4
F4F4F3F3F3F2F2F1F1F0F0F0EFEFEEEEEDEDECECECEBEBEAEAE9E9E8E8E7E7E6E6E5E5E4E4E3E3E2
E2E1E1E0E0DFDEDEDDDDDCDCDBDBDADAD9D8D8D7D7D6D6D5D4D4D3D3D2D1D1D0D0CFCECECDCDCCCB
CBCAC9C9C8C8C7C6C6C5C4C4C3C2C2C1C0C0BFBEBEBDBCBCBBBABAB9B8B8B7B6B6B5B4B4B3B2B2B1
B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A09F9F9E9D9C9C9B9A999998979696959493
939291908F8F8E8D8C8C8B8A898888878685848483828180807F7E7D7C7B7B7A7978777676757473
727171706F6E6D6C6C6B6A6968676666656463626160605F5E5D5C5B5A5959585756555453525151
504F4E4D4C4B4A49484847464544434241403F3E3E3D3C3B3A39383736353433323130302F2E2D2C
2B2A292827262524232221201F1E1D1D1C1B1A191817161514131211100F0E0D0C0B0A0908070605
0403020100
>
0
1 %_Br
[
0.8941 0.4627 0.9608 0.5961 1 16.2162 28.6517 %_Bs
0.9412 0 1 0 1 61.5385 64.6067 %_Bs
0 0 0 0 1 50 78.6517 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
F9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2
D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAA
A9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878685848382
81807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A
595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635343332
31302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A
0908070605040302
>
0.9882
<
05050505050505050505050505050505050505050505050505050505050505050505050505050505
05050606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606070707070707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707070707070707070707070707070707
07070707070708080808080808080808080808080808080808080808080808080808080808080808
0808080808080808
>
0
1 %_Br
<
E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEB
EBEBEBEBEBEBEBEBECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9
>
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B
8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3
B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADB
DCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC
>
<
09090909090909090909090909090909090909090909090909090909090908080808080808080808
08080808080808080808080808080808080808080808080808080808080808080808080808080808
08080808080808080707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
060606050505050505050505050505050505050505050505050505050505050505
>
0
1 %_Br
<
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8
>
<
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414
>
<
EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8
C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A0
9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978
77767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525150
4F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928
27262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09
>
0
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC
>
<
05050505050505050506060606060606060606060606060606070707070707070707070707070707
070808080808080808080808080808080808090909090909090909090909090909090A0A0A0A0A0A
0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C
0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F
0F0F0F0F0F0F0F0F0F0F0F0F10101010101010101010101010101010111111111111111111111111
1111111112121212121212121212121212121212131313131313131313
>
<
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEF
>
0
1 %_Br
<
03030303030303030303030303030303030303030303030304040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040505050505050505
05050505050505050505050505050505050505050505050505050505050505050505050505050505
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707080808080808080808080808080808080808080808080808
08
>
<
F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCE
CDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6
A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E
7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756
5554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706
05
>
0.9137
0
1 %_Br
[
0.0078 0.9882 0.0314 0 1 50 100 %_Bs
0.9765 0.9882 0.0196 0 1 50 80 %_Bs
0.9098 0.0784 0.0353 0 1 50 60 %_Bs
0.9255 0.0745 0.9373 0 1 50 40 %_Bs
0.0314 0.0196 0.9137 0 1 50 20 %_Bs
0.0118 0.9608 0.9137 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar II)
(Steel Bar II) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A
>
0 %_Br
<
1A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041
42434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263646566676869
6A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F9091
92939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9
BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1
E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0.1 0 50 100 %_Bs
1 0 50 39.8876 %_Bs
0.1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Sunset)
(Sunset) 0 5 Bd
[
<
EEEDEDECECEBEBEAE9E9E8E8E7E6E6E5E5E4E4E3E2E2E1E1E0DFDFDEDEDDDDDCDBDBDADAD9D9D8D7
D7D6D6D5D4D4D3D3D2D2D1
>
<
3534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E
0D0C0B0A09080706050403
>
1
<
807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160605F5E5D5C5B5A
595857565554535251504F
>
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE
>
<
050505060606060607070707080808080809090909090A0A0A0A0A0B0B0B0B0B0C0C0C0C0D0D0D0D
0D0E0E0E0E0E0F0F0F0F0F1010101010111111111212121212131313131314141414141515151515
161616161717171717181818181819191919191A1A1A1A1A1B1B1B1B1C1C1C1C1C1D1D1D1D1D1E1E
1E1E1E1F1F1F1F1F2020202021212121212222222222232323232324242424252525252526262626
2627272727272828282828292929292A2A2A2A2A2B2B2B2B2B2C2C2C2C2C2D2D2D2D2D2E2E2E2E2F
2F2F2F2F303030303031313131313232323232333333333434343434353535
>
<
E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECEDEDED
EDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F1
F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4
F4F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8
F8F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFC
FCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF
>
<
0001010202030304040506060707080809090A0B0B0C0C0D0D0E0E0F101011111212131314151516
161717181819191A1B1B1C1C1D1D1E1E1F2020212122222323242525262627272828292A2A2B2B2C
2C2D2D2E2F2F3030313132323334343535363637373839393A3A3B3B3C3C3D3E3E3F3F4040414142
434344444545464647484849494A4A4B4B4C4D4D4E4E4F4F50505151525353545455555656575858
59595A5A5B5B5C5D5D5E5E5F5F6060616262636364646565666767686869696A6A6B6C6C6D6D6E6E
6F6F7071717272737374747576767777787879797A7B7B7C7C7D7D7E7E7F7F
>
1 %_Br
<
33333232323231313131303030302F2F2F2E2E2E2E2D2D2D2D2C2C2C2C2B2B2B2B2A2A2A29292929
282828282727272726262625252525242424242323232322222221212121202020201F1F1F1F1E1E
1E1E1D1D1D1C1C1C1C1B1B1B1B1A1A1A1A1919191818181817171717161616161515151414141413
13131312121212111111101010100F0F0F0F0E0E0E0E0D0D0D0D0C0C0C0B0B0B0B0A0A0A0A090909
090808
>
<
A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A89888786858483828180
7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A5958
57565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736353433323130
2F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A0908
070605
>
<
F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1
F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECEC
ECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9
E9E9E9
>
<
1111111111101010101010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D
0D0D0D0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0909090909090909
09090808080808080808080707070707070707070706060606060606060605050505050505050505
04040404040404040403030303030303030303020202020202020202010101010101010101010000
000000
>
1 %_Br
<
F6F5F4F4F3F2F1F0F0EFEEEDECECEBEAE9E8E8E7E6E5E4E4E3E2E1E1E0DFDEDDDDDCDBDAD9D9D8D7
D6D6D5D4D3D2D2D1D0CFCFCECDCCCBCBCAC9C8C8C7C6C5C4C4C3C2C1C1C0BFBEBEBDBCBBBABAB9B8
B7B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A5A5A4A3A2A2A1A09F9F9E9D9C9C9B9A
9A999897979695949493929291908F8F8E8D8C8C8B8A8A89888787868585848382828180807F7E7E
7D7C7B7B7A7979787777767574747372727170706F6E6E6D6C6C6B6A6A6968686766666564646362
626160605F5E5E5D5C5C5B5A5A595858575756555554535352525150504F4E4E4D4D4C4B4B4A4A49
484847474646454444434342424140403F3F3E3E3D3D3C3C3B3B3A39393938383737363635353434
343333
>
<
EAEAE9E9E9E9E8E8E8E8E7E7E7E6E6E6E6E5E5E5E5E4E4E4E3E3E3E3E2E2E2E2E1E1E1E0E0E0E0DF
DFDFDFDEDEDEDDDDDDDDDCDCDCDCDBDBDBDBDADADAD9D9D9D9D8D8D8D8D7D7D7D7D6D6D6D6D5D5D5
D4D4D4D4D3D3D3D3D2D2D2D2D1D1D1D1D0D0D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCBCBCBCBCA
CACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1
C0C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBDBCBCBCBCBBBBBBBBBABABABABAB9B9B9B9B8B8B8B8B7B7
B7B7B7B6B6B6B6B5B5B5B5B5B4B4B4B4B3B3B3B3B3B2B2B2B2B1B1B1B1B1B0B0B0B0B0AFAFAFAFAF
AEAEAEAEAEADADADADADACACACACACABABABABABAAAAAAAAAAAAA9A9A9A9A9A9A8A8A8A8A8A8A7A7
A7A7A7
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
2728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F40414243434445464748494A4B4C4D
4E4F50515253545556565758595A5B5C5D5E5F60616263646465666768696A6B6C6D6E6F70707172
737475767778797A7A7B7C7D7E7F80818283848485868788898A8B8C8C8D8E8F9091929394949596
9798999A9A9B9C9D9E9FA0A1A1A2A3A4A5A6A7A7A8A9AAABACACADAEAFB0B1B2B2B3B4B5B6B6B7B8
B9BABBBBBCBDBEBFBFC0C1C2C3C3C4C5C6C7C7C8C9CACBCBCCCDCECECFD0D1D2D2D3D4D5D5D6D7D8
D8D9DADADBDCDDDDDEDFDFE0E1E2E2E3E4E4E5E6E6E7E8E8E9EAEAEBECECEDEDEEEFEFF0F0F1F1F2
F2F3F3
>
<
00000000000000000101010101010101010101010101020202020202020202020202020202030303
03030303030303030303030404040404040404040404040404040505050505050505050505050505
05060606060606060606060606060606070707070707070707070707070707070808080808080808
08080808080808090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D
0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F
0F0F0F0F0F0F0F0F1010101010101010101010101010101010101010101111111111111111111111
111111
>
1 %_Br
[
0.8196 0.01 1 0.31 1 50 100 %_Bs
0.9333 0.2078 1 0.5 1 50 57.3034 %_Bs
0.0314 0.0196 0.9137 0 1 50 55.618 %_Bs
0.2 0.6549 0.9529 0.0667 1 50 49.4382 %_Bs
0.9647 0.9176 0 0 1 45 32.5843 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient)
(Unnamed gradient) 0 6 Bd
[
<
F9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2
D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAA
A9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878685848382
81807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A
595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635343332
31302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A
0908070605040302
>
0.9882
<
05050505050505050505050505050505050505050505050505050505050505050505050505050505
05050606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606070707070707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707070707070707070707070707070707
07070707070708080808080808080808080808080808080808080808080808080808080808080808
0808080808080808
>
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010100000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000
>
1 %_Br
<
E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEB
EBEBEBEBEBEBEBEBECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9
>
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B
8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3
B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADB
DCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC
>
<
09090909090909090909090909090909090909090909090909090909090908080808080808080808
08080808080808080808080808080808080808080808080808080808080808080808080808080808
08080808080808080707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
060606050505050505050505050505050505050505050505050505050505050505
>
0.0039
1 %_Br
<
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8
>
<
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414
>
<
EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8
C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A0
9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978
77767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525150
4F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928
27262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09
>
<
03030303030303030303030303030303030303030303030303030303030303030303030303030303
03030303030303030303030303030303030303020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101
>
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC
>
<
05050505050505050506060606060606060606060606060606070707070707070707070707070707
070808080808080808080808080808080808090909090909090909090909090909090A0A0A0A0A0A
0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C
0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F
0F0F0F0F0F0F0F0F0F0F0F0F10101010101010101010101010101010111111111111111111111111
1111111112121212121212121212121212121212131313131313131313
>
<
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020203030303030303030303
0303030303030303030303030303030303030303030303030303030303
>
1 %_Br
<
03030303030303030303030303030303030303030303030304040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040505050505050505
05050505050505050505050505050505050505050505050505050505050505050505050505050505
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707080808080808080808080808080808080808080808080808
08
>
<
F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCE
CDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6
A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E
7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756
5554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706
05
>
0.9137
0
1 %_Br
[
0.0078 0.9882 0.0314 0 1 50 100 %_Bs
0.9765 0.9882 0.0196 0.0039 1 50 80 %_Bs
0.9098 0.0784 0.0353 0.0039 1 50 60 %_Bs
0.9255 0.0745 0.9373 0.0118 1 50 40 %_Bs
0.0314 0.0196 0.9137 0 1 50 20 %_Bs
0.0118 0.9608 0.9137 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 13)
(Unnamed gradient 13) 1 2 Bd
[
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000001010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010102020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020303030303030303030303030303030303030303030303030303
03030303030303030303030303030303030303030303030303030303030303030303030303030303
03030303030303030303030303030303030303030303030303030303030303030303030303030303
03030303030303030303030303030303030303030303030303030303030303030303030303030303
03030303030303030303030303030303030303030303030303030303030303030303030303030303
03030303030303030303030303030303030303030303030303030303030303030303030303
>
<
000102030405060708090A0B0C0D0E0F10111213141516161718191A1B1C1D1E1F20212223242525
262728292A2B2C2D2E2F2F30313233343536363738393A3B3C3D3D3E3F4041424343444546474848
494A4B4C4D4D4E4F505151525354555656575859595A5B5C5D5D5E5F606161626364646566676768
696A6A6B6C6D6D6E6F6F70717272737475757677777879797A7B7C7C7D7E7E7F8080818282838484
858686878888898A8A8B8C8C8D8E8E8F8F909191929393949495969697979899999A9A9B9C9C9D9D
9E9F9FA0A0A1A1A2A3A3A4A4A5A5A6A6A7A8A8A9A9AAAAABABACACADADAEAEAFB0B0B1B1B2B2B3B3
B4B4B5B5B6B6B7B7B8B8B8B9B9BABABBBBBCBCBDBDBEBEBFBFBFC0C0C1C1C2C2C3C3C3C4C4C5C5C6
C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCCCDCDCECECECFCFD0D0D0D1D1D1D2D2D2D3D3D3D4D4D5D5
D5D6D6D6D7D7D7D8D8D8D9D9D9DADADADADBDBDBDCDCDCDDDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1
E1E2E2E2E2E3E3E3E3E4E4E4E4E5E5E5E5E6E6E6E6E7E7E7E7E7E8E8E8E8E8E9E9E9E9EAEAEAEAEA
EAEBEBEBEBEBECECECECECECEDEDEDEDEDEDEEEEEEEEEEEEEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F1
F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5
>
<
00010203040506070808090A0B0C0D0E0F10111213141415161718191A1B1C1D1D1E1F2021222324
2425262728292A2B2B2C2D2E2F3030313233343535363738393A3A3B3C3D3E3F3F40414243434445
46464748494A4A4B4C4D4E4E4F505151525354545556575758595A5A5B5C5D5D5E5F5F6061626263
6464656667676869696A6B6B6C6D6D6E6F6F7071727273747475767677777879797A7B7B7C7D7D7E
7F7F808081828283848485858687878888898A8A8B8B8C8D8D8E8E8F8F9091919292939394959596
969797989899999A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9AAAA
ABABACACADADAEAEAFAFAFB0B0B1B1B2B2B3B3B3B4B4B5B5B6B6B6B7B7B8B8B9B9B9BABABBBBBBBC
BCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C2C3C3C4C4C4C5C5C5C6C6C6C7C7C7C8C8C8C9C9C9CACACA
CBCBCBCCCCCCCDCDCDCECECECFCFCFCFD0D0D0D1D1D1D1D2D2D2D3D3D3D3D4D4D4D5D5D5D5D6D6D6
D6D7D7D7D7D8D8D8D8D9D9D9D9D9DADADADADBDBDBDBDBDCDCDCDCDCDDDDDDDDDDDEDEDEDEDEDFDF
DFDFDFE0E0E0E0E0E0E1E1E1E1E1E1E2E2E2E2E2E2E2E3E3E3E3E3E3E3E4E4E4E4E4E4E4E4E5E5E5
E5E5E5E5E5E5E6E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8
E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
>
0
1 %_Br
[
0 0 0 0 1 28 0 %_Bs
0.0118 0.9608 0.9137 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 2)
(Unnamed gradient 2) 1 6 Bd
[
<
03030303030303030303030303030303030303030303030304040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040505050505050505
05050505050505050505050505050505050505050505050505050505050505050505050505050505
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707080808080808080808080808080808080808080808080808
08
>
<
F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCE
CDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6
A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E
7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756
5554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706
05
>
0.9137
0
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC
>
<
05050505050505050506060606060606060606060606060606070707070707070707070707070707
070808080808080808080808080808080808090909090909090909090909090909090A0A0A0A0A0A
0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C
0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F
0F0F0F0F0F0F0F0F0F0F0F0F10101010101010101010101010101010111111111111111111111111
1111111112121212121212121212121212121212131313131313131313
>
<
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020203030303030303030303
0303030303030303030303030303030303030303030303030303030303
>
1 %_Br
<
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8
>
<
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414
>
<
EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8
C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A0
9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978
77767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525150
4F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928
27262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09
>
<
03030303030303030303030303030303030303030303030303030303030303030303030303030303
03030303030303030303030303030303030303020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101
>
1 %_Br
<
E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEB
EBEBEBEBEBEBEBEBECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9
>
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B
8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3
B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADB
DCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC
>
<
09090909090909090909090909090909090909090909090909090909090908080808080808080808
08080808080808080808080808080808080808080808080808080808080808080808080808080808
08080808080808080707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
060606050505050505050505050505050505050505050505050505050505050505
>
0.0039
1 %_Br
<
F9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2
D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAA
A9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878685848382
81807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A
595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635343332
31302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A
0908070605040302
>
0.9882
<
05050505050505050505050505050505050505050505050505050505050505050505050505050505
05050606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606070707070707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707070707070707070707070707070707
07070707070708080808080808080808080808080808080808080808080808080808080808080808
0808080808080808
>
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010100000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000
>
1 %_Br
[
0.0118 0.9608 0.9137 0 1 50 0 %_Bs
0.0314 0.0196 0.9137 0 1 50 20 %_Bs
0.9255 0.0745 0.9373 0.0118 1 50 40 %_Bs
0.9098 0.0784 0.0353 0.0039 1 50 60 %_Bs
0.9765 0.9882 0.0196 0.0039 1 50 80 %_Bs
0.0078 0.9882 0.0314 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 24)
(Unnamed gradient 24) 0 3 Bd
[
<
161717171818181919191A1A1B1B1B1C1C1C1D1D1D1E1E1E1F1F1F20202021212122222223232324
242425252526262627272828282929292A2A2A2B2B2B2C2C2C2D2D2D2E2E2E2F2F2F2F3030303131
313232323333333434343535353636363737373838383939393A3A3A3A3B3B3B3C3C3C3D3D3D3E3E
3E3F3F3F404040404141414242424343434344444445454546464646474747484848494949494A4A
4A4B4B4B4B4C4C4C4D4D4D4D4E4E4E4E4F4F4F505050505151515152525252535353535454545454
555555
>
<
3E3F40404142434445464748494A4B4C4D4E4F50515253535455565758595A5B5C5D5E5F60616263
636465666768696A6B6C6D6E6F70707172737475767778797A7B7B7C7D7E7F808182838485858687
88898A8B8C8D8E8E8F90919293949596969798999A9B9C9D9E9E9FA0A1A2A3A4A5A5A6A7A8A9AAAB
ABACADAEAFB0B1B1B2B3B4B5B6B6B7B8B9BABBBBBCBDBEBFC0C0C1C2C3C4C4C5C6C7C8C9C9CACBCC
CCCDCECFD0D0D1D2D3D4D4D5D6D7D7D8D9DADADBDCDCDDDEDFDFE0E1E1E2E3E3E4E5E5E6E7E7E8E8
E9EAEA
>
<
404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667
68696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F80818283848586868788898A8B8C8D
8E8F90919293949596969798999A9B9C9D9E9FA0A1A2A2A3A4A5A6A7A8A9AAABACACADAEAFB0B1B2
B3B4B5B5B6B7B8B9BABBBCBDBDBEBFC0C1C2C3C3C4C5C6C7C8C9CACACBCCCDCECFCFD0D1D2D3D4D4
D5D6D7D8D9D9DADBDCDDDDDEDFE0E1E1E2E3E4E4E5E6E7E7E8E9EAEAEBECECEDEEEFEFF0F1F1F2F2
F3F4F4
>
<
111213141515161718191A1B1C1C1D1E1F2021222223242526272828292A2B2C2D2E2E2F30313233
33343536373839393A3B3C3D3E3E3F4041424343444546474848494A4B4C4D4D4E4F505151525354
5556565758595A5A5B5C5D5E5E5F6061626363646566676768696A6A6B6C6D6E6E6F707172727374
757576777879797A7B7C7C7D7E7F7F808182828384858586878888898A8B8B8C8D8E8E8F90919192
939394959696979898999A9A9B9C9C9D9E9E9FA0A0A1A2A2A3A4A4A5A6A6A7A7A8A9A9AAAAABABAC
ADADAD
>
1 %_Br
<
555554545453535352525251515050504F4F4F4E4E4E4D4D4D4C4C4C4B4B4B4A4A4A494948484847
474746464645454544444443434342424241414040403F3F3F3E3E3E3D3D3D3C3C3C3B3B3B3A3A3A
393938383837373736363635353534343433333332323231313030302F2F2F2E2E2E2D2D2D2C2C2C
2B2B2B2A2A29292928282827272726262625252524242423232322222121212020201F1F1F1E1E1E
1D1D1D1C1C1C1B1B1B1A1A19191918181817171716
>
<
EAE9E8E7E6E5E4E3E2E1E0DFDEDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C8C7C6C5
C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E
9D9C9B9A9A999897969594939291908F8E8D8C8B8A89888786858484838281807F7E7D7C7B7A7978
77767574737271706F6E6D6D6C6B6A696867666564636261605F5E5D5C5B5A595857565655545352
51504F4E4D4C4B4A494847464544434241403F3F3E
>
<
F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECD
CCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5
A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D
7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A5958575655
54535251504F4E4D4C4B4A49484746454443424140
>
<
4141404040403F3F3F3F3E3E3E3E3D3D3D3C3C3C3C3B3B3B3B3A3A3A3A3939393838383837373737
36363636353535343434343333333332323232313131313030302F2F2F2F2E2E2E2E2D2D2D2D2C2C
2C2B2B2B2B2A2A2A2A29292929282828272727272626262625252525242424232323232222222221
2121212020201F1F1F1F1E1E1E1E1D1D1D1D1C1C1C1B1B1B1B1A1A1A1A1919191918181817171717
161616161515151514141414131313121212121111
>
1 %_Br
[
0.3333 0.9176 0.9569 0.68 1 50 100 %_Bs
0.0877 0.2415 0.2518 0.0671 1 46.0177 37.0786 %_Bs
0.3333 0.9176 0.9569 0.2549 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 37)
(Unnamed gradient 37) 1 2 Bd
[
<
C4C3C3C2C1C1C0C0BFBEBEBDBCBCBBBABAB9B9B8B7B7B6B5B5B4B3B3B2B2B1B0B0AFAEAEADADACAB
ABAAA9A9A8A8A7A6A6A5A4A4A3A2A2A1A1A09F9F9E9E9D9C9C9B9A9A999998979796959594949392
929191908F8F8E8D8D8C8C8B8A8A898988878786868584848382828181807F7F7E7E7D7C7C7B7B7A
79797878777676757574737372727170706F6F6E6D6D6C6C6B6B6A69696868676666656564646362
626161605F5F5E5E5D5D5C5B5B5A5A5959585757565655555453535252515150504F4E4E4D4D4C4C
4B4B4A494948484747464645444443434242414140403F3F3E3E3D3C3C3B3B3A3A39393838373736
363535343433333232313130302F2F2F2E2E2D2D2C2C2B2B2B2A2A
>
<
0001020203040506070708090A0B0C0C0D0E0F101011121314151516171819191A1B1C1D1E1E1F20
21222223242526262728292A2A2B2C2D2E2F2F3031323333343536373738393A3B3B3C3D3E3F3F40
41424343444546464748494A4A4B4C4D4E4E4F505152525354555556575859595A5B5C5C5D5E5F60
6061626363646566676768696A6A6B6C6D6D6E6F707171727374747576777778797A7A7B7C7D7D7E
7F80808182838384858686878889898A8B8C8C8D8E8F8F90919192939494959697979899999A9B9C
9C9D9E9E9FA0A1A1A2A3A3A4A5A5A6A7A8A8A9AAAAABACACADAEAEAFB0B0B1B2B2B3B4B4B5B6B6B7
B8B8B9BABABBBCBCBDBDBEBFBFC0C0C1C2C2C3C3C4C5C5C6C6C7C7
>
<
02030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F20212223242526272829
2A2B2C2D2E2F30313232333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50
515253545455565758595A5B5C5D5E5F60616263646566676869696A6B6C6D6E6F70717273747576
7778797A7A7B7C7D7E7F80818283848586878888898A8B8C8D8E8F90919293939495969798999A9B
9C9D9E9E9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFAFB0B1B2B3B4B5B6B7B7B8B9BABBBCBDBEBE
BFC0C1C2C3C4C4C5C6C7C8C9CACACBCCCDCECFCFD0D1D2D3D4D4D5D6D7D8D8D9DADBDCDDDDDEDFE0
E0E1E2E3E4E4E5E6E7E7E8E9EAEAEBECEDEDEEEFEFF0F1F1F2F2F3
>
<
00000000000000000000000101010101010101010101010101010101010101010101020202020202
02020202020202020202020202020202030303030303030303030303030303030303030303030304
04040404040404040404040404040404040404040405050505050505050505050505050505050505
05050505050606060606060606060606060606060606060606060606070707070707070707070707
07070707070707070707070708080808080808080808080808080808080808080808080808090909
09090909090909090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A
0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B
>
1 %_Br
[
0.7686 0 0.0078 0 1 46.6292 0.5618 %_Bs
0.1647 0.7804 0.9529 0.0431 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 4)
(Unnamed gradient 4) 0 5 Bd
[
<
EEEDEDECECEBEBEAEAE9E8E8E7E7E6E6E5E5E4E3E3E2E2E1E1E0DFDFDEDEDDDDDCDCDBDADAD9D9D8
D8D7D7D6D5D5D4D4D3D3D2D2D1
>
<
3534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1A191817161514131211100F0E0D
0C0B0A09080706050403020100
>
1
<
807F7E7D7C7B7A79787776757473727271706F6E6D6C6B6A69686766656464636261605F5E5D5C5B
5A59585757565554535251504F
>
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE
>
<
050505060606060607070707080808080809090909090A0A0A0A0A0B0B0B0B0B0C0C0C0C0D0D0D0D
0D0E0E0E0E0E0F0F0F0F0F1010101010111111111212121212131313131314141414141515151515
161616161717171717181818181819191919191A1A1A1A1A1B1B1B1B1C1C1C1C1C1D1D1D1D1D1E1E
1E1E1E1F1F1F1F1F2020202021212121212222222222232323232324242424252525252526262626
2627272727272828282828292929292A2A2A2A2A2B2B2B2B2B2C2C2C2C2C2D2D2D2D2D2E2E2E2E2F
2F2F2F2F303030303031313131313232323232333333333434343434353535
>
<
E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECEDEDED
EDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F1
F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4
F4F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8
F8F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFC
FCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF
>
<
0001010202030304040506060707080809090A0B0B0C0C0D0D0E0E0F101011111212131314151516
161717181819191A1B1B1C1C1D1D1E1E1F2020212122222323242525262627272828292A2A2B2B2C
2C2D2D2E2F2F3030313132323334343535363637373839393A3A3B3B3C3C3D3E3E3F3F4040414142
434344444545464647484849494A4A4B4B4C4D4D4E4E4F4F50505151525353545455555656575858
59595A5A5B5B5C5D5D5E5E5F5F6060616262636364646565666767686869696A6A6B6C6C6D6D6E6E
6F6F7071717272737374747576767777787879797A7B7B7C7C7D7D7E7E7F7F
>
1 %_Br
<
33333232323231313131303030302F2F2F2E2E2E2E2D2D2D2D2C2C2C2C2B2B2B2B2A2A2A29292929
282828282727272726262625252525242424242323232322222221212121202020201F1F1F1F1E1E
1E1E1D1D1D1C1C1C1C1B1B1B1B1A1A1A1A1919191818181817171717161616161515151414141413
13131312121212111111101010100F0F0F0F0E0E0E0E0D0D0D0D0C0C0C0B0B0B0B0A0A0A0A090909
090808
>
<
A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A89888786858483828180
7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A5958
57565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736353433323130
2F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A0908
070605
>
<
F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1
F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECEC
ECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9
E9E9E9
>
<
1111111111101010101010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D
0D0D0D0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0909090909090909
09090808080808080808080707070707070707070706060606060606060605050505050505050505
04040404040404040403030303030303030303020202020202020202010101010101010101010000
000000
>
1 %_Br
<
F6F5F4F4F3F2F1F0F0EFEEEDECECEBEAE9E8E8E7E6E5E4E4E3E2E1E1E0DFDEDDDDDCDBDAD9D9D8D7
D6D6D5D4D3D2D2D1D0CFCFCECDCCCBCBCAC9C8C8C7C6C5C4C4C3C2C1C1C0BFBEBEBDBCBBBABAB9B8
B7B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A5A5A4A3A2A2A1A09F9F9E9D9C9C9B9A
9A999897979695949493929291908F8F8E8D8C8C8B8A8A89888787868585848382828180807F7E7E
7D7C7B7B7A7979787777767574747372727170706F6E6E6D6C6C6B6A6A6968686766666564646362
626160605F5E5E5D5C5C5B5A5A595858575756555554535352525150504F4E4E4D4D4C4B4B4A4A49
484847474646454444434342424140403F3F3E3E3D3D3C3C3B3B3A39393938383737363635353434
343333
>
<
EAEAE9E9E9E9E8E8E8E8E7E7E7E6E6E6E6E5E5E5E5E4E4E4E3E3E3E3E2E2E2E2E1E1E1E0E0E0E0DF
DFDFDFDEDEDEDDDDDDDDDCDCDCDCDBDBDBDBDADADAD9D9D9D9D8D8D8D8D7D7D7D7D6D6D6D6D5D5D5
D4D4D4D4D3D3D3D3D2D2D2D2D1D1D1D1D0D0D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCBCBCBCBCA
CACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1
C0C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBDBCBCBCBCBBBBBBBBBABABABABAB9B9B9B9B8B8B8B8B7B7
B7B7B7B6B6B6B6B5B5B5B5B5B4B4B4B4B3B3B3B3B3B2B2B2B2B1B1B1B1B1B0B0B0B0B0AFAFAFAFAF
AEAEAEAEAEADADADADADACACACACACABABABABABAAAAAAAAAAAAA9A9A9A9A9A9A8A8A8A8A8A8A7A7
A7A7A7
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
2728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F40414243434445464748494A4B4C4D
4E4F50515253545556565758595A5B5C5D5E5F60616263646465666768696A6B6C6D6E6F70707172
737475767778797A7A7B7C7D7E7F80818283848485868788898A8B8C8C8D8E8F9091929394949596
9798999A9A9B9C9D9E9FA0A1A1A2A3A4A5A6A7A7A8A9AAABACACADAEAFB0B1B2B2B3B4B5B6B6B7B8
B9BABBBBBCBDBEBFBFC0C1C2C3C3C4C5C6C7C7C8C9CACBCBCCCDCECECFD0D1D2D2D3D4D5D5D6D7D8
D8D9DADADBDCDDDDDEDFDFE0E1E2E2E3E4E4E5E6E6E7E8E8E9EAEAEBECECEDEDEEEFEFF0F0F1F1F2
F2F3F3
>
<
00000000000000000101010101010101010101010101020202020202020202020202020202030303
03030303030303030303030404040404040404040404040404040505050505050505050505050505
05060606060606060606060606060606070707070707070707070707070707070808080808080808
08080808080808090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D
0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F
0F0F0F0F0F0F0F0F1010101010101010101010101010101010101010101111111111111111111111
111111
>
1 %_Br
[
0.8196 0 1 0.31 1 50 100 %_Bs
0.9333 0.2078 1 0.5 1 50 57.3034 %_Bs
0.0314 0.0196 0.9137 0 1 50 55.618 %_Bs
0.2 0.6549 0.9529 0.0667 1 50 49.4382 %_Bs
0.9647 0.9176 0 0 1 45 32.5843 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 8)
(Unnamed gradient 8) 0 5 Bd
[
<
F6F5F4F4F3F2F1F0F0EFEEEDECECEBEAE9E8E8E7E6E5E4E4E3E2E1E0E0DFDEDDDCDCDBDAD9D8D8D7
D6D5D4D3D3D2D1D0CFCFCECDCCCBCBCAC9C8C7C7C6C5C4C3C3C2C1C0BFBFBEBDBCBBBBBAB9B8B7B7
B6B5B4B3B3B2B1B0AFAFAEADACABABAAA9A8A7A7A6A5A4A3A3A2A1A09F9F9E9D9C9B9B9A99989797
96959493929291908F8E8E8D8C8B8A8A8988878686858483828281807F7E7E7D7C7B7A7A79787776
76757473727271706F6E6E6D6C6B6A6A6968676666656463626261605F5E5E5D5C5B5A5A59585756
56555453525151504F4E4D4D4C4B4A494948474645454443424141403F3E3D3D3C3B3A3939383736
35353433
>
<
EAEAE9E9E9E9E8E8E8E8E7E7E7E6E6E6E6E5E5E5E4E4E4E4E3E3E3E3E2E2E2E1E1E1E1E0E0E0E0DF
DFDFDEDEDEDEDDDDDDDCDCDCDCDBDBDBDBDADADAD9D9D9D9D8D8D8D8D7D7D7D6D6D6D6D5D5D5D4D4
D4D4D3D3D3D3D2D2D2D1D1D1D1D0D0D0D0CFCFCFCECECECECDCDCDCCCCCCCCCBCBCBCBCACACAC9C9
C9C9C8C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C4C3C3C3C3C2C2C2C1C1C1C1C0C0C0C0BFBFBFBEBE
BEBEBDBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B9B8B8B8B8B7B7B7B6B6B6B6B5B5B5B5B4B4B4B3B3
B3B3B2B2B2B1B1B1B1B0B0B0B0AFAFAFAEAEAEAEADADADADACACACABABABABAAAAAAA9A9A9A9A8A8
A8A8A7A7
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3
>
<
00000000000000000101010101010101010101010101020202020202020202020202020203030303
03030303030303030303030404040404040404040404040404050505050505050505050505050506
06060606060606060606060606070707070707070707070707070707080808080808080808080808
080809090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B
0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E
0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010101011111111
11111111
>
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
>
<
05060708090A0B0C0D0E0F10111212131415161718191A1B1C1D1E1F202122232425262728292A2B
2B2C2D2E2F303132333435363738393A3B3C3D3E3F40414243444445464748494A4B4C4D4E4F5051
52535455565758595A5B5C5D5E5E5F606162636465666768696A6B6C6D6E6F707172737475767777
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919192939495969798999A9B9C9D9E
9FA0A1A2A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C4
C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDDDEDFE0E1E2E3E4E5E6E7E8E9EA
>
<
E9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D1D0CFCECDCCCBCAC9C8C7C6C5C4C3
C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A3A2A1A09F9E9D9C
9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574
74737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D
4C4B4A49484746464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726
2524232221201F1E1D1C1B1A19181717161514131211100F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAA
A9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878685848382
81807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A
595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635343332
31302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A
0908
>
<
00000000000000000000000000000000000000000001010101010101010101010101010101010101
01010101010101010101010101010101010101010102020202020202020202020202020202020202
02020202020202020202020202020202020202020203030303030303030303030303030303030303
03030303030303030303030303030303030303030304040404040404040404040404040404040404
04040404040404040404040404040404040404040405050505050505050505050505050505050505
0505
>
<
FFFFFFFFFFFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFB
FBFBFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F6F6
F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F2F2F2F2F2
F2F2F2F2F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEE
EDEDEDEDEDEDEDEDEDECECECECECECECECECECEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAE9E9E9
E9E9
>
<
4F4F4E4E4D4D4D4C4C4C4B4B4A4A4A49494848484747464646454544444443434242424141404040
3F3F3F3E3E3D3D3D3C3C3B3B3B3A3A39393938383737373636353535343434333332323231313030
302F2F2E2E2E2D2D2C2C2C2B2B2A2A2A292929282827272726262525252424232323222221212120
201F1F1F1E1E1D1D1D1C1C1C1B1B1A1A1A1919181818171716161615151414141313121212111111
10100F0F0F0E0E0D0D0D0C0C0B0B0B0A0A0909090808070707060606050504040403030202020101
0000
>
1 %_Br
<
EEEDEDECECEBEBEAEAE9E9E8E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDBDBDADA
D9D9D8D8D8D7D7D6D6D5D5D5D4D4D3D3D3D2D2D2D1D1
>
<
3534333231302F2E2D2C2B2A29282726252423222120201F1E1D1C1B1A1918171615151413121110
0F0F0E0D0C0B0A0A0908070706050404030202010000
>
1
<
807F7E7D7C7B7A79787776767574737271706F6E6E6D6C6B6A6968686766656464636261605F5F5E
5D5C5C5B5A5959585756565554545352525151504F4F
>
1 %_Br
[
0.2 0.6549 0.9529 0.0667 1 50 100 %_Bs
0.9647 0.9176 0 0 1 50 57.3034 %_Bs
0.0314 0.0196 0.9137 0 1 50 55.618 %_Bs
0.8196 0 1 0.31 1 50 49.4382 %_Bs
0.9333 0.2078 1 0.5 1 45 32.5843 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (White, Black)
(White, Black) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 1 1 50 100 %_Bs
0 0 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Azure Rings)
(Azure Rings) 22.5 22.5 58.5 58.5 [
%AI3_Tile
(0 O 0 R 0.9569 0.9294 0 0 k
 0.9569 0.9294 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1.75 w 4 M []0 d
0 XR
40.5 58.5 m
40.5 48.5586 32.4409 40.5 22.5 40.5 c
12.5591 40.5 4.5 48.5586 4.5 58.5 c
4.5 68.4414 12.5591 76.5 22.5 76.5 c
32.4409 76.5 40.5 68.4414 40.5 58.5 c
s
40.5 22.5 m
40.5 12.5586 32.4409 4.5 22.5 4.5 c
12.5591 4.5 4.5 12.5586 4.5 22.5 c
4.5 32.4414 12.5591 40.5 22.5 40.5 c
32.4409 40.5 40.5 32.4414 40.5 22.5 c
s
40.5 40.5 m
40.5 30.5586 32.4409 22.5 22.5 22.5 c
12.5591 22.5 4.5 30.5586 4.5 40.5 c
4.5 50.4414 12.5591 58.5 22.5 58.5 c
32.4409 58.5 40.5 50.4414 40.5 40.5 c
s
58.5 58.5 m
58.5 48.5586 50.4409 40.5 40.5 40.5 c
30.5591 40.5 22.5 48.5586 22.5 58.5 c
22.5 68.4414 30.5591 76.5 40.5 76.5 c
50.4409 76.5 58.5 68.4414 58.5 58.5 c
s
58.5 22.5 m
58.5 12.5586 50.4409 4.5 40.5 4.5 c
30.5591 4.5 22.5 12.5586 22.5 22.5 c
22.5 32.4414 30.5591 40.5 40.5 40.5 c
50.4409 40.5 58.5 32.4414 58.5 22.5 c
s
58.5 40.5 m
58.5 30.5586 50.4409 22.5 40.5 22.5 c
30.5591 22.5 22.5 30.5586 22.5 40.5 c
22.5 50.4414 30.5591 58.5 40.5 58.5 c
50.4409 58.5 58.5 50.4414 58.5 40.5 c
s
76.5 58.5 m
76.5 48.5586 68.4409 40.5 58.5 40.5 c
48.5591 40.5 40.5 48.5586 40.5 58.5 c
40.5 68.4414 48.5591 76.5 58.5 76.5 c
68.4409 76.5 76.5 68.4414 76.5 58.5 c
s
76.5 22.5 m
76.5 12.5586 68.4409 4.5 58.5 4.5 c
48.5591 4.5 40.5 12.5586 40.5 22.5 c
40.5 32.4414 48.5591 40.5 58.5 40.5 c
68.4409 40.5 76.5 32.4414 76.5 22.5 c
s
76.5 40.5 m
76.5 30.5586 68.4409 22.5 58.5 22.5 c
48.5591 22.5 40.5 30.5586 40.5 40.5 c
40.5 50.4414 48.5591 58.5 58.5 58.5 c
68.4409 58.5 76.5 50.4414 76.5 40.5 c
s
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Camouflage)
(Camouflage) 1 1 73 73 [
%AI3_Tile
(0 O 0 R 0.5961 0.1412 0.949 0.0275 k
 0.5961 0.1412 0.949 0.0275 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
1 73 m
1 1 L
73 1 L
73 73 L
1 73 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.498 0.349 0.9725 0.2 k
 0.498 0.349 0.9725 0.2 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
18.5449 73 m
18.5449 1 L
46.7832 1 L
46.7832 73 L
18.5449 73 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1882 0.1098 0.9255 0.0157 k
 0.1882 0.1098 0.9255 0.0157 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
11.9512 1 m
11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c
9.2314 10.2334 4.25 10.2334 4.25 13.8735 c
4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c
10.0313 24.832 10.208 24.832 10.208 28.5654 c
10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c
5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c
11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c
7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c
5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c
4.6631 69.1636 11.9512 69.3184 11.9512 73 C
27.9268 73 L
27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c
22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c
28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c
25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c
28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c
22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c
26.3945 24.832 24.4248 24.832 24.4248 21.0991 c
24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c
20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c
24.6055 2.8813 27.9268 4.7129 27.9268 1 C
11.9512 1 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.9255 0.2157 0.9647 0.0745 k
 0.9255 0.2157 0.9647 0.0745 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
41.875 1 m
41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c
42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c
40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c
41.5742 24.832 43.6484 24.832 43.6484 28.5659 c
43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c
39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c
39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c
45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c
40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c
40.6289 69.1636 41.875 69.3184 41.875 73 C
59.0752 73 L
59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c
53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c
55.8945 55.502 61.0059 55.502 61.0059 51.7886 c
61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c
60.5635 40.897 59.9277 40.897 59.9277 37.2842 c
59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c
56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c
61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c
52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c
55.7461 3.978 59.0752 4.6484 59.0752 1 C
41.875 1 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Clown Attack)
(Clown Attack) 5.25 11 41.25 47 [
%AI3_Tile
(0 O 0 R 0.9255 0 1 0 k
 0.9255 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
17.5 18.25 m
17.5 15.2119 15.0376 12.75 12 12.75 c
8.9624 12.75 6.5 15.2119 6.5 18.25 c
6.5 21.2881 8.9624 23.75 12 23.75 c
15.0376 23.75 17.5 21.2881 17.5 18.25 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0078 0.9529 0 0 k
 0.0078 0.9529 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
22.25 34.125 m
22.25 31.2939 19.9556 29 17.125 29 c
14.2944 29 12 31.2939 12 34.125 c
12 36.9561 14.2944 39.25 17.125 39.25 c
19.9556 39.25 22.25 36.9561 22.25 34.125 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0118 0.9608 0.9137 0 k
 0.0118 0.9608 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
30 31.625 m
30 29.4854 28.2646 27.75 26.125 27.75 c
23.9849 27.75 22.25 29.4854 22.25 31.625 c
22.25 33.7646 23.9849 35.5 26.125 35.5 c
28.2646 35.5 30 33.7646 30 31.625 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
23.25 24.5 m
23.25 22.4287 21.5713 20.75 19.5 20.75 c
17.4287 20.75 15.75 22.4287 15.75 24.5 c
15.75 26.5713 17.4287 28.25 19.5 28.25 c
21.5713 28.25 23.25 26.5713 23.25 24.5 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.9569 0.9294 0 0 k
 0.9569 0.9294 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
36 22.25 m
36 19.0742 33.4258 16.5 30.25 16.5 c
27.0742 16.5 24.5 19.0742 24.5 22.25 c
24.5 25.4258 27.0742 28 30.25 28 c
33.4258 28 36 25.4258 36 22.25 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1882 0.1216 0.8 0.0157 k
 0.1882 0.1216 0.8 0.0157 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
24.25 16.5 m
24.25 14.8438 22.9067 13.5 21.25 13.5 c
19.5933 13.5 18.25 14.8438 18.25 16.5 c
18.25 18.1563 19.5933 19.5 21.25 19.5 c
22.9067 19.5 24.25 18.1563 24.25 16.5 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8353 0 0 0 k
 0.8353 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
37.25 43.875 m
37.25 39.5264 33.7236 36 29.375 36 c
25.0264 36 21.5 39.5264 21.5 43.875 c
21.5 48.2236 25.0264 51.75 29.375 51.75 c
33.7236 51.75 37.25 48.2236 37.25 43.875 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0078 0.1961 0.9373 0 k
 0.0078 0.1961 0.9373 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
38.75 26.625 m
38.75 25.7275 38.0225 25 37.125 25 c
36.2275 25 35.5 25.7275 35.5 26.625 c
35.5 27.5225 36.2275 28.25 37.125 28.25 c
38.0225 28.25 38.75 27.5225 38.75 26.625 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0196 0.5961 0.9137 0 k
 0.0196 0.5961 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
19.875 42 m
19.875 41.1025 19.1475 40.375 18.25 40.375 c
17.3525 40.375 16.625 41.1025 16.625 42 c
16.625 42.8975 17.3525 43.625 18.25 43.625 c
19.1475 43.625 19.875 42.8975 19.875 42 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0118 0.9608 0.9137 0 k
 0.0118 0.9608 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
12.75 28.125 m
12.75 26.8135 11.6865 25.75 10.375 25.75 c
9.0635 25.75 8 26.8135 8 28.125 c
8 29.4365 9.0635 30.5 10.375 30.5 c
11.6865 30.5 12.75 29.4365 12.75 28.125 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.9255 0 1 0 k
 0.9255 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
43.25 33 m
43.25 30.998 41.627 29.375 39.625 29.375 c
37.623 29.375 36 30.998 36 33 c
36 35.002 37.623 36.625 39.625 36.625 c
41.627 36.625 43.25 35.002 43.25 33 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
13.25 43.75 m
13.25 40.9883 11.0117 38.75 8.25 38.75 c
5.4883 38.75 3.25 40.9883 3.25 43.75 c
3.25 46.5117 5.4883 48.75 8.25 48.75 c
11.0117 48.75 13.25 46.5117 13.25 43.75 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.3922 0.9451 0 0 k
 0.3922 0.9451 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
6.5 22.25 m
6.5 20.7314 5.2686 19.5 3.75 19.5 c
2.2314 19.5 1 20.7314 1 22.25 c
1 23.7686 2.2314 25 3.75 25 c
5.2686 25 6.5 23.7686 6.5 22.25 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0235 0.0118 0.6 0 k
 0.0235 0.0118 0.6 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
34.4883 32.75 m
34.4883 31.9277 33.8223 31.2617 33 31.2617 c
32.1777 31.2617 31.5117 31.9277 31.5117 32.75 c
31.5117 33.5723 32.1777 34.2383 33 34.2383 c
33.8223 34.2383 34.4883 33.5723 34.4883 32.75 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
49.25 43.75 m
49.25 40.9883 47.0117 38.75 44.25 38.75 c
41.4883 38.75 39.25 40.9883 39.25 43.75 c
39.25 46.5117 41.4883 48.75 44.25 48.75 c
47.0117 48.75 49.25 46.5117 49.25 43.75 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.3922 0.9451 0 0 k
 0.3922 0.9451 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
42.5 22.25 m
42.5 20.7314 41.2686 19.5 39.75 19.5 c
38.2314 19.5 37 20.7314 37 22.25 c
37 23.7686 38.2314 25 39.75 25 c
41.2686 25 42.5 23.7686 42.5 22.25 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
49.25 7.752 m
49.25 4.9902 47.0117 2.752 44.25 2.752 c
41.4883 2.752 39.25 4.9902 39.25 7.752 c
39.25 10.5137 41.4883 12.752 44.25 12.752 c
47.0117 12.752 49.25 10.5137 49.25 7.752 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8353 0 0 0 k
 0.8353 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
37.25 7.875 m
37.25 3.5264 33.7236 0 29.375 0 c
25.0264 0 21.5 3.5264 21.5 7.875 c
21.5 12.2236 25.0264 15.75 29.375 15.75 c
33.7236 15.75 37.25 12.2236 37.25 7.875 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
13.25 7.75 m
13.25 4.9883 11.0117 2.75 8.25 2.75 c
5.4883 2.75 3.25 4.9883 3.25 7.75 c
3.25 10.5117 5.4883 12.75 8.25 12.75 c
11.0117 12.75 13.25 10.5117 13.25 7.75 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.9255 0 1 0 k
 0.9255 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
7.25 33 m
7.25 30.998 5.627 29.375 3.625 29.375 c
1.623 29.375 0 30.998 0 33 c
0 35.002 1.623 36.625 3.625 36.625 c
5.627 36.625 7.25 35.002 7.25 33 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0235 0.4078 0 0 k
 0.0235 0.4078 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
39.6533 16.0381 m
39.6533 15.1064 38.8975 14.3506 37.9658 14.3506 c
37.0342 14.3506 36.2783 15.1064 36.2783 16.0381 c
36.2783 16.9697 37.0342 17.7256 37.9658 17.7256 c
38.8975 17.7256 39.6533 16.9697 39.6533 16.0381 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Pyramids)
(Pyramids) 1 1 19.5 19.5 [
%AI3_Tile
(0 O 0 R 0.1882 0.1294 0.102 0.0118 k
 0.1882 0.1294 0.102 0.0118 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
1 19.5 m
10.25 10.25 l
19.5 19.5 l
1 19.5 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6235 0.4863 0.4863 0.4784 k
 0.6235 0.4863 0.4863 0.4784 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
19.5 1 m
10.25 10.25 l
1 1 l
19.5 1 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.3529 0.2549 0.2235 0.0667 k
 0.3529 0.2549 0.2235 0.0667 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
1 1 m
10.25 10.25 l
1 19.5 l
1 1 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.4902 0.3647 0.3451 0.2196 k
 0.4902 0.3647 0.3451 0.2196 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
19.5 19.5 m
10.25 10.25 l
19.5 1 l
19.5 19.5 l
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Red Stripe)
(Red Stripe) 37 19 73 55 [
%AI3_Tile
(0 O 0 R 0 0.9608 0.9137 0 k
 0 0.9608 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 18 w 4 M []0 d
0 XR
37 37 m
73 37 l
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Red Tablecloth)
(Red Tablecloth) 0 0 24 24 [
%AI3_Tile
(0 O 0 R 0.25 1 1 0 k
 0.25 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
6 18 m
0 18 L
0 24 L
6 24 L
6 18 L
f
18 18 m
12 18 L
12 24 L
18 24 L
18 18 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1225 0.5 0.5 0 k
 0.1225 0.5 0.5 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
12 18 m
6 18 L
6 24 L
12 24 L
12 18 L
f
24 18 m
18 18 L
18 24 L
24 24 L
24 18 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
12 12 m
6 12 L
6 18 L
12 18 L
12 12 L
f
24 12 m
18 12 L
18 18 L
24 18 L
24 12 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1225 0.5 0.5 0 k
 0.1225 0.5 0.5 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
6 12 m
0 12 L
0 18 L
6 18 L
6 12 L
f
18 12 m
12 12 L
12 18 L
18 18 L
18 12 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.25 1 1 0 k
 0.25 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
6 6 m
0 6 L
0 12 L
6 12 L
6 6 L
f
18 6 m
12 6 L
12 12 L
18 12 L
18 6 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1225 0.5 0.5 0 k
 0.1225 0.5 0.5 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
12 6 m
6 6 L
6 12 L
12 12 L
12 6 L
f
24 6 m
18 6 L
18 12 L
24 12 L
24 6 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
12 0 m
6 0 L
6 6 L
12 6 L
12 0 L
f
24 0 m
18 0 L
18 6 L
24 6 L
24 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1225 0.5 0.5 0 k
 0.1225 0.5 0.5 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
6 0 m
0 0 L
0 6 L
6 6 L
6 0 L
f
18 0 m
12 0 L
12 6 L
18 6 L
18 0 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 k
([Registration]) Pc
0 0 0 0 k
(White) Pc
0 0 0 1 k
(Black) Pc
0 0 0 0.8 k
(80% Black) Pc
0 0 0 0.6 k
(60% Black) Pc
0 0 0 0.4 k
(40% Black) Pc
0 0 0 0.2 k
(20% Black) Pc
0 1 1 0 k
(Red M=100 Y=100) Pc
0 0.75 0.75 0 k
(75% Red M=75 Y=75) Pc
0 0.5 0.5 0 k
(50% Red M=50 Y=50) Pc
0 0.25 0.25 0 k
(25% Red M=25 Y=25) Pc
0.8 0 1 0 k
(Green C=80 Y=100) Pc
0.6 0 0.75 0 k
(75% Green C=60 Y=75) Pc
0.4 0 0.5 0 k
(50% Green C=40 Y=50) Pc
0.2 0 0.25 0 k
(25% Green C=20 Y=25) Pc
1 0.5 0 0 k
(Blue C=100 M=50) Pc
0.75 0.375 0 0 k
(75% Blue C=75 M=37.5) Pc
0.5 0.25 0 0 k
(50% Blue C=50 M=25) Pc
0.25 0.125 0 0 k
(25% Blue C=25 M=12.5) Pc
0 0.5 1 0 k
(Orange M=50 Y=100) Pc
0 0.375 0.75 0 k
(75% Orange M=37.5 Y=75) Pc
0 0.25 0.5 0 k
(50% Orange M=25 Y=50) Pc
0 0.125 0.25 0 k
(25% Orange M=12.5 Y=25) Pc
0.5 0.9 0 0 k
(Violet C=50 M=90) Pc
0.375 0.675 0 0 k
(75% Violet C=37.5 M=67.5) Pc
0.25 0.45 0 0 k
(50% Violet C=25 M=45 ) Pc
0.125 0.225 0 0 k
(25% Violet C=12.5 M=22.5) Pc
0.8 0 0 0 k
(Azure C=80) Pc
0.6 0 0 0 k
(75% Azure C=60) Pc
0.4 0 0 0 k
(50% Azure C=40) Pc
0.2 0 0 0 k
(25% Azure C=20) Pc
0 0 1 0 k
(Yellow) Pc
0 0 0.75 0 k
(75% Yellow) Pc
0 0 0.5 0 k
(50% Yellow) Pc
0 0 0.25 0 k
(25% Yellow) Pc
Bb
2 (White, Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(White, Black) Pc
Bb
0 0 0 0 Bh
2 (Black, White Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Black, White Radial) Pc
Bb
2 (Steel Bar II) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Steel Bar II) Pc
Bb
2 (Rainbow) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Rainbow) Pc
Bb
0 0 0 0 Bh
2 (Emerald Eye) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Emerald Eye) Pc
Bb
2 (Sunset) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Sunset) Pc
(Red Tablecloth) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Red Tablecloth) Pc
(Pyramids) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Pyramids) Pc
(Azure Rings) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Azure Rings) Pc
(Red Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Red Stripe) Pc
(Clown Attack) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Clown Attack) Pc
(Camouflage) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Camouflage) Pc
PB
%AI5_EndPalette
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
*u
300 Ar
0 R
0 0 0 1 K
1 J 1 j 2.9999 w 10 M []0 d
0 XR
123.0376 424.2886 m
125.438 430.5288 l
128.0776 436.0483 l
130.478 441.3281 l
133.1172 446.8481 l
135.7573 452.3677 l
138.1572 457.6475 l
140.7969 462.9272 l
143.1968 468.207 l
145.8369 473.0068 l
148.2368 477.8066 l
150.8765 482.6064 l
153.5166 487.4063 l
155.9165 491.9663 l
158.5562 496.5259 l
160.9561 500.606 l
163.5962 504.9258 l
166.2358 509.0054 l
168.6357 513.0854 l
171.2759 516.9253 l
173.6758 521.0049 l
176.3154 524.605 l
178.9556 528.2046 l
181.3555 531.8047 l
183.9951 535.1646 l
186.395 538.5239 l
189.0352 541.8843 l
191.4351 545.0039 l
194.0747 548.1235 l
196.7148 551.0034 l
199.1147 554.1235 l
201.7544 556.7632 l
204.1543 559.4033 l
206.7944 562.0435 l
209.4341 564.9233 l
211.834 567.3228 l
214.4741 569.7231 l
216.8735 572.1226 l
219.5137 574.2827 l
222.1533 576.4429 l
224.5532 578.6025 l
227.1934 580.5225 l
229.5933 582.6821 l
232.2329 584.6021 l
234.6343 586.522 l
237.2729 588.2021 l
239.9126 589.8823 l
242.3125 591.562 l
244.9526 593.2417 l
247.3525 594.9219 l
249.9922 596.3618 l
252.6323 597.8018 l
255.0322 599.0015 l
257.6719 600.4414 l
260.0718 601.8813 l
262.7119 603.0815 l
265.3516 604.2813 l
267.7515 605.2412 l
270.3916 606.4414 l
272.7915 607.4014 l
275.4312 608.6011 l
277.8311 609.561 l
280.4712 610.521 l
283.1108 611.2412 l
285.5107 612.2012 l
288.1509 612.9209 l
290.5508 613.8809 l
293.1904 614.6011 l
295.8306 615.3208 l
298.2305 615.8008 l
300.8701 616.521 l
303.27 617.2407 l
305.9102 617.7207 l
308.5498 618.2007 l
310.9492 618.9209 l
313.5898 619.4009 l
315.9902 619.8809 l
318.6289 620.3608 l
321.0293 620.6006 l
323.6699 621.0806 l
326.3086 621.5605 l
328.7109 621.8008 l
331.3496 622.0405 l
333.75 622.5205 l
336.3887 622.7607 l
339.0293 623.0005 l
341.4277 623.2407 l
344.0684 623.4805 l
346.4688 623.7207 l
349.1074 623.7207 l
351.75 623.9604 l
354.1484 624.2007 l
356.7891 624.2007 l
359.1875 624.4404 l
361.8281 624.4404 l
364.2285 624.6807 l
366.8691 624.6807 l
369.5078 624.6807 l
371.9082 624.9204 l
374.5469 624.9204 l
376.9473 624.9204 l
379.5879 624.9204 l
382.2266 624.9204 l
384.627 624.9204 l
387.2676 624.9204 l
389.668 624.9204 l
392.3066 624.6807 l
394.9473 624.6807 l
397.3457 624.6807 l
399.9863 624.4404 l
402.3867 624.4404 l
405.0254 624.2007 l
407.4258 624.2007 l
410.0664 624.2007 l
412.707 623.9604 l
415.1055 623.9604 l
417.7461 623.7207 l
420.1445 623.7207 l
422.7871 623.4805 l
425.4258 623.2407 l
427.8262 623.2407 l
430.4648 623.0005 l
432.8652 622.7607 l
435.5039 622.7607 l
438.1445 622.5205 l
440.5449 622.2808 l
443.1836 622.0405 l
445.584 621.8008 l
448.2246 621.8008 l
450.625 621.5605 l
453.2637 621.3208 l
455.9043 621.0806 l
458.3047 620.8408 l
460.9434 620.6006 l
463.3438 620.6006 l
465.9844 620.1206 l
468.625 620.1206 l
471.0234 619.8809 l
473.6641 619.4009 l
476.0625 619.4009 l
478.7031 619.1606 l
481.3418 618.9209 l
483.7441 618.6807 l
486.3828 618.2007 l
488.7832 618.2007 l
491.4219 617.7207 l
493.8223 617.7207 l
496.4629 617.2407 l
499.1016 617.001 l
501.502 616.7607 l
504.1426 616.521 l
506.541 616.2808 l
509.1816 616.041 l
511.8223 615.8008 l
514.2207 615.561 l
516.8613 615.3208 l
519.2617 615.0811 l
521.9004 614.6011 l
524.541 614.3608 l
526.9414 614.1211 l
529.5801 613.8809 l
531.9805 613.6411 l
534.6211 613.4009 l
537.0195 613.1611 l
539.6621 612.9209 l
542.3008 612.4409 l
544.7012 612.2012 l
547.3398 611.9609 l
549.7402 611.7212 l
S
300 Ar
123.0376 422.1294 m
125.438 427.4087 l
128.0776 432.689 l
130.478 436.7686 l
133.1172 441.0884 l
135.7573 445.6479 l
138.1572 449.728 l
140.7969 453.8076 l
143.1968 458.1274 l
145.8369 461.9673 l
148.2368 466.0474 l
150.8765 469.8872 l
153.5166 473.7271 l
155.9165 477.3267 l
158.5562 480.9268 l
160.9561 484.5264 l
163.5962 487.8862 l
166.2358 491.2461 l
168.6357 494.3662 l
171.2759 497.7261 l
173.6758 500.606 l
176.3154 503.7256 l
178.9556 506.6055 l
181.3555 509.7256 l
183.9951 512.3652 l
186.395 515.0054 l
189.0352 517.8853 l
191.4351 520.5249 l
194.0747 522.9248 l
196.7148 525.3247 l
199.1147 527.7246 l
201.7544 530.1245 l
204.1543 532.2847 l
206.7944 534.4443 l
209.4341 536.6045 l
211.834 538.7642 l
214.4741 540.6841 l
216.8735 542.604 l
219.5137 544.5239 l
222.1533 546.4438 l
224.5532 548.1235 l
227.1934 549.8037 l
229.5933 551.7236 l
232.2329 553.1636 l
234.6343 554.8433 l
237.2729 556.2837 l
239.9126 557.7231 l
242.3125 559.1636 l
244.9526 560.603 l
247.3525 561.8032 l
249.9922 563.2432 l
252.6323 564.4429 l
255.0322 565.6431 l
257.6719 566.8433 l
260.0718 568.043 l
262.7119 569.0029 l
265.3516 570.2026 l
267.7515 571.1626 l
270.3916 572.1226 l
272.7915 573.0825 l
275.4312 573.8027 l
277.8311 574.7627 l
280.4712 575.7227 l
283.1108 576.4429 l
285.5107 577.1626 l
288.1509 577.8823 l
290.5508 578.6025 l
293.1904 579.3228 l
295.8306 579.8022 l
298.2305 580.5225 l
300.8701 581.2427 l
303.27 581.7222 l
305.9102 582.2026 l
308.5498 582.9224 l
310.9492 583.4023 l
313.5898 583.8823 l
315.9902 584.1226 l
318.6289 584.6021 l
321.0293 585.0825 l
323.6699 585.3223 l
326.3086 585.8022 l
328.7109 586.2822 l
331.3496 586.522 l
333.75 586.7622 l
336.3887 587.0024 l
339.0293 587.4819 l
341.4277 587.7222 l
344.0684 587.9624 l
346.4688 588.2021 l
349.1074 588.2021 l
351.75 588.4419 l
354.1484 588.6821 l
356.7891 588.9219 l
359.1875 588.9219 l
361.8281 589.1621 l
364.2285 589.4019 l
366.8691 589.4019 l
369.5078 589.4019 l
371.9082 589.6421 l
374.5469 589.6421 l
376.9473 589.6421 l
379.5879 589.8823 l
382.2266 589.8823 l
384.627 589.8823 l
387.2676 589.8823 l
389.668 589.8823 l
392.3066 589.8823 l
394.9473 589.8823 l
397.3457 589.8823 l
399.9863 589.8823 l
402.3867 589.8823 l
405.0254 589.8823 l
407.4258 589.8823 l
410.0664 589.6421 l
412.707 589.6421 l
415.1055 589.6421 l
417.7461 589.6421 l
420.1445 589.4019 l
422.7871 589.4019 l
425.4258 589.4019 l
427.8262 589.1621 l
430.4648 589.1621 l
432.8652 589.1621 l
435.5039 588.9219 l
438.1445 588.9219 l
440.5449 588.6821 l
443.1836 588.6821 l
445.584 588.4419 l
448.2246 588.2021 l
450.625 588.2021 l
453.2637 588.2021 l
455.9043 587.9624 l
458.3047 587.7222 l
460.9434 587.7222 l
463.3438 587.4819 l
465.9844 587.2422 l
468.625 587.2422 l
471.0234 587.0024 l
473.6641 587.0024 l
476.0625 586.7622 l
478.7031 586.522 l
481.3418 586.2822 l
483.7441 586.2822 l
486.3828 586.042 l
488.7832 585.8022 l
491.4219 585.562 l
493.8223 585.562 l
496.4629 585.3223 l
499.1016 585.0825 l
501.502 584.8423 l
504.1426 584.6021 l
506.541 584.6021 l
509.1816 584.3623 l
511.8223 584.1226 l
514.2207 583.8823 l
516.8613 583.6421 l
519.2617 583.4023 l
521.9004 583.4023 l
524.541 583.1626 l
526.9414 582.9224 l
529.5801 582.6821 l
531.9805 582.4424 l
534.6211 582.2026 l
537.0195 582.2026 l
539.6621 581.9624 l
542.3008 581.7222 l
544.7012 581.4824 l
547.3398 581.2427 l
549.7402 581.0024 l
S
300 Ar
123.0376 422.1294 m
125.438 425.2485 l
128.0776 429.0884 l
130.478 431.9683 l
133.1172 435.3286 l
135.7573 438.9282 l
138.1572 441.8081 l
140.7969 444.9282 l
143.1968 448.2881 l
145.8369 451.168 l
148.2368 454.0479 l
150.8765 456.9277 l
153.5166 459.8076 l
155.9165 462.4473 l
158.5562 465.3271 l
160.9561 467.9673 l
163.5962 470.6069 l
166.2358 473.0068 l
168.6357 475.647 l
171.2759 477.8066 l
173.6758 480.4468 l
176.3154 482.6064 l
178.9556 485.0063 l
181.3555 487.1665 l
183.9951 489.3262 l
186.395 491.2461 l
189.0352 493.4063 l
191.4351 495.3262 l
194.0747 497.4858 l
196.7148 499.166 l
199.1147 501.0859 l
201.7544 502.7656 l
204.1543 504.6855 l
206.7944 506.3657 l
209.4341 508.0454 l
211.834 509.4854 l
214.4741 511.1655 l
216.8735 512.6055 l
219.5137 514.0454 l
222.1533 515.7251 l
224.5532 516.9253 l
227.1934 518.3652 l
229.5933 519.5649 l
232.2329 521.0049 l
234.6343 522.2051 l
237.2729 523.4048 l
239.9126 524.605 l
242.3125 525.5649 l
244.9526 526.7646 l
247.3525 527.7246 l
249.9922 528.9248 l
252.6323 529.8848 l
255.0322 530.8447 l
257.6719 531.8047 l
260.0718 532.7642 l
262.7119 533.7246 l
265.3516 534.4443 l
267.7515 535.1646 l
270.3916 536.1245 l
272.7915 536.8442 l
275.4312 537.564 l
277.8311 538.2842 l
280.4712 539.0044 l
283.1108 539.7241 l
285.5107 540.2041 l
288.1509 540.9243 l
290.5508 541.4038 l
293.1904 542.124 l
295.8306 542.604 l
298.2305 543.084 l
300.8701 543.564 l
303.27 544.0439 l
305.9102 544.5239 l
308.5498 545.0039 l
310.9492 545.4839 l
313.5898 545.9639 l
315.9902 546.2036 l
318.6289 546.6841 l
321.0293 546.9238 l
323.6699 547.4038 l
326.3086 547.644 l
328.7109 548.1235 l
331.3496 548.3638 l
333.75 548.604 l
336.3887 548.8438 l
339.0293 549.0835 l
341.4277 549.3237 l
344.0684 549.564 l
346.4688 549.8037 l
349.1074 550.0435 l
351.75 550.2837 l
354.1484 550.5239 l
356.7891 550.5239 l
359.1875 550.7637 l
361.8281 551.0034 l
364.2285 551.0034 l
366.8691 551.2437 l
369.5078 551.2437 l
371.9082 551.4839 l
374.5469 551.4839 l
376.9473 551.7236 l
379.5879 551.7236 l
382.2266 551.7236 l
384.627 551.9634 l
387.2676 551.9634 l
389.668 551.9634 l
392.3066 551.9634 l
394.9473 552.2036 l
397.3457 552.2036 l
399.9863 552.2036 l
402.3867 552.2036 l
405.0254 552.2036 l
407.4258 552.2036 l
410.0664 552.2036 l
412.707 552.2036 l
415.1055 552.2036 l
417.7461 552.2036 l
420.1445 552.2036 l
422.7871 552.2036 l
425.4258 552.2036 l
427.8262 551.9634 l
430.4648 551.9634 l
432.8652 551.9634 l
435.5039 551.9634 l
438.1445 551.9634 l
440.5449 551.7236 l
443.1836 551.7236 l
445.584 551.7236 l
448.2246 551.7236 l
450.625 551.4839 l
453.2637 551.4839 l
455.9043 551.4839 l
458.3047 551.2437 l
460.9434 551.2437 l
463.3438 551.0034 l
465.9844 551.0034 l
468.625 551.0034 l
471.0234 550.7637 l
473.6641 550.7637 l
476.0625 550.5239 l
478.7031 550.5239 l
481.3418 550.5239 l
483.7441 550.2837 l
486.3828 550.2837 l
488.7832 550.0435 l
491.4219 550.0435 l
493.8223 549.8037 l
496.4629 549.8037 l
499.1016 549.564 l
501.502 549.564 l
504.1426 549.3237 l
506.541 549.3237 l
509.1816 549.0835 l
511.8223 549.0835 l
514.2207 548.8438 l
516.8613 548.604 l
519.2617 548.604 l
521.9004 548.3638 l
524.541 548.3638 l
526.9414 548.1235 l
529.5801 548.1235 l
531.9805 547.8838 l
534.6211 547.644 l
537.0195 547.644 l
539.6621 547.4038 l
542.3008 547.4038 l
544.7012 547.1636 l
547.3398 546.9238 l
549.7402 546.9238 l
S
300 Ar
123.0376 419.9692 m
125.438 423.0894 l
128.0776 425.729 l
130.478 427.1685 l
133.1172 429.5688 l
135.7573 431.729 l
138.1572 433.6489 l
140.7969 435.8086 l
143.1968 437.9683 l
145.8369 440.1284 l
148.2368 442.0483 l
150.8765 443.9683 l
153.5166 445.8882 l
155.9165 447.8081 l
158.5562 449.728 l
160.9561 451.4077 l
163.5962 453.0879 l
166.2358 454.7676 l
168.6357 456.6875 l
171.2759 458.1274 l
173.6758 459.8076 l
176.3154 461.2476 l
178.9556 462.9272 l
181.3555 464.3672 l
183.9951 465.8071 l
186.395 467.2471 l
189.0352 468.4473 l
191.4351 469.8872 l
194.0747 471.3271 l
196.7148 472.5269 l
199.1147 473.7271 l
201.7544 474.9268 l
204.1543 476.127 l
206.7944 477.3267 l
209.4341 478.5269 l
211.834 479.7266 l
214.4741 480.6865 l
216.8735 481.8867 l
219.5137 482.8467 l
222.1533 483.8066 l
224.5532 484.7666 l
227.1934 485.7266 l
229.5933 486.6865 l
232.2329 487.4063 l
234.6343 488.3662 l
237.2729 489.3262 l
239.9126 490.0464 l
242.3125 491.0063 l
244.9526 491.7261 l
247.3525 492.4463 l
249.9922 493.166 l
252.6323 493.8862 l
255.0322 494.606 l
257.6719 495.3262 l
260.0718 495.8062 l
262.7119 496.5259 l
265.3516 497.0059 l
267.7515 497.7261 l
270.3916 498.2061 l
272.7915 498.9258 l
275.4312 499.4058 l
277.8311 499.8857 l
280.4712 500.3657 l
283.1108 500.8457 l
285.5107 501.3257 l
288.1509 501.8057 l
290.5508 502.2856 l
293.1904 502.7656 l
295.8306 503.0059 l
298.2305 503.4858 l
300.8701 503.9658 l
303.27 504.2056 l
305.9102 504.6855 l
308.5498 504.9258 l
310.9492 505.4058 l
313.5898 505.6455 l
315.9902 505.8857 l
318.6289 506.1255 l
321.0293 506.6055 l
323.6699 506.8457 l
326.3086 507.0854 l
328.7109 507.3257 l
331.3496 507.5654 l
333.75 507.8057 l
336.3887 508.0454 l
339.0293 508.2856 l
341.4277 508.5254 l
344.0684 508.5254 l
346.4688 508.7656 l
349.1074 509.0054 l
351.75 509.0054 l
354.1484 509.2456 l
356.7891 509.4854 l
359.1875 509.7256 l
361.8281 509.7256 l
364.2285 509.9653 l
366.8691 509.9653 l
369.5078 510.2056 l
371.9082 510.2056 l
374.5469 510.2056 l
376.9473 510.4453 l
379.5879 510.4453 l
382.2266 510.6855 l
384.627 510.6855 l
387.2676 510.6855 l
389.668 510.9253 l
392.3066 510.9253 l
394.9473 510.9253 l
397.3457 510.9253 l
399.9863 510.9253 l
402.3867 511.1655 l
405.0254 511.1655 l
407.4258 511.1655 l
410.0664 511.1655 l
412.707 511.1655 l
415.1055 511.1655 l
417.7461 511.1655 l
420.1445 511.1655 l
422.7871 511.4053 l
425.4258 511.4053 l
427.8262 511.4053 l
430.4648 511.4053 l
432.8652 511.4053 l
435.5039 511.1655 l
438.1445 511.1655 l
440.5449 511.1655 l
443.1836 511.1655 l
445.584 511.1655 l
448.2246 511.1655 l
450.625 511.1655 l
453.2637 511.1655 l
455.9043 511.1655 l
458.3047 510.9253 l
460.9434 510.9253 l
463.3438 510.9253 l
465.9844 510.9253 l
468.625 510.9253 l
471.0234 510.9253 l
473.6641 510.9253 l
476.0625 510.6855 l
478.7031 510.6855 l
481.3418 510.6855 l
483.7441 510.4453 l
486.3828 510.4453 l
488.7832 510.4453 l
491.4219 510.4453 l
493.8223 510.2056 l
496.4629 510.2056 l
499.1016 510.2056 l
501.502 510.2056 l
504.1426 509.9653 l
506.541 509.9653 l
509.1816 509.9653 l
511.8223 509.7256 l
514.2207 509.7256 l
516.8613 509.7256 l
519.2617 509.7256 l
521.9004 509.4854 l
524.541 509.4854 l
526.9414 509.4854 l
529.5801 509.2456 l
531.9805 509.2456 l
534.6211 509.0054 l
537.0195 509.0054 l
539.6621 509.0054 l
542.3008 509.0054 l
544.7012 508.7656 l
547.3398 508.7656 l
549.7402 508.5254 l
S
300 Ar
123.0376 419.9692 m
125.438 420.9292 l
128.0776 422.1294 l
130.478 422.6089 l
133.1172 423.5688 l
135.7573 424.769 l
138.1572 425.729 l
140.7969 426.689 l
143.1968 427.8892 l
145.8369 429.0884 l
148.2368 429.8091 l
150.8765 431.0083 l
153.5166 431.9683 l
155.9165 432.9282 l
158.5562 433.6489 l
160.9561 434.6089 l
163.5962 435.5684 l
166.2358 436.5283 l
168.6357 437.2485 l
171.2759 437.9683 l
173.6758 438.9282 l
176.3154 439.6484 l
178.9556 440.3682 l
181.3555 441.3281 l
183.9951 441.8081 l
186.395 442.7681 l
189.0352 443.248 l
191.4351 444.208 l
194.0747 444.688 l
196.7148 445.4082 l
199.1147 446.1279 l
201.7544 446.6079 l
204.1543 447.3281 l
206.7944 447.8081 l
209.4341 448.5278 l
211.834 449.0078 l
214.4741 449.728 l
216.8735 450.208 l
219.5137 450.688 l
222.1533 451.168 l
224.5532 451.6479 l
227.1934 452.1279 l
229.5933 452.6079 l
232.2329 453.3276 l
234.6343 453.5679 l
237.2729 454.0479 l
239.9126 454.5278 l
242.3125 455.0078 l
244.9526 455.2476 l
247.3525 455.7275 l
249.9922 456.2075 l
252.6323 456.4478 l
255.0322 456.9277 l
257.6719 457.1675 l
260.0718 457.6475 l
262.7119 457.8877 l
265.3516 458.3677 l
267.7515 458.6074 l
270.3916 458.8477 l
272.7915 459.3276 l
275.4312 459.5674 l
277.8311 459.8076 l
280.4712 460.0474 l
283.1108 460.2876 l
285.5107 460.5273 l
288.1509 460.7676 l
290.5508 461.0073 l
293.1904 461.2476 l
295.8306 461.4873 l
298.2305 461.7275 l
300.8701 461.9673 l
303.27 462.2075 l
305.9102 462.4473 l
308.5498 462.6875 l
310.9492 462.6875 l
313.5898 462.9272 l
315.9902 463.1675 l
318.6289 463.4072 l
321.0293 463.4072 l
323.6699 463.6475 l
326.3086 463.8872 l
328.7109 463.8872 l
331.3496 464.1274 l
333.75 464.1274 l
336.3887 464.3672 l
339.0293 464.6074 l
341.4277 464.6074 l
344.0684 464.6074 l
346.4688 464.8472 l
349.1074 464.8472 l
351.75 465.0874 l
354.1484 465.0874 l
356.7891 465.3271 l
359.1875 465.3271 l
361.8281 465.3271 l
364.2285 465.5674 l
366.8691 465.5674 l
369.5078 465.8071 l
371.9082 465.8071 l
374.5469 465.8071 l
376.9473 465.8071 l
379.5879 465.8071 l
382.2266 466.0474 l
384.627 466.0474 l
387.2676 466.0474 l
389.668 466.0474 l
392.3066 466.2871 l
394.9473 466.2871 l
397.3457 466.2871 l
399.9863 466.2871 l
402.3867 466.5273 l
405.0254 466.5273 l
407.4258 466.5273 l
410.0664 466.5273 l
412.707 466.5273 l
415.1055 466.5273 l
417.7461 466.5273 l
420.1445 466.5273 l
422.7871 466.5273 l
425.4258 466.5273 l
427.8262 466.5273 l
430.4648 466.5273 l
432.8652 466.5273 l
435.5039 466.5273 l
438.1445 466.7671 l
440.5449 466.7671 l
443.1836 466.7671 l
445.584 466.7671 l
448.2246 466.7671 l
450.625 466.7671 l
453.2637 466.7671 l
455.9043 466.7671 l
458.3047 466.7671 l
460.9434 466.5273 l
463.3438 466.5273 l
465.9844 466.5273 l
468.625 466.5273 l
471.0234 466.5273 l
473.6641 466.5273 l
476.0625 466.5273 l
478.7031 466.5273 l
481.3418 466.5273 l
483.7441 466.5273 l
486.3828 466.5273 l
488.7832 466.5273 l
491.4219 466.5273 l
493.8223 466.5273 l
496.4629 466.5273 l
499.1016 466.5273 l
501.502 466.5273 l
504.1426 466.5273 l
506.541 466.2871 l
509.1816 466.2871 l
511.8223 466.2871 l
514.2207 466.2871 l
516.8613 466.2871 l
519.2617 466.2871 l
521.9004 466.2871 l
524.541 466.0474 l
526.9414 466.0474 l
529.5801 466.0474 l
531.9805 466.0474 l
534.6211 466.0474 l
537.0195 466.0474 l
539.6621 465.8071 l
542.3008 465.8071 l
544.7012 465.8071 l
547.3398 465.8071 l
549.7402 465.8071 l
S
300 Ar
123.0376 417.8091 m
125.438 417.8091 l
128.0776 417.8091 l
130.478 417.8091 l
133.1172 417.8091 l
135.7573 417.8091 l
138.1572 417.8091 l
140.7969 417.8091 l
143.1968 417.8091 l
145.8369 417.8091 l
148.2368 417.8091 l
150.8765 417.8091 l
153.5166 417.8091 l
155.9165 417.8091 l
158.5562 417.8091 l
160.9561 417.8091 l
163.5962 417.8091 l
166.2358 417.8091 l
168.6357 417.8091 l
171.2759 417.8091 l
173.6758 417.8091 l
176.3154 417.8091 l
178.9556 417.8091 l
181.3555 417.8091 l
183.9951 417.8091 l
186.395 417.8091 l
189.0352 417.8091 l
191.4351 417.8091 l
194.0747 417.8091 l
196.7148 417.8091 l
199.1147 417.8091 l
201.7544 417.8091 l
204.1543 417.8091 l
206.7944 417.8091 l
209.4341 417.8091 l
211.834 417.8091 l
214.4741 417.8091 l
216.8735 417.8091 l
219.5137 417.8091 l
222.1533 417.8091 l
224.5532 417.8091 l
227.1934 417.8091 l
229.5933 417.8091 l
232.2329 417.8091 l
234.6343 417.8091 l
237.2729 417.8091 l
239.9126 417.8091 l
242.3125 417.8091 l
244.9526 417.8091 l
247.3525 417.8091 l
249.9922 417.8091 l
252.6323 417.8091 l
255.0322 417.8091 l
257.6719 417.8091 l
260.0718 417.8091 l
262.7119 417.8091 l
265.3516 417.8091 l
267.7515 417.8091 l
270.3916 417.8091 l
272.7915 417.8091 l
275.4312 417.8091 l
277.8311 417.8091 l
280.4712 417.8091 l
283.1108 417.8091 l
285.5107 417.8091 l
288.1509 417.8091 l
290.5508 417.8091 l
293.1904 417.8091 l
295.8306 417.8091 l
298.2305 417.8091 l
300.8701 417.8091 l
303.27 417.8091 l
305.9102 417.8091 l
308.5498 417.8091 l
310.9492 417.8091 l
313.5898 417.8091 l
315.9902 417.8091 l
318.6289 417.8091 l
321.0293 417.8091 l
323.6699 417.8091 l
326.3086 417.8091 l
328.7109 417.8091 l
331.3496 417.8091 l
333.75 417.8091 l
336.3887 417.8091 l
339.0293 417.8091 l
341.4277 417.8091 l
344.0684 417.8091 l
346.4688 417.8091 l
349.1074 417.8091 l
351.75 417.8091 l
354.1484 417.8091 l
356.7891 417.8091 l
359.1875 417.8091 l
361.8281 417.8091 l
364.2285 417.8091 l
366.8691 417.8091 l
369.5078 417.8091 l
371.9082 417.8091 l
374.5469 417.8091 l
376.9473 417.8091 l
379.5879 417.8091 l
382.2266 417.8091 l
384.627 417.8091 l
387.2676 417.8091 l
389.668 417.8091 l
392.3066 417.8091 l
394.9473 417.8091 l
397.3457 417.8091 l
399.9863 417.8091 l
402.3867 417.8091 l
405.0254 417.8091 l
407.4258 417.8091 l
410.0664 417.8091 l
412.707 417.8091 l
415.1055 417.8091 l
417.7461 417.8091 l
420.1445 417.8091 l
422.7871 417.8091 l
425.4258 417.8091 l
427.8262 417.8091 l
430.4648 417.8091 l
432.8652 417.8091 l
435.5039 417.8091 l
438.1445 417.8091 l
440.5449 417.8091 l
443.1836 417.8091 l
445.584 417.8091 l
448.2246 417.8091 l
450.625 417.8091 l
453.2637 417.8091 l
455.9043 417.8091 l
458.3047 417.8091 l
460.9434 417.8091 l
463.3438 417.8091 l
465.9844 417.8091 l
468.625 417.8091 l
471.0234 417.8091 l
473.6641 417.8091 l
476.0625 417.8091 l
478.7031 417.8091 l
481.3418 417.8091 l
483.7441 417.8091 l
486.3828 417.8091 l
488.7832 417.8091 l
491.4219 417.8091 l
493.8223 417.8091 l
496.4629 417.8091 l
499.1016 417.8091 l
501.502 417.8091 l
504.1426 417.8091 l
506.541 417.8091 l
509.1816 417.8091 l
511.8223 417.8091 l
514.2207 417.8091 l
516.8613 417.8091 l
519.2617 417.8091 l
521.9004 417.8091 l
524.541 417.8091 l
526.9414 417.8091 l
529.5801 417.8091 l
531.9805 417.8091 l
534.6211 417.8091 l
537.0195 417.8091 l
539.6621 417.8091 l
542.3008 417.8091 l
544.7012 417.8091 l
547.3398 417.8091 l
549.7402 417.8091 l
S
300 Ar
1 D
123.0376 417.8091 m
125.438 415.6489 l
128.0776 414.2095 l
130.478 413.0093 l
133.1172 411.8081 l
135.7573 410.8491 l
138.1572 409.6489 l
140.7969 408.6899 l
143.1968 407.729 l
145.8369 406.77 l
148.2368 405.5688 l
150.8765 404.6099 l
153.5166 403.6489 l
155.9165 402.6899 l
158.5562 401.729 l
160.9561 401.0112 l
163.5962 399.8091 l
166.2358 399.0913 l
168.6357 398.3696 l
171.2759 397.4087 l
173.6758 396.6899 l
176.3154 395.729 l
178.9556 395.0112 l
181.3555 394.291 l
183.9951 393.3301 l
186.395 392.6094 l
189.0352 391.8906 l
191.4351 391.1719 l
194.0747 390.4512 l
196.7148 389.7285 l
199.1147 389.0117 l
201.7544 388.5313 l
204.1543 387.8086 l
206.7944 387.0918 l
209.4341 386.6113 l
211.834 385.8906 l
214.4741 385.4102 l
216.8735 384.6914 l
219.5137 384.2109 l
222.1533 383.7305 l
224.5532 383.0117 l
227.1934 382.5313 l
229.5933 382.0508 l
232.2329 381.5703 l
234.6343 381.0918 l
237.2729 380.6113 l
239.9126 380.1309 l
242.3125 379.4102 l
244.9526 379.1719 l
247.3525 378.6914 l
249.9922 378.2109 l
252.6323 377.7305 l
255.0322 377.4902 l
257.6719 377.0117 l
260.0718 376.5313 l
262.7119 376.291 l
265.3516 375.8105 l
267.7515 375.5703 l
270.3916 375.0918 l
272.7915 374.8516 l
275.4312 374.3711 l
277.8311 374.1309 l
280.4712 373.8906 l
283.1108 373.4102 l
285.5107 373.1719 l
288.1509 372.9316 l
290.5508 372.4512 l
293.1904 372.2109 l
295.8306 371.9707 l
298.2305 371.7305 l
300.8701 371.4902 l
303.27 371.252 l
305.9102 371.0117 l
308.5498 370.7715 l
310.9492 370.5313 l
313.5898 370.291 l
315.9902 370.0508 l
318.6289 369.8105 l
321.0293 369.5703 l
323.6699 369.3301 l
326.3086 369.0918 l
328.7109 368.8516 l
331.3496 368.8516 l
333.75 368.6113 l
336.3887 368.3711 l
339.0293 368.1309 l
341.4277 368.1309 l
344.0684 367.8906 l
346.4688 367.6504 l
349.1074 367.6504 l
351.75 367.4102 l
354.1484 367.4102 l
356.7891 367.1719 l
359.1875 366.9316 l
361.8281 366.9316 l
364.2285 366.6914 l
366.8691 366.6914 l
369.5078 366.4512 l
371.9082 366.4512 l
374.5469 366.2109 l
376.9473 366.2109 l
379.5879 365.9707 l
382.2266 365.9707 l
384.627 365.7305 l
387.2676 365.7305 l
389.668 365.7305 l
392.3066 365.4902 l
394.9473 365.4902 l
397.3457 365.4902 l
399.9863 365.252 l
402.3867 365.252 l
405.0254 365.0117 l
407.4258 365.0117 l
410.0664 365.0117 l
412.707 365.0117 l
415.1055 365.0117 l
417.7461 364.7715 l
420.1445 364.7715 l
422.7871 364.7715 l
425.4258 364.7715 l
427.8262 364.5313 l
430.4648 364.5313 l
432.8652 364.5313 l
435.5039 364.5313 l
438.1445 364.5313 l
440.5449 364.5313 l
443.1836 364.291 l
445.584 364.291 l
448.2246 364.291 l
450.625 364.291 l
453.2637 364.291 l
455.9043 364.291 l
458.3047 364.291 l
460.9434 364.0508 l
463.3438 364.0508 l
465.9844 364.0508 l
468.625 364.0508 l
471.0234 364.0508 l
473.6641 364.0508 l
476.0625 364.0508 l
478.7031 364.0508 l
481.3418 364.0508 l
483.7441 364.0508 l
486.3828 364.0508 l
488.7832 364.0508 l
491.4219 364.0508 l
493.8223 364.0508 l
496.4629 364.0508 l
499.1016 364.0508 l
501.502 364.0508 l
504.1426 364.0508 l
506.541 364.0508 l
509.1816 364.0508 l
511.8223 364.0508 l
514.2207 364.0508 l
516.8613 364.0508 l
519.2617 364.0508 l
521.9004 364.0508 l
524.541 364.0508 l
526.9414 364.0508 l
529.5801 364.0508 l
531.9805 364.0508 l
534.6211 364.0508 l
537.0195 364.0508 l
539.6621 364.0508 l
542.3008 364.0508 l
544.7012 364.0508 l
547.3398 364.0508 l
549.7402 364.0508 l
S
300 Ar
123.0376 415.6489 m
125.438 413.4897 l
128.0776 410.6099 l
130.478 408.9302 l
133.1172 406.0493 l
135.7573 403.8901 l
138.1572 401.729 l
140.7969 399.3286 l
143.1968 397.6489 l
145.8369 395.2515 l
148.2368 393.3301 l
150.8765 391.4102 l
153.5166 389.4902 l
155.9165 387.5703 l
158.5562 385.6504 l
160.9561 383.7305 l
163.5962 381.8105 l
166.2358 380.1309 l
168.6357 378.4512 l
171.2759 376.7715 l
173.6758 375.0918 l
176.3154 373.4102 l
178.9556 371.7305 l
181.3555 370.291 l
183.9951 368.6113 l
186.395 367.1719 l
189.0352 365.7305 l
191.4351 364.0508 l
194.0747 362.6113 l
196.7148 361.4102 l
199.1147 359.9707 l
201.7544 358.5313 l
204.1543 357.3301 l
206.7944 355.8926 l
209.4341 354.6914 l
211.834 353.4902 l
214.4741 352.0527 l
216.8735 351.0938 l
219.5137 349.8926 l
222.1533 348.6914 l
224.5532 347.4902 l
227.1934 346.5313 l
229.5933 345.332 l
232.2329 344.373 l
234.6343 343.1738 l
237.2729 342.2129 l
239.9126 341.2539 l
242.3125 340.293 l
244.9526 339.332 l
247.3525 338.373 l
249.9922 337.4121 l
252.6323 336.4531 l
255.0322 335.7324 l
257.6719 334.7734 l
260.0718 334.0527 l
262.7119 333.332 l
265.3516 332.373 l
267.7515 331.6523 l
270.3916 330.9336 l
272.7915 330.2129 l
275.4312 329.2539 l
277.8311 328.5332 l
280.4712 327.8125 l
283.1108 327.332 l
285.5107 326.6133 l
288.1509 325.8926 l
290.5508 325.4121 l
293.1904 324.6934 l
295.8306 324.2129 l
298.2305 323.4922 l
300.8701 323.0137 l
303.27 322.293 l
305.9102 321.8125 l
308.5498 321.332 l
310.9492 320.6133 l
313.5898 320.1328 l
315.9902 319.6523 l
318.6289 319.1738 l
321.0293 318.6934 l
323.6699 318.2129 l
326.3086 317.7324 l
328.7109 317.4922 l
331.3496 317.0137 l
333.75 316.5332 l
336.3887 316.0527 l
339.0293 315.8125 l
341.4277 315.332 l
344.0684 314.8535 l
346.4688 314.6133 l
349.1074 314.1328 l
351.75 313.8926 l
354.1484 313.4121 l
356.7891 313.1738 l
359.1875 312.9355 l
361.8281 312.4531 l
364.2285 312.2129 l
366.8691 311.9746 l
369.5078 311.7324 l
371.9082 311.2539 l
374.5469 311.0156 l
376.9473 310.7734 l
379.5879 310.5332 l
382.2266 310.293 l
384.627 310.0527 l
387.2676 309.8125 l
389.668 309.5723 l
392.3066 309.332 l
394.9473 309.0957 l
397.3457 308.8535 l
399.9863 308.6133 l
402.3867 308.6133 l
405.0254 308.373 l
407.4258 308.1348 l
410.0664 307.8945 l
412.707 307.8945 l
415.1055 307.6523 l
417.7461 307.4121 l
420.1445 307.4121 l
422.7871 307.1758 l
425.4258 306.9355 l
427.8262 306.9355 l
430.4648 306.6934 l
432.8652 306.6934 l
435.5039 306.4531 l
438.1445 306.2148 l
440.5449 306.2148 l
443.1836 306.2148 l
445.584 305.9746 l
448.2246 305.9746 l
450.625 305.7324 l
453.2637 305.7324 l
455.9043 305.7324 l
458.3047 305.4922 l
460.9434 305.4922 l
463.3438 305.2559 l
465.9844 305.2559 l
468.625 305.0156 l
471.0234 305.0156 l
473.6641 305.0156 l
476.0625 305.0156 l
478.7031 305.0156 l
481.3418 304.7734 l
483.7441 304.7734 l
486.3828 304.7734 l
488.7832 304.7734 l
491.4219 304.5332 l
493.8223 304.5332 l
496.4629 304.5332 l
499.1016 304.5332 l
501.502 304.5332 l
504.1426 304.5332 l
506.541 304.5332 l
509.1816 304.5332 l
511.8223 304.2949 l
514.2207 304.2949 l
516.8613 304.2949 l
519.2617 304.2949 l
521.9004 304.2949 l
524.541 304.2949 l
526.9414 304.2949 l
529.5801 304.2949 l
531.9805 304.2949 l
534.6211 304.2949 l
537.0195 304.2949 l
539.6621 304.2949 l
542.3008 304.2949 l
544.7012 304.2949 l
547.3398 304.2949 l
549.7402 304.2949 l
S
300 Ar
123.0376 413.4897 m
125.438 411.3286 l
128.0776 407.2505 l
130.478 404.1294 l
133.1172 400.2896 l
135.7573 396.9312 l
138.1572 393.5684 l
140.7969 390.2109 l
143.1968 387.3301 l
145.8369 384.2109 l
148.2368 381.0918 l
150.8765 378.2109 l
153.5166 375.0918 l
155.9165 372.2109 l
158.5562 369.3301 l
160.9561 366.6914 l
163.5962 363.8105 l
166.2358 361.1719 l
168.6357 358.5313 l
171.2759 355.8926 l
173.6758 353.4902 l
176.3154 350.8516 l
178.9556 348.2129 l
181.3555 346.0527 l
183.9951 343.6504 l
186.395 341.2539 l
189.0352 339.0938 l
191.4351 336.6934 l
194.0747 334.5332 l
196.7148 332.373 l
199.1147 330.2129 l
201.7544 328.293 l
204.1543 326.1328 l
206.7944 324.2129 l
209.4341 322.293 l
211.834 320.1328 l
214.4741 318.2129 l
216.8735 316.5332 l
219.5137 314.6133 l
222.1533 312.9355 l
224.5532 311.2539 l
227.1934 309.5723 l
229.5933 307.8945 l
232.2329 306.2148 l
234.6343 304.5332 l
237.2729 302.8535 l
239.9126 301.4121 l
242.3125 299.7324 l
244.9526 298.2949 l
247.3525 296.8535 l
249.9922 295.4141 l
252.6323 294.2148 l
255.0322 292.7754 l
257.6719 291.334 l
260.0718 290.1348 l
262.7119 288.6953 l
265.3516 287.4941 l
267.7515 286.2949 l
270.3916 285.0957 l
272.7915 283.8945 l
275.4312 282.6953 l
277.8311 281.4941 l
280.4712 280.5352 l
283.1108 279.334 l
285.5107 278.1348 l
288.1509 277.1758 l
290.5508 276.2148 l
293.1904 275.0156 l
295.8306 274.0547 l
298.2305 273.334 l
300.8701 272.1348 l
303.27 271.4141 l
305.9102 270.4551 l
308.5498 269.4941 l
310.9492 268.7754 l
313.5898 267.8145 l
315.9902 267.0957 l
318.6289 266.1348 l
321.0293 265.4141 l
323.6699 264.6953 l
326.3086 263.7344 l
328.7109 263.0176 l
331.3496 262.5352 l
333.75 261.5742 l
336.3887 261.0977 l
339.0293 260.375 l
341.4277 259.6543 l
344.0684 258.9375 l
346.4688 258.2168 l
349.1074 257.7344 l
351.75 257.0176 l
354.1484 256.5352 l
356.7891 255.8145 l
359.1875 255.3359 l
361.8281 254.8555 l
364.2285 254.377 l
366.8691 253.8965 l
369.5078 253.416 l
371.9082 252.9375 l
374.5469 252.2168 l
376.9473 251.7344 l
379.5879 251.2578 l
382.2266 251.0176 l
384.627 250.5371 l
387.2676 250.0566 l
389.668 249.5762 l
392.3066 249.3359 l
394.9473 248.8555 l
397.3457 248.377 l
399.9863 248.1367 l
402.3867 247.6563 l
405.0254 247.1777 l
407.4258 246.9375 l
410.0664 246.6973 l
412.707 246.2168 l
415.1055 245.9766 l
417.7461 245.7363 l
420.1445 245.2578 l
422.7871 245.0176 l
425.4258 244.7773 l
427.8262 244.5371 l
430.4648 244.0566 l
432.8652 243.8164 l
435.5039 243.5762 l
438.1445 243.3359 l
440.5449 243.0977 l
443.1836 242.8574 l
445.584 242.6172 l
448.2246 242.377 l
450.625 242.1367 l
453.2637 241.8965 l
455.9043 241.6563 l
458.3047 241.416 l
460.9434 241.416 l
463.3438 241.1777 l
465.9844 240.9375 l
468.625 240.9375 l
471.0234 240.6973 l
473.6641 240.457 l
476.0625 240.2168 l
478.7031 240.2168 l
481.3418 239.9766 l
483.7441 239.9766 l
486.3828 239.7363 l
488.7832 239.7363 l
491.4219 239.4961 l
493.8223 239.2578 l
496.4629 239.2578 l
499.1016 239.0176 l
501.502 239.0176 l
504.1426 239.0176 l
506.541 238.7773 l
509.1816 238.7773 l
511.8223 238.5371 l
514.2207 238.5371 l
516.8613 238.5371 l
519.2617 238.2969 l
521.9004 238.2969 l
524.541 238.2969 l
526.9414 238.0566 l
529.5801 238.0566 l
531.9805 238.0566 l
534.6211 237.8164 l
537.0195 237.8164 l
539.6621 237.8164 l
542.3008 237.8164 l
544.7012 237.8164 l
547.3398 237.8164 l
549.7402 237.5762 l
S
300 Ar
123.0376 413.4897 m
125.438 408.2095 l
128.0776 403.6489 l
130.478 399.3286 l
133.1172 394.291 l
135.7573 389.9707 l
138.1572 385.4102 l
140.7969 381.0918 l
143.1968 377.0117 l
145.8369 372.9316 l
148.2368 368.6113 l
150.8765 364.7715 l
153.5166 360.6914 l
155.9165 356.8516 l
158.5562 353.0137 l
160.9561 349.4102 l
163.5962 345.5703 l
166.2358 341.9727 l
168.6357 338.6133 l
171.2759 335.0137 l
173.6758 331.4121 l
176.3154 328.0527 l
178.9556 324.6934 l
181.3555 321.5723 l
183.9951 318.2129 l
186.395 315.332 l
189.0352 312.2129 l
191.4351 309.0957 l
194.0747 305.9746 l
196.7148 303.0957 l
199.1147 300.2148 l
201.7544 297.334 l
204.1543 294.6953 l
206.7944 291.8125 l
209.4341 289.1758 l
211.834 286.5352 l
214.4741 284.1348 l
216.8735 281.4941 l
219.5137 278.8555 l
222.1533 276.4551 l
224.5532 274.0547 l
227.1934 271.8945 l
229.5933 269.4941 l
232.2329 267.334 l
234.6343 264.9375 l
237.2729 262.7754 l
239.9126 260.6152 l
242.3125 258.4551 l
244.9526 256.5352 l
247.3525 254.377 l
249.9922 252.457 l
252.6323 250.5371 l
255.0322 248.6172 l
257.6719 246.6973 l
260.0718 244.7773 l
262.7119 243.0977 l
265.3516 241.1777 l
267.7515 239.4961 l
270.3916 237.8164 l
272.7915 236.1367 l
275.4312 234.457 l
277.8311 232.7773 l
280.4712 231.3359 l
283.1108 229.6563 l
285.5107 228.2168 l
288.1509 226.5371 l
290.5508 225.0977 l
293.1904 223.6563 l
295.8306 222.2168 l
298.2305 221.0176 l
300.8701 219.5762 l
303.27 218.1367 l
305.9102 216.9395 l
308.5498 215.7363 l
310.9492 214.2969 l
313.5898 213.0996 l
315.9902 211.8984 l
318.6289 210.6973 l
321.0293 209.7363 l
323.6699 208.5371 l
326.3086 207.3379 l
328.7109 206.1387 l
331.3496 205.1797 l
333.75 204.2188 l
336.3887 203.0195 l
339.0293 202.0586 l
341.4277 201.0996 l
344.0684 200.1387 l
346.4688 199.1797 l
349.1074 198.2188 l
351.75 197.2598 l
354.1484 196.5391 l
356.7891 195.5781 l
359.1875 194.6191 l
361.8281 193.8984 l
364.2285 192.9395 l
366.8691 192.2188 l
369.5078 191.498 l
371.9082 190.7793 l
374.5469 189.8184 l
376.9473 189.3379 l
379.5879 188.3789 l
382.2266 187.6582 l
384.627 186.9395 l
387.2676 186.459 l
389.668 185.7383 l
392.3066 185.0195 l
394.9473 184.5391 l
397.3457 183.8184 l
399.9863 183.3379 l
402.3867 182.6191 l
405.0254 182.1387 l
407.4258 181.418 l
410.0664 180.9395 l
412.707 180.2188 l
415.1055 179.7383 l
417.7461 179.2598 l
420.1445 178.7793 l
422.7871 178.2988 l
425.4258 177.8184 l
427.8262 177.3379 l
430.4648 176.8594 l
432.8652 176.3789 l
435.5039 175.8984 l
438.1445 175.418 l
440.5449 174.9395 l
443.1836 174.6992 l
445.584 174.2188 l
448.2246 173.7383 l
450.625 173.498 l
453.2637 173.0195 l
455.9043 172.7793 l
458.3047 172.2988 l
460.9434 172.0586 l
463.3438 171.5781 l
465.9844 171.3379 l
468.625 171.0996 l
471.0234 170.6191 l
473.6641 170.3789 l
476.0625 170.1387 l
478.7031 169.6582 l
481.3418 169.418 l
483.7441 169.1797 l
486.3828 168.9414 l
488.7832 168.6992 l
491.4219 168.459 l
493.8223 168.2188 l
496.4629 167.9805 l
499.1016 167.7383 l
501.502 167.498 l
504.1426 167.2598 l
506.541 167.0215 l
509.1816 166.7793 l
511.8223 166.5391 l
514.2207 166.2988 l
516.8613 166.0605 l
519.2617 165.8184 l
521.9004 165.8184 l
524.541 165.5781 l
526.9414 165.3379 l
529.5801 165.3379 l
531.9805 165.1016 l
534.6211 164.8594 l
537.0195 164.8594 l
539.6621 164.6191 l
542.3008 164.6191 l
544.7012 164.3789 l
547.3398 164.1406 l
549.7402 164.1406 l
S
300 Ar
123.0376 411.3286 m
125.438 406.0493 l
128.0776 400.0503 l
130.478 394.5293 l
133.1172 388.5313 l
135.7573 383.0117 l
138.1572 377.4902 l
140.7969 371.9707 l
143.1968 366.6914 l
145.8369 361.4102 l
148.2368 356.1309 l
150.8765 351.3301 l
153.5166 346.293 l
155.9165 341.4922 l
158.5562 336.6934 l
160.9561 331.8926 l
163.5962 327.332 l
166.2358 322.7734 l
168.6357 318.2129 l
171.2759 313.6523 l
173.6758 309.332 l
176.3154 305.0156 l
178.9556 300.9355 l
181.3555 296.8535 l
183.9951 292.7754 l
186.395 288.9355 l
189.0352 284.8555 l
191.4351 281.0156 l
194.0747 277.1758 l
196.7148 273.334 l
199.1147 269.7344 l
201.7544 266.1348 l
204.1543 262.5352 l
206.7944 259.1777 l
209.4341 255.8145 l
211.834 252.457 l
214.4741 249.0977 l
216.8735 245.7363 l
219.5137 242.6172 l
222.1533 239.4961 l
224.5532 236.377 l
227.1934 233.2578 l
229.5933 230.377 l
232.2329 227.4961 l
234.6343 224.6172 l
237.2729 221.7363 l
239.9126 218.8574 l
242.3125 216.2168 l
244.9526 213.5762 l
247.3525 210.9395 l
249.9922 208.2988 l
252.6323 205.6563 l
255.0322 203.2598 l
257.6719 200.8574 l
260.0718 198.2188 l
262.7119 195.8184 l
265.3516 193.6582 l
267.7515 191.2598 l
270.3916 189.0996 l
272.7915 186.9395 l
275.4312 184.7793 l
277.8311 182.6191 l
280.4712 180.459 l
283.1108 178.5391 l
285.5107 176.3789 l
288.1509 174.459 l
290.5508 172.5391 l
293.1904 170.6191 l
295.8306 168.6992 l
298.2305 166.7793 l
300.8701 164.8594 l
303.27 163.1816 l
305.9102 161.498 l
308.5498 159.5781 l
310.9492 157.9004 l
313.5898 156.2207 l
315.9902 154.541 l
318.6289 153.1016 l
321.0293 151.4199 l
323.6699 149.9805 l
326.3086 148.541 l
328.7109 146.8613 l
331.3496 145.4199 l
333.75 143.9805 l
336.3887 142.541 l
339.0293 141.3398 l
341.4277 139.9004 l
344.0684 138.4609 l
346.4688 137.0215 l
349.1074 135.8203 l
351.75 134.6211 l
354.1484 133.4199 l
356.7891 132.2207 l
359.1875 131.0215 l
361.8281 129.8203 l
364.2285 128.6211 l
366.8691 127.4199 l
369.5078 126.2207 l
371.9082 125.2617 l
374.5469 124.0605 l
376.9473 123.1016 l
379.5879 122.1406 l
382.2266 120.9434 l
384.627 119.9824 l
387.2676 119.0234 l
389.668 118.0625 l
390.627 117.8203 l
S
300 Ar
0 D
120.3979 117.8203 m
552.3789 117.8203 l
S
300 Ar
120.3979 117.8203 m
120.3979 133.1816 l
S
300 Ar
145.8369 117.8203 m
145.8369 125.5 l
S
300 Ar
171.2759 117.8203 m
171.2759 125.5 l
S
300 Ar
196.7148 117.8203 m
196.7148 125.5 l
S
300 Ar
222.1533 117.8203 m
222.1533 125.5 l
S
300 Ar
247.3525 117.8203 m
247.3525 133.1816 l
S
300 Ar
272.7915 117.8203 m
272.7915 125.5 l
S
300 Ar
298.2305 117.8203 m
298.2305 125.5 l
S
300 Ar
323.6699 117.8203 m
323.6699 125.5 l
S
300 Ar
349.1074 117.8203 m
349.1074 125.5 l
S
300 Ar
374.5469 117.8203 m
374.5469 133.1816 l
S
300 Ar
399.9863 117.8203 m
399.9863 125.5 l
S
300 Ar
425.4258 117.8203 m
425.4258 125.5 l
S
300 Ar
450.625 117.8203 m
450.625 125.5 l
S
300 Ar
476.0625 117.8203 m
476.0625 125.5 l
S
300 Ar
501.502 117.8203 m
501.502 133.1816 l
S
300 Ar
526.9414 117.8203 m
526.9414 125.5 l
S
300 Ar
552.3789 117.8203 m
552.3789 125.5 l
S
300 Ar
1 D
119.9175 113.2637 m
118.4785 112.7813 l
117.5181 111.3418 l
117.0376 108.9434 l
117.0376 107.502 l
117.5181 105.1035 l
118.4785 103.6621 l
119.9175 103.1836 l
120.8774 103.1836 l
122.3179 103.6621 l
123.2778 105.1035 l
123.7573 107.502 l
123.7573 108.9434 l
123.2778 111.3418 l
122.3179 112.7813 l
120.8774 113.2637 l
119.9175 113.2637 l
118.9575 112.7813 l
118.4785 112.3027 l
117.9976 111.3418 l
117.5181 108.9434 l
117.5181 107.502 l
117.9976 105.1035 l
118.4785 104.1426 l
118.9575 103.6621 l
119.9175 103.1836 l
S
300 Ar
120.8774 103.1836 m
121.8374 103.6621 l
122.3179 104.1426 l
122.7974 105.1035 l
123.2778 107.502 l
123.2778 108.9434 l
122.7974 111.3418 l
122.3179 112.3027 l
121.8374 112.7813 l
120.8774 113.2637 l
S
300 Ar
242.5527 104.1426 m
242.0728 103.6621 l
242.5527 103.1836 l
243.0327 103.6621 l
242.5527 104.1426 l
S
300 Ar
0 D
246.8726 113.2637 m
245.9126 108.4629 l
246.8726 108.9434 l
248.3125 109.4219 l
249.7524 109.4219 l
251.1924 108.9434 l
252.1523 107.9824 l
252.6323 106.543 l
252.6323 106.0625 l
252.1523 104.623 l
251.1924 103.6621 l
249.7524 103.1836 l
248.3125 103.1836 l
246.8726 103.6621 l
246.3926 104.1426 l
245.9126 105.1035 l
245.9126 105.582 l
246.3926 106.0625 l
246.8726 105.582 l
246.3926 105.1035 l
S
300 Ar
249.7524 109.4219 m
250.7124 108.9434 l
251.6724 107.9824 l
252.1523 106.543 l
252.1523 106.0625 l
251.6724 104.623 l
250.7124 103.6621 l
249.7524 103.1836 l
S
300 Ar
246.8726 113.2637 m
251.6724 113.2637 l
S
300 Ar
1 D
246.8726 112.7813 m
249.2725 112.7813 l
251.6724 113.2637 l
S
300 Ar
0 D
372.6289 111.3418 m
373.5879 111.8203 l
375.0273 113.2637 l
375.0273 103.1836 l
S
300 Ar
374.5469 112.7813 m
374.5469 103.1836 l
S
300 Ar
372.6289 103.1836 m
376.9473 103.1836 l
S
300 Ar
492.8613 111.3418 m
493.8223 111.8203 l
495.2617 113.2637 l
495.2617 103.1836 l
S
300 Ar
494.7832 112.7813 m
494.7832 103.1836 l
S
300 Ar
492.8613 103.1836 m
497.1816 103.1836 l
S
300 Ar
1 D
501.502 104.1426 m
501.0215 103.6621 l
501.502 103.1836 l
501.9824 103.6621 l
501.502 104.1426 l
S
300 Ar
0 D
505.8223 113.2637 m
504.8613 108.4629 l
505.8223 108.9434 l
507.2617 109.4219 l
508.7031 109.4219 l
510.1406 108.9434 l
511.1016 107.9824 l
511.582 106.543 l
511.582 106.0625 l
511.1016 104.623 l
510.1406 103.6621 l
508.7031 103.1836 l
507.2617 103.1836 l
505.8223 103.6621 l
505.3418 104.1426 l
504.8613 105.1035 l
504.8613 105.582 l
505.3418 106.0625 l
505.8223 105.582 l
505.3418 105.1035 l
S
300 Ar
508.7031 109.4219 m
509.6621 108.9434 l
510.623 107.9824 l
511.1016 106.543 l
511.1016 106.0625 l
510.623 104.623 l
509.6621 103.6621 l
508.7031 103.1836 l
S
300 Ar
505.8223 113.2637 m
510.623 113.2637 l
S
300 Ar
1 D
505.8223 112.7813 m
508.2207 112.7813 l
510.623 113.2637 l
S
300 Ar
0 D
120.3979 717.7964 m
552.3789 717.7964 l
S
300 Ar
120.3979 717.7964 m
120.3979 702.4375 l
S
300 Ar
145.8369 717.7964 m
145.8369 710.1167 l
S
300 Ar
171.2759 717.7964 m
171.2759 710.1167 l
S
300 Ar
196.7148 717.7964 m
196.7148 710.1167 l
S
300 Ar
222.1533 717.7964 m
222.1533 710.1167 l
S
300 Ar
247.3525 717.7964 m
247.3525 702.4375 l
S
300 Ar
272.7915 717.7964 m
272.7915 710.1167 l
S
300 Ar
298.2305 717.7964 m
298.2305 710.1167 l
S
300 Ar
323.6699 717.7964 m
323.6699 710.1167 l
S
300 Ar
349.1074 717.7964 m
349.1074 710.1167 l
S
300 Ar
374.5469 717.7964 m
374.5469 702.4375 l
S
300 Ar
399.9863 717.7964 m
399.9863 710.1167 l
S
300 Ar
425.4258 717.7964 m
425.4258 710.1167 l
S
300 Ar
450.625 717.7964 m
450.625 710.1167 l
S
300 Ar
476.0625 717.7964 m
476.0625 710.1167 l
S
300 Ar
501.502 717.7964 m
501.502 702.4375 l
S
300 Ar
526.9414 717.7964 m
526.9414 710.1167 l
S
300 Ar
552.3789 717.7964 m
552.3789 710.1167 l
S
300 Ar
120.3979 117.8203 m
120.3979 717.7964 l
S
300 Ar
120.3979 117.8203 m
135.7573 117.8203 l
S
300 Ar
120.3979 137.7402 m
128.0776 137.7402 l
S
300 Ar
120.3979 157.9004 m
128.0776 157.9004 l
S
300 Ar
120.3979 177.8184 m
128.0776 177.8184 l
S
300 Ar
120.3979 197.7383 m
128.0776 197.7383 l
S
300 Ar
120.3979 217.8984 m
135.7573 217.8984 l
S
300 Ar
120.3979 237.8164 m
128.0776 237.8164 l
S
300 Ar
120.3979 257.7344 m
128.0776 257.7344 l
S
300 Ar
120.3979 277.8945 m
128.0776 277.8945 l
S
300 Ar
120.3979 297.8125 m
128.0776 297.8125 l
S
300 Ar
120.3979 317.7324 m
135.7573 317.7324 l
S
300 Ar
120.3979 337.8926 m
128.0776 337.8926 l
S
300 Ar
120.3979 357.8105 m
128.0776 357.8105 l
S
300 Ar
120.3979 377.7305 m
128.0776 377.7305 l
S
300 Ar
120.3979 397.8901 m
128.0776 397.8901 l
S
300 Ar
120.3979 417.8091 m
135.7573 417.8091 l
S
300 Ar
120.3979 437.7285 m
128.0776 437.7285 l
S
300 Ar
120.3979 457.8877 m
128.0776 457.8877 l
S
300 Ar
120.3979 477.8066 m
128.0776 477.8066 l
S
300 Ar
120.3979 497.7261 m
128.0776 497.7261 l
S
300 Ar
120.3979 517.8853 m
135.7573 517.8853 l
S
300 Ar
120.3979 537.8042 m
128.0776 537.8042 l
S
300 Ar
120.3979 557.7231 m
128.0776 557.7231 l
S
300 Ar
120.3979 577.8823 m
128.0776 577.8823 l
S
300 Ar
120.3979 597.8018 m
128.0776 597.8018 l
S
300 Ar
120.3979 617.7207 m
135.7573 617.7207 l
S
300 Ar
120.3979 637.8799 m
128.0776 637.8799 l
S
300 Ar
120.3979 657.7993 m
128.0776 657.7993 l
S
300 Ar
120.3979 677.7183 m
128.0776 677.7183 l
S
300 Ar
120.3979 697.8774 m
128.0776 697.8774 l
S
300 Ar
120.3979 717.7964 m
135.7573 717.7964 l
S
300 Ar
91.8389 117.8203 m
100.479 117.8203 l
S
300 Ar
1 D
103.8384 114.4609 m
103.3589 113.9824 l
103.8384 113.5 l
104.3188 113.9824 l
103.8384 114.4609 l
S
300 Ar
0 D
107.6777 122.1406 m
108.1582 121.6602 l
107.6777 121.1836 l
107.1982 121.6602 l
107.1982 122.1406 l
108.1582 123.1016 l
109.5986 123.5801 l
111.5186 123.5801 l
112.958 123.1016 l
113.4385 122.1406 l
113.4385 120.7012 l
112.958 119.7402 l
111.5186 119.2617 l
110.0781 119.2617 l
S
300 Ar
111.5186 123.5801 m
112.4785 123.1016 l
112.958 122.1406 l
112.958 120.7012 l
112.4785 119.7402 l
111.5186 119.2617 l
112.4785 118.7813 l
113.4385 117.8203 l
113.918 116.8613 l
113.918 115.4199 l
113.4385 114.4609 l
112.958 113.9824 l
111.5186 113.5 l
109.5986 113.5 l
108.1582 113.9824 l
107.6777 114.4609 l
107.1982 115.4199 l
107.1982 115.9023 l
107.6777 116.3809 l
108.1582 115.9023 l
107.6777 115.4199 l
S
300 Ar
112.958 118.3008 m
113.4385 116.8613 l
113.4385 115.4199 l
112.958 114.4609 l
112.4785 113.9824 l
111.5186 113.5 l
S
300 Ar
91.8389 217.8984 m
100.479 217.8984 l
S
300 Ar
1 D
103.8384 214.5371 m
103.3589 214.0586 l
103.8384 213.5762 l
104.3188 214.0586 l
103.8384 214.5371 l
S
300 Ar
0 D
107.6777 221.7363 m
108.1582 221.2578 l
107.6777 220.7773 l
107.1982 221.2578 l
107.1982 221.7363 l
107.6777 222.6973 l
108.1582 223.1777 l
109.5986 223.6563 l
111.5186 223.6563 l
112.958 223.1777 l
113.4385 222.6973 l
113.918 221.7363 l
113.918 220.7773 l
113.4385 219.8164 l
111.998 218.8574 l
109.5986 217.8984 l
108.6387 217.416 l
107.6777 216.457 l
107.1982 215.0195 l
107.1982 213.5762 l
S
300 Ar
111.5186 223.6563 m
112.4785 223.1777 l
112.958 222.6973 l
113.4385 221.7363 l
113.4385 220.7773 l
112.958 219.8164 l
111.5186 218.8574 l
109.5986 217.8984 l
S
300 Ar
1 D
107.1982 214.5371 m
107.6777 215.0195 l
108.6387 215.0195 l
111.0381 214.0586 l
112.4785 214.0586 l
113.4385 214.5371 l
113.918 215.0195 l
S
300 Ar
108.6387 215.0195 m
111.0381 213.5762 l
112.958 213.5762 l
113.4385 214.0586 l
113.918 215.0195 l
113.918 215.9785 l
S
300 Ar
0 D
91.8389 317.7324 m
100.479 317.7324 l
S
300 Ar
1 D
103.8384 314.373 m
103.3589 313.8926 l
103.8384 313.4121 l
104.3188 313.8926 l
103.8384 314.373 l
S
300 Ar
0 D
108.6387 321.5723 m
109.5986 322.0527 l
111.0381 323.4922 l
111.0381 313.4121 l
S
300 Ar
110.5586 323.0137 m
110.5586 313.4121 l
S
300 Ar
108.6387 313.4121 m
112.958 313.4121 l
S
300 Ar
1 D
110.0781 423.5688 m
108.6387 423.0894 l
107.6777 421.6489 l
107.1982 419.2495 l
107.1982 417.8091 l
107.6777 415.4097 l
108.6387 413.9692 l
110.0781 413.4897 l
111.0381 413.4897 l
112.4785 413.9692 l
113.4385 415.4097 l
113.918 417.8091 l
113.918 419.2495 l
113.4385 421.6489 l
112.4785 423.0894 l
111.0381 423.5688 l
110.0781 423.5688 l
109.1182 423.0894 l
108.6387 422.6089 l
108.1582 421.6489 l
107.6777 419.2495 l
107.6777 417.8091 l
108.1582 415.4097 l
108.6387 414.4497 l
109.1182 413.9692 l
110.0781 413.4897 l
S
300 Ar
111.0381 413.4897 m
111.998 413.9692 l
112.4785 414.4497 l
112.958 415.4097 l
113.4385 417.8091 l
113.4385 419.2495 l
112.958 421.6489 l
112.4785 422.6089 l
111.998 423.0894 l
111.0381 423.5688 l
S
300 Ar
103.8384 514.5254 m
103.3589 514.0454 l
103.8384 513.5654 l
104.3188 514.0454 l
103.8384 514.5254 l
S
300 Ar
0 D
108.6387 521.7251 m
109.5986 522.2051 l
111.0381 523.645 l
111.0381 513.5654 l
S
300 Ar
110.5586 523.165 m
110.5586 513.5654 l
S
300 Ar
108.6387 513.5654 m
112.958 513.5654 l
S
300 Ar
1 D
103.8384 614.3608 m
103.3589 613.8809 l
103.8384 613.4009 l
104.3188 613.8809 l
103.8384 614.3608 l
S
300 Ar
0 D
107.6777 621.5605 m
108.1582 621.0806 l
107.6777 620.6006 l
107.1982 621.0806 l
107.1982 621.5605 l
107.6777 622.5205 l
108.1582 623.0005 l
109.5986 623.4805 l
111.5186 623.4805 l
112.958 623.0005 l
113.4385 622.5205 l
113.918 621.5605 l
113.918 620.6006 l
113.4385 619.6406 l
111.998 618.6807 l
109.5986 617.7207 l
108.6387 617.2407 l
107.6777 616.2808 l
107.1982 614.8408 l
107.1982 613.4009 l
S
300 Ar
111.5186 623.4805 m
112.4785 623.0005 l
112.958 622.5205 l
113.4385 621.5605 l
113.4385 620.6006 l
112.958 619.6406 l
111.5186 618.6807 l
109.5986 617.7207 l
S
300 Ar
1 D
107.1982 614.3608 m
107.6777 614.8408 l
108.6387 614.8408 l
111.0381 613.8809 l
112.4785 613.8809 l
113.4385 614.3608 l
113.918 614.8408 l
S
300 Ar
108.6387 614.8408 m
111.0381 613.4009 l
112.958 613.4009 l
113.4385 613.8809 l
113.918 614.8408 l
113.918 615.8008 l
S
300 Ar
103.8384 714.437 m
103.3589 713.957 l
103.8384 713.4771 l
104.3188 713.957 l
103.8384 714.437 l
S
300 Ar
0 D
107.6777 722.1162 m
108.1582 721.6362 l
107.6777 721.1563 l
107.1982 721.6362 l
107.1982 722.1162 l
108.1582 723.0762 l
109.5986 723.5562 l
111.5186 723.5562 l
112.958 723.0762 l
113.4385 722.1162 l
113.4385 720.6763 l
112.958 719.7163 l
111.5186 719.2368 l
110.0781 719.2368 l
S
300 Ar
111.5186 723.5562 m
112.4785 723.0762 l
112.958 722.1162 l
112.958 720.6763 l
112.4785 719.7163 l
111.5186 719.2368 l
112.4785 718.7563 l
113.4385 717.7964 l
113.918 716.8369 l
113.918 715.397 l
113.4385 714.437 l
112.958 713.957 l
111.5186 713.4771 l
109.5986 713.4771 l
108.1582 713.957 l
107.6777 714.437 l
107.1982 715.397 l
107.1982 715.877 l
107.6777 716.3569 l
108.1582 715.877 l
107.6777 715.397 l
S
300 Ar
112.958 718.2769 m
113.4385 716.8369 l
113.4385 715.397 l
112.958 714.437 l
112.4785 713.957 l
111.5186 713.4771 l
S
300 Ar
552.3789 117.8203 m
552.3789 717.7964 l
S
300 Ar
552.3789 117.8203 m
537.0195 117.8203 l
S
300 Ar
552.3789 137.7402 m
544.7012 137.7402 l
S
300 Ar
552.3789 157.9004 m
544.7012 157.9004 l
S
300 Ar
552.3789 177.8184 m
544.7012 177.8184 l
S
300 Ar
552.3789 197.7383 m
544.7012 197.7383 l
S
300 Ar
552.3789 217.8984 m
537.0195 217.8984 l
S
300 Ar
552.3789 237.8164 m
544.7012 237.8164 l
S
300 Ar
552.3789 257.7344 m
544.7012 257.7344 l
S
300 Ar
552.3789 277.8945 m
544.7012 277.8945 l
S
300 Ar
552.3789 297.8125 m
544.7012 297.8125 l
S
300 Ar
552.3789 317.7324 m
537.0195 317.7324 l
S
300 Ar
552.3789 337.8926 m
544.7012 337.8926 l
S
300 Ar
552.3789 357.8105 m
544.7012 357.8105 l
S
300 Ar
552.3789 377.7305 m
544.7012 377.7305 l
S
300 Ar
552.3789 397.8901 m
544.7012 397.8901 l
S
300 Ar
552.3789 417.8091 m
537.0195 417.8091 l
S
300 Ar
552.3789 437.7285 m
544.7012 437.7285 l
S
300 Ar
552.3789 457.8877 m
544.7012 457.8877 l
S
300 Ar
552.3789 477.8066 m
544.7012 477.8066 l
S
300 Ar
552.3789 497.7261 m
544.7012 497.7261 l
S
300 Ar
552.3789 517.8853 m
537.0195 517.8853 l
S
300 Ar
552.3789 537.8042 m
544.7012 537.8042 l
S
300 Ar
552.3789 557.7231 m
544.7012 557.7231 l
S
300 Ar
552.3789 577.8823 m
544.7012 577.8823 l
S
300 Ar
552.3789 597.8018 m
544.7012 597.8018 l
S
300 Ar
552.3789 617.7207 m
537.0195 617.7207 l
S
300 Ar
552.3789 637.8799 m
544.7012 637.8799 l
S
300 Ar
552.3789 657.7993 m
544.7012 657.7993 l
S
300 Ar
552.3789 677.7183 m
544.7012 677.7183 l
S
300 Ar
552.3789 697.8774 m
544.7012 697.8774 l
S
300 Ar
552.3789 717.7964 m
537.0195 717.7964 l
S
*U
0 To
1 0 0 1 357.9824 632.3604 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
0 J 0 j 1 w 4 M
%_ 0 50 XQ
/_TimesNewRomanPSMT 20.9991 20.9991 -6.4392 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
0 Tc
0 Tw
(w=-1.5) Tx 
(\r) TX 
TO
0 To
1 0 0 1 349.582 598.5815 0 Tp
0 Tv
TP
0 Tr
(w=-1.) Tx 
(\r) TX 
TO
0 To
1 0 0 1 399.332 598.5815 0 Tp
0 Tv
TP
0 Tr
(4) Tx 
(\r) TX 
TO
0 To
1 0 0 1 341.1816 559.5835 0 Tp
0 Tv
TP
0 Tr
(w=-1.) Tx 
(\r) TX 
TO
0 To
1 0 0 1 390.9316 559.5835 0 Tp
0 Tv
TP
0 Tr
(3) Tx 
(\r) TX 
TO
0 To
1 0 0 1 332.7832 518.585 0 Tp
0 Tv
TP
0 Tr
(w=-1.) Tx 
(\r) TX 
TO
0 To
1 0 0 1 382.5332 518.585 0 Tp
0 Tv
TP
0 Tr
(2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 324.3828 477.5869 0 Tp
0 Tv
TP
0 Tr
(w=-1.1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 315.9834 429.5884 0 Tp
0 Tv
TP
0 Tr
(w=-1.) Tx 
(\r) TX 
TO
0 To
1 0 0 1 365.7344 429.5884 0 Tp
0 Tv
TP
0 Tr
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 307.584 382.5898 0 Tp
0 Tv
TP
0 Tr
(w=-0.9) Tx 
(\r) TX 
TO
0 To
1 0 0 1 299.1841 333.5918 0 Tp
0 Tv
TP
0 Tr
(w=-0.8) Tx 
(\r) TX 
TO
0 To
1 0 0 1 290.7847 280.5957 0 Tp
0 Tv
TP
0 Tr
(w=-0.7) Tx 
(\r) TX 
TO
0 To
1 0 0 1 282.3853 231.1563 0 Tp
0 Tv
TP
0 Tr
(w=-0.6) Tx 
(\r) TX 
TO
0 To
1 0 0 1 273.9854 186.5996 0 Tp
0 Tv
TP
0 Tr
(w=-0.5) Tx 
(\r) TX 
TO
0 To
1 0 0 1 268.7588 73.3828 0 Tp
0 Tv
TP
0 Tr
(redshift \(z\)) Tx 
(\r) TX 
TO
0 To
0 1 -1 0 79.1196 327.0664 0 Tp
0 Tv
TP
0 Tr
(magnitude dif) Tx 
(\r) TX 
TO
0 To
0 1 -1 0 79.1196 443.9102 0 Tp
0 Tv
TP
0 Tr
(ferenc) Tx 
(\r) TX 
TO
0 To
0 1 -1 0 79.1196 496.3521 0 Tp
0 Tv
TP
0 Tr
(e) Tx 
(\r) TX 
TO
U
/BBAccumRotation (0.000000) XT
LB
%AI5_EndLayer--
gsave annotatepage grestore showpage
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec

%%EndDocument
 @endspecial 523 3592 a Fs(Fig.)15 b(2.)61 b Fq(D)880
3600 y Fd(L)956 3592 y Ft(for)29 b(a)h(v)l(ariet)n(y)e(of)h
(cosmological)j(mo)r(dels)c(con)n(taining)i Fq(\012)2636
3600 y Fd(M)2730 3592 y Ft(=)c(0)p Fq(:)p Ft(3)k(and)f
Fq(\012)3155 3600 y Fd(x)3220 3592 y Ft(=)e(0)p Fq(:)p
Ft(7)523 3683 y(with)c(a)g(constan)n(t)f(\(not)h(time-v)l(arying\))e
(equation)h(of)h(state)h Fq(w)2336 3691 y Fd(x)2375 3683
y Ft(.)e(The)h Fq(w)2628 3691 y Fd(x)2688 3683 y Ft(=)e
Fr(\000)p Ft(1)i(mo)r(del)f(has)h(b)r(een)523 3774 y(subtracted)i
(o\013)h(to)g(highligh)n(t)g(the)f(di\013erences)h(b)r(et)n(w)n(een)g
(the)f(v)l(arious)h(mo)r(dels)523 4038 y Fw(panel,)f(the)h(v)-5
b(arious)24 b(mo)r(dels)i(sho)n(w)e(the)i(same)f(linear)g(b)r(eha)n
(vior)f(at)h Fm(z)i(<)22 b Fw(0)p Fm(:)p Fw(1)j(with)h(mo)r(dels)523
4138 y(ha)n(ving)33 b(the)h(same)g Fm(H)1230 4150 y Fv(0)1301
4138 y Fw(b)r(eing)g(indistinguishable)g(to)f(a)h(few)g(p)r(ercen)n(t.)
g(By)g Fm(z)i Fw(=)e(0)p Fm(:)p Fw(5)f(the)523 4237 y(mo)r(dels)d(with)
h(signi\014can)n(t)f Fm(\003)g Fw(are)f(clearly)h(separated,)f(with)i
(luminosit)n(y)f(distances)g(that)523 4337 y(are)c(signi\014can)n(tly)h
(further)g(than)h(the)g(zero-)p Fm(\003)d Fw(univ)n(erses.)i
(Unfortunately)-7 b(,)27 b(t)n(w)n(o)g(p)r(erfectly)523
4436 y(reasonable)37 b(univ)n(erses,)h(giv)n(en)h(our)f(kno)n(wledge)g
(of)h(the)h(lo)r(cal)e(matter)h(densit)n(y)g(of)h(the)523
4536 y(Univ)n(erse)27 b(\()p Fm(\012)959 4548 y Fl(M)1058
4536 y Fj(\030)d Fw(0)p Fm(:)p Fw(2\),)k(one)g(with)g(a)g(large)f
(cosmological)f(constan)n(t,)i Fm(\012)2857 4548 y Fl(\003)2932
4536 y Fw(=)c(0)p Fm(:)p Fw(7,)j Fm(\012)3242 4548 y
Fl(M)3340 4536 y Fw(=)523 4636 y(0)p Fm(:)p Fw(3)k(and)g(one)g(with)h
(no)g(cosmological)d(constan)n(t,)i Fm(\012)2205 4648
y Fl(M)2308 4636 y Fw(=)e(0)p Fm(:)p Fw(2,)i(sho)n(w)g(di\013erences)g
(of)g(less)523 4735 y(than)39 b(25\045,)f(ev)n(en)g(to)g(redshifts)h
(of)f Fm(z)45 b(>)c Fw(5.)d(In)n(terestingly)-7 b(,)38
b(the)h(maxim)n(um)f(di\013erence)523 4835 y(b)r(et)n(w)n(een)27
b(the)g(t)n(w)n(o)e(mo)r(dels)i(is)f(at)h Fm(z)f Fj(\030)d
Fw(0)p Fm(:)p Fw(8,)j(not)g(at)h(large)e Fm(z)t Fw(.)h(Fig.)g(2)h
(illustrates)f(the)h(e\013ect)p eop
%%Page: 9 9
9 8 bop 1829 232 a Ft(Measuring)27 b(cosmology)g(with)e(Sup)r(erno)n(v)
l(ae)237 b(9)523 415 y Fw(of)36 b(c)n(hanging)e(the)i(equation)f(of)g
(state)h(of)f(the)h(non-matter,)f(dark)g(energy)f(comp)r(onen)n(t,)523
515 y(assuming)23 b(a)h(\015at)g(univ)n(erse,)f Fm(\012)1497
527 y Fl(tot)1607 515 y Fw(=)g(1.)g(If)i(w)n(e)e(are)g(to)h(discern)g
(a)f(dark)g(energy)g(comp)r(onen)n(t)523 614 y(that)34
b(is)g(not)g(a)g(cosmological)d(constan)n(t,)i(measuremen)n(ts)g(b)r
(etter)h(than)h(5\045)e(are)g(clearly)523 714 y(required,)25
b(esp)r(ecially)h(since)g(the)h(di\013erences)f(in)g(this)h(diagram)d
(include)j(the)g(assumption)523 814 y(of)i(\015atness)f(and)g(also)f
(\014x)i(the)g(v)-5 b(alue)28 b(of)h Fm(\012)1883 826
y Fl(M)1956 814 y Fw(.)g(In)g(fact,)g(to)f(discriminate)g(among)f(the)i
(full)523 913 y(range)j(of)i(dark)f(energy)f(mo)r(dels)i(with)g(time)g
(v)-5 b(arying)32 b(equations)h(of)h(state)f(will)h(require)523
1013 y(m)n(uc)n(h)27 b(b)r(etter)h(accuracy)e(than)i(ev)n(en)f(this)h
(c)n(hallenging)e(goal.)523 1279 y Fo(4)112 b(Measuring)38
b(the)f(Hubble)h(Constan)m(t)523 1478 y Fw(Sc)n(hmidt)19
b(et)g(al.)f([86],)f(using)h(a)g(sample)g(of)h(16)e(SNI)r(I,)i
(estimated)g Fm(H)2577 1490 y Fv(0)2637 1478 y Fw(=)k(73)p
Fj(\006)p Fw(6\(statistical\))p Fj(\006)p Fw(7)523 1577
y(\(systematic\))k(using)f(EPM.)g(This)h(estimate)f(is)h(indep)r(enden)
n(t)g(of)g(other)f(rungs)g(in)h(the)g(ex-)523 1677 y(tragalactic)19
b(distance)i(ladder,)g(the)h(most)f(imp)r(ortan)n(t)g(of)g(whic)n(h)g
(are)f(the)i(Cepheids,)f(whic)n(h)523 1777 y(curren)n(tly)32
b(calibrate)g(most)h(other)g(distance)g(metho)r(ds)g(\(suc)n(h)g(as)g
(SNIa\).)g(The)h(Cepheid)523 1876 y(and)21 b(EPM)f(distance)h(scales,)f
(compared)g(galaxy)g(to)h(galaxy)-7 b(,)20 b(agree)f(to)i(within)h
(5\045)f(and)g(are)523 1976 y(consisten)n(t)j(within)h(the)g(errors)e
([16,52].)g(This)h(pro)n(vides)g(con\014dence)g(that)h(b)r(oth)g(metho)
r(ds)523 2076 y(are)i(pro)n(viding)f(accurate)g(distances.)648
2175 y(The)20 b(curren)n(t)g(nearb)n(y)f(SNIa)i(sample)f([24,32,41,84])
d(con)n(tains)j(more)g(than)g(100)f(ob)5 b(jects)523
2275 y(\(Fig.)20 b(3\),)g(and)g(accurately)f(de\014nes)h(the)h(slop)r
(e)f(in)g(the)g(Hubble)h(diagram)e(from)h(0)i Fm(<)h(z)j(<)d
Fw(0)p Fm(:)p Fw(1)523 2374 y(to)29 b(1\045.)f(T)-7 b(o)28
b(measure)g Fm(H)1305 2386 y Fv(0)1342 2374 y Fw(,)h(SNIa)g(m)n(ust)f
(still)h(b)r(e)g(externally)f(calibrated)g(with)h(Cepheids,)523
2474 y(and)34 b(this)h(calibration)e(is)h(the)g(ma)5
b(jor)34 b(limitation)g(to)g(measuring)f Fm(H)2741 2486
y Fv(0)2813 2474 y Fw(with)i(SNIa.)f(Tw)n(o)523 2574
y(separate)k(teams)h(ha)n(v)n(e)f(analyzed)g(the)i(Cepheids)g(and)f
(SNIa)g(but)h(ha)n(v)n(e)e(obtained)h(di-)523 2673 y(v)n(ergen)n(t)h(v)
-5 b(alues)42 b(for)f(the)h(Hubble)g(constan)n(t.)f(Saha)g(et)h(al.)g
([88])f(\014nd)h Fm(H)2942 2685 y Fv(0)3026 2673 y Fw(=)k(59)27
b Fj(\006)g Fw(6,)523 2773 y(whereas)39 b(F)-7 b(reedman)40
b(et)h(al.)g([20])e(\014nd)i Fm(H)1903 2785 y Fv(0)1985
2773 y Fw(=)j(71)27 b Fj(\006)f Fw(2)h Fj(\006)g Fw(\(6)g(systematic)o
(\).)41 b(Of)g(the)g(12)523 2873 y(SNIa)i(for)f(whic)n(h)g(there)h(are)
e(Cepheid)i(distances)f(to)h(the)g(host)f(galaxy)f(\(SN1895B)3345
2842 y Ff(\003)3382 2873 y Fw(,)523 2972 y(SN1937C)859
2942 y Ff(\003)896 2972 y Fw(,)k(SN1960F)1294 2942 y
Ff(\003)1330 2972 y Fw(,)g(SN1972E,)e(SN1974G)2138 2942
y Ff(\003)2175 2972 y Fw(,)i(SN1981B,)e(SN1989B,)g(SN1990N,)523
3072 y(SN1991T,)35 b(SN1998eq,)h(SN1998bu,)f(and)i(SN1999b)n(y\),)e
(four)i(w)n(ere)f(observ)n(ed)f(b)n(y)h(non-)523 3171
y(digital)24 b(means)f(\(mark)n(ed)g(b)n(y)1464 3141
y Ff(\003)1502 3171 y Fw(\))i(and)e(are)g(b)r(est)i(excluded)f(from)g
(analysis)e(on)i(the)g(grounds)523 3271 y(that)i(non-digital)e
(photometry)h(routinely)f(has)h(systematic)g(errors)e(far)i(greater)e
(than)j(0.1)523 3371 y(mag.)37 b(Jha)h([41])f(has)g(compared)g(the)h
(SNIa)g(distances)g(using)f(an)h(up)r(dated)h(v)n(ersion)d(of)523
3470 y Fi(MLCS)26 b Fw(to)f(the)g(Cepheid)h(host)f(galaxy)f(distances)h
(measured)f(b)n(y)h(the)h(t)n(w)n(o)e Fi(Hubble)i(Space)523
3570 y(T)-7 b(elescop)r(e)28 b(\(HST\))h Fw(teams.)f(Using)f(only)h
(the)h(digitally)e(observ)n(ed)g(SNIa,)h(he)g(\014nds,)g(using)523
3670 y(distances)c(from)g(the)h(SNIa)g(pro)5 b(ject)24
b(of)g(Saha)g(et)h(al.)f([88],)g Fm(H)2438 3682 y Fv(0)2499
3670 y Fw(=)e(66)12 b Fj(\006)g Fw(3)g Fj(\006)g Fw(\(7)27
b(systematic\))551 3769 y(km)g(s)724 3739 y Ff(\000)p
Fv(1)841 3769 y Fw(Mp)r(c)1002 3739 y Ff(\000)p Fv(1)1092
3769 y Fw(.)36 b(Applying)g(the)g(same)g(analysis)e(to)i(the)h(Key)e
(Pro)5 b(ject)35 b(distances)g(b)n(y)523 3869 y(F)-7
b(reedman)32 b(et)g(al.)g([20])f(giv)n(es)g Fm(H)1571
3881 y Fv(0)1638 3869 y Fw(=)f(76)20 b Fj(\006)h Fw(3)g
Fj(\006)g Fw(\(8)28 b(systematic)o(\))60 b(km)28 b(s)2821
3839 y Ff(\000)p Fv(1)2937 3869 y Fw(Mp)r(c)3098 3839
y Ff(\000)p Fv(1)3188 3869 y Fw(.)k(This)523 3968 y(di\013erence)j(is)g
(not)h(due)f(to)g(SNIa)g(errors,)e(but)j(rather)e(to)h(the)h
(di\013eren)n(t)f(w)n(a)n(ys)f(the)i(t)n(w)n(o)523 4068
y(teams)31 b(ha)n(v)n(e)f(measured)h(Cepheid)h(distances)f(with)h
Fi(HST)p Fw(.)g(The)f(t)n(w)n(o)g(v)-5 b(alues)31 b(do)g(o)n(v)n(erlap)
523 4168 y(when)23 b(the)g(systematic)g(uncertain)n(ties)f(are)g
(included,)h(but)h(it)f(is)g(still)g(uncomfortable)f(that)523
4267 y(the)31 b(discrepancies)e(are)g(so)h(large,)f(particularly)g
(when)h(some)g(systematic)g(uncertain)n(ties)523 4367
y(are)d(common)g(b)r(et)n(w)n(een)g(the)h(t)n(w)n(o)f(teams.)648
4467 y(A)n(t)h(presen)n(t,)f(SNe)h(pro)n(vide)f(the)h(most)g(con)n
(vincing)f(constrain)n(ts)f(with)i Fm(H)2988 4479 y Fv(0)3049
4467 y Fj(\030)23 b Fw(70)18 b Fj(\006)g Fw(10)551 4566
y(km)27 b(s)724 4536 y Ff(\000)p Fv(1)841 4566 y Fw(Mp)r(c)1002
4536 y Ff(\000)p Fv(1)1092 4566 y Fw(.)k(Ho)n(w)n(ev)n(er,)e(future)j
(w)n(ork)e(on)h(measuring)e Fm(H)2553 4578 y Fv(0)2622
4566 y Fw(lies)i(not)g(with)h(the)g(SNe)523 4666 y(but)j(with)g(the)g
(Cepheid)g(calibrators,)d(or)i(p)r(ossibly)g(in)h(using)f(other)g
(primary)f(distance)523 4765 y(indicators)27 b(suc)n(h)g(as)g(EPM)g(or)
f(the)i(Sun)n(y)n(aev-Zeldo)n(vic)n(h)d(e\013ect.)p eop
%%Page: 10 10
10 9 bop 523 232 a Ft(10)199 b(P)n(erlm)n(utter)25 b(and)g(Sc)n(hmidt)
547 2432 y @beginspecial 7 @llx 171 @lly 582 @urx 597
@ury 3401 @rwi @setspecial
%%BeginDocument: PerlmutterSchmidtfig3.eps
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: 11 16 601 776
%AI3_DocumentPreview: Header
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 1 0 1 0 1 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -519 913 1 1578 1051 26 0 1 19 111 0 0
%AI5_OpenViewLayers: 7
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 50 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 40 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIDataProc null def
	/XIVersion 6 def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
end
currentdict /_colorimage known not {
	/colorimage where {
		/colorimage get /_colorimage exch def
	}{
		/_colorimage null def
	} ifelse
} if
/_image systemdict /image get def
/_currenttransfer systemdict /currenttransfer get def
/FourEqual {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual { 
				/plateindex 0 def
			}{
				0 1 0 0 FourEqual { 
					/plateindex 1 def
				}{
					0 0 1 0 FourEqual {
						/plateindex 2 def
					}{
						0 0 0 1 FourEqual { 
							/plateindex 3 def
						}{
							0 0 0 0 FourEqual {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/clrspaceissepn {
	type /arraytype eq 
} def
/clrspacegetname {
	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse
} def
/clrspacegetalt {
	aload pop pop pop colormake
} def
/clrspacegetcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/clrspacemarksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				/findcmykcustomcolor where {
					pop
					dup length 2 sub get
					0.1 0.1 0.1 0.1 5 -1 roll
					findcmykcustomcolor 1 setcustomcolor
					systemdict /currentgray get exec
					1 ne
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/colormake {
	dup clrspacegetcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/colorexpand {
	dup clrspacegetname exch
	dup clrspaceissepn {
		clrspacegetalt
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				clrspacegetalt colortint colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/WalkRGBString {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/CMYKToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/SeparateCMYKImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne {
			sourcearray plateindex get exec
		}{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub {
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/ColorImageCompositeEmulator {
	pop true eq {
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/colorimage {
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index
 end
	
	dup 8 eq exch 1 eq or not {
		/_colorimage load null ne {
			_colorimage
		}{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}{
		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {
			/_colorimage load null eq {
				ColorImageCompositeEmulator
			}{
				dup 1 eq {
					pop pop image
				}{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						grestore
					} if
				} ifelse
			} ifelse
		}{
			dup 1 eq {
				pop pop
				image
			}{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0 {			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace clrspacegetcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] makeimagedict _image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] makeimagedict _image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} stringapply
			} concatprocs _image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} stringapply
			} concatprocs false _pticomps
			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse
		} ifelse
	} ifelse
} def
/graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray proctintimage
} def
/cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK proctintimage
} def
/rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB proctintimage
} def
/tintimage {
	TestPlateIndex -1 eq {
		colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop graytintimage
		}{
			dup /DeviceRGB eq {
				pop rgbtintimage
			}{
				pop cmyktintimage
			} ifelse
		} ifelse
	}{
		dup clrspacemarksplate {
			plateindex 5 lt {
				colortocmyk plateindex get 1 exch sub
				exch {1 0}{0 1} ifelse () graytintimage
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage
			} ifelse
		}{
			pop pop pop
			{pop 1} 0 1 () /DeviceGray proctintimage
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace tintimage
} def
/XIImage {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIType 1 eq {
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEncoding 0 ne XIVersion 6 le and {
			currentfile 128 string readline pop pop
		} if
		XICompression 0 eq {
			/XIBuffer1 XIRowBytes string def
			XIEncoding 0 eq {
				{currentfile XIBuffer1 readhexstring pop}
			}{
				{currentfile XIBuffer1 readstring pop}
			} ifelse
		}{
			/XIBuffer1 256 string def
			/XIBuffer2 XIRowBytes string def
			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
			/ASCIIHexDecode filter /DCTDecode filter
			/XIFile exch def
			{XIFile XIBuffer2 readstring pop}
		} ifelse
		/XIDataProc exch def
		
		XIVersion 6 le {
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIType 1 eq {
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		XIEnable {
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		grestore
 end
} def
end
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
userdict /_useSmoothShade true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRider
currentpacking true setpacking
/TimesNewRomanPSMT havefont not {
/TimesNewRomanPSMT
15 dict dup begin
/FontName /TimesNewRomanPSMT def
/FontType 3 def
/FontMatrix [ 0.000977 0 0 0.000977 0 0 ] def
/FontAscent 1024 def
/FontDescent -314 def
/FontScript 0 def
/FontBBox [ 0 -512 1024 1024 ] def
/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
/l /lineto load def
/m /moveto load def
/c /curveto load def
/BuildChar {
	Adobe_Illustrator_AI5_vars exch /_bitlobyte exch put
	Adobe_Illustrator_AI5_vars exch /_bitfont exch put
	Adobe_Illustrator_AI5_vars /_bithibyte 0 put

	_bitlobyte 16 4 string cvrs dup length (K) dup length
	dup 4 -1 roll add string Adobe_Illustrator_AI5_vars exch /_bitkey exch put
	exch _bitkey copy pop _bitkey exch 3 -1 roll putinterval
	_bitfont /CharMetrics get _bitkey cvn get dup type /arraytype
	eq { aload pop setcachedevice }
	{ 0 setcharwidth } ifelse
	_bitfont /CharStrings get _bitkey cvn get exec
} bind def
18 dict dup begin
/KA {
} bind def
/KD {
} bind def
/K20 {
} bind def
/K28 {
{
newpath
236 -127 m
215 -101 199 -74 186 -46 c
174 -19 163 18 155 64 c
144 123 138 187 138 259 c
138 324 145 387 158 448 c
171 508 190 558 217 597 c
243 636 277 667 318 690 c
318 711 l
236 674 170 613 119 528 c
68 443 42 349 42 246 c
42 175 55 107 81 41 c
107 -25 144 -82 192 -130 c
226 -164 268 -194 318 -219 c
318 -200 l
284 -177 257 -152 236 -127 c
closepath
} exec
fill
} bind def
/K29 {
{
newpath
105 617 m
126 591 143 564 155 537 c
168 509 178 472 186 426 c
197 368 203 303 203 232 c
203 166 197 103 184 43 c
171 -18 151 -68 125 -107 c
98 -146 64 -177 23 -200 c
23 -219 l
105 -182 172 -121 223 -36 c
274 49 299 143 299 247 c
299 318 286 386 260 451 c
234 517 197 574 150 623 c
116 657 74 686 23 711 c
23 690 l
57 667 85 642 105 617 c
closepath
} exec
fill
} bind def
/K2D {
{
newpath
42 192 m
301 192 l
301 268 l
42 268 l
42 192 l
closepath
} exec
fill
} bind def
/K4D {
{
newpath
436 0 m
697 571 l
697 118 l
697 80 693 56 686 45 c
674 28 654 19 624 19 c
600 19 l
600 0 l
890 0 l
890 19 l
866 19 l
839 19 820 26 807 40 c
798 50 793 76 793 118 c
793 560 l
793 598 797 622 804 633 c
816 650 837 659 866 659 c
890 659 l
890 678 l
697 678 l
455 147 l
209 678 l
16 678 l
16 659 l
44 659 64 656 77 649 c
90 643 98 635 103 625 c
110 612 113 590 113 560 c
113 118 l
113 80 109 56 102 45 c
90 28 69 19 40 19 c
16 19 l
16 0 l
254 0 l
254 19 l
230 19 l
203 19 183 26 171 40 c
162 50 157 76 157 118 c
157 571 l
419 0 l
436 0 l
closepath
} exec
fill
} bind def
/K61 {
{
newpath
306 8 m
316 -3 329 -9 345 -9 c
380 -9 415 16 453 66 c
453 94 l
433 74 419 62 412 58 c
408 55 404 54 398 54 c
393 54 389 56 385 59 c
381 62 378 69 377 79 c
375 89 374 115 374 159 c
374 314 l
374 358 371 388 365 402 c
356 424 341 440 322 451 c
296 464 262 471 222 471 c
169 471 127 459 98 435 c
69 411 54 384 54 356 c
54 341 58 329 66 320 c
74 311 84 307 96 307 c
109 307 119 311 127 320 c
135 328 139 340 139 355 c
138 384 l
138 399 144 412 157 423 c
169 434 186 440 207 440 c
234 440 255 432 269 415 c
284 398 291 366 291 321 c
291 303 l
212 274 156 250 122 230 c
88 210 65 189 51 166 c
41 150 36 130 36 108 c
36 73 46 44 67 23 c
87 1 113 -10 145 -10 c
165 -10 185 -6 203 3 c
215 8 244 29 291 65 c
291 38 296 19 306 8 c
closepath
190 48 m
172 48 155 56 141 72 c
126 87 119 107 119 131 c
119 150 125 168 136 184 c
148 200 166 215 193 230 c
208 238 240 252 291 272 c
291 98 l
249 65 216 48 190 48 c
190 48 l
closepath
} exec
fill
} bind def
/K64 {
{
newpath
355 -14 m
378 -14 l
515 42 l
509 60 l
494 54 482 52 473 52 c
466 52 459 54 454 59 c
448 63 444 71 442 83 c
439 95 438 128 438 181 c
438 711 l
415 711 l
278 655 l
285 637 l
299 642 311 645 319 645 c
327 645 334 643 339 639 c
345 634 349 626 351 614 c
354 602 355 570 355 518 c
355 432 l
329 458 295 471 255 471 c
190 471 137 444 96 389 c
55 335 34 275 34 210 c
34 144 53 90 90 49 c
127 7 171 -14 221 -14 c
245 -14 268 -9 290 1 c
311 11 333 28 355 52 c
355 -14 l
closepath
267 41 m
232 41 199 59 170 95 c
141 130 126 182 126 249 c
126 315 141 366 171 401 c
194 427 220 440 249 440 c
265 440 281 435 298 426 c
314 416 327 402 337 384 c
347 365 353 344 355 321 c
355 87 l
327 56 298 41 267 41 c
267 41 l
closepath
} exec
fill
} bind def
/K65 {
{
newpath
426 285 m
426 342 409 387 376 420 c
343 454 301 471 250 471 c
189 471 139 449 98 405 c
58 362 38 301 38 223 c
38 150 58 93 97 50 c
136 7 183 -14 238 -14 c
289 -14 331 5 365 42 c
399 80 419 122 426 168 c
410 178 l
395 137 376 109 354 93 c
332 76 306 68 276 68 c
231 68 192 87 159 126 c
125 164 109 217 109 285 c
426 285 l
closepath
147 403 m
169 424 194 435 222 435 c
240 435 257 430 274 419 c
291 409 303 394 311 375 c
317 364 320 343 322 314 c
109 314 l
113 352 125 382 147 403 c
closepath
} exec
fill
} bind def
/K66 {
{
newpath
330 422 m
330 458 l
212 458 l
212 491 l
212 563 214 607 219 625 c
224 642 231 654 242 663 c
253 671 266 675 281 675 c
294 675 305 672 316 666 c
326 659 337 647 350 629 c
362 611 372 599 381 593 c
389 588 397 585 405 585 c
415 585 424 589 433 598 c
442 607 446 617 446 627 c
446 645 436 662 417 677 c
388 700 355 711 320 711 c
283 711 249 701 218 682 c
188 662 166 636 151 605 c
136 573 129 534 129 488 c
129 458 l
40 458 l
40 422 l
129 422 l
129 121 l
129 88 127 66 123 55 c
119 44 111 35 100 28 c
89 21 77 18 64 18 c
43 18 l
43 0 l
317 0 l
317 18 l
276 18 l
255 18 238 25 226 40 c
217 51 212 78 212 121 c
212 422 l
330 422 l
closepath
} exec
fill
} bind def
/K67 {
{
newpath
89 100 m
80 85 75 71 75 60 c
75 49 79 40 86 32 c
93 24 105 14 123 4 c
91 -29 74 -47 72 -50 c
54 -72 42 -89 37 -101 c
33 -109 31 -117 31 -125 c
31 -143 43 -161 68 -177 c
113 -206 167 -221 231 -221 c
315 -221 382 -197 434 -148 c
469 -115 487 -80 487 -42 c
487 -15 478 8 459 27 c
441 45 416 57 385 61 c
365 64 321 67 252 69 c
215 70 192 71 182 73 c
166 75 156 79 150 84 c
145 90 142 95 142 101 c
142 107 145 115 150 124 c
155 134 165 145 179 157 c
203 150 226 147 249 147 c
304 147 347 162 380 193 c
413 223 429 259 429 302 c
429 339 420 370 401 394 c
461 394 l
475 394 484 395 486 396 c
489 397 490 398 491 400 c
493 403 494 409 494 418 c
494 425 493 431 491 434 c
490 436 488 437 486 438 c
484 439 475 439 461 439 c
364 439 l
332 460 294 471 251 471 c
197 471 153 455 119 422 c
85 389 68 350 68 305 c
68 276 75 249 90 224 c
105 200 127 181 155 167 c
121 138 99 116 89 100 c
closepath
307 413 m
330 383 341 342 341 289 c
341 249 333 219 317 200 c
300 181 280 172 254 172 c
228 172 206 183 189 205 c
166 234 155 274 155 327 c
155 367 163 397 180 417 c
196 436 217 446 242 446 c
268 446 290 435 307 413 c
307 413 l
closepath
322 -12 m
373 -13 407 -18 425 -25 c
442 -32 450 -44 450 -62 c
450 -85 436 -108 407 -129 c
379 -150 335 -160 276 -160 c
213 -160 165 -150 132 -129 c
113 -117 103 -103 103 -87 c
103 -75 107 -62 115 -47 c
123 -33 135 -17 150 0 c
190 -6 248 -10 322 -12 c
322 -12 l
closepath
} exec
fill
} bind def
/K68 {
{
newpath
144 711 m
7 655 l
14 637 l
30 642 41 645 48 645 c
57 645 64 643 69 639 c
74 634 78 626 80 614 c
83 602 84 570 84 518 c
84 104 l
84 75 82 56 78 47 c
74 37 69 31 62 28 c
50 21 34 18 14 18 c
14 0 l
241 0 l
241 18 l
218 18 201 21 192 26 c
182 31 176 37 172 45 c
169 53 167 72 167 104 c
167 345 l
192 371 213 388 231 397 c
248 406 265 410 282 410 c
298 410 311 406 323 398 c
334 391 342 379 347 363 c
352 348 355 315 355 265 c
355 104 l
355 78 355 62 354 57 c
350 44 344 34 336 28 c
328 21 313 18 292 18 c
281 18 l
281 0 l
506 0 l
506 18 l
485 18 470 20 462 25 c
454 30 448 36 445 44 c
440 55 438 75 438 104 c
438 266 l
438 322 435 361 429 382 c
420 413 406 435 387 450 c
368 464 346 471 320 471 c
298 471 277 465 255 454 c
233 442 204 416 167 375 c
167 711 l
144 711 l
closepath
} exec
fill
} bind def
/K69 {
{
newpath
112 696 m
102 686 97 674 97 660 c
97 646 102 634 112 624 c
122 614 134 609 148 609 c
162 609 174 614 184 624 c
194 634 199 646 199 660 c
199 674 194 686 184 696 c
174 706 162 711 148 711 c
134 711 122 706 112 696 c
closepath
168 471 m
30 415 l
37 397 l
50 402 62 405 71 405 c
80 405 87 402 92 398 c
97 394 100 387 103 376 c
106 361 107 329 107 279 c
107 104 l
107 76 105 56 100 46 c
96 36 90 29 82 25 c
74 20 59 18 37 18 c
37 0 l
260 0 l
260 18 l
238 18 223 20 215 25 c
207 30 200 37 196 46 c
192 56 190 75 190 104 c
190 471 l
168 471 l
closepath
} exec
fill
} bind def
/K6D {
{
newpath
169 471 m
147 471 l
9 415 l
17 397 l
30 402 41 405 50 405 c
59 405 66 402 71 398 c
76 394 79 387 82 376 c
85 361 86 328 86 278 c
86 104 l
86 76 84 56 79 46 c
75 37 69 29 60 25 c
52 20 37 18 16 18 c
16 0 l
243 0 l
243 18 l
218 18 202 20 194 25 c
185 29 179 36 175 45 c
171 54 169 74 169 104 c
169 348 l
184 366 205 383 233 397 c
250 407 268 412 286 412 c
312 412 333 401 348 380 c
359 363 364 337 364 300 c
364 104 l
364 77 363 60 362 54 c
358 42 351 33 342 27 c
332 21 315 18 290 18 c
290 0 l
521 0 l
521 18 l
498 18 481 21 472 26 c
462 31 456 37 452 45 c
449 53 447 72 447 104 c
447 321 l
445 342 l
446 348 l
471 372 493 388 511 397 c
529 406 547 410 565 410 c
593 410 614 399 627 378 c
636 363 641 337 641 300 c
641 104 l
641 77 640 61 639 55 c
636 43 630 35 623 30 c
612 22 596 18 577 18 c
567 18 l
567 0 l
792 0 l
792 18 l
772 18 758 21 749 26 c
740 31 734 37 730 45 c
726 55 724 75 724 104 c
724 300 l
724 342 720 372 713 391 c
702 419 687 440 668 452 c
649 465 627 471 603 471 c
578 471 554 465 530 452 c
506 439 477 413 443 373 c
436 405 422 429 401 446 c
381 463 356 471 327 471 c
310 471 293 467 276 460 c
259 453 243 443 228 431 c
222 426 202 406 169 373 c
169 471 l
closepath
} exec
fill
} bind def
/K72 {
{
newpath
146 471 m
7 415 l
12 397 l
25 402 37 405 47 405 c
56 405 63 402 69 398 c
75 393 79 385 81 375 c
83 365 84 333 84 280 c
84 104 l
84 77 83 61 82 55 c
78 43 72 35 64 29 c
53 22 35 18 12 18 c
12 0 l
247 0 l
247 18 l
226 18 211 21 200 27 c
189 33 181 40 177 49 c
170 62 167 82 167 107 c
167 326 l
183 357 198 380 213 393 c
220 400 227 403 233 403 c
240 403 250 397 265 386 c
279 375 292 369 304 369 c
316 369 326 374 335 383 c
344 392 348 403 348 416 c
348 430 342 443 330 454 c
318 465 303 471 285 471 c
244 471 205 437 167 368 c
167 471 l
146 471 l
closepath
} exec
fill
} bind def
/K73 {
{
newpath
312 471 m
308 463 304 458 301 456 c
298 453 294 452 289 452 c
283 452 272 455 255 460 c
229 467 207 471 189 471 c
148 471 115 458 89 433 c
63 408 50 376 50 338 c
50 309 57 285 72 266 c
87 247 119 225 167 201 c
216 178 248 158 265 142 c
281 127 289 108 289 85 c
289 66 282 50 267 36 c
253 23 234 16 211 16 c
178 16 149 28 123 52 c
96 75 78 110 69 157 c
52 157 l
52 -7 l
69 -7 l
73 1 79 5 87 5 c
94 5 103 3 114 0 c
150 -9 182 -14 210 -14 c
249 -14 284 -1 316 24 c
347 50 363 83 363 125 c
363 179 329 222 261 255 c
188 291 l
157 306 135 320 125 334 c
114 347 109 363 109 382 c
109 397 116 410 131 423 c
145 435 164 441 187 441 c
218 441 243 432 263 415 c
283 397 299 364 312 315 c
329 315 l
329 471 l
312 471 l
closepath
} exec
fill
} bind def
/K74 {
{
newpath
150 609 m
136 575 126 552 118 539 c
103 515 86 494 67 477 c
47 460 28 447 10 440 c
10 424 l
83 424 l
83 115 l
83 82 87 57 94 41 c
101 26 111 13 126 5 c
141 -4 156 -8 171 -8 c
194 -8 216 0 237 17 c
259 33 275 58 287 91 c
267 91 l
261 78 253 67 243 60 c
233 53 222 50 211 50 c
198 50 187 55 179 66 c
170 76 166 96 166 126 c
166 423 l
273 424 l
273 458 l
166 458 l
166 609 l
150 609 l
closepath
} exec
fill
} bind def
end /CharStrings exch def
18 dict dup begin
/KA [797 0 143 0 654 640] def
Encoding 10 /KA put
/KD [797 0 143 0 654 640] def
Encoding 13 /KD put
/K20 [256 0 0 0 0 0] def
Encoding 32 /K20 put
/K28 [341 0 42 -218 318 712] def
Encoding 40 /K28 put
/K29 [341 0 23 -218 299 712] def
Encoding 41 /K29 put
/K2D [341 0 42 193 301 268] def
Encoding 45 /K2D put
/K4D [911 0 15 0 890 679] def
Encoding 77 /K4D put
/K61 [455 0 36 -9 453 472] def
Encoding 97 /K61 put
/K64 [512 0 34 -13 515 712] def
Encoding 100 /K64 put
/K65 [455 0 38 -13 425 472] def
Encoding 101 /K65 put
/K66 [341 0 39 0 445 710] def
Encoding 102 /K66 put
/K67 [512 0 31 -221 493 472] def
Encoding 103 /K67 put
/K68 [512 0 7 0 506 712] def
Encoding 104 /K68 put
/K69 [285 0 31 0 260 712] def
Encoding 105 /K69 put
/K6D [797 0 9 0 791 472] def
Encoding 109 /K6D put
/K72 [341 0 7 0 347 472] def
Encoding 114 /K72 put
/K73 [399 0 50 -13 362 472] def
Encoding 115 /K73 put
/K74 [285 0 10 -7 287 609] def
Encoding 116 /K74 put
end /CharMetrics exch def
end
definefont pop
} if
setpacking
%AI3_EndRider
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _TimesNewRomanPSMT TimesNewRomanPSMT
[/_TimesNewRomanPSMT/TimesNewRomanPSMT 0 0 0 TZ
%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
13 Bn
%AI5_BeginGradient: (Black, White Radial)
(Black, White Radial) 1 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 0 1 50 0 %_Bs
0 0 0 1 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Emerald Eye)
(Emerald Eye) 1 3 Bd
[
<
E4E4E4E4E5E5E5E5E5E5E5E5E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8
E8E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
ECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEF
EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
>
<
7675737271706E6D6C6B6A68676665646361605F5E5D5C5B5A595857565554535251504F4E4D4C4B
4A4948474646454443424141403F3E3D3C3C3B3A39393837363635343433323131302F2F2E2E2D2C
2C2B2A2A292928282726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1B1A1A19191818
181717171616151515141414131313121212111111101010100F0F0F0E0E0E0E0D0D0D0D0C0C0C0C
0B0B0B0B0B0A0A0A0A0A090909090908080808080807070707070706060606060606050505050505
05050404040404040404040403030303030303030303030302020202020202020202020202020202
01010101010101010101010101010101010101010101010101010101010000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000
>
<
F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F9F9
F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFB
FBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
9896959391908E8D8B8A8886858382807F7E7C7B79787675747271706E6D6C6A6968676564636261
5F5E5D5C5B5A5957565554535251504F4E4D4C4B4A49484746454443424241403F3E3D3C3C3B3A39
3837373635343433323131302F2F2E2D2D2C2B2B2A2929282727262625242423232222212120201F
1F1E1E1D1D1C1C1B1B1A1A1919181818171716161615151414141313131212121111111010100F0F
0F0F0E0E0E0D0D0D0D0C0C0C0C0B0B0B0B0A0A0A0A0A090909090908080808080707070707070606
06060606050505050505050504040404040404040403030303030303030303030202020202020202
02020202020202020101010101010101010101010101010101010101010101010101010000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000
>
1 %_Br
<
F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEDEDEDEDECECECECEBEBEBEAEAEAEAE9E9E9E8E8E8E7E7E6E6
E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DFDFDFDEDEDDDDDCDCDBDBDBDADAD9D9D8D8D7D7D6D6D5D5
D4D4D3D3D2D2D1D1D0D0CFCFCECECDCDCCCCCBCBCACAC9C8C8C7C7C6C6C5C5C4C3C3C2C2C1C1C0BF
BFBEBEBDBCBCBBBBBAB9B9B8B8B7B6B6B5B5B4B3B3B2B1B1B0B0AFAEAEADACACABAAAAA9A8A8A7A6
A6A5A4A4A3A2A2A1A0A09F9E9E9D9C9C9B9A9A99989797969595949393929190908F8E8E8D8C8B8B
8A89888887868685848383828180807F7E7D7D7C7B7A7A797877767675747373727170706F6E6D6C
6C6B6A696868676665646463626160605F5E5D5C5C5B5A5958575756555453535251504F4E4E4D4C
4B4A4948484746454443434241403F3E3D3C3C3B3A39383736363534333231302F2F2E2D2C2B2A29
282727262524232221201F1E1E1D1C1B1A19181716151414131211100F0E0D0C0B0A090807070605
0403020100
>
0
<
FFFFFFFFFFFEFEFEFEFEFDFDFDFDFDFCFCFCFCFBFBFBFAFAFAF9F9F9F8F8F8F7F7F7F6F6F6F5F5F4
F4F4F3F3F3F2F2F1F1F0F0F0EFEFEEEEEDEDECECECEBEBEAEAE9E9E8E8E7E7E6E6E5E5E4E4E3E3E2
E2E1E1E0E0DFDEDEDDDDDCDCDBDBDADAD9D8D8D7D7D6D6D5D4D4D3D3D2D1D1D0D0CFCECECDCDCCCB
CBCAC9C9C8C8C7C6C6C5C4C4C3C2C2C1C0C0BFBEBEBDBCBCBBBABAB9B8B8B7B6B6B5B4B4B3B2B2B1
B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A09F9F9E9D9C9C9B9A999998979696959493
939291908F8F8E8D8C8C8B8A898888878685848483828180807F7E7D7C7B7B7A7978777676757473
727171706F6E6D6C6C6B6A6968676666656463626160605F5E5D5C5B5A5959585756555453525151
504F4E4D4C4B4A49484847464544434241403F3E3E3D3C3B3A39383736353433323130302F2E2D2C
2B2A292827262524232221201F1E1D1D1C1B1A191817161514131211100F0E0D0C0B0A0908070605
0403020100
>
0
1 %_Br
[
0.8941 0.4627 0.9608 0.5961 1 16.2162 28.6517 %_Bs
0.9412 0 1 0 1 61.5385 64.6067 %_Bs
0 0 0 0 1 50 78.6517 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
F9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2
D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAA
A9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878685848382
81807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A
595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635343332
31302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A
0908070605040302
>
0.9882
<
05050505050505050505050505050505050505050505050505050505050505050505050505050505
05050606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606070707070707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707070707070707070707070707070707
07070707070708080808080808080808080808080808080808080808080808080808080808080808
0808080808080808
>
0
1 %_Br
<
E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEB
EBEBEBEBEBEBEBEBECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9
>
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B
8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3
B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADB
DCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC
>
<
09090909090909090909090909090909090909090909090909090909090908080808080808080808
08080808080808080808080808080808080808080808080808080808080808080808080808080808
08080808080808080707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
060606050505050505050505050505050505050505050505050505050505050505
>
0
1 %_Br
<
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8
>
<
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414
>
<
EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8
C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A0
9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978
77767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525150
4F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928
27262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09
>
0
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC
>
<
05050505050505050506060606060606060606060606060606070707070707070707070707070707
070808080808080808080808080808080808090909090909090909090909090909090A0A0A0A0A0A
0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C
0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F
0F0F0F0F0F0F0F0F0F0F0F0F10101010101010101010101010101010111111111111111111111111
1111111112121212121212121212121212121212131313131313131313
>
<
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEF
>
0
1 %_Br
<
03030303030303030303030303030303030303030303030304040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040505050505050505
05050505050505050505050505050505050505050505050505050505050505050505050505050505
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707080808080808080808080808080808080808080808080808
08
>
<
F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCE
CDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6
A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E
7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756
5554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706
05
>
0.9137
0
1 %_Br
[
0.0078 0.9882 0.0314 0 1 50 100 %_Bs
0.9765 0.9882 0.0196 0 1 50 80 %_Bs
0.9098 0.0784 0.0353 0 1 50 60 %_Bs
0.9255 0.0745 0.9373 0 1 50 40 %_Bs
0.0314 0.0196 0.9137 0 1 50 20 %_Bs
0.0118 0.9608 0.9137 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar II)
(Steel Bar II) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A
>
0 %_Br
<
1A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041
42434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263646566676869
6A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F9091
92939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9
BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1
E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0.1 0 50 100 %_Bs
1 0 50 39.8876 %_Bs
0.1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Sunset)
(Sunset) 0 5 Bd
[
<
EEEDEDECECEBEBEAE9E9E8E8E7E6E6E5E5E4E4E3E2E2E1E1E0DFDFDEDEDDDDDCDBDBDADAD9D9D8D7
D7D6D6D5D4D4D3D3D2D2D1
>
<
3534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E
0D0C0B0A09080706050403
>
1
<
807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160605F5E5D5C5B5A
595857565554535251504F
>
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE
>
<
050505060606060607070707080808080809090909090A0A0A0A0A0B0B0B0B0B0C0C0C0C0D0D0D0D
0D0E0E0E0E0E0F0F0F0F0F1010101010111111111212121212131313131314141414141515151515
161616161717171717181818181819191919191A1A1A1A1A1B1B1B1B1C1C1C1C1C1D1D1D1D1D1E1E
1E1E1E1F1F1F1F1F2020202021212121212222222222232323232324242424252525252526262626
2627272727272828282828292929292A2A2A2A2A2B2B2B2B2B2C2C2C2C2C2D2D2D2D2D2E2E2E2E2F
2F2F2F2F303030303031313131313232323232333333333434343434353535
>
<
E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECEDEDED
EDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F1
F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4
F4F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8
F8F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFC
FCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF
>
<
0001010202030304040506060707080809090A0B0B0C0C0D0D0E0E0F101011111212131314151516
161717181819191A1B1B1C1C1D1D1E1E1F2020212122222323242525262627272828292A2A2B2B2C
2C2D2D2E2F2F3030313132323334343535363637373839393A3A3B3B3C3C3D3E3E3F3F4040414142
434344444545464647484849494A4A4B4B4C4D4D4E4E4F4F50505151525353545455555656575858
59595A5A5B5B5C5D5D5E5E5F5F6060616262636364646565666767686869696A6A6B6C6C6D6D6E6E
6F6F7071717272737374747576767777787879797A7B7B7C7C7D7D7E7E7F7F
>
1 %_Br
<
33333232323231313131303030302F2F2F2E2E2E2E2D2D2D2D2C2C2C2C2B2B2B2B2A2A2A29292929
282828282727272726262625252525242424242323232322222221212121202020201F1F1F1F1E1E
1E1E1D1D1D1C1C1C1C1B1B1B1B1A1A1A1A1919191818181817171717161616161515151414141413
13131312121212111111101010100F0F0F0F0E0E0E0E0D0D0D0D0C0C0C0B0B0B0B0A0A0A0A090909
090808
>
<
A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A89888786858483828180
7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A5958
57565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736353433323130
2F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A0908
070605
>
<
F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1
F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECEC
ECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9
E9E9E9
>
<
1111111111101010101010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D
0D0D0D0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0909090909090909
09090808080808080808080707070707070707070706060606060606060605050505050505050505
04040404040404040403030303030303030303020202020202020202010101010101010101010000
000000
>
1 %_Br
<
F6F5F4F4F3F2F1F0F0EFEEEDECECEBEAE9E8E8E7E6E5E4E4E3E2E1E1E0DFDEDDDDDCDBDAD9D9D8D7
D6D6D5D4D3D2D2D1D0CFCFCECDCCCBCBCAC9C8C8C7C6C5C4C4C3C2C1C1C0BFBEBEBDBCBBBABAB9B8
B7B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A5A5A4A3A2A2A1A09F9F9E9D9C9C9B9A
9A999897979695949493929291908F8F8E8D8C8C8B8A8A89888787868585848382828180807F7E7E
7D7C7B7B7A7979787777767574747372727170706F6E6E6D6C6C6B6A6A6968686766666564646362
626160605F5E5E5D5C5C5B5A5A595858575756555554535352525150504F4E4E4D4D4C4B4B4A4A49
484847474646454444434342424140403F3F3E3E3D3D3C3C3B3B3A39393938383737363635353434
343333
>
<
EAEAE9E9E9E9E8E8E8E8E7E7E7E6E6E6E6E5E5E5E5E4E4E4E3E3E3E3E2E2E2E2E1E1E1E0E0E0E0DF
DFDFDFDEDEDEDDDDDDDDDCDCDCDCDBDBDBDBDADADAD9D9D9D9D8D8D8D8D7D7D7D7D6D6D6D6D5D5D5
D4D4D4D4D3D3D3D3D2D2D2D2D1D1D1D1D0D0D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCBCBCBCBCA
CACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1
C0C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBDBCBCBCBCBBBBBBBBBABABABABAB9B9B9B9B8B8B8B8B7B7
B7B7B7B6B6B6B6B5B5B5B5B5B4B4B4B4B3B3B3B3B3B2B2B2B2B1B1B1B1B1B0B0B0B0B0AFAFAFAFAF
AEAEAEAEAEADADADADADACACACACACABABABABABAAAAAAAAAAAAA9A9A9A9A9A9A8A8A8A8A8A8A7A7
A7A7A7
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
2728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F40414243434445464748494A4B4C4D
4E4F50515253545556565758595A5B5C5D5E5F60616263646465666768696A6B6C6D6E6F70707172
737475767778797A7A7B7C7D7E7F80818283848485868788898A8B8C8C8D8E8F9091929394949596
9798999A9A9B9C9D9E9FA0A1A1A2A3A4A5A6A7A7A8A9AAABACACADAEAFB0B1B2B2B3B4B5B6B6B7B8
B9BABBBBBCBDBEBFBFC0C1C2C3C3C4C5C6C7C7C8C9CACBCBCCCDCECECFD0D1D2D2D3D4D5D5D6D7D8
D8D9DADADBDCDDDDDEDFDFE0E1E2E2E3E4E4E5E6E6E7E8E8E9EAEAEBECECEDEDEEEFEFF0F0F1F1F2
F2F3F3
>
<
00000000000000000101010101010101010101010101020202020202020202020202020202030303
03030303030303030303030404040404040404040404040404040505050505050505050505050505
05060606060606060606060606060606070707070707070707070707070707070808080808080808
08080808080808090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D
0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F
0F0F0F0F0F0F0F0F1010101010101010101010101010101010101010101111111111111111111111
111111
>
1 %_Br
[
0.8196 0.01 1 0.31 1 50 100 %_Bs
0.9333 0.2078 1 0.5 1 50 57.3034 %_Bs
0.0314 0.0196 0.9137 0 1 50 55.618 %_Bs
0.2 0.6549 0.9529 0.0667 1 50 49.4382 %_Bs
0.9647 0.9176 0 0 1 45 32.5843 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient)
(Unnamed gradient) 0 6 Bd
[
<
F9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2
D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAA
A9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878685848382
81807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A
595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635343332
31302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A
0908070605040302
>
0.9882
<
05050505050505050505050505050505050505050505050505050505050505050505050505050505
05050606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606070707070707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707070707070707070707070707070707
07070707070708080808080808080808080808080808080808080808080808080808080808080808
0808080808080808
>
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010100000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000
>
1 %_Br
<
E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEB
EBEBEBEBEBEBEBEBECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9
>
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B
8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3
B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADB
DCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC
>
<
09090909090909090909090909090909090909090909090909090909090908080808080808080808
08080808080808080808080808080808080808080808080808080808080808080808080808080808
08080808080808080707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
060606050505050505050505050505050505050505050505050505050505050505
>
0.0039
1 %_Br
<
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8
>
<
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414
>
<
EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8
C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A0
9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978
77767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525150
4F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928
27262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09
>
<
03030303030303030303030303030303030303030303030303030303030303030303030303030303
03030303030303030303030303030303030303020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101
>
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC
>
<
05050505050505050506060606060606060606060606060606070707070707070707070707070707
070808080808080808080808080808080808090909090909090909090909090909090A0A0A0A0A0A
0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C
0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F
0F0F0F0F0F0F0F0F0F0F0F0F10101010101010101010101010101010111111111111111111111111
1111111112121212121212121212121212121212131313131313131313
>
<
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020203030303030303030303
0303030303030303030303030303030303030303030303030303030303
>
1 %_Br
<
03030303030303030303030303030303030303030303030304040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040505050505050505
05050505050505050505050505050505050505050505050505050505050505050505050505050505
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707080808080808080808080808080808080808080808080808
08
>
<
F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCE
CDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6
A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E
7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756
5554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706
05
>
0.9137
0
1 %_Br
[
0.0078 0.9882 0.0314 0 1 50 100 %_Bs
0.9765 0.9882 0.0196 0.0039 1 50 80 %_Bs
0.9098 0.0784 0.0353 0.0039 1 50 60 %_Bs
0.9255 0.0745 0.9373 0.0118 1 50 40 %_Bs
0.0314 0.0196 0.9137 0 1 50 20 %_Bs
0.0118 0.9608 0.9137 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 13)
(Unnamed gradient 13) 1 2 Bd
[
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000001010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010102020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020303030303030303030303030303030303030303030303030303
03030303030303030303030303030303030303030303030303030303030303030303030303030303
03030303030303030303030303030303030303030303030303030303030303030303030303030303
03030303030303030303030303030303030303030303030303030303030303030303030303030303
03030303030303030303030303030303030303030303030303030303030303030303030303030303
03030303030303030303030303030303030303030303030303030303030303030303030303
>
<
000102030405060708090A0B0C0D0E0F10111213141516161718191A1B1C1D1E1F20212223242525
262728292A2B2C2D2E2F2F30313233343536363738393A3B3C3D3D3E3F4041424343444546474848
494A4B4C4D4D4E4F505151525354555656575859595A5B5C5D5D5E5F606161626364646566676768
696A6A6B6C6D6D6E6F6F70717272737475757677777879797A7B7C7C7D7E7E7F8080818282838484
858686878888898A8A8B8C8C8D8E8E8F8F909191929393949495969697979899999A9A9B9C9C9D9D
9E9F9FA0A0A1A1A2A3A3A4A4A5A5A6A6A7A8A8A9A9AAAAABABACACADADAEAEAFB0B0B1B1B2B2B3B3
B4B4B5B5B6B6B7B7B8B8B8B9B9BABABBBBBCBCBDBDBEBEBFBFBFC0C0C1C1C2C2C3C3C3C4C4C5C5C6
C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCCCDCDCECECECFCFD0D0D0D1D1D1D2D2D2D3D3D3D4D4D5D5
D5D6D6D6D7D7D7D8D8D8D9D9D9DADADADADBDBDBDCDCDCDDDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1
E1E2E2E2E2E3E3E3E3E4E4E4E4E5E5E5E5E6E6E6E6E7E7E7E7E7E8E8E8E8E8E9E9E9E9EAEAEAEAEA
EAEBEBEBEBEBECECECECECECEDEDEDEDEDEDEEEEEEEEEEEEEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F1
F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5
>
<
00010203040506070808090A0B0C0D0E0F10111213141415161718191A1B1C1D1D1E1F2021222324
2425262728292A2B2B2C2D2E2F3030313233343535363738393A3A3B3C3D3E3F3F40414243434445
46464748494A4A4B4C4D4E4E4F505151525354545556575758595A5A5B5C5D5D5E5F5F6061626263
6464656667676869696A6B6B6C6D6D6E6F6F7071727273747475767677777879797A7B7B7C7D7D7E
7F7F808081828283848485858687878888898A8A8B8B8C8D8D8E8E8F8F9091919292939394959596
969797989899999A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9AAAA
ABABACACADADAEAEAFAFAFB0B0B1B1B2B2B3B3B3B4B4B5B5B6B6B6B7B7B8B8B9B9B9BABABBBBBBBC
BCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C2C3C3C4C4C4C5C5C5C6C6C6C7C7C7C8C8C8C9C9C9CACACA
CBCBCBCCCCCCCDCDCDCECECECFCFCFCFD0D0D0D1D1D1D1D2D2D2D3D3D3D3D4D4D4D5D5D5D5D6D6D6
D6D7D7D7D7D8D8D8D8D9D9D9D9D9DADADADADBDBDBDBDBDCDCDCDCDCDDDDDDDDDDDEDEDEDEDEDFDF
DFDFDFE0E0E0E0E0E0E1E1E1E1E1E1E2E2E2E2E2E2E2E3E3E3E3E3E3E3E4E4E4E4E4E4E4E4E5E5E5
E5E5E5E5E5E5E6E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E8E8
E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
>
0
1 %_Br
[
0 0 0 0 1 28 0 %_Bs
0.0118 0.9608 0.9137 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 2)
(Unnamed gradient 2) 1 6 Bd
[
<
03030303030303030303030303030303030303030303030304040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040505050505050505
05050505050505050505050505050505050505050505050505050505050505050505050505050505
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707080808080808080808080808080808080808080808080808
08
>
<
F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCE
CDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6
A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E
7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756
5554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706
05
>
0.9137
0
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC
>
<
05050505050505050506060606060606060606060606060606070707070707070707070707070707
070808080808080808080808080808080808090909090909090909090909090909090A0A0A0A0A0A
0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C
0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F
0F0F0F0F0F0F0F0F0F0F0F0F10101010101010101010101010101010111111111111111111111111
1111111112121212121212121212121212121212131313131313131313
>
<
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020203030303030303030303
0303030303030303030303030303030303030303030303030303030303
>
1 %_Br
<
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8
>
<
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414
>
<
EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8
C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A0
9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978
77767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525150
4F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928
27262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09
>
<
03030303030303030303030303030303030303030303030303030303030303030303030303030303
03030303030303030303030303030303030303020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101
>
1 %_Br
<
E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEB
EBEBEBEBEBEBEBEBECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9
>
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B
8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3
B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADB
DCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC
>
<
09090909090909090909090909090909090909090909090909090909090908080808080808080808
08080808080808080808080808080808080808080808080808080808080808080808080808080808
08080808080808080707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
060606050505050505050505050505050505050505050505050505050505050505
>
0.0039
1 %_Br
<
F9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2
D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAA
A9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878685848382
81807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A
595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635343332
31302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A
0908070605040302
>
0.9882
<
05050505050505050505050505050505050505050505050505050505050505050505050505050505
05050606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606070707070707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707070707070707070707070707070707
07070707070708080808080808080808080808080808080808080808080808080808080808080808
0808080808080808
>
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010100000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000
>
1 %_Br
[
0.0118 0.9608 0.9137 0 1 50 0 %_Bs
0.0314 0.0196 0.9137 0 1 50 20 %_Bs
0.9255 0.0745 0.9373 0.0118 1 50 40 %_Bs
0.9098 0.0784 0.0353 0.0039 1 50 60 %_Bs
0.9765 0.9882 0.0196 0.0039 1 50 80 %_Bs
0.0078 0.9882 0.0314 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 24)
(Unnamed gradient 24) 0 3 Bd
[
<
161717171818181919191A1A1B1B1B1C1C1C1D1D1D1E1E1E1F1F1F20202021212122222223232324
242425252526262627272828282929292A2A2A2B2B2B2C2C2C2D2D2D2E2E2E2F2F2F2F3030303131
313232323333333434343535353636363737373838383939393A3A3A3A3B3B3B3C3C3C3D3D3D3E3E
3E3F3F3F404040404141414242424343434344444445454546464646474747484848494949494A4A
4A4B4B4B4B4C4C4C4D4D4D4D4E4E4E4E4F4F4F505050505151515152525252535353535454545454
555555
>
<
3E3F40404142434445464748494A4B4C4D4E4F50515253535455565758595A5B5C5D5E5F60616263
636465666768696A6B6C6D6E6F70707172737475767778797A7B7B7C7D7E7F808182838485858687
88898A8B8C8D8E8E8F90919293949596969798999A9B9C9D9E9E9FA0A1A2A3A4A5A5A6A7A8A9AAAB
ABACADAEAFB0B1B1B2B3B4B5B6B6B7B8B9BABBBBBCBDBEBFC0C0C1C2C3C4C4C5C6C7C8C9C9CACBCC
CCCDCECFD0D0D1D2D3D4D4D5D6D7D7D8D9DADADBDCDCDDDEDFDFE0E1E1E2E3E3E4E5E5E6E7E7E8E8
E9EAEA
>
<
404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656667
68696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F80818283848586868788898A8B8C8D
8E8F90919293949596969798999A9B9C9D9E9FA0A1A2A2A3A4A5A6A7A8A9AAABACACADAEAFB0B1B2
B3B4B5B5B6B7B8B9BABBBCBDBDBEBFC0C1C2C3C3C4C5C6C7C8C9CACACBCCCDCECFCFD0D1D2D3D4D4
D5D6D7D8D9D9DADBDCDDDDDEDFE0E1E1E2E3E4E4E5E6E7E7E8E9EAEAEBECECEDEEEFEFF0F1F1F2F2
F3F4F4
>
<
111213141515161718191A1B1C1C1D1E1F2021222223242526272828292A2B2C2D2E2E2F30313233
33343536373839393A3B3C3D3E3E3F4041424343444546474848494A4B4C4D4D4E4F505151525354
5556565758595A5A5B5C5D5E5E5F6061626363646566676768696A6A6B6C6D6E6E6F707172727374
757576777879797A7B7C7C7D7E7F7F808182828384858586878888898A8B8B8C8D8E8E8F90919192
939394959696979898999A9A9B9C9C9D9E9E9FA0A0A1A2A2A3A4A4A5A6A6A7A7A8A9A9AAAAABABAC
ADADAD
>
1 %_Br
<
555554545453535352525251515050504F4F4F4E4E4E4D4D4D4C4C4C4B4B4B4A4A4A494948484847
474746464645454544444443434342424241414040403F3F3F3E3E3E3D3D3D3C3C3C3B3B3B3A3A3A
393938383837373736363635353534343433333332323231313030302F2F2F2E2E2E2D2D2D2C2C2C
2B2B2B2A2A29292928282827272726262625252524242423232322222121212020201F1F1F1E1E1E
1D1D1D1C1C1C1B1B1B1A1A19191918181817171716
>
<
EAE9E8E7E6E5E4E3E2E1E0DFDEDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C8C7C6C5
C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E
9D9C9B9A9A999897969594939291908F8E8D8C8B8A89888786858484838281807F7E7D7C7B7A7978
77767574737271706F6E6D6D6C6B6A696867666564636261605F5E5D5C5B5A595857565655545352
51504F4E4D4C4B4A494847464544434241403F3F3E
>
<
F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECD
CCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5
A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D
7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A5958575655
54535251504F4E4D4C4B4A49484746454443424140
>
<
4141404040403F3F3F3F3E3E3E3E3D3D3D3C3C3C3C3B3B3B3B3A3A3A3A3939393838383837373737
36363636353535343434343333333332323232313131313030302F2F2F2F2E2E2E2E2D2D2D2D2C2C
2C2B2B2B2B2A2A2A2A29292929282828272727272626262625252525242424232323232222222221
2121212020201F1F1F1F1E1E1E1E1D1D1D1D1C1C1C1B1B1B1B1A1A1A1A1919191918181817171717
161616161515151514141414131313121212121111
>
1 %_Br
[
0.3333 0.9176 0.9569 0.68 1 50 100 %_Bs
0.0877 0.2415 0.2518 0.0671 1 46.0177 37.0786 %_Bs
0.3333 0.9176 0.9569 0.2549 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 37)
(Unnamed gradient 37) 1 2 Bd
[
<
C4C3C3C2C1C1C0C0BFBEBEBDBCBCBBBABAB9B9B8B7B7B6B5B5B4B3B3B2B2B1B0B0AFAEAEADADACAB
ABAAA9A9A8A8A7A6A6A5A4A4A3A2A2A1A1A09F9F9E9E9D9C9C9B9A9A999998979796959594949392
929191908F8F8E8D8D8C8C8B8A8A898988878786868584848382828181807F7F7E7E7D7C7C7B7B7A
79797878777676757574737372727170706F6F6E6D6D6C6C6B6B6A69696868676666656564646362
626161605F5F5E5E5D5D5C5B5B5A5A5959585757565655555453535252515150504F4E4E4D4D4C4C
4B4B4A494948484747464645444443434242414140403F3F3E3E3D3C3C3B3B3A3A39393838373736
363535343433333232313130302F2F2F2E2E2D2D2C2C2B2B2B2A2A
>
<
0001020203040506070708090A0B0C0C0D0E0F101011121314151516171819191A1B1C1D1E1E1F20
21222223242526262728292A2A2B2C2D2E2F2F3031323333343536373738393A3B3B3C3D3E3F3F40
41424343444546464748494A4A4B4C4D4E4E4F505152525354555556575859595A5B5C5C5D5E5F60
6061626363646566676768696A6A6B6C6D6D6E6F707171727374747576777778797A7A7B7C7D7D7E
7F80808182838384858686878889898A8B8C8C8D8E8F8F90919192939494959697979899999A9B9C
9C9D9E9E9FA0A1A1A2A3A3A4A5A5A6A7A8A8A9AAAAABACACADAEAEAFB0B0B1B2B2B3B4B4B5B6B6B7
B8B8B9BABABBBCBCBDBDBEBFBFC0C0C1C2C2C3C3C4C5C5C6C6C7C7
>
<
02030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F20212223242526272829
2A2B2C2D2E2F30313232333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50
515253545455565758595A5B5C5D5E5F60616263646566676869696A6B6C6D6E6F70717273747576
7778797A7A7B7C7D7E7F80818283848586878888898A8B8C8D8E8F90919293939495969798999A9B
9C9D9E9E9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFAFB0B1B2B3B4B5B6B7B7B8B9BABBBCBDBEBE
BFC0C1C2C3C4C4C5C6C7C8C9CACACBCCCDCECFCFD0D1D2D3D4D4D5D6D7D8D8D9DADBDCDDDDDEDFE0
E0E1E2E3E4E4E5E6E7E7E8E9EAEAEBECEDEDEEEFEFF0F1F1F2F2F3
>
<
00000000000000000000000101010101010101010101010101010101010101010101020202020202
02020202020202020202020202020202030303030303030303030303030303030303030303030304
04040404040404040404040404040404040404040405050505050505050505050505050505050505
05050505050606060606060606060606060606060606060606060606070707070707070707070707
07070707070707070707070708080808080808080808080808080808080808080808080808090909
09090909090909090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A
0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B
>
1 %_Br
[
0.7686 0 0.0078 0 1 46.6292 0.5618 %_Bs
0.1647 0.7804 0.9529 0.0431 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 8)
(Unnamed gradient 8) 0 5 Bd
[
<
F6F5F4F4F3F2F1F0F0EFEEEDECECEBEAE9E8E8E7E6E5E4E4E3E2E1E0E0DFDEDDDCDCDBDAD9D8D8D7
D6D5D4D3D3D2D1D0CFCFCECDCCCBCBCAC9C8C7C7C6C5C4C3C3C2C1C0BFBFBEBDBCBBBBBAB9B8B7B7
B6B5B4B3B3B2B1B0AFAFAEADACABABAAA9A8A7A7A6A5A4A3A3A2A1A09F9F9E9D9C9B9B9A99989797
96959493929291908F8E8E8D8C8B8A8A8988878686858483828281807F7E7E7D7C7B7A7A79787776
76757473727271706F6E6E6D6C6B6A6A6968676666656463626261605F5E5E5D5C5B5A5A59585756
56555453525151504F4E4D4D4C4B4A494948474645454443424141403F3E3D3D3C3B3A3939383736
35353433
>
<
EAEAE9E9E9E9E8E8E8E8E7E7E7E6E6E6E6E5E5E5E4E4E4E4E3E3E3E3E2E2E2E1E1E1E1E0E0E0E0DF
DFDFDEDEDEDEDDDDDDDCDCDCDCDBDBDBDBDADADAD9D9D9D9D8D8D8D8D7D7D7D6D6D6D6D5D5D5D4D4
D4D4D3D3D3D3D2D2D2D1D1D1D1D0D0D0D0CFCFCFCECECECECDCDCDCCCCCCCCCBCBCBCBCACACAC9C9
C9C9C8C8C8C8C7C7C7C6C6C6C6C5C5C5C4C4C4C4C3C3C3C3C2C2C2C1C1C1C1C0C0C0C0BFBFBFBEBE
BEBEBDBDBDBDBCBCBCBBBBBBBBBABABAB9B9B9B9B8B8B8B8B7B7B7B6B6B6B6B5B5B5B5B4B4B4B3B3
B3B3B2B2B2B1B1B1B1B0B0B0B0AFAFAFAEAEAEAEADADADADACACACABABABABAAAAAAA9A9A9A9A8A8
A8A8A7A7
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3
>
<
00000000000000000101010101010101010101010101020202020202020202020202020203030303
03030303030303030303030404040404040404040404040404050505050505050505050505050506
06060606060606060606060606070707070707070707070707070707080808080808080808080808
080809090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B
0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E
0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010101011111111
11111111
>
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
>
<
05060708090A0B0C0D0E0F10111212131415161718191A1B1C1D1E1F202122232425262728292A2B
2B2C2D2E2F303132333435363738393A3B3C3D3E3F40414243444445464748494A4B4C4D4E4F5051
52535455565758595A5B5C5D5E5E5F606162636465666768696A6B6C6D6E6F707172737475767777
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919192939495969798999A9B9C9D9E
9FA0A1A2A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C4
C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDDDEDFE0E1E2E3E4E5E6E7E8E9EA
>
<
E9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D1D0CFCECDCCCBCAC9C8C7C6C5C4C3
C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A3A2A1A09F9E9D9C
9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574
74737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D
4C4B4A49484746464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726
2524232221201F1E1D1C1B1A19181717161514131211100F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAA
A9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878685848382
81807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A
595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635343332
31302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A
0908
>
<
00000000000000000000000000000000000000000001010101010101010101010101010101010101
01010101010101010101010101010101010101010102020202020202020202020202020202020202
02020202020202020202020202020202020202020203030303030303030303030303030303030303
03030303030303030303030303030303030303030304040404040404040404040404040404040404
04040404040404040404040404040404040404040405050505050505050505050505050505050505
0505
>
<
FFFFFFFFFFFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFB
FBFBFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F6F6
F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F2F2F2F2F2
F2F2F2F2F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEE
EDEDEDEDEDEDEDEDEDECECECECECECECECECECEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAE9E9E9
E9E9
>
<
4F4F4E4E4D4D4D4C4C4C4B4B4A4A4A49494848484747464646454544444443434242424141404040
3F3F3F3E3E3D3D3D3C3C3B3B3B3A3A39393938383737373636353535343434333332323231313030
302F2F2E2E2E2D2D2C2C2C2B2B2A2A2A292929282827272726262525252424232323222221212120
201F1F1F1E1E1D1D1D1C1C1C1B1B1A1A1A1919181818171716161615151414141313121212111111
10100F0F0F0E0E0D0D0D0C0C0B0B0B0A0A0909090808070707060606050504040403030202020101
0000
>
1 %_Br
<
EEEDEDECECEBEBEAEAE9E9E8E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDBDBDADA
D9D9D8D8D8D7D7D6D6D5D5D5D4D4D3D3D3D2D2D2D1D1
>
<
3534333231302F2E2D2C2B2A29282726252423222120201F1E1D1C1B1A1918171615151413121110
0F0F0E0D0C0B0A0A0908070706050404030202010000
>
1
<
807F7E7D7C7B7A79787776767574737271706F6E6E6D6C6B6A6968686766656464636261605F5F5E
5D5C5C5B5A5959585756565554545352525151504F4F
>
1 %_Br
[
0.2 0.6549 0.9529 0.0667 1 50 100 %_Bs
0.9647 0.9176 0 0 1 50 57.3034 %_Bs
0.0314 0.0196 0.9137 0 1 50 55.618 %_Bs
0.8196 0 1 0.31 1 50 49.4382 %_Bs
0.9333 0.2078 1 0.5 1 45 32.5843 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 9)
(Unnamed gradient 9) 0 5 Bd
[
<
EEEDEDECECEBEBEAEAE9E8E8E7E7E6E6E5E5E4E3E3E2E2E1E1E0DFDFDEDEDDDDDCDCDBDADAD9D9D8
D8D7D7D6D5D5D4D4D3D3D2D2D1
>
<
3534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1A191817161514131211100F0E0D
0C0B0A09080706050403020100
>
1
<
807F7E7D7C7B7A79787776757473727271706F6E6D6C6B6A69686766656464636261605F5E5D5C5B
5A59585757565554535251504F
>
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE
>
<
050505060606060607070707080808080809090909090A0A0A0A0A0B0B0B0B0B0C0C0C0C0D0D0D0D
0D0E0E0E0E0E0F0F0F0F0F1010101010111111111212121212131313131314141414141515151515
161616161717171717181818181819191919191A1A1A1A1A1B1B1B1B1C1C1C1C1C1D1D1D1D1D1E1E
1E1E1E1F1F1F1F1F2020202021212121212222222222232323232324242424252525252526262626
2627272727272828282828292929292A2A2A2A2A2B2B2B2B2B2C2C2C2C2C2D2D2D2D2D2E2E2E2E2F
2F2F2F2F303030303031313131313232323232333333333434343434353535
>
<
E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECEDEDED
EDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F1
F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4
F4F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8
F8F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFC
FCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF
>
<
0001010202030304040506060707080809090A0B0B0C0C0D0D0E0E0F101011111212131314151516
161717181819191A1B1B1C1C1D1D1E1E1F2020212122222323242525262627272828292A2A2B2B2C
2C2D2D2E2F2F3030313132323334343535363637373839393A3A3B3B3C3C3D3E3E3F3F4040414142
434344444545464647484849494A4A4B4B4C4D4D4E4E4F4F50505151525353545455555656575858
59595A5A5B5B5C5D5D5E5E5F5F6060616262636364646565666767686869696A6A6B6C6C6D6D6E6E
6F6F7071717272737374747576767777787879797A7B7B7C7C7D7D7E7E7F7F
>
1 %_Br
<
33333232323231313131303030302F2F2F2E2E2E2E2D2D2D2D2C2C2C2C2B2B2B2B2A2A2A29292929
282828282727272726262625252525242424242323232322222221212121202020201F1F1F1F1E1E
1E1E1D1D1D1C1C1C1C1B1B1B1B1A1A1A1A1919191818181817171717161616161515151414141413
13131312121212111111101010100F0F0F0F0E0E0E0E0D0D0D0D0C0C0C0B0B0B0B0A0A0A0A090909
090808
>
<
A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A89888786858483828180
7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A5958
57565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736353433323130
2F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A0908
070605
>
<
F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1
F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECEC
ECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9
E9E9E9
>
<
1111111111101010101010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D
0D0D0D0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0909090909090909
09090808080808080808080707070707070707070706060606060606060605050505050505050505
04040404040404040403030303030303030303020202020202020202010101010101010101010000
000000
>
1 %_Br
<
F6F5F4F4F3F2F1F0F0EFEEEDECECEBEAE9E8E8E7E6E5E4E4E3E2E1E1E0DFDEDDDDDCDBDAD9D9D8D7
D6D6D5D4D3D2D2D1D0CFCFCECDCCCBCBCAC9C8C8C7C6C5C4C4C3C2C1C1C0BFBEBEBDBCBBBABAB9B8
B7B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A5A5A4A3A2A2A1A09F9F9E9D9C9C9B9A
9A999897979695949493929291908F8F8E8D8C8C8B8A8A89888787868585848382828180807F7E7E
7D7C7B7B7A7979787777767574747372727170706F6E6E6D6C6C6B6A6A6968686766666564646362
626160605F5E5E5D5C5C5B5A5A595858575756555554535352525150504F4E4E4D4D4C4B4B4A4A49
484847474646454444434342424140403F3F3E3E3D3D3C3C3B3B3A39393938383737363635353434
343333
>
<
EAEAE9E9E9E9E8E8E8E8E7E7E7E6E6E6E6E5E5E5E5E4E4E4E3E3E3E3E2E2E2E2E1E1E1E0E0E0E0DF
DFDFDFDEDEDEDDDDDDDDDCDCDCDCDBDBDBDBDADADAD9D9D9D9D8D8D8D8D7D7D7D7D6D6D6D6D5D5D5
D4D4D4D4D3D3D3D3D2D2D2D2D1D1D1D1D0D0D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCBCBCBCBCA
CACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1
C0C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBDBCBCBCBCBBBBBBBBBABABABABAB9B9B9B9B8B8B8B8B7B7
B7B7B7B6B6B6B6B5B5B5B5B5B4B4B4B4B3B3B3B3B3B2B2B2B2B1B1B1B1B1B0B0B0B0B0AFAFAFAFAF
AEAEAEAEAEADADADADADACACACACACABABABABABAAAAAAAAAAAAA9A9A9A9A9A9A8A8A8A8A8A8A7A7
A7A7A7
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
2728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F40414243434445464748494A4B4C4D
4E4F50515253545556565758595A5B5C5D5E5F60616263646465666768696A6B6C6D6E6F70707172
737475767778797A7A7B7C7D7E7F80818283848485868788898A8B8C8C8D8E8F9091929394949596
9798999A9A9B9C9D9E9FA0A1A1A2A3A4A5A6A7A7A8A9AAABACACADAEAFB0B1B2B2B3B4B5B6B6B7B8
B9BABBBBBCBDBEBFBFC0C1C2C3C3C4C5C6C7C7C8C9CACBCBCCCDCECECFD0D1D2D2D3D4D5D5D6D7D8
D8D9DADADBDCDDDDDEDFDFE0E1E2E2E3E4E4E5E6E6E7E8E8E9EAEAEBECECEDEDEEEFEFF0F0F1F1F2
F2F3F3
>
<
00000000000000000101010101010101010101010101020202020202020202020202020202030303
03030303030303030303030404040404040404040404040404040505050505050505050505050505
05060606060606060606060606060606070707070707070707070707070707070808080808080808
08080808080808090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D
0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F
0F0F0F0F0F0F0F0F1010101010101010101010101010101010101010101111111111111111111111
111111
>
1 %_Br
[
0.8196 0 1 0.31 1 50 100 %_Bs
0.9333 0.2078 1 0.5 1 50 57.3034 %_Bs
0.0314 0.0196 0.9137 0 1 50 55.618 %_Bs
0.2 0.6549 0.9529 0.0667 1 50 49.4382 %_Bs
0.9647 0.9176 0 0 1 45 32.5843 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (White, Black)
(White, Black) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 1 1 50 100 %_Bs
0 0 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Azure Rings)
(Azure Rings) 22.5 22.5 58.5 58.5 [
%AI3_Tile
(0 O 0 R 0.9569 0.9294 0 0 k
 0.9569 0.9294 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1.75 w 4 M []0 d
0 XR
40.5 58.5 m
40.5 48.5586 32.4409 40.5 22.5 40.5 c
12.5591 40.5 4.5 48.5586 4.5 58.5 c
4.5 68.4414 12.5591 76.5 22.5 76.5 c
32.4409 76.5 40.5 68.4414 40.5 58.5 c
s
40.5 22.5 m
40.5 12.5586 32.4409 4.5 22.5 4.5 c
12.5591 4.5 4.5 12.5586 4.5 22.5 c
4.5 32.4414 12.5591 40.5 22.5 40.5 c
32.4409 40.5 40.5 32.4414 40.5 22.5 c
s
40.5 40.5 m
40.5 30.5586 32.4409 22.5 22.5 22.5 c
12.5591 22.5 4.5 30.5586 4.5 40.5 c
4.5 50.4414 12.5591 58.5 22.5 58.5 c
32.4409 58.5 40.5 50.4414 40.5 40.5 c
s
58.5 58.5 m
58.5 48.5586 50.4409 40.5 40.5 40.5 c
30.5591 40.5 22.5 48.5586 22.5 58.5 c
22.5 68.4414 30.5591 76.5 40.5 76.5 c
50.4409 76.5 58.5 68.4414 58.5 58.5 c
s
58.5 22.5 m
58.5 12.5586 50.4409 4.5 40.5 4.5 c
30.5591 4.5 22.5 12.5586 22.5 22.5 c
22.5 32.4414 30.5591 40.5 40.5 40.5 c
50.4409 40.5 58.5 32.4414 58.5 22.5 c
s
58.5 40.5 m
58.5 30.5586 50.4409 22.5 40.5 22.5 c
30.5591 22.5 22.5 30.5586 22.5 40.5 c
22.5 50.4414 30.5591 58.5 40.5 58.5 c
50.4409 58.5 58.5 50.4414 58.5 40.5 c
s
76.5 58.5 m
76.5 48.5586 68.4409 40.5 58.5 40.5 c
48.5591 40.5 40.5 48.5586 40.5 58.5 c
40.5 68.4414 48.5591 76.5 58.5 76.5 c
68.4409 76.5 76.5 68.4414 76.5 58.5 c
s
76.5 22.5 m
76.5 12.5586 68.4409 4.5 58.5 4.5 c
48.5591 4.5 40.5 12.5586 40.5 22.5 c
40.5 32.4414 48.5591 40.5 58.5 40.5 c
68.4409 40.5 76.5 32.4414 76.5 22.5 c
s
76.5 40.5 m
76.5 30.5586 68.4409 22.5 58.5 22.5 c
48.5591 22.5 40.5 30.5586 40.5 40.5 c
40.5 50.4414 48.5591 58.5 58.5 58.5 c
68.4409 58.5 76.5 50.4414 76.5 40.5 c
s
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Camouflage)
(Camouflage) 1 1 73 73 [
%AI3_Tile
(0 O 0 R 0.5961 0.1412 0.949 0.0275 k
 0.5961 0.1412 0.949 0.0275 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
1 73 m
1 1 L
73 1 L
73 73 L
1 73 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.498 0.349 0.9725 0.2 k
 0.498 0.349 0.9725 0.2 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
18.5449 73 m
18.5449 1 L
46.7832 1 L
46.7832 73 L
18.5449 73 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1882 0.1098 0.9255 0.0157 k
 0.1882 0.1098 0.9255 0.0157 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
11.9512 1 m
11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c
9.2314 10.2334 4.25 10.2334 4.25 13.8735 c
4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c
10.0313 24.832 10.208 24.832 10.208 28.5654 c
10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c
5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c
11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c
7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c
5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c
4.6631 69.1636 11.9512 69.3184 11.9512 73 C
27.9268 73 L
27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c
22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c
28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c
25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c
28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c
22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c
26.3945 24.832 24.4248 24.832 24.4248 21.0991 c
24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c
20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c
24.6055 2.8813 27.9268 4.7129 27.9268 1 C
11.9512 1 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.9255 0.2157 0.9647 0.0745 k
 0.9255 0.2157 0.9647 0.0745 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
41.875 1 m
41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c
42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c
40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c
41.5742 24.832 43.6484 24.832 43.6484 28.5659 c
43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c
39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c
39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c
45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c
40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c
40.6289 69.1636 41.875 69.3184 41.875 73 C
59.0752 73 L
59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c
53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c
55.8945 55.502 61.0059 55.502 61.0059 51.7886 c
61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c
60.5635 40.897 59.9277 40.897 59.9277 37.2842 c
59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c
56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c
61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c
52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c
55.7461 3.978 59.0752 4.6484 59.0752 1 C
41.875 1 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Clown Attack)
(Clown Attack) 5.25 11 41.25 47 [
%AI3_Tile
(0 O 0 R 0.9255 0 1 0 k
 0.9255 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
17.5 18.25 m
17.5 15.2119 15.0376 12.75 12 12.75 c
8.9624 12.75 6.5 15.2119 6.5 18.25 c
6.5 21.2881 8.9624 23.75 12 23.75 c
15.0376 23.75 17.5 21.2881 17.5 18.25 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0078 0.9529 0 0 k
 0.0078 0.9529 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
22.25 34.125 m
22.25 31.2939 19.9556 29 17.125 29 c
14.2944 29 12 31.2939 12 34.125 c
12 36.9561 14.2944 39.25 17.125 39.25 c
19.9556 39.25 22.25 36.9561 22.25 34.125 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0118 0.9608 0.9137 0 k
 0.0118 0.9608 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
30 31.625 m
30 29.4854 28.2646 27.75 26.125 27.75 c
23.9849 27.75 22.25 29.4854 22.25 31.625 c
22.25 33.7646 23.9849 35.5 26.125 35.5 c
28.2646 35.5 30 33.7646 30 31.625 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
23.25 24.5 m
23.25 22.4287 21.5713 20.75 19.5 20.75 c
17.4287 20.75 15.75 22.4287 15.75 24.5 c
15.75 26.5713 17.4287 28.25 19.5 28.25 c
21.5713 28.25 23.25 26.5713 23.25 24.5 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.9569 0.9294 0 0 k
 0.9569 0.9294 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
36 22.25 m
36 19.0742 33.4258 16.5 30.25 16.5 c
27.0742 16.5 24.5 19.0742 24.5 22.25 c
24.5 25.4258 27.0742 28 30.25 28 c
33.4258 28 36 25.4258 36 22.25 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1882 0.1216 0.8 0.0157 k
 0.1882 0.1216 0.8 0.0157 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
24.25 16.5 m
24.25 14.8438 22.9067 13.5 21.25 13.5 c
19.5933 13.5 18.25 14.8438 18.25 16.5 c
18.25 18.1563 19.5933 19.5 21.25 19.5 c
22.9067 19.5 24.25 18.1563 24.25 16.5 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8353 0 0 0 k
 0.8353 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
37.25 43.875 m
37.25 39.5264 33.7236 36 29.375 36 c
25.0264 36 21.5 39.5264 21.5 43.875 c
21.5 48.2236 25.0264 51.75 29.375 51.75 c
33.7236 51.75 37.25 48.2236 37.25 43.875 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0078 0.1961 0.9373 0 k
 0.0078 0.1961 0.9373 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
38.75 26.625 m
38.75 25.7275 38.0225 25 37.125 25 c
36.2275 25 35.5 25.7275 35.5 26.625 c
35.5 27.5225 36.2275 28.25 37.125 28.25 c
38.0225 28.25 38.75 27.5225 38.75 26.625 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0196 0.5961 0.9137 0 k
 0.0196 0.5961 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
19.875 42 m
19.875 41.1025 19.1475 40.375 18.25 40.375 c
17.3525 40.375 16.625 41.1025 16.625 42 c
16.625 42.8975 17.3525 43.625 18.25 43.625 c
19.1475 43.625 19.875 42.8975 19.875 42 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0118 0.9608 0.9137 0 k
 0.0118 0.9608 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
12.75 28.125 m
12.75 26.8135 11.6865 25.75 10.375 25.75 c
9.0635 25.75 8 26.8135 8 28.125 c
8 29.4365 9.0635 30.5 10.375 30.5 c
11.6865 30.5 12.75 29.4365 12.75 28.125 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.9255 0 1 0 k
 0.9255 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
43.25 33 m
43.25 30.998 41.627 29.375 39.625 29.375 c
37.623 29.375 36 30.998 36 33 c
36 35.002 37.623 36.625 39.625 36.625 c
41.627 36.625 43.25 35.002 43.25 33 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
13.25 43.75 m
13.25 40.9883 11.0117 38.75 8.25 38.75 c
5.4883 38.75 3.25 40.9883 3.25 43.75 c
3.25 46.5117 5.4883 48.75 8.25 48.75 c
11.0117 48.75 13.25 46.5117 13.25 43.75 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.3922 0.9451 0 0 k
 0.3922 0.9451 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
6.5 22.25 m
6.5 20.7314 5.2686 19.5 3.75 19.5 c
2.2314 19.5 1 20.7314 1 22.25 c
1 23.7686 2.2314 25 3.75 25 c
5.2686 25 6.5 23.7686 6.5 22.25 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0235 0.0118 0.6 0 k
 0.0235 0.0118 0.6 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
34.4883 32.75 m
34.4883 31.9277 33.8223 31.2617 33 31.2617 c
32.1777 31.2617 31.5117 31.9277 31.5117 32.75 c
31.5117 33.5723 32.1777 34.2383 33 34.2383 c
33.8223 34.2383 34.4883 33.5723 34.4883 32.75 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
49.25 43.75 m
49.25 40.9883 47.0117 38.75 44.25 38.75 c
41.4883 38.75 39.25 40.9883 39.25 43.75 c
39.25 46.5117 41.4883 48.75 44.25 48.75 c
47.0117 48.75 49.25 46.5117 49.25 43.75 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.3922 0.9451 0 0 k
 0.3922 0.9451 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
42.5 22.25 m
42.5 20.7314 41.2686 19.5 39.75 19.5 c
38.2314 19.5 37 20.7314 37 22.25 c
37 23.7686 38.2314 25 39.75 25 c
41.2686 25 42.5 23.7686 42.5 22.25 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
49.25 7.752 m
49.25 4.9902 47.0117 2.752 44.25 2.752 c
41.4883 2.752 39.25 4.9902 39.25 7.752 c
39.25 10.5137 41.4883 12.752 44.25 12.752 c
47.0117 12.752 49.25 10.5137 49.25 7.752 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8353 0 0 0 k
 0.8353 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
37.25 7.875 m
37.25 3.5264 33.7236 0 29.375 0 c
25.0264 0 21.5 3.5264 21.5 7.875 c
21.5 12.2236 25.0264 15.75 29.375 15.75 c
33.7236 15.75 37.25 12.2236 37.25 7.875 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
13.25 7.75 m
13.25 4.9883 11.0117 2.75 8.25 2.75 c
5.4883 2.75 3.25 4.9883 3.25 7.75 c
3.25 10.5117 5.4883 12.75 8.25 12.75 c
11.0117 12.75 13.25 10.5117 13.25 7.75 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.9255 0 1 0 k
 0.9255 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
7.25 33 m
7.25 30.998 5.627 29.375 3.625 29.375 c
1.623 29.375 0 30.998 0 33 c
0 35.002 1.623 36.625 3.625 36.625 c
5.627 36.625 7.25 35.002 7.25 33 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0235 0.4078 0 0 k
 0.0235 0.4078 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
39.6533 16.0381 m
39.6533 15.1064 38.8975 14.3506 37.9658 14.3506 c
37.0342 14.3506 36.2783 15.1064 36.2783 16.0381 c
36.2783 16.9697 37.0342 17.7256 37.9658 17.7256 c
38.8975 17.7256 39.6533 16.9697 39.6533 16.0381 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Pyramids)
(Pyramids) 1 1 19.5 19.5 [
%AI3_Tile
(0 O 0 R 0.1882 0.1294 0.102 0.0118 k
 0.1882 0.1294 0.102 0.0118 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
1 19.5 m
10.25 10.25 l
19.5 19.5 l
1 19.5 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6235 0.4863 0.4863 0.4784 k
 0.6235 0.4863 0.4863 0.4784 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
19.5 1 m
10.25 10.25 l
1 1 l
19.5 1 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.3529 0.2549 0.2235 0.0667 k
 0.3529 0.2549 0.2235 0.0667 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
1 1 m
10.25 10.25 l
1 19.5 l
1 1 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.4902 0.3647 0.3451 0.2196 k
 0.4902 0.3647 0.3451 0.2196 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
19.5 19.5 m
10.25 10.25 l
19.5 1 l
19.5 19.5 l
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Red Stripe)
(Red Stripe) 37 19 73 55 [
%AI3_Tile
(0 O 0 R 0 0.9608 0.9137 0 k
 0 0.9608 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 18 w 4 M []0 d
0 XR
37 37 m
73 37 l
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Red Tablecloth)
(Red Tablecloth) 0 0 24 24 [
%AI3_Tile
(0 O 0 R 0.25 1 1 0 k
 0.25 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
6 18 m
0 18 L
0 24 L
6 24 L
6 18 L
f
18 18 m
12 18 L
12 24 L
18 24 L
18 18 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1225 0.5 0.5 0 k
 0.1225 0.5 0.5 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
12 18 m
6 18 L
6 24 L
12 24 L
12 18 L
f
24 18 m
18 18 L
18 24 L
24 24 L
24 18 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
12 12 m
6 12 L
6 18 L
12 18 L
12 12 L
f
24 12 m
18 12 L
18 18 L
24 18 L
24 12 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1225 0.5 0.5 0 k
 0.1225 0.5 0.5 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
6 12 m
0 12 L
0 18 L
6 18 L
6 12 L
f
18 12 m
12 12 L
12 18 L
18 18 L
18 12 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.25 1 1 0 k
 0.25 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
6 6 m
0 6 L
0 12 L
6 12 L
6 6 L
f
18 6 m
12 6 L
12 12 L
18 12 L
18 6 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1225 0.5 0.5 0 k
 0.1225 0.5 0.5 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
12 6 m
6 6 L
6 12 L
12 12 L
12 6 L
f
24 6 m
18 6 L
18 12 L
24 12 L
24 6 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
12 0 m
6 0 L
6 6 L
12 6 L
12 0 L
f
24 0 m
18 0 L
18 6 L
24 6 L
24 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1225 0.5 0.5 0 k
 0.1225 0.5 0.5 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
6 0 m
0 0 L
0 6 L
6 6 L
6 0 L
f
18 0 m
12 0 L
12 6 L
18 6 L
18 0 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 k
([Registration]) Pc
0 0 0 0 k
(White) Pc
0 0 0 1 k
(Black) Pc
0 0 0 0.8 k
(80% Black) Pc
0 0 0 0.6 k
(60% Black) Pc
0 0 0 0.4 k
(40% Black) Pc
0 0 0 0.2 k
(20% Black) Pc
0 1 1 0 k
(Red M=100 Y=100) Pc
0 0.75 0.75 0 k
(75% Red M=75 Y=75) Pc
0 0.5 0.5 0 k
(50% Red M=50 Y=50) Pc
0 0.25 0.25 0 k
(25% Red M=25 Y=25) Pc
0.8 0 1 0 k
(Green C=80 Y=100) Pc
0.6 0 0.75 0 k
(75% Green C=60 Y=75) Pc
0.4 0 0.5 0 k
(50% Green C=40 Y=50) Pc
0.2 0 0.25 0 k
(25% Green C=20 Y=25) Pc
1 0.5 0 0 k
(Blue C=100 M=50) Pc
0.75 0.375 0 0 k
(75% Blue C=75 M=37.5) Pc
0.5 0.25 0 0 k
(50% Blue C=50 M=25) Pc
0.25 0.125 0 0 k
(25% Blue C=25 M=12.5) Pc
0 0.5 1 0 k
(Orange M=50 Y=100) Pc
0 0.375 0.75 0 k
(75% Orange M=37.5 Y=75) Pc
0 0.25 0.5 0 k
(50% Orange M=25 Y=50) Pc
0 0.125 0.25 0 k
(25% Orange M=12.5 Y=25) Pc
0.5 0.9 0 0 k
(Violet C=50 M=90) Pc
0.375 0.675 0 0 k
(75% Violet C=37.5 M=67.5) Pc
0.25 0.45 0 0 k
(50% Violet C=25 M=45 ) Pc
0.125 0.225 0 0 k
(25% Violet C=12.5 M=22.5) Pc
0.8 0 0 0 k
(Azure C=80) Pc
0.6 0 0 0 k
(75% Azure C=60) Pc
0.4 0 0 0 k
(50% Azure C=40) Pc
0.2 0 0 0 k
(25% Azure C=20) Pc
0 0 1 0 k
(Yellow) Pc
0 0 0.75 0 k
(75% Yellow) Pc
0 0 0.5 0 k
(50% Yellow) Pc
0 0 0.25 0 k
(25% Yellow) Pc
Bb
2 (White, Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(White, Black) Pc
Bb
0 0 0 0 Bh
2 (Black, White Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Black, White Radial) Pc
Bb
2 (Steel Bar II) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Steel Bar II) Pc
Bb
2 (Rainbow) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Rainbow) Pc
Bb
0 0 0 0 Bh
2 (Emerald Eye) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Emerald Eye) Pc
Bb
2 (Sunset) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Sunset) Pc
(Red Tablecloth) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Red Tablecloth) Pc
(Pyramids) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Pyramids) Pc
(Azure Rings) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Azure Rings) Pc
(Red Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Red Stripe) Pc
(Clown Attack) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Clown Attack) Pc
(Camouflage) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Camouflage) Pc
PB
%AI5_EndPalette
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
*u
300 Ar
0 R
0 G
1 J 1 j 1 w 10 M []0 d
0 XR
50.5918 208.3203 m
580.9912 208.3203 l
S
300 Ar
58.1401 208.3203 m
58.1401 214.8477 l
S
300 Ar
58.1401 208.3203 m
58.1401 221.377 l
S
300 Ar
170.5444 208.3203 m
170.5444 221.377 l
S
300 Ar
236.2319 208.3203 m
236.2319 214.8477 l
S
300 Ar
282.9487 208.3203 m
282.9487 214.8477 l
S
300 Ar
319.0557 208.3203 m
319.0557 221.377 l
S
300 Ar
348.6357 208.3203 m
348.6357 214.8477 l
S
300 Ar
373.7275 208.3203 m
373.7275 214.8477 l
S
300 Ar
395.3525 208.3203 m
395.3525 214.8477 l
S
300 Ar
414.5273 208.3203 m
414.5273 214.8477 l
S
300 Ar
431.6641 208.3203 m
431.6641 214.8477 l
S
300 Ar
431.6641 208.3203 m
431.6641 221.377 l
S
300 Ar
544.0684 208.3203 m
544.0684 221.377 l
S
300 Ar
1 D
49.9805 196.8965 m
49.5723 196.4883 l
49.9805 196.0801 l
50.3872 196.4883 l
49.9805 196.8965 l
S
300 Ar
55.2832 204.6475 m
54.0596 204.2402 l
53.2446 203.0156 l
52.8359 200.9766 l
52.8359 199.752 l
53.2446 197.7119 l
54.0596 196.4883 l
55.2832 196.0801 l
56.1001 196.0801 l
57.3237 196.4883 l
58.1401 197.7119 l
58.5488 199.752 l
58.5488 200.9766 l
58.1401 203.0156 l
57.3237 204.2402 l
56.1001 204.6475 l
55.2832 204.6475 l
54.4683 204.2402 l
54.0596 203.832 l
53.6514 203.0156 l
53.2446 200.9766 l
53.2446 199.752 l
53.6514 197.7119 l
54.0596 196.8965 l
54.4683 196.4883 l
55.2832 196.0801 l
S
300 Ar
56.1001 196.0801 m
56.917 196.4883 l
57.3237 196.8965 l
57.7319 197.7119 l
58.1401 199.752 l
58.1401 200.9766 l
57.7319 203.0156 l
57.3237 203.832 l
56.917 204.2402 l
56.1001 204.6475 l
S
300 Ar
0 D
62.2192 203.0156 m
63.0361 203.4248 l
64.2598 204.6475 l
64.2598 196.0801 l
S
300 Ar
63.8511 204.2402 m
63.8511 196.0801 l
S
300 Ar
62.2192 196.0801 m
65.8916 196.0801 l
S
300 Ar
1 D
162.3833 196.8965 m
161.9766 196.4883 l
162.3833 196.0801 l
162.7915 196.4883 l
162.3833 196.8965 l
S
300 Ar
167.6875 204.6475 m
166.4639 204.2402 l
165.6489 203.0156 l
165.2402 200.9766 l
165.2402 199.752 l
165.6489 197.7119 l
166.4639 196.4883 l
167.6875 196.0801 l
168.5044 196.0801 l
169.7275 196.4883 l
170.5444 197.7119 l
170.9512 199.752 l
170.9512 200.9766 l
170.5444 203.0156 l
169.7275 204.2402 l
168.5044 204.6475 l
167.6875 204.6475 l
166.8721 204.2402 l
166.4639 203.832 l
166.0557 203.0156 l
165.6489 200.9766 l
165.6489 199.752 l
166.0557 197.7119 l
166.4639 196.8965 l
166.8721 196.4883 l
167.6875 196.0801 l
S
300 Ar
168.5044 196.0801 m
169.3193 196.4883 l
169.7275 196.8965 l
170.1362 197.7119 l
170.5444 199.752 l
170.5444 200.9766 l
170.1362 203.0156 l
169.7275 203.832 l
169.3193 204.2402 l
168.5044 204.6475 l
S
300 Ar
0 D
173.8086 203.0156 m
174.2168 202.6084 l
173.8086 202.2002 l
173.3999 202.6084 l
173.3999 203.0156 l
173.8086 203.832 l
174.2168 204.2402 l
175.4404 204.6475 l
177.0723 204.6475 l
178.2959 204.2402 l
178.7041 203.832 l
179.1128 203.0156 l
179.1128 202.2002 l
178.7041 201.3838 l
177.4805 200.5684 l
175.4404 199.752 l
174.6235 199.3447 l
173.8086 198.5283 l
173.3999 197.3047 l
173.3999 196.0801 l
S
300 Ar
177.0723 204.6475 m
177.8872 204.2402 l
178.2959 203.832 l
178.7041 203.0156 l
178.7041 202.2002 l
178.2959 201.3838 l
177.0723 200.5684 l
175.4404 199.752 l
S
300 Ar
1 D
173.3999 196.8965 m
173.8086 197.3047 l
174.6235 197.3047 l
176.6641 196.4883 l
177.8872 196.4883 l
178.7041 196.8965 l
179.1128 197.3047 l
S
300 Ar
174.6235 197.3047 m
176.6641 196.0801 l
178.2959 196.0801 l
178.7041 196.4883 l
179.1128 197.3047 l
179.1128 198.1201 l
S
300 Ar
310.8955 196.8965 m
310.4873 196.4883 l
310.8955 196.0801 l
311.3037 196.4883 l
310.8955 196.8965 l
S
300 Ar
316.2002 204.6475 m
314.9766 204.2402 l
314.1592 203.0156 l
313.752 200.9766 l
313.752 199.752 l
314.1592 197.7119 l
314.9766 196.4883 l
316.2002 196.0801 l
317.0156 196.0801 l
318.2402 196.4883 l
319.0557 197.7119 l
319.4639 199.752 l
319.4639 200.9766 l
319.0557 203.0156 l
318.2402 204.2402 l
317.0156 204.6475 l
316.2002 204.6475 l
315.3838 204.2402 l
314.9766 203.832 l
314.5684 203.0156 l
314.1592 200.9766 l
314.1592 199.752 l
314.5684 197.7119 l
314.9766 196.8965 l
315.3838 196.4883 l
316.2002 196.0801 l
S
300 Ar
317.0156 196.0801 m
317.832 196.4883 l
318.2402 196.8965 l
318.6475 197.7119 l
319.0557 199.752 l
319.0557 200.9766 l
318.6475 203.0156 l
318.2402 203.832 l
317.832 204.2402 l
317.0156 204.6475 l
S
300 Ar
0 D
322.7275 204.6475 m
321.9121 200.5684 l
322.7275 200.9766 l
323.9521 201.3838 l
325.1768 201.3838 l
326.4004 200.9766 l
327.2158 200.1602 l
327.623 198.9365 l
327.623 198.5283 l
327.2158 197.3047 l
326.4004 196.4883 l
325.1768 196.0801 l
323.9521 196.0801 l
322.7275 196.4883 l
322.3203 196.8965 l
321.9121 197.7119 l
321.9121 198.1201 l
322.3203 198.5283 l
322.7275 198.1201 l
322.3203 197.7119 l
S
300 Ar
325.1768 201.3838 m
325.9912 200.9766 l
326.8086 200.1602 l
327.2158 198.9365 l
327.2158 198.5283 l
326.8086 197.3047 l
325.9912 196.4883 l
325.1768 196.0801 l
S
300 Ar
322.7275 204.6475 m
326.8086 204.6475 l
S
300 Ar
1 D
322.7275 204.2402 m
324.7676 204.2402 l
326.8086 204.6475 l
S
300 Ar
427.584 196.8965 m
427.1768 196.4883 l
427.584 196.0801 l
427.9912 196.4883 l
427.584 196.8965 l
S
300 Ar
0 D
431.6641 203.0156 m
432.4795 203.4248 l
433.7041 204.6475 l
433.7041 196.0801 l
S
300 Ar
433.2959 204.2402 m
433.2959 196.0801 l
S
300 Ar
431.6641 196.0801 m
435.3359 196.0801 l
S
300 Ar
1 D
539.9873 196.8965 m
539.5801 196.4883 l
539.9873 196.0801 l
540.3955 196.4883 l
539.9873 196.8965 l
S
300 Ar
0 D
543.252 203.0156 m
543.6592 202.6084 l
543.252 202.2002 l
542.8447 202.6084 l
542.8447 203.0156 l
543.252 203.832 l
543.6592 204.2402 l
544.8838 204.6475 l
546.5156 204.6475 l
547.7402 204.2402 l
548.1475 203.832 l
548.5557 203.0156 l
548.5557 202.2002 l
548.1475 201.3838 l
546.9238 200.5684 l
544.8838 199.752 l
544.0684 199.3447 l
543.252 198.5283 l
542.8447 197.3047 l
542.8447 196.0801 l
S
300 Ar
546.5156 204.6475 m
547.332 204.2402 l
547.7402 203.832 l
548.1475 203.0156 l
548.1475 202.2002 l
547.7402 201.3838 l
546.5156 200.5684 l
544.8838 199.752 l
S
300 Ar
1 D
542.8447 196.8965 m
543.252 197.3047 l
544.0684 197.3047 l
546.1084 196.4883 l
547.332 196.4883 l
548.1475 196.8965 l
548.5557 197.3047 l
S
300 Ar
544.0684 197.3047 m
546.1084 196.0801 l
547.7402 196.0801 l
548.1475 196.4883 l
548.5557 197.3047 l
548.5557 198.1201 l
S
300 Ar
0 D
50.5918 595.9204 m
580.9912 595.9204 l
S
300 Ar
58.1401 595.9204 m
58.1401 589.3921 l
S
300 Ar
58.1401 595.9204 m
58.1401 582.8643 l
S
300 Ar
170.5444 595.9204 m
170.5444 582.8643 l
S
300 Ar
236.2319 595.9204 m
236.2319 589.3921 l
S
300 Ar
282.9487 595.9204 m
282.9487 589.3921 l
S
300 Ar
319.0557 595.9204 m
319.0557 582.8643 l
S
300 Ar
348.6357 595.9204 m
348.6357 589.3921 l
S
300 Ar
373.7275 595.9204 m
373.7275 589.3921 l
S
300 Ar
395.3525 595.9204 m
395.3525 589.3921 l
S
300 Ar
414.5273 595.9204 m
414.5273 589.3921 l
S
300 Ar
431.6641 595.9204 m
431.6641 589.3921 l
S
300 Ar
431.6641 595.9204 m
431.6641 582.8643 l
S
300 Ar
544.0684 595.9204 m
544.0684 582.8643 l
S
300 Ar
50.5918 208.3203 m
50.5918 595.9204 l
S
300 Ar
50.5918 208.3203 m
57.1191 208.3203 l
S
300 Ar
50.5918 232.5957 m
57.1191 232.5957 l
S
300 Ar
50.5918 256.8721 m
63.6489 256.8721 l
S
300 Ar
50.5918 280.9443 m
57.1191 280.9443 l
S
300 Ar
50.5918 305.2197 m
57.1191 305.2197 l
S
300 Ar
50.5918 329.4961 m
57.1191 329.4961 l
S
300 Ar
50.5918 353.7725 m
63.6489 353.7725 l
S
300 Ar
50.5918 377.8447 m
57.1191 377.8447 l
S
300 Ar
50.5918 402.1201 m
57.1191 402.1201 l
S
300 Ar
50.5918 426.396 m
57.1191 426.396 l
S
300 Ar
50.5918 450.4683 m
63.6489 450.4683 l
S
300 Ar
50.5918 474.7441 m
57.1191 474.7441 l
S
300 Ar
50.5918 499.02 m
57.1191 499.02 l
S
300 Ar
50.5918 523.2964 m
57.1191 523.2964 l
S
300 Ar
50.5918 547.3682 m
63.6489 547.3682 l
S
300 Ar
50.5918 571.644 m
57.1191 571.644 l
S
300 Ar
50.5918 595.9204 m
57.1191 595.9204 l
S
300 Ar
31.8237 260.5449 m
32.2319 260.1357 l
31.8237 259.7285 l
31.417 260.1357 l
31.417 260.5449 l
32.2319 261.3604 l
33.4556 261.7686 l
35.0874 261.7686 l
36.3125 261.3604 l
36.7192 260.5449 l
36.7192 259.3203 l
36.3125 258.5039 l
35.0874 258.0957 l
33.8638 258.0957 l
S
300 Ar
35.0874 261.7686 m
35.9043 261.3604 l
36.3125 260.5449 l
36.3125 259.3203 l
35.9043 258.5039 l
35.0874 258.0957 l
35.9043 257.6885 l
36.7192 256.8721 l
37.1279 256.0566 l
37.1279 254.832 l
36.7192 254.0156 l
36.3125 253.6084 l
35.0874 253.2002 l
33.4556 253.2002 l
32.2319 253.6084 l
31.8237 254.0156 l
31.417 254.832 l
31.417 255.2402 l
31.8237 255.6475 l
32.2319 255.2402 l
31.8237 254.832 l
S
300 Ar
36.3125 257.2803 m
36.7192 256.0566 l
36.7192 254.832 l
36.3125 254.0156 l
35.9043 253.6084 l
35.0874 253.2002 l
S
300 Ar
43.2485 260.9521 m
43.2485 253.2002 l
S
300 Ar
43.6553 261.7686 m
43.6553 253.2002 l
S
300 Ar
1 D
43.6553 261.7686 m
39.168 255.6475 l
45.6958 255.6475 l
S
300 Ar
0 D
42.0234 253.2002 m
44.8809 253.2002 l
S
300 Ar
31.8237 357.4443 m
32.2319 357.0361 l
31.8237 356.6289 l
31.417 357.0361 l
31.417 357.4443 l
32.2319 358.2607 l
33.4556 358.668 l
35.0874 358.668 l
36.3125 358.2607 l
36.7192 357.4443 l
36.7192 356.2197 l
36.3125 355.4043 l
35.0874 354.9961 l
33.8638 354.9961 l
S
300 Ar
35.0874 358.668 m
35.9043 358.2607 l
36.3125 357.4443 l
36.3125 356.2197 l
35.9043 355.4043 l
35.0874 354.9961 l
35.9043 354.5879 l
36.7192 353.7725 l
37.1279 352.9561 l
37.1279 351.7324 l
36.7192 350.916 l
36.3125 350.5088 l
35.0874 350.0996 l
33.4556 350.0996 l
32.2319 350.5088 l
31.8237 350.916 l
31.417 351.7324 l
31.417 352.1406 l
31.8237 352.5479 l
32.2319 352.1406 l
31.8237 351.7324 l
S
300 Ar
36.3125 354.1797 m
36.7192 352.9561 l
36.7192 351.7324 l
36.3125 350.916 l
35.9043 350.5088 l
35.0874 350.0996 l
S
300 Ar
1 D
44.4722 357.4443 m
44.064 357.0361 l
44.4722 356.6289 l
44.8809 357.0361 l
44.8809 357.4443 l
44.4722 358.2607 l
43.6553 358.668 l
42.4321 358.668 l
41.2085 358.2607 l
40.3916 357.4443 l
39.9834 356.6289 l
39.5767 354.9961 l
39.5767 352.5479 l
39.9834 351.3242 l
40.7998 350.5088 l
42.0234 350.0996 l
42.8403 350.0996 l
44.064 350.5088 l
44.8809 351.3242 l
45.2876 352.5479 l
45.2876 352.9561 l
44.8809 354.1797 l
44.064 354.9961 l
42.8403 355.4043 l
42.4321 355.4043 l
41.2085 354.9961 l
40.3916 354.1797 l
39.9834 352.9561 l
S
300 Ar
42.4321 358.668 m
41.6167 358.2607 l
40.7998 357.4443 l
40.3916 356.6289 l
39.9834 354.9961 l
39.9834 352.5479 l
40.3916 351.3242 l
41.2085 350.5088 l
42.0234 350.0996 l
S
300 Ar
42.8403 350.0996 m
43.6553 350.5088 l
44.4722 351.3242 l
44.8809 352.5479 l
44.8809 352.9561 l
44.4722 354.1797 l
43.6553 354.9961 l
42.8403 355.4043 l
S
300 Ar
0 D
31.8237 454.1401 m
32.2319 453.7324 l
31.8237 453.3242 l
31.417 453.7324 l
31.417 454.1401 l
32.2319 454.9565 l
33.4556 455.3643 l
35.0874 455.3643 l
36.3125 454.9565 l
36.7192 454.1401 l
36.7192 452.916 l
36.3125 452.1001 l
35.0874 451.6919 l
33.8638 451.6919 l
S
300 Ar
35.0874 455.3643 m
35.9043 454.9565 l
36.3125 454.1401 l
36.3125 452.916 l
35.9043 452.1001 l
35.0874 451.6919 l
35.9043 451.2842 l
36.7192 450.4683 l
37.1279 449.6523 l
37.1279 448.4282 l
36.7192 447.6123 l
36.3125 447.2041 l
35.0874 446.7964 l
33.4556 446.7964 l
32.2319 447.2041 l
31.8237 447.6123 l
31.417 448.4282 l
31.417 448.8359 l
31.8237 449.2441 l
32.2319 448.8359 l
31.8237 448.4282 l
S
300 Ar
36.3125 450.876 m
36.7192 449.6523 l
36.7192 448.4282 l
36.3125 447.6123 l
35.9043 447.2041 l
35.0874 446.7964 l
S
300 Ar
1 D
41.6167 455.3643 m
40.3916 454.9565 l
39.9834 454.1401 l
39.9834 452.916 l
40.3916 452.1001 l
41.6167 451.6919 l
43.2485 451.6919 l
44.4722 452.1001 l
44.8809 452.916 l
44.8809 454.1401 l
44.4722 454.9565 l
43.2485 455.3643 l
41.6167 455.3643 l
40.7998 454.9565 l
40.3916 454.1401 l
40.3916 452.916 l
40.7998 452.1001 l
41.6167 451.6919 l
S
300 Ar
43.2485 451.6919 m
44.064 452.1001 l
44.4722 452.916 l
44.4722 454.1401 l
44.064 454.9565 l
43.2485 455.3643 l
S
300 Ar
41.6167 451.6919 m
40.3916 451.2842 l
39.9834 450.876 l
39.5767 450.0601 l
39.5767 448.4282 l
39.9834 447.6123 l
40.3916 447.2041 l
41.6167 446.7964 l
43.2485 446.7964 l
44.4722 447.2041 l
44.8809 447.6123 l
45.2876 448.4282 l
45.2876 450.0601 l
44.8809 450.876 l
44.4722 451.2842 l
43.2485 451.6919 l
S
300 Ar
41.6167 451.6919 m
40.7998 451.2842 l
40.3916 450.876 l
39.9834 450.0601 l
39.9834 448.4282 l
40.3916 447.6123 l
40.7998 447.2041 l
41.6167 446.7964 l
S
300 Ar
43.2485 446.7964 m
44.064 447.2041 l
44.4722 447.6123 l
44.8809 448.4282 l
44.8809 450.0601 l
44.4722 450.876 l
44.064 451.2842 l
43.2485 451.6919 l
S
300 Ar
0 D
35.0874 551.4482 m
35.0874 543.6963 l
S
300 Ar
35.4956 552.2642 m
35.4956 543.6963 l
S
300 Ar
1 D
35.4956 552.2642 m
31.0083 546.144 l
37.5361 546.144 l
S
300 Ar
0 D
33.8638 543.6963 m
36.7192 543.6963 l
S
300 Ar
1 D
42.0234 552.2642 m
40.7998 551.8564 l
39.9834 550.6323 l
39.5767 548.5918 l
39.5767 547.3682 l
39.9834 545.3281 l
40.7998 544.104 l
42.0234 543.6963 l
42.8403 543.6963 l
44.064 544.104 l
44.8809 545.3281 l
45.2876 547.3682 l
45.2876 548.5918 l
44.8809 550.6323 l
44.064 551.8564 l
42.8403 552.2642 l
42.0234 552.2642 l
41.2085 551.8564 l
40.7998 551.4482 l
40.3916 550.6323 l
39.9834 548.5918 l
39.9834 547.3682 l
40.3916 545.3281 l
40.7998 544.5122 l
41.2085 544.104 l
42.0234 543.6963 l
S
300 Ar
42.8403 543.6963 m
43.6553 544.104 l
44.064 544.5122 l
44.4722 545.3281 l
44.8809 547.3682 l
44.8809 548.5918 l
44.4722 550.6323 l
44.064 551.4482 l
43.6553 551.8564 l
42.8403 552.2642 l
S
300 Ar
0 D
580.9912 208.3203 m
580.9912 595.9204 l
S
300 Ar
580.9912 208.3203 m
574.4639 208.3203 l
S
300 Ar
580.9912 232.5957 m
574.4639 232.5957 l
S
300 Ar
580.9912 256.8721 m
567.9365 256.8721 l
S
300 Ar
580.9912 280.9443 m
574.4639 280.9443 l
S
300 Ar
580.9912 305.2197 m
574.4639 305.2197 l
S
300 Ar
580.9912 329.4961 m
574.4639 329.4961 l
S
300 Ar
580.9912 353.7725 m
567.9365 353.7725 l
S
300 Ar
580.9912 377.8447 m
574.4639 377.8447 l
S
300 Ar
580.9912 402.1201 m
574.4639 402.1201 l
S
300 Ar
580.9912 426.396 m
574.4639 426.396 l
S
300 Ar
580.9912 450.4683 m
567.9365 450.4683 l
S
300 Ar
580.9912 474.7441 m
574.4639 474.7441 l
S
300 Ar
580.9912 499.02 m
574.4639 499.02 l
S
300 Ar
580.9912 523.2964 m
574.4639 523.2964 l
S
300 Ar
580.9912 547.3682 m
567.9365 547.3682 l
S
300 Ar
580.9912 571.644 m
574.4639 571.644 l
S
300 Ar
580.9912 595.9204 m
574.4639 595.9204 l
S
300 Ar
219.9126 328.6797 m
218.2808 328.6797 l
S
300 Ar
220.3193 328.8838 m
217.8721 328.8838 l
S
300 Ar
220.7275 329.0879 m
217.4639 329.0879 l
S
300 Ar
220.9321 329.292 m
217.2598 329.292 l
S
300 Ar
220.9321 329.4961 m
217.2598 329.4961 l
S
300 Ar
221.1362 329.7002 m
217.0557 329.7002 l
S
300 Ar
221.1362 329.9043 m
217.0557 329.9043 l
S
300 Ar
221.3403 330.1084 m
216.8511 330.1084 l
S
300 Ar
221.5444 330.3115 m
216.6489 330.3115 l
S
300 Ar
221.5444 330.5156 m
216.6489 330.5156 l
S
300 Ar
221.5444 330.7197 m
216.6489 330.7197 l
S
300 Ar
221.5444 330.9248 m
216.6489 330.9248 l
S
300 Ar
221.5444 331.1289 m
216.6489 331.1289 l
S
300 Ar
221.5444 331.332 m
216.6489 331.332 l
S
300 Ar
221.5444 331.5361 m
216.6489 331.5361 l
S
300 Ar
221.3403 331.7402 m
216.8511 331.7402 l
S
300 Ar
221.1362 331.9443 m
217.0557 331.9443 l
S
300 Ar
221.1362 332.1475 m
217.0557 332.1475 l
S
300 Ar
220.9321 332.3525 m
217.2598 332.3525 l
S
300 Ar
220.9321 332.5566 m
217.2598 332.5566 l
S
300 Ar
220.7275 332.7607 m
217.4639 332.7607 l
S
300 Ar
220.3193 332.9639 m
217.8721 332.9639 l
S
300 Ar
219.9126 333.168 m
218.2808 333.168 l
S
300 Ar
145.0444 278.7002 m
143.4126 278.7002 l
S
300 Ar
145.4512 278.9043 m
143.0044 278.9043 l
S
300 Ar
145.8599 279.1084 m
142.5957 279.1084 l
S
300 Ar
146.064 279.3115 m
142.3916 279.3115 l
S
300 Ar
146.064 279.5156 m
142.3916 279.5156 l
S
300 Ar
146.2681 279.7197 m
142.1875 279.7197 l
S
300 Ar
146.2681 279.9248 m
142.1875 279.9248 l
S
300 Ar
146.4722 280.1289 m
141.9834 280.1289 l
S
300 Ar
146.6763 280.332 m
141.7808 280.332 l
S
300 Ar
146.6763 280.5361 m
141.7808 280.5361 l
S
300 Ar
146.6763 280.7402 m
141.7808 280.7402 l
S
300 Ar
146.6763 280.9443 m
141.7808 280.9443 l
S
300 Ar
146.6763 281.1475 m
141.7808 281.1475 l
S
300 Ar
146.6763 281.3525 m
141.7808 281.3525 l
S
300 Ar
146.6763 281.5566 m
141.7808 281.5566 l
S
300 Ar
146.4722 281.7607 m
141.9834 281.7607 l
S
300 Ar
146.2681 281.9639 m
142.1875 281.9639 l
S
300 Ar
146.2681 282.168 m
142.1875 282.168 l
S
300 Ar
146.064 282.3721 m
142.3916 282.3721 l
S
300 Ar
146.064 282.5762 m
142.3916 282.5762 l
S
300 Ar
145.8599 282.7803 m
142.5957 282.7803 l
S
300 Ar
145.4512 282.9844 m
143.0044 282.9844 l
S
300 Ar
145.0444 283.1885 m
143.4126 283.1885 l
S
300 Ar
266.6279 382.9443 m
264.9956 382.9443 l
S
300 Ar
267.0361 383.1475 m
264.5874 383.1475 l
S
300 Ar
267.4443 383.3525 m
264.1807 383.3525 l
S
300 Ar
267.6489 383.5566 m
263.9766 383.5566 l
S
300 Ar
267.6489 383.7607 m
263.9766 383.7607 l
S
300 Ar
267.8511 383.9639 m
263.7725 383.9639 l
S
300 Ar
267.8511 384.168 m
263.7725 384.168 l
S
300 Ar
268.0557 384.3721 m
263.5679 384.3721 l
S
300 Ar
268.2598 384.5762 m
263.3638 384.5762 l
S
300 Ar
268.2598 384.7803 m
263.3638 384.7803 l
S
300 Ar
268.2598 384.9844 m
263.3638 384.9844 l
S
300 Ar
268.2598 385.1885 m
263.3638 385.1885 l
S
300 Ar
268.2598 385.3926 m
263.3638 385.3926 l
S
300 Ar
268.2598 385.5957 m
263.3638 385.5957 l
S
300 Ar
268.2598 385.7998 m
263.3638 385.7998 l
S
300 Ar
268.0557 386.0039 m
263.5679 386.0039 l
S
300 Ar
267.8511 386.208 m
263.7725 386.208 l
S
300 Ar
267.8511 386.4121 m
263.7725 386.4121 l
S
300 Ar
267.6489 386.6162 m
263.9766 386.6162 l
S
300 Ar
267.6489 386.8203 m
263.9766 386.8203 l
S
300 Ar
267.4443 387.0244 m
264.1807 387.0244 l
S
300 Ar
267.0361 387.2285 m
264.5874 387.2285 l
S
300 Ar
266.6279 387.4316 m
264.9956 387.4316 l
S
300 Ar
319.8721 389.2686 m
318.2402 389.2686 l
S
300 Ar
320.2803 389.4727 m
317.832 389.4727 l
S
300 Ar
320.6875 389.6768 m
317.4238 389.6768 l
S
300 Ar
320.8916 389.8799 m
317.2197 389.8799 l
S
300 Ar
320.8916 390.084 m
317.2197 390.084 l
S
300 Ar
321.0957 390.2881 m
317.0156 390.2881 l
S
300 Ar
321.0957 390.4922 m
317.0156 390.4922 l
S
300 Ar
321.2998 390.6963 m
316.8125 390.6963 l
S
300 Ar
321.5039 390.9004 m
316.6084 390.9004 l
S
300 Ar
321.5039 391.1045 m
316.6084 391.1045 l
S
300 Ar
321.5039 391.3086 m
316.6084 391.3086 l
S
*U
*u
300 Ar
321.5039 391.5117 m
316.6084 391.5117 l
S
300 Ar
321.5039 391.7158 m
316.6084 391.7158 l
S
300 Ar
321.5039 391.9199 m
316.6084 391.9199 l
S
300 Ar
321.5039 392.124 m
316.6084 392.124 l
S
300 Ar
321.2998 392.3281 m
316.8125 392.3281 l
S
300 Ar
321.0957 392.5322 m
317.0156 392.5322 l
S
300 Ar
321.0957 392.7363 m
317.0156 392.7363 l
S
300 Ar
320.8916 392.9404 m
317.2197 392.9404 l
S
300 Ar
320.8916 393.1445 m
317.2197 393.1445 l
S
300 Ar
320.6875 393.3477 m
317.4238 393.3477 l
S
300 Ar
320.2803 393.5518 m
317.832 393.5518 l
S
300 Ar
319.8721 393.7559 m
318.2402 393.7559 l
S
300 Ar
237.0488 352.3447 m
235.417 352.3447 l
S
300 Ar
237.4556 352.5479 m
235.0083 352.5479 l
S
300 Ar
237.8638 352.752 m
234.6001 352.752 l
S
300 Ar
238.0679 352.9561 m
234.396 352.9561 l
S
300 Ar
238.0679 353.1602 m
234.396 353.1602 l
S
300 Ar
238.2725 353.3643 m
234.1914 353.3643 l
S
300 Ar
238.2725 353.5684 m
234.1914 353.5684 l
S
300 Ar
238.4766 353.7725 m
233.9873 353.7725 l
S
300 Ar
238.6807 353.9766 m
233.7832 353.9766 l
S
300 Ar
238.6807 354.1797 m
233.7832 354.1797 l
S
300 Ar
238.6807 354.3838 m
233.7832 354.3838 l
S
300 Ar
238.6807 354.5879 m
233.7832 354.5879 l
S
300 Ar
238.6807 354.792 m
233.7832 354.792 l
S
300 Ar
238.6807 354.9961 m
233.7832 354.9961 l
S
300 Ar
238.6807 355.2002 m
233.7832 355.2002 l
S
300 Ar
238.4766 355.4043 m
233.9873 355.4043 l
S
300 Ar
238.2725 355.6084 m
234.1914 355.6084 l
S
300 Ar
238.2725 355.8115 m
234.1914 355.8115 l
S
300 Ar
238.0679 356.0156 m
234.396 356.0156 l
S
300 Ar
238.0679 356.2197 m
234.396 356.2197 l
S
300 Ar
237.8638 356.4248 m
234.6001 356.4248 l
S
300 Ar
237.4556 356.6289 m
235.0083 356.6289 l
S
300 Ar
237.0488 356.832 m
235.417 356.832 l
S
300 Ar
283.7637 374.5801 m
282.1318 374.5801 l
S
300 Ar
284.1724 374.7842 m
281.7236 374.7842 l
S
300 Ar
284.5806 374.9883 m
281.3169 374.9883 l
S
300 Ar
284.7832 375.1924 m
281.1128 375.1924 l
S
300 Ar
284.7832 375.3955 m
281.1128 375.3955 l
S
300 Ar
284.9873 375.5996 m
280.9082 375.5996 l
S
300 Ar
284.9873 375.8047 m
280.9082 375.8047 l
S
300 Ar
285.1914 376.0088 m
280.7041 376.0088 l
S
300 Ar
285.396 376.2119 m
280.5 376.2119 l
S
300 Ar
285.396 376.416 m
280.5 376.416 l
S
300 Ar
285.396 376.6201 m
280.5 376.6201 l
S
300 Ar
285.396 376.8242 m
280.5 376.8242 l
S
300 Ar
285.396 377.0283 m
280.5 377.0283 l
S
300 Ar
285.396 377.2324 m
280.5 377.2324 l
S
300 Ar
285.396 377.4365 m
280.5 377.4365 l
S
300 Ar
285.1914 377.6406 m
280.7041 377.6406 l
S
300 Ar
284.9873 377.8447 m
280.9082 377.8447 l
S
300 Ar
284.9873 378.0479 m
280.9082 378.0479 l
S
300 Ar
284.7832 378.252 m
281.1128 378.252 l
S
300 Ar
284.7832 378.4561 m
281.1128 378.4561 l
S
300 Ar
284.5806 378.6602 m
281.3169 378.6602 l
S
300 Ar
284.1724 378.8643 m
281.7236 378.8643 l
S
300 Ar
283.7637 379.0684 m
282.1318 379.0684 l
S
300 Ar
279.6831 346.6318 m
278.0513 346.6318 l
S
300 Ar
280.0918 346.8359 m
277.6445 346.8359 l
S
300 Ar
280.5 347.04 m
277.2363 347.04 l
S
300 Ar
280.7041 347.2441 m
277.0317 347.2441 l
S
300 Ar
280.7041 347.4482 m
277.0317 347.4482 l
S
300 Ar
280.9082 347.6523 m
276.8276 347.6523 l
S
300 Ar
280.9082 347.8564 m
276.8276 347.8564 l
S
300 Ar
281.1128 348.0605 m
276.6235 348.0605 l
S
300 Ar
281.3169 348.2637 m
276.4194 348.2637 l
S
300 Ar
281.3169 348.4678 m
276.4194 348.4678 l
S
300 Ar
281.3169 348.6719 m
276.4194 348.6719 l
S
300 Ar
281.3169 348.877 m
276.4194 348.877 l
S
300 Ar
281.3169 349.0801 m
276.4194 349.0801 l
S
300 Ar
281.3169 349.2842 m
276.4194 349.2842 l
S
300 Ar
281.3169 349.4883 m
276.4194 349.4883 l
S
300 Ar
281.1128 349.6924 m
276.6235 349.6924 l
S
300 Ar
280.9082 349.8955 m
276.8276 349.8955 l
S
300 Ar
280.9082 350.0996 m
276.8276 350.0996 l
S
300 Ar
280.7041 350.3047 m
277.0317 350.3047 l
S
300 Ar
280.7041 350.5088 m
277.0317 350.5088 l
S
300 Ar
280.5 350.7119 m
277.2363 350.7119 l
S
300 Ar
280.0918 350.916 m
277.6445 350.916 l
S
300 Ar
279.6831 351.1201 m
278.0513 351.1201 l
S
300 Ar
113.4233 261.3604 m
111.7915 261.3604 l
S
300 Ar
113.832 261.5635 m
111.3833 261.5635 l
S
300 Ar
114.2402 261.7686 m
110.9766 261.7686 l
S
300 Ar
114.4443 261.9727 m
110.7725 261.9727 l
S
300 Ar
114.4443 262.1768 m
110.7725 262.1768 l
S
300 Ar
114.6489 262.3799 m
110.5679 262.3799 l
S
300 Ar
114.6489 262.584 m
110.5679 262.584 l
S
300 Ar
114.8511 262.7881 m
110.3638 262.7881 l
S
300 Ar
115.0557 262.9922 m
110.1597 262.9922 l
S
300 Ar
115.0557 263.1963 m
110.1597 263.1963 l
S
300 Ar
115.0557 263.4004 m
110.1597 263.4004 l
S
300 Ar
115.0557 263.6045 m
110.1597 263.6045 l
S
300 Ar
115.0557 263.8086 m
110.1597 263.8086 l
S
300 Ar
115.0557 264.0117 m
110.1597 264.0117 l
S
300 Ar
115.0557 264.2158 m
110.1597 264.2158 l
S
300 Ar
114.8511 264.4199 m
110.3638 264.4199 l
S
300 Ar
114.6489 264.624 m
110.5679 264.624 l
S
300 Ar
114.6489 264.8281 m
110.5679 264.8281 l
S
300 Ar
114.4443 265.0322 m
110.7725 265.0322 l
S
300 Ar
114.4443 265.2363 m
110.7725 265.2363 l
S
300 Ar
114.2402 265.4404 m
110.9766 265.4404 l
S
300 Ar
113.832 265.6445 m
111.3833 265.6445 l
S
300 Ar
113.4233 265.8477 m
111.7915 265.8477 l
S
300 Ar
338.4365 410.4839 m
336.8037 410.4839 l
S
300 Ar
338.8447 410.6885 m
336.3955 410.6885 l
S
300 Ar
339.252 410.8921 m
335.9873 410.8921 l
S
300 Ar
339.4551 411.0962 m
335.7842 411.0962 l
S
300 Ar
339.4551 411.2998 m
335.7842 411.2998 l
S
300 Ar
339.6592 411.5044 m
335.5801 411.5044 l
S
300 Ar
339.6592 411.7085 m
335.5801 411.7085 l
S
300 Ar
339.8643 411.9121 m
335.376 411.9121 l
S
300 Ar
340.0684 412.1162 m
335.1719 412.1162 l
S
300 Ar
340.0684 412.3203 m
335.1719 412.3203 l
S
300 Ar
340.0684 412.5244 m
335.1719 412.5244 l
S
300 Ar
340.0684 412.728 m
335.1719 412.728 l
S
300 Ar
340.0684 412.9321 m
335.1719 412.9321 l
S
300 Ar
340.0684 413.1362 m
335.1719 413.1362 l
S
300 Ar
340.0684 413.3403 m
335.1719 413.3403 l
S
300 Ar
339.8643 413.5439 m
335.376 413.5439 l
S
300 Ar
339.6592 413.7485 m
335.5801 413.7485 l
S
300 Ar
339.6592 413.9521 m
335.5801 413.9521 l
S
300 Ar
339.4551 414.1563 m
335.7842 414.1563 l
S
300 Ar
339.4551 414.3599 m
335.7842 414.3599 l
S
300 Ar
339.252 414.5645 m
335.9873 414.5645 l
S
300 Ar
338.8447 414.7681 m
336.3955 414.7681 l
S
300 Ar
338.4365 414.9722 m
336.8037 414.9722 l
S
300 Ar
252.5513 347.04 m
250.9194 347.04 l
S
300 Ar
252.9595 347.2441 m
250.5127 347.2441 l
S
300 Ar
253.3682 347.4482 m
250.104 347.4482 l
S
300 Ar
253.5723 347.6523 m
249.8999 347.6523 l
S
300 Ar
253.5723 347.8564 m
249.8999 347.8564 l
S
300 Ar
253.7764 348.0605 m
249.6958 348.0605 l
S
300 Ar
253.7764 348.2637 m
249.6958 348.2637 l
S
300 Ar
253.9805 348.4678 m
249.4917 348.4678 l
S
300 Ar
254.1831 348.6719 m
249.2876 348.6719 l
S
300 Ar
254.1831 348.877 m
249.2876 348.877 l
S
300 Ar
254.1831 349.0801 m
249.2876 349.0801 l
S
300 Ar
254.1831 349.2842 m
249.2876 349.2842 l
S
300 Ar
254.1831 349.4883 m
249.2876 349.4883 l
S
300 Ar
254.1831 349.6924 m
249.2876 349.6924 l
S
300 Ar
254.1831 349.8955 m
249.2876 349.8955 l
S
300 Ar
253.9805 350.0996 m
249.4917 350.0996 l
S
300 Ar
253.7764 350.3047 m
249.6958 350.3047 l
S
300 Ar
253.7764 350.5088 m
249.6958 350.5088 l
S
300 Ar
253.5723 350.7119 m
249.8999 350.7119 l
S
300 Ar
253.5723 350.916 m
249.8999 350.916 l
S
300 Ar
253.3682 351.1201 m
250.104 351.1201 l
S
300 Ar
252.9595 351.3242 m
250.5127 351.3242 l
S
300 Ar
252.5513 351.5283 m
250.9194 351.5283 l
S
300 Ar
385.7637 430.8843 m
384.1318 430.8843 l
S
300 Ar
386.1719 431.0884 m
383.7236 431.0884 l
S
300 Ar
386.5801 431.292 m
383.3164 431.292 l
S
300 Ar
386.7842 431.4961 m
383.1123 431.4961 l
S
300 Ar
386.7842 431.7002 m
383.1123 431.7002 l
S
300 Ar
386.9873 431.9043 m
382.9082 431.9043 l
S
300 Ar
386.9873 432.1084 m
382.9082 432.1084 l
S
300 Ar
387.1914 432.312 m
382.7041 432.312 l
S
300 Ar
387.3955 432.5161 m
382.5 432.5161 l
S
300 Ar
387.3955 432.7202 m
382.5 432.7202 l
S
300 Ar
387.3955 432.9243 m
382.5 432.9243 l
S
300 Ar
387.3955 433.1279 m
382.5 433.1279 l
S
300 Ar
387.3955 433.3325 m
382.5 433.3325 l
S
300 Ar
387.3955 433.5361 m
382.5 433.5361 l
S
300 Ar
387.3955 433.7402 m
382.5 433.7402 l
S
300 Ar
387.1914 433.9443 m
382.7041 433.9443 l
S
300 Ar
386.9873 434.1484 m
382.9082 434.1484 l
S
300 Ar
386.9873 434.3521 m
382.9082 434.3521 l
S
300 Ar
386.7842 434.5562 m
383.1123 434.5562 l
S
300 Ar
386.7842 434.7603 m
383.1123 434.7603 l
S
300 Ar
386.5801 434.9644 m
383.3164 434.9644 l
S
300 Ar
386.1719 435.168 m
383.7236 435.168 l
S
300 Ar
385.7637 435.3721 m
384.1318 435.3721 l
S
300 Ar
213.7915 317.0518 m
212.1597 317.0518 l
S
300 Ar
214.2002 317.2559 m
211.7515 317.2559 l
S
300 Ar
214.6084 317.4609 m
211.3447 317.4609 l
S
300 Ar
214.8125 317.6641 m
211.1401 317.6641 l
S
300 Ar
214.8125 317.8682 m
211.1401 317.8682 l
S
300 Ar
215.0166 318.0723 m
210.936 318.0723 l
S
300 Ar
215.0166 318.2764 m
210.936 318.2764 l
S
300 Ar
215.2192 318.4795 m
210.7319 318.4795 l
S
300 Ar
215.4233 318.6836 m
210.5278 318.6836 l
S
300 Ar
215.4233 318.8887 m
210.5278 318.8887 l
S
300 Ar
215.4233 319.0928 m
210.5278 319.0928 l
S
300 Ar
215.4233 319.2959 m
210.5278 319.2959 l
S
300 Ar
215.4233 319.5 m
210.5278 319.5 l
S
300 Ar
215.4233 319.7041 m
210.5278 319.7041 l
S
300 Ar
215.4233 319.9082 m
210.5278 319.9082 l
S
300 Ar
215.2192 320.1113 m
210.7319 320.1113 l
S
300 Ar
215.0166 320.3164 m
210.936 320.3164 l
S
300 Ar
215.0166 320.5205 m
210.936 320.5205 l
S
300 Ar
214.8125 320.7246 m
211.1401 320.7246 l
S
300 Ar
214.8125 320.9287 m
211.1401 320.9287 l
S
300 Ar
214.6084 321.1318 m
211.3447 321.1318 l
S
300 Ar
214.2002 321.3359 m
211.7515 321.3359 l
S
300 Ar
213.7915 321.54 m
212.1597 321.54 l
S
300 Ar
113.4233 264.2158 m
111.7915 264.2158 l
S
300 Ar
113.832 264.4199 m
111.3833 264.4199 l
S
300 Ar
114.2402 264.624 m
110.9766 264.624 l
S
300 Ar
114.4443 264.8281 m
110.7725 264.8281 l
S
*U
*u
300 Ar
114.4443 265.0322 m
110.7725 265.0322 l
S
300 Ar
114.6489 265.2363 m
110.5679 265.2363 l
S
300 Ar
114.6489 265.4404 m
110.5679 265.4404 l
S
300 Ar
114.8511 265.6445 m
110.3638 265.6445 l
S
300 Ar
115.0557 265.8477 m
110.1597 265.8477 l
S
300 Ar
115.0557 266.0518 m
110.1597 266.0518 l
S
300 Ar
115.0557 266.2559 m
110.1597 266.2559 l
S
300 Ar
115.0557 266.4609 m
110.1597 266.4609 l
S
300 Ar
115.0557 266.6641 m
110.1597 266.6641 l
S
300 Ar
115.0557 266.8682 m
110.1597 266.8682 l
S
300 Ar
115.0557 267.0723 m
110.1597 267.0723 l
S
300 Ar
114.8511 267.2764 m
110.3638 267.2764 l
S
300 Ar
114.6489 267.4795 m
110.5679 267.4795 l
S
300 Ar
114.6489 267.6836 m
110.5679 267.6836 l
S
300 Ar
114.4443 267.8887 m
110.7725 267.8887 l
S
300 Ar
114.4443 268.0928 m
110.7725 268.0928 l
S
300 Ar
114.2402 268.2959 m
110.9766 268.2959 l
S
300 Ar
113.832 268.5 m
111.3833 268.5 l
S
300 Ar
113.4233 268.7041 m
111.7915 268.7041 l
S
300 Ar
434.1123 466.7881 m
432.4795 466.7881 l
S
300 Ar
434.5205 466.9922 m
432.0723 466.9922 l
S
300 Ar
434.9277 467.1963 m
431.6641 467.1963 l
S
300 Ar
435.1318 467.3999 m
431.46 467.3999 l
S
300 Ar
435.1318 467.604 m
431.46 467.604 l
S
300 Ar
435.3359 467.8086 m
431.2559 467.8086 l
S
300 Ar
435.3359 468.0122 m
431.2559 468.0122 l
S
300 Ar
435.54 468.2158 m
431.0518 468.2158 l
S
300 Ar
435.7441 468.4204 m
430.8477 468.4204 l
S
300 Ar
435.7441 468.6245 m
430.8477 468.6245 l
S
300 Ar
435.7441 468.8281 m
430.8477 468.8281 l
S
300 Ar
435.7441 469.0322 m
430.8477 469.0322 l
S
300 Ar
435.7441 469.2363 m
430.8477 469.2363 l
S
300 Ar
435.7441 469.4404 m
430.8477 469.4404 l
S
300 Ar
435.7441 469.644 m
430.8477 469.644 l
S
300 Ar
435.54 469.8481 m
431.0518 469.8481 l
S
300 Ar
435.3359 470.0522 m
431.2559 470.0522 l
S
300 Ar
435.3359 470.2563 m
431.2559 470.2563 l
S
300 Ar
435.1318 470.46 m
431.46 470.46 l
S
300 Ar
435.1318 470.6641 m
431.46 470.6641 l
S
300 Ar
434.9277 470.8682 m
431.6641 470.8682 l
S
300 Ar
434.5205 471.0723 m
432.0723 471.0723 l
S
300 Ar
434.1123 471.2759 m
432.4795 471.2759 l
S
300 Ar
352.3086 407.2202 m
350.6768 407.2202 l
S
300 Ar
352.7158 407.4243 m
350.2676 407.4243 l
S
300 Ar
353.123 407.6279 m
349.8594 407.6279 l
S
300 Ar
353.3281 407.8325 m
349.6553 407.8325 l
S
300 Ar
353.3281 408.0361 m
349.6553 408.0361 l
S
300 Ar
353.5322 408.2402 m
349.4521 408.2402 l
S
300 Ar
353.5322 408.4443 m
349.4521 408.4443 l
S
300 Ar
353.7363 408.6484 m
349.248 408.6484 l
S
300 Ar
353.9404 408.8521 m
349.0449 408.8521 l
S
300 Ar
353.9404 409.0562 m
349.0449 409.0562 l
S
300 Ar
353.9404 409.2603 m
349.0449 409.2603 l
S
300 Ar
353.9404 409.4644 m
349.0449 409.4644 l
S
300 Ar
353.9404 409.668 m
349.0449 409.668 l
S
300 Ar
353.9404 409.8721 m
349.0449 409.8721 l
S
300 Ar
353.9404 410.0762 m
349.0449 410.0762 l
S
300 Ar
353.7363 410.2803 m
349.248 410.2803 l
S
300 Ar
353.5322 410.4839 m
349.4521 410.4839 l
S
300 Ar
353.5322 410.6885 m
349.4521 410.6885 l
S
300 Ar
353.3281 410.8921 m
349.6553 410.8921 l
S
300 Ar
353.3281 411.0962 m
349.6553 411.0962 l
S
300 Ar
353.123 411.2998 m
349.8594 411.2998 l
S
300 Ar
352.7158 411.5044 m
350.2676 411.5044 l
S
300 Ar
352.3086 411.7085 m
350.6768 411.7085 l
S
300 Ar
171.3599 296.2441 m
169.7275 296.2441 l
S
300 Ar
171.7681 296.4482 m
169.3193 296.4482 l
S
300 Ar
172.1763 296.6523 m
168.9126 296.6523 l
S
300 Ar
172.3809 296.8564 m
168.7085 296.8564 l
S
300 Ar
172.3809 297.0605 m
168.7085 297.0605 l
S
300 Ar
172.583 297.2637 m
168.5044 297.2637 l
S
300 Ar
172.583 297.4678 m
168.5044 297.4678 l
S
300 Ar
172.7876 297.6719 m
168.2998 297.6719 l
S
300 Ar
172.9917 297.877 m
168.0957 297.877 l
S
300 Ar
172.9917 298.0801 m
168.0957 298.0801 l
S
300 Ar
172.9917 298.2842 m
168.0957 298.2842 l
S
300 Ar
172.9917 298.4883 m
168.0957 298.4883 l
S
300 Ar
172.9917 298.6924 m
168.0957 298.6924 l
S
300 Ar
172.9917 298.8955 m
168.0957 298.8955 l
S
300 Ar
172.9917 299.0996 m
168.0957 299.0996 l
S
300 Ar
172.7876 299.3047 m
168.2998 299.3047 l
S
300 Ar
172.583 299.5088 m
168.5044 299.5088 l
S
300 Ar
172.583 299.7119 m
168.5044 299.7119 l
S
300 Ar
172.3809 299.916 m
168.7085 299.916 l
S
300 Ar
172.3809 300.1201 m
168.7085 300.1201 l
S
300 Ar
172.1763 300.3242 m
168.9126 300.3242 l
S
300 Ar
171.7681 300.5283 m
169.3193 300.5283 l
S
300 Ar
171.3599 300.7324 m
169.7275 300.7324 l
S
300 Ar
266.6279 364.9922 m
264.9956 364.9922 l
S
300 Ar
267.0361 365.1963 m
264.5874 365.1963 l
S
300 Ar
267.4443 365.4004 m
264.1807 365.4004 l
S
300 Ar
267.6489 365.6045 m
263.9766 365.6045 l
S
300 Ar
267.6489 365.8086 m
263.9766 365.8086 l
S
300 Ar
267.8511 366.0117 m
263.7725 366.0117 l
S
300 Ar
267.8511 366.2158 m
263.7725 366.2158 l
S
300 Ar
268.0557 366.4199 m
263.5679 366.4199 l
S
300 Ar
268.2598 366.624 m
263.3638 366.624 l
S
300 Ar
268.2598 366.8281 m
263.3638 366.8281 l
S
300 Ar
268.2598 367.0322 m
263.3638 367.0322 l
S
300 Ar
268.2598 367.2363 m
263.3638 367.2363 l
S
300 Ar
268.2598 367.4404 m
263.3638 367.4404 l
S
300 Ar
268.2598 367.6445 m
263.3638 367.6445 l
S
300 Ar
268.2598 367.8477 m
263.3638 367.8477 l
S
300 Ar
268.0557 368.0518 m
263.5679 368.0518 l
S
300 Ar
267.8511 368.2559 m
263.7725 368.2559 l
S
300 Ar
267.8511 368.4609 m
263.7725 368.4609 l
S
300 Ar
267.6489 368.6641 m
263.9766 368.6641 l
S
300 Ar
267.6489 368.8682 m
263.9766 368.8682 l
S
300 Ar
267.4443 369.0723 m
264.1807 369.0723 l
S
300 Ar
267.0361 369.2764 m
264.5874 369.2764 l
S
300 Ar
266.6279 369.4795 m
264.9956 369.4795 l
S
300 Ar
302.9404 394.1641 m
301.3086 394.1641 l
S
300 Ar
303.3486 394.3682 m
300.8999 394.3682 l
S
300 Ar
303.7554 394.5723 m
300.4917 394.5723 l
S
300 Ar
303.9595 394.7764 m
300.2876 394.7764 l
S
300 Ar
303.9595 394.9805 m
300.2876 394.9805 l
S
300 Ar
304.1641 395.1841 m
300.083 395.1841 l
S
300 Ar
304.1641 395.3882 m
300.083 395.3882 l
S
300 Ar
304.3682 395.5918 m
299.8809 395.5918 l
S
300 Ar
304.5723 395.7964 m
299.6763 395.7964 l
S
300 Ar
304.5723 396 m
299.6763 396 l
S
300 Ar
304.5723 396.2041 m
299.6763 396.2041 l
S
300 Ar
304.5723 396.4082 m
299.6763 396.4082 l
S
300 Ar
304.5723 396.6123 m
299.6763 396.6123 l
S
300 Ar
304.5723 396.8164 m
299.6763 396.8164 l
S
300 Ar
304.5723 397.02 m
299.6763 397.02 l
S
300 Ar
304.3682 397.2246 m
299.8809 397.2246 l
S
300 Ar
304.1641 397.4282 m
300.083 397.4282 l
S
300 Ar
304.1641 397.6323 m
300.083 397.6323 l
S
300 Ar
303.9595 397.8359 m
300.2876 397.8359 l
S
300 Ar
303.9595 398.0405 m
300.2876 398.0405 l
S
300 Ar
303.7554 398.2441 m
300.4917 398.2441 l
S
300 Ar
303.3486 398.4482 m
300.8999 398.4482 l
S
300 Ar
302.9404 398.6523 m
301.3086 398.6523 l
S
300 Ar
343.9443 399.876 m
342.3125 399.876 l
S
300 Ar
344.3525 400.0801 m
341.9043 400.0801 l
S
300 Ar
344.7598 400.2842 m
341.4961 400.2842 l
S
300 Ar
344.9639 400.4883 m
341.292 400.4883 l
S
300 Ar
344.9639 400.6919 m
341.292 400.6919 l
S
300 Ar
345.168 400.896 m
341.0869 400.896 l
S
300 Ar
345.168 401.1001 m
341.0869 401.1001 l
S
300 Ar
345.3721 401.3042 m
340.8838 401.3042 l
S
300 Ar
345.5762 401.5083 m
340.6797 401.5083 l
S
300 Ar
345.5762 401.7124 m
340.6797 401.7124 l
S
300 Ar
345.5762 401.9165 m
340.6797 401.9165 l
S
300 Ar
345.5762 402.1201 m
340.6797 402.1201 l
S
300 Ar
345.5762 402.3242 m
340.6797 402.3242 l
S
300 Ar
345.5762 402.5283 m
340.6797 402.5283 l
S
300 Ar
345.5762 402.7324 m
340.6797 402.7324 l
S
300 Ar
345.3721 402.936 m
340.8838 402.936 l
S
300 Ar
345.168 403.1401 m
341.0869 403.1401 l
S
300 Ar
345.168 403.3442 m
341.0869 403.3442 l
S
300 Ar
344.9639 403.5483 m
341.292 403.5483 l
S
300 Ar
344.9639 403.752 m
341.292 403.752 l
S
300 Ar
344.7598 403.9565 m
341.4961 403.9565 l
S
300 Ar
344.3525 404.1602 m
341.9043 404.1602 l
S
300 Ar
343.9443 404.3643 m
342.3125 404.3643 l
S
300 Ar
295.3916 362.5449 m
293.7598 362.5449 l
S
300 Ar
295.7998 362.748 m
293.3511 362.748 l
S
300 Ar
296.2085 362.9521 m
292.9443 362.9521 l
S
300 Ar
296.4126 363.1563 m
292.7402 363.1563 l
S
300 Ar
296.4126 363.3604 m
292.7402 363.3604 l
S
300 Ar
296.6167 363.5635 m
292.5361 363.5635 l
S
300 Ar
296.6167 363.7686 m
292.5361 363.7686 l
S
300 Ar
296.8193 363.9727 m
292.332 363.9727 l
S
300 Ar
297.0234 364.1768 m
292.1279 364.1768 l
S
300 Ar
297.0234 364.3799 m
292.1279 364.3799 l
S
300 Ar
297.0234 364.584 m
292.1279 364.584 l
S
300 Ar
297.0234 364.7881 m
292.1279 364.7881 l
S
300 Ar
297.0234 364.9922 m
292.1279 364.9922 l
S
300 Ar
297.0234 365.1963 m
292.1279 365.1963 l
S
300 Ar
297.0234 365.4004 m
292.1279 365.4004 l
S
300 Ar
296.8193 365.6045 m
292.332 365.6045 l
S
300 Ar
296.6167 365.8086 m
292.5361 365.8086 l
S
300 Ar
296.6167 366.0117 m
292.5361 366.0117 l
S
300 Ar
296.4126 366.2158 m
292.7402 366.2158 l
S
300 Ar
296.4126 366.4199 m
292.7402 366.4199 l
S
300 Ar
296.2085 366.624 m
292.9443 366.624 l
S
300 Ar
295.7998 366.8281 m
293.3511 366.8281 l
S
300 Ar
295.3916 367.0322 m
293.7598 367.0322 l
S
300 Ar
154.2236 284.6162 m
152.5918 284.6162 l
S
300 Ar
154.6318 284.8203 m
152.1831 284.8203 l
S
300 Ar
155.0405 285.0244 m
151.7764 285.0244 l
S
300 Ar
155.2446 285.2285 m
151.5723 285.2285 l
S
300 Ar
155.2446 285.4316 m
151.5723 285.4316 l
S
300 Ar
155.4487 285.6357 m
151.3682 285.6357 l
S
300 Ar
155.4487 285.8408 m
151.3682 285.8408 l
S
300 Ar
155.6514 286.0449 m
151.1641 286.0449 l
S
300 Ar
155.8555 286.248 m
150.9595 286.248 l
S
300 Ar
155.8555 286.4521 m
150.9595 286.4521 l
S
300 Ar
155.8555 286.6563 m
150.9595 286.6563 l
S
300 Ar
155.8555 286.8604 m
150.9595 286.8604 l
S
300 Ar
155.8555 287.0635 m
150.9595 287.0635 l
S
300 Ar
155.8555 287.2686 m
150.9595 287.2686 l
S
300 Ar
155.8555 287.4727 m
150.9595 287.4727 l
S
300 Ar
155.6514 287.6768 m
151.1641 287.6768 l
S
300 Ar
155.4487 287.8799 m
151.3682 287.8799 l
S
300 Ar
155.4487 288.084 m
151.3682 288.084 l
S
300 Ar
155.2446 288.2881 m
151.5723 288.2881 l
S
300 Ar
155.2446 288.4922 m
151.5723 288.4922 l
S
*U
*u
300 Ar
155.0405 288.6963 m
151.7764 288.6963 l
S
300 Ar
154.6318 288.9004 m
152.1831 288.9004 l
S
300 Ar
154.2236 289.1045 m
152.5918 289.1045 l
S
300 Ar
394.1279 428.436 m
392.4961 428.436 l
S
300 Ar
394.5361 428.6401 m
392.0869 428.6401 l
S
300 Ar
394.9443 428.8442 m
391.6797 428.8442 l
S
300 Ar
395.1475 429.0483 m
391.4766 429.0483 l
S
300 Ar
395.1475 429.252 m
391.4766 429.252 l
S
300 Ar
395.3525 429.4565 m
391.2725 429.4565 l
S
300 Ar
395.3525 429.6602 m
391.2725 429.6602 l
S
300 Ar
395.5557 429.8643 m
391.0684 429.8643 l
S
300 Ar
395.7598 430.0679 m
390.8643 430.0679 l
S
300 Ar
395.7598 430.2725 m
390.8643 430.2725 l
S
300 Ar
395.7598 430.4761 m
390.8643 430.4761 l
S
300 Ar
395.7598 430.6802 m
390.8643 430.6802 l
S
300 Ar
395.7598 430.8843 m
390.8643 430.8843 l
S
300 Ar
395.7598 431.0884 m
390.8643 431.0884 l
S
300 Ar
395.7598 431.292 m
390.8643 431.292 l
S
300 Ar
395.5557 431.4961 m
391.0684 431.4961 l
S
300 Ar
395.3525 431.7002 m
391.2725 431.7002 l
S
300 Ar
395.3525 431.9043 m
391.2725 431.9043 l
S
300 Ar
395.1475 432.1084 m
391.4766 432.1084 l
S
300 Ar
395.1475 432.312 m
391.4766 432.312 l
S
300 Ar
394.9443 432.5161 m
391.6797 432.5161 l
S
300 Ar
394.5361 432.7202 m
392.0869 432.7202 l
S
300 Ar
394.1279 432.9243 m
392.4961 432.9243 l
S
300 Ar
411.6719 449.2441 m
410.04 449.2441 l
S
300 Ar
412.0801 449.4482 m
409.6318 449.4482 l
S
300 Ar
412.4873 449.6523 m
409.2236 449.6523 l
S
300 Ar
412.6914 449.8564 m
409.0205 449.8564 l
S
300 Ar
412.6914 450.0601 m
409.0205 450.0601 l
S
300 Ar
412.8955 450.2642 m
408.8164 450.2642 l
S
300 Ar
412.8955 450.4683 m
408.8164 450.4683 l
S
300 Ar
413.0996 450.6724 m
408.6123 450.6724 l
S
300 Ar
413.3037 450.876 m
408.4082 450.876 l
S
300 Ar
413.3037 451.0801 m
408.4082 451.0801 l
S
300 Ar
413.3037 451.2842 m
408.4082 451.2842 l
S
300 Ar
413.3037 451.4883 m
408.4082 451.4883 l
S
300 Ar
413.3037 451.6919 m
408.4082 451.6919 l
S
300 Ar
413.3037 451.896 m
408.4082 451.896 l
S
300 Ar
413.3037 452.1001 m
408.4082 452.1001 l
S
300 Ar
413.0996 452.3042 m
408.6123 452.3042 l
S
300 Ar
412.8955 452.5083 m
408.8164 452.5083 l
S
300 Ar
412.8955 452.7124 m
408.8164 452.7124 l
S
300 Ar
412.6914 452.916 m
409.0205 452.916 l
S
300 Ar
412.6914 453.1201 m
409.0205 453.1201 l
S
300 Ar
412.4873 453.3242 m
409.2236 453.3242 l
S
300 Ar
412.0801 453.5283 m
409.6318 453.5283 l
S
300 Ar
411.6719 453.7324 m
410.04 453.7324 l
S
300 Ar
357.4082 425.1724 m
355.7764 425.1724 l
S
300 Ar
357.8164 425.376 m
355.3682 425.376 l
S
300 Ar
358.2236 425.5801 m
354.96 425.5801 l
S
300 Ar
358.4277 425.7842 m
354.7559 425.7842 l
S
300 Ar
358.4277 425.9883 m
354.7559 425.9883 l
S
300 Ar
358.6318 426.1919 m
354.5518 426.1919 l
S
300 Ar
358.6318 426.396 m
354.5518 426.396 l
S
300 Ar
358.8359 426.6001 m
354.3477 426.6001 l
S
300 Ar
359.04 426.8042 m
354.1445 426.8042 l
S
300 Ar
359.04 427.0083 m
354.1445 427.0083 l
S
300 Ar
359.04 427.2124 m
354.1445 427.2124 l
S
300 Ar
359.04 427.416 m
354.1445 427.416 l
S
300 Ar
359.04 427.6201 m
354.1445 427.6201 l
S
300 Ar
359.04 427.8242 m
354.1445 427.8242 l
S
300 Ar
359.04 428.0283 m
354.1445 428.0283 l
S
300 Ar
358.8359 428.2324 m
354.3477 428.2324 l
S
300 Ar
358.6318 428.436 m
354.5518 428.436 l
S
300 Ar
358.6318 428.6401 m
354.5518 428.6401 l
S
300 Ar
358.4277 428.8442 m
354.7559 428.8442 l
S
300 Ar
358.4277 429.0483 m
354.7559 429.0483 l
S
300 Ar
358.2236 429.252 m
354.96 429.252 l
S
300 Ar
357.8164 429.4565 m
355.3682 429.4565 l
S
300 Ar
357.4082 429.6602 m
355.7764 429.6602 l
S
300 Ar
306.4082 380.4961 m
304.7764 380.4961 l
S
300 Ar
306.8159 380.7002 m
304.3682 380.7002 l
S
300 Ar
307.2236 380.9043 m
303.9595 380.9043 l
S
300 Ar
307.4277 381.1084 m
303.7554 381.1084 l
S
300 Ar
307.4277 381.3115 m
303.7554 381.3115 l
S
300 Ar
307.6318 381.5156 m
303.5513 381.5156 l
S
300 Ar
307.6318 381.7197 m
303.5513 381.7197 l
S
300 Ar
307.8359 381.9248 m
303.3486 381.9248 l
S
300 Ar
308.04 382.1289 m
303.1445 382.1289 l
S
300 Ar
308.04 382.332 m
303.1445 382.332 l
S
300 Ar
308.04 382.5361 m
303.1445 382.5361 l
S
300 Ar
308.04 382.7402 m
303.1445 382.7402 l
S
300 Ar
308.04 382.9443 m
303.1445 382.9443 l
S
300 Ar
308.04 383.1475 m
303.1445 383.1475 l
S
300 Ar
308.04 383.3525 m
303.1445 383.3525 l
S
300 Ar
307.8359 383.5566 m
303.3486 383.5566 l
S
300 Ar
307.6318 383.7607 m
303.5513 383.7607 l
S
300 Ar
307.6318 383.9639 m
303.5513 383.9639 l
S
300 Ar
307.4277 384.168 m
303.7554 384.168 l
S
300 Ar
307.4277 384.3721 m
303.7554 384.3721 l
S
300 Ar
307.2236 384.5762 m
303.9595 384.5762 l
S
300 Ar
306.8159 384.7803 m
304.3682 384.7803 l
S
300 Ar
306.4082 384.9844 m
304.7764 384.9844 l
S
300 Ar
74.2554 247.2842 m
72.6235 247.2842 l
S
300 Ar
74.6641 247.4883 m
72.2168 247.4883 l
S
300 Ar
75.0723 247.6924 m
71.8086 247.6924 l
S
300 Ar
75.2764 247.8955 m
71.604 247.8955 l
S
300 Ar
75.2764 248.0996 m
71.604 248.0996 l
S
300 Ar
75.4805 248.3047 m
71.3999 248.3047 l
S
300 Ar
75.4805 248.5088 m
71.3999 248.5088 l
S
300 Ar
75.6831 248.7119 m
71.1958 248.7119 l
S
300 Ar
75.8872 248.916 m
70.9917 248.916 l
S
300 Ar
75.8872 249.1201 m
70.9917 249.1201 l
S
300 Ar
75.8872 249.3242 m
70.9917 249.3242 l
S
300 Ar
75.8872 249.5283 m
70.9917 249.5283 l
S
300 Ar
75.8872 249.7324 m
70.9917 249.7324 l
S
300 Ar
75.8872 249.9365 m
70.9917 249.9365 l
S
300 Ar
75.8872 250.1406 m
70.9917 250.1406 l
S
300 Ar
75.6831 250.3447 m
71.1958 250.3447 l
S
300 Ar
75.4805 250.5479 m
71.3999 250.5479 l
S
300 Ar
75.4805 250.752 m
71.3999 250.752 l
S
300 Ar
75.2764 250.9561 m
71.604 250.9561 l
S
300 Ar
75.2764 251.1602 m
71.604 251.1602 l
S
300 Ar
75.0723 251.3643 m
71.8086 251.3643 l
S
300 Ar
74.6641 251.5684 m
72.2168 251.5684 l
S
300 Ar
74.2554 251.7725 m
72.6235 251.7725 l
S
300 Ar
213.7915 332.9639 m
212.1597 332.9639 l
S
300 Ar
214.2002 333.168 m
211.7515 333.168 l
S
300 Ar
214.6084 333.3721 m
211.3447 333.3721 l
S
300 Ar
214.8125 333.5762 m
211.1401 333.5762 l
S
300 Ar
214.8125 333.7803 m
211.1401 333.7803 l
S
300 Ar
215.0166 333.9844 m
210.936 333.9844 l
S
300 Ar
215.0166 334.1885 m
210.936 334.1885 l
S
300 Ar
215.2192 334.3926 m
210.7319 334.3926 l
S
300 Ar
215.4233 334.5957 m
210.5278 334.5957 l
S
300 Ar
215.4233 334.7998 m
210.5278 334.7998 l
S
300 Ar
215.4233 335.0039 m
210.5278 335.0039 l
S
300 Ar
215.4233 335.208 m
210.5278 335.208 l
S
300 Ar
215.4233 335.4121 m
210.5278 335.4121 l
S
300 Ar
215.4233 335.6162 m
210.5278 335.6162 l
S
300 Ar
215.4233 335.8203 m
210.5278 335.8203 l
S
300 Ar
215.2192 336.0244 m
210.7319 336.0244 l
S
300 Ar
215.0166 336.2285 m
210.936 336.2285 l
S
300 Ar
215.0166 336.4316 m
210.936 336.4316 l
S
300 Ar
214.8125 336.6357 m
211.1401 336.6357 l
S
300 Ar
214.8125 336.8408 m
211.1401 336.8408 l
S
300 Ar
214.6084 337.0449 m
211.3447 337.0449 l
S
300 Ar
214.2002 337.248 m
211.7515 337.248 l
S
300 Ar
213.7915 337.4521 m
212.1597 337.4521 l
S
300 Ar
316.6084 409.668 m
314.9766 409.668 l
S
300 Ar
317.0156 409.8721 m
314.5684 409.8721 l
S
300 Ar
317.4238 410.0762 m
314.1592 410.0762 l
S
300 Ar
317.6279 410.2803 m
313.9551 410.2803 l
S
300 Ar
317.6279 410.4839 m
313.9551 410.4839 l
S
300 Ar
317.832 410.6885 m
313.752 410.6885 l
S
300 Ar
317.832 410.8921 m
313.752 410.8921 l
S
300 Ar
318.0361 411.0962 m
313.5479 411.0962 l
S
300 Ar
318.2402 411.2998 m
313.3447 411.2998 l
S
300 Ar
318.2402 411.5044 m
313.3447 411.5044 l
S
300 Ar
318.2402 411.7085 m
313.3447 411.7085 l
S
300 Ar
318.2402 411.9121 m
313.3447 411.9121 l
S
300 Ar
318.2402 412.1162 m
313.3447 412.1162 l
S
300 Ar
318.2402 412.3203 m
313.3447 412.3203 l
S
300 Ar
318.2402 412.5244 m
313.3447 412.5244 l
S
300 Ar
318.0361 412.728 m
313.5479 412.728 l
S
300 Ar
317.832 412.9321 m
313.752 412.9321 l
S
300 Ar
317.832 413.1362 m
313.752 413.1362 l
S
300 Ar
317.6279 413.3403 m
313.9551 413.3403 l
S
300 Ar
317.6279 413.5439 m
313.9551 413.5439 l
S
300 Ar
317.4238 413.7485 m
314.1592 413.7485 l
S
300 Ar
317.0156 413.9521 m
314.5684 413.9521 l
S
300 Ar
316.6084 414.1563 m
314.9766 414.1563 l
S
300 Ar
145.0444 268.0928 m
143.4126 268.0928 l
S
300 Ar
145.4512 268.2959 m
143.0044 268.2959 l
S
300 Ar
145.8599 268.5 m
142.5957 268.5 l
S
300 Ar
146.064 268.7041 m
142.3916 268.7041 l
S
300 Ar
146.064 268.9082 m
142.3916 268.9082 l
S
300 Ar
146.2681 269.1113 m
142.1875 269.1113 l
S
300 Ar
146.2681 269.3164 m
142.1875 269.3164 l
S
300 Ar
146.4722 269.5205 m
141.9834 269.5205 l
S
300 Ar
146.6763 269.7246 m
141.7808 269.7246 l
S
300 Ar
146.6763 269.9287 m
141.7808 269.9287 l
S
300 Ar
146.6763 270.1318 m
141.7808 270.1318 l
S
300 Ar
146.6763 270.3359 m
141.7808 270.3359 l
S
300 Ar
146.6763 270.54 m
141.7808 270.54 l
S
300 Ar
146.6763 270.7441 m
141.7808 270.7441 l
S
300 Ar
146.6763 270.9482 m
141.7808 270.9482 l
S
300 Ar
146.4722 271.1523 m
141.9834 271.1523 l
S
300 Ar
146.2681 271.3564 m
142.1875 271.3564 l
S
300 Ar
146.2681 271.5605 m
142.1875 271.5605 l
S
300 Ar
146.064 271.7637 m
142.3916 271.7637 l
S
300 Ar
146.064 271.9678 m
142.3916 271.9678 l
S
300 Ar
145.8599 272.1719 m
142.5957 272.1719 l
S
300 Ar
145.4512 272.377 m
143.0044 272.377 l
S
300 Ar
145.0444 272.5801 m
143.4126 272.5801 l
S
300 Ar
319.8721 400.896 m
318.2402 400.896 l
S
300 Ar
320.2803 401.1001 m
317.832 401.1001 l
S
300 Ar
320.6875 401.3042 m
317.4238 401.3042 l
S
300 Ar
320.8916 401.5083 m
317.2197 401.5083 l
S
300 Ar
320.8916 401.7124 m
317.2197 401.7124 l
S
300 Ar
321.0957 401.9165 m
317.0156 401.9165 l
S
300 Ar
321.0957 402.1201 m
317.0156 402.1201 l
S
300 Ar
321.2998 402.3242 m
316.8125 402.3242 l
S
300 Ar
321.5039 402.5283 m
316.6084 402.5283 l
S
300 Ar
321.5039 402.7324 m
316.6084 402.7324 l
S
300 Ar
321.5039 402.936 m
316.6084 402.936 l
S
300 Ar
321.5039 403.1401 m
316.6084 403.1401 l
S
300 Ar
321.5039 403.3442 m
316.6084 403.3442 l
S
*U
*u
300 Ar
321.5039 403.5483 m
316.6084 403.5483 l
S
300 Ar
321.5039 403.752 m
316.6084 403.752 l
S
300 Ar
321.2998 403.9565 m
316.8125 403.9565 l
S
300 Ar
321.0957 404.1602 m
317.0156 404.1602 l
S
300 Ar
321.0957 404.3643 m
317.0156 404.3643 l
S
300 Ar
320.8916 404.5679 m
317.2197 404.5679 l
S
300 Ar
320.8916 404.7725 m
317.2197 404.7725 l
S
300 Ar
320.6875 404.9761 m
317.4238 404.9761 l
S
300 Ar
320.2803 405.1802 m
317.832 405.1802 l
S
300 Ar
319.8721 405.3843 m
318.2402 405.3843 l
S
300 Ar
231.5405 336.0244 m
229.9082 336.0244 l
S
300 Ar
231.9487 336.2285 m
229.5 336.2285 l
S
300 Ar
232.3555 336.4316 m
229.0918 336.4316 l
S
300 Ar
232.5596 336.6357 m
228.8872 336.6357 l
S
300 Ar
232.5596 336.8408 m
228.8872 336.8408 l
S
300 Ar
232.7637 337.0449 m
228.6831 337.0449 l
S
300 Ar
232.7637 337.248 m
228.6831 337.248 l
S
300 Ar
232.9683 337.4521 m
228.4805 337.4521 l
S
300 Ar
233.1724 337.6563 m
228.2764 337.6563 l
S
300 Ar
233.1724 337.8604 m
228.2764 337.8604 l
S
300 Ar
233.1724 338.0635 m
228.2764 338.0635 l
S
300 Ar
233.1724 338.2686 m
228.2764 338.2686 l
S
300 Ar
233.1724 338.4727 m
228.2764 338.4727 l
S
300 Ar
233.1724 338.6768 m
228.2764 338.6768 l
S
300 Ar
233.1724 338.8799 m
228.2764 338.8799 l
S
300 Ar
232.9683 339.084 m
228.4805 339.084 l
S
300 Ar
232.7637 339.2881 m
228.6831 339.2881 l
S
300 Ar
232.7637 339.4922 m
228.6831 339.4922 l
S
300 Ar
232.5596 339.6963 m
228.8872 339.6963 l
S
300 Ar
232.5596 339.9004 m
228.8872 339.9004 l
S
300 Ar
232.3555 340.1045 m
229.0918 340.1045 l
S
300 Ar
231.9487 340.3086 m
229.5 340.3086 l
S
300 Ar
231.5405 340.5117 m
229.9082 340.5117 l
S
300 Ar
376.7871 440.6763 m
375.1553 440.6763 l
S
300 Ar
377.1953 440.8804 m
374.748 440.8804 l
S
300 Ar
377.6045 441.084 m
374.3398 441.084 l
S
300 Ar
377.8086 441.2881 m
374.1357 441.2881 l
S
300 Ar
377.8086 441.4922 m
374.1357 441.4922 l
S
300 Ar
378.0127 441.6963 m
373.9316 441.6963 l
S
300 Ar
378.0127 441.8999 m
373.9316 441.8999 l
S
300 Ar
378.2158 442.104 m
373.7275 442.104 l
S
300 Ar
378.4199 442.3086 m
373.5234 442.3086 l
S
300 Ar
378.4199 442.5122 m
373.5234 442.5122 l
S
300 Ar
378.4199 442.7158 m
373.5234 442.7158 l
S
300 Ar
378.4199 442.9204 m
373.5234 442.9204 l
S
300 Ar
378.4199 443.1245 m
373.5234 443.1245 l
S
300 Ar
378.4199 443.3281 m
373.5234 443.3281 l
S
300 Ar
378.4199 443.5322 m
373.5234 443.5322 l
S
300 Ar
378.2158 443.7363 m
373.7275 443.7363 l
S
300 Ar
378.0127 443.9404 m
373.9316 443.9404 l
S
300 Ar
378.0127 444.144 m
373.9316 444.144 l
S
300 Ar
377.8086 444.3481 m
374.1357 444.3481 l
S
300 Ar
377.8086 444.5522 m
374.1357 444.5522 l
S
300 Ar
377.6045 444.7563 m
374.3398 444.7563 l
S
300 Ar
377.1953 444.96 m
374.748 444.96 l
S
300 Ar
376.7871 445.1641 m
375.1553 445.1641 l
S
300 Ar
207.4683 317.4609 m
205.8359 317.4609 l
S
300 Ar
207.8765 317.6641 m
205.4277 317.6641 l
S
300 Ar
208.2832 317.8682 m
205.0195 317.8682 l
S
300 Ar
208.4873 318.0723 m
204.8169 318.0723 l
S
300 Ar
208.4873 318.2764 m
204.8169 318.2764 l
S
300 Ar
208.6914 318.4795 m
204.6128 318.4795 l
S
300 Ar
208.6914 318.6836 m
204.6128 318.6836 l
S
300 Ar
208.896 318.8887 m
204.4082 318.8887 l
S
300 Ar
209.1001 319.0928 m
204.2041 319.0928 l
S
300 Ar
209.1001 319.2959 m
204.2041 319.2959 l
S
300 Ar
209.1001 319.5 m
204.2041 319.5 l
S
300 Ar
209.1001 319.7041 m
204.2041 319.7041 l
S
300 Ar
209.1001 319.9082 m
204.2041 319.9082 l
S
300 Ar
209.1001 320.1113 m
204.2041 320.1113 l
S
300 Ar
209.1001 320.3164 m
204.2041 320.3164 l
S
300 Ar
208.896 320.5205 m
204.4082 320.5205 l
S
300 Ar
208.6914 320.7246 m
204.6128 320.7246 l
S
300 Ar
208.6914 320.9287 m
204.6128 320.9287 l
S
300 Ar
208.4873 321.1318 m
204.8169 321.1318 l
S
300 Ar
208.4873 321.3359 m
204.8169 321.3359 l
S
300 Ar
208.2832 321.54 m
205.0195 321.54 l
S
300 Ar
207.8765 321.7441 m
205.4277 321.7441 l
S
300 Ar
207.4683 321.9482 m
205.8359 321.9482 l
S
300 Ar
326.4004 398.8564 m
324.7676 398.8564 l
S
300 Ar
326.8086 399.0601 m
324.3594 399.0601 l
S
300 Ar
327.2158 399.2642 m
323.9521 399.2642 l
S
300 Ar
327.4199 399.4683 m
323.748 399.4683 l
S
300 Ar
327.4199 399.6724 m
323.748 399.6724 l
S
300 Ar
327.623 399.876 m
323.5449 399.876 l
S
300 Ar
327.623 400.0801 m
323.5449 400.0801 l
S
300 Ar
327.8281 400.2842 m
323.3398 400.2842 l
S
300 Ar
328.0322 400.4883 m
323.1357 400.4883 l
S
300 Ar
328.0322 400.6919 m
323.1357 400.6919 l
S
300 Ar
328.0322 400.896 m
323.1357 400.896 l
S
300 Ar
328.0322 401.1001 m
323.1357 401.1001 l
S
300 Ar
328.0322 401.3042 m
323.1357 401.3042 l
S
300 Ar
328.0322 401.5083 m
323.1357 401.5083 l
S
300 Ar
328.0322 401.7124 m
323.1357 401.7124 l
S
300 Ar
327.8281 401.9165 m
323.3398 401.9165 l
S
300 Ar
327.623 402.1201 m
323.5449 402.1201 l
S
300 Ar
327.623 402.3242 m
323.5449 402.3242 l
S
300 Ar
327.4199 402.5283 m
323.748 402.5283 l
S
300 Ar
327.4199 402.7324 m
323.748 402.7324 l
S
300 Ar
327.2158 402.936 m
323.9521 402.936 l
S
300 Ar
326.8086 403.1401 m
324.3594 403.1401 l
S
300 Ar
326.4004 403.3442 m
324.7676 403.3442 l
S
300 Ar
415.3447 473.1123 m
413.7129 473.1123 l
S
300 Ar
415.752 473.3159 m
413.3037 473.3159 l
S
300 Ar
416.1592 473.52 m
412.8955 473.52 l
S
300 Ar
416.3643 473.7246 m
412.6914 473.7246 l
S
300 Ar
416.3643 473.9282 m
412.6914 473.9282 l
S
300 Ar
416.5684 474.1323 m
412.4873 474.1323 l
S
300 Ar
416.5684 474.3359 m
412.4873 474.3359 l
S
300 Ar
416.7725 474.5405 m
412.2842 474.5405 l
S
300 Ar
416.9766 474.7441 m
412.0801 474.7441 l
S
300 Ar
416.9766 474.9482 m
412.0801 474.9482 l
S
300 Ar
416.9766 475.1523 m
412.0801 475.1523 l
S
300 Ar
416.9766 475.3564 m
412.0801 475.3564 l
S
300 Ar
416.9766 475.5601 m
412.0801 475.5601 l
S
300 Ar
416.9766 475.7642 m
412.0801 475.7642 l
S
300 Ar
416.9766 475.9683 m
412.0801 475.9683 l
S
300 Ar
416.7725 476.1724 m
412.2842 476.1724 l
S
300 Ar
416.5684 476.376 m
412.4873 476.376 l
S
300 Ar
416.5684 476.5801 m
412.4873 476.5801 l
S
300 Ar
416.3643 476.7842 m
412.6914 476.7842 l
S
300 Ar
416.3643 476.9883 m
412.6914 476.9883 l
S
300 Ar
416.1592 477.1919 m
412.8955 477.1919 l
S
300 Ar
415.752 477.396 m
413.3037 477.396 l
S
300 Ar
415.3447 477.6001 m
413.7129 477.6001 l
S
300 Ar
323.1357 383.9639 m
321.5039 383.9639 l
S
300 Ar
323.5449 384.168 m
321.0957 384.168 l
S
300 Ar
323.9521 384.3721 m
320.6875 384.3721 l
S
300 Ar
324.1553 384.5762 m
320.4844 384.5762 l
S
300 Ar
324.1553 384.7803 m
320.4844 384.7803 l
S
300 Ar
324.3594 384.9844 m
320.2803 384.9844 l
S
300 Ar
324.3594 385.1885 m
320.2803 385.1885 l
S
300 Ar
324.5635 385.3926 m
320.0762 385.3926 l
S
300 Ar
324.7676 385.5957 m
319.8721 385.5957 l
S
300 Ar
324.7676 385.7998 m
319.8721 385.7998 l
S
300 Ar
324.7676 386.0039 m
319.8721 386.0039 l
S
300 Ar
324.7676 386.208 m
319.8721 386.208 l
S
300 Ar
324.7676 386.4121 m
319.8721 386.4121 l
S
300 Ar
324.7676 386.6162 m
319.8721 386.6162 l
S
300 Ar
324.7676 386.8203 m
319.8721 386.8203 l
S
300 Ar
324.5635 387.0244 m
320.0762 387.0244 l
S
300 Ar
324.3594 387.2285 m
320.2803 387.2285 l
S
300 Ar
324.3594 387.4316 m
320.2803 387.4316 l
S
300 Ar
324.1553 387.6357 m
320.4844 387.6357 l
S
300 Ar
324.1553 387.8408 m
320.4844 387.8408 l
S
300 Ar
323.9521 388.0449 m
320.6875 388.0449 l
S
300 Ar
323.5449 388.248 m
321.0957 388.248 l
S
300 Ar
323.1357 388.4521 m
321.5039 388.4521 l
S
300 Ar
200.9404 312.1563 m
199.3086 312.1563 l
S
300 Ar
201.3486 312.3604 m
198.8999 312.3604 l
S
300 Ar
201.7554 312.5635 m
198.4917 312.5635 l
S
300 Ar
201.9595 312.7686 m
198.2876 312.7686 l
S
300 Ar
201.9595 312.9727 m
198.2876 312.9727 l
S
300 Ar
202.1641 313.1768 m
198.083 313.1768 l
S
300 Ar
202.1641 313.3799 m
198.083 313.3799 l
S
300 Ar
202.3682 313.584 m
197.8809 313.584 l
S
300 Ar
202.5723 313.7881 m
197.6763 313.7881 l
S
300 Ar
202.5723 313.9922 m
197.6763 313.9922 l
S
300 Ar
202.5723 314.1963 m
197.6763 314.1963 l
S
300 Ar
202.5723 314.4004 m
197.6763 314.4004 l
S
300 Ar
202.5723 314.6045 m
197.6763 314.6045 l
S
300 Ar
202.5723 314.8086 m
197.6763 314.8086 l
S
300 Ar
202.5723 315.0117 m
197.6763 315.0117 l
S
300 Ar
202.3682 315.2158 m
197.8809 315.2158 l
S
300 Ar
202.1641 315.4199 m
198.083 315.4199 l
S
300 Ar
202.1641 315.624 m
198.083 315.624 l
S
300 Ar
201.9595 315.8281 m
198.2876 315.8281 l
S
300 Ar
201.9595 316.0322 m
198.2876 316.0322 l
S
300 Ar
201.7554 316.2363 m
198.4917 316.2363 l
S
300 Ar
201.3486 316.4404 m
198.8999 316.4404 l
S
300 Ar
200.9404 316.6445 m
199.3086 316.6445 l
S
300 Ar
231.5405 338.8799 m
229.9082 338.8799 l
S
300 Ar
231.9487 339.084 m
229.5 339.084 l
S
300 Ar
232.3555 339.2881 m
229.0918 339.2881 l
S
300 Ar
232.5596 339.4922 m
228.8872 339.4922 l
S
300 Ar
232.5596 339.6963 m
228.8872 339.6963 l
S
300 Ar
232.7637 339.9004 m
228.6831 339.9004 l
S
300 Ar
232.7637 340.1045 m
228.6831 340.1045 l
S
300 Ar
232.9683 340.3086 m
228.4805 340.3086 l
S
300 Ar
233.1724 340.5117 m
228.2764 340.5117 l
S
300 Ar
233.1724 340.7158 m
228.2764 340.7158 l
S
300 Ar
233.1724 340.9199 m
228.2764 340.9199 l
S
300 Ar
233.1724 341.124 m
228.2764 341.124 l
S
300 Ar
233.1724 341.3281 m
228.2764 341.3281 l
S
300 Ar
233.1724 341.5322 m
228.2764 341.5322 l
S
300 Ar
233.1724 341.7363 m
228.2764 341.7363 l
S
300 Ar
232.9683 341.9404 m
228.4805 341.9404 l
S
300 Ar
232.7637 342.1445 m
228.6831 342.1445 l
S
300 Ar
232.7637 342.3477 m
228.6831 342.3477 l
S
300 Ar
232.5596 342.5518 m
228.8872 342.5518 l
S
300 Ar
232.5596 342.7559 m
228.8872 342.7559 l
S
300 Ar
232.3555 342.9609 m
229.0918 342.9609 l
S
300 Ar
231.9487 343.1641 m
229.5 343.1641 l
S
300 Ar
231.5405 343.3682 m
229.9082 343.3682 l
S
300 Ar
135.0488 276.8643 m
133.417 276.8643 l
S
300 Ar
135.4556 277.0684 m
133.0083 277.0684 l
S
300 Ar
135.8638 277.2725 m
132.6001 277.2725 l
S
300 Ar
136.0679 277.4766 m
132.396 277.4766 l
S
300 Ar
136.0679 277.6797 m
132.396 277.6797 l
S
300 Ar
136.2725 277.8838 m
132.1914 277.8838 l
S
*U
*u
300 Ar
136.2725 278.0879 m
132.1914 278.0879 l
S
300 Ar
136.4766 278.292 m
131.9873 278.292 l
S
300 Ar
136.6807 278.4961 m
131.7832 278.4961 l
S
300 Ar
136.6807 278.7002 m
131.7832 278.7002 l
S
300 Ar
136.6807 278.9043 m
131.7832 278.9043 l
S
300 Ar
136.6807 279.1084 m
131.7832 279.1084 l
S
300 Ar
136.6807 279.3115 m
131.7832 279.3115 l
S
300 Ar
136.6807 279.5156 m
131.7832 279.5156 l
S
300 Ar
136.6807 279.7197 m
131.7832 279.7197 l
S
300 Ar
136.4766 279.9248 m
131.9873 279.9248 l
S
300 Ar
136.2725 280.1289 m
132.1914 280.1289 l
S
300 Ar
136.2725 280.332 m
132.1914 280.332 l
S
300 Ar
136.0679 280.5361 m
132.396 280.5361 l
S
300 Ar
136.0679 280.7402 m
132.396 280.7402 l
S
300 Ar
135.8638 280.9443 m
132.6001 280.9443 l
S
300 Ar
135.4556 281.1475 m
133.0083 281.1475 l
S
300 Ar
135.0488 281.3525 m
133.417 281.3525 l
S
300 Ar
266.6279 355.4043 m
264.9956 355.4043 l
S
300 Ar
267.0361 355.6084 m
264.5874 355.6084 l
S
300 Ar
267.4443 355.8115 m
264.1807 355.8115 l
S
300 Ar
267.6489 356.0156 m
263.9766 356.0156 l
S
300 Ar
267.6489 356.2197 m
263.9766 356.2197 l
S
300 Ar
267.8511 356.4248 m
263.7725 356.4248 l
S
300 Ar
267.8511 356.6289 m
263.7725 356.6289 l
S
300 Ar
268.0557 356.832 m
263.5679 356.832 l
S
300 Ar
268.2598 357.0361 m
263.3638 357.0361 l
S
300 Ar
268.2598 357.2402 m
263.3638 357.2402 l
S
300 Ar
268.2598 357.4443 m
263.3638 357.4443 l
S
300 Ar
268.2598 357.6475 m
263.3638 357.6475 l
S
300 Ar
268.2598 357.8525 m
263.3638 357.8525 l
S
300 Ar
268.2598 358.0566 m
263.3638 358.0566 l
S
300 Ar
268.2598 358.2607 m
263.3638 358.2607 l
S
300 Ar
268.0557 358.4639 m
263.5679 358.4639 l
S
300 Ar
267.8511 358.668 m
263.7725 358.668 l
S
300 Ar
267.8511 358.8721 m
263.7725 358.8721 l
S
300 Ar
267.6489 359.0762 m
263.9766 359.0762 l
S
300 Ar
267.6489 359.2803 m
263.9766 359.2803 l
S
300 Ar
267.4443 359.4844 m
264.1807 359.4844 l
S
300 Ar
267.0361 359.6885 m
264.5874 359.6885 l
S
300 Ar
266.6279 359.8926 m
264.9956 359.8926 l
S
300 Ar
316.6084 392.5322 m
314.9766 392.5322 l
S
300 Ar
317.0156 392.7363 m
314.5684 392.7363 l
S
300 Ar
317.4238 392.9404 m
314.1592 392.9404 l
S
300 Ar
317.6279 393.1445 m
313.9551 393.1445 l
S
300 Ar
317.6279 393.3477 m
313.9551 393.3477 l
S
300 Ar
317.832 393.5518 m
313.752 393.5518 l
S
300 Ar
317.832 393.7559 m
313.752 393.7559 l
S
300 Ar
318.0361 393.9609 m
313.5479 393.9609 l
S
300 Ar
318.2402 394.1641 m
313.3447 394.1641 l
S
300 Ar
318.2402 394.3682 m
313.3447 394.3682 l
S
300 Ar
318.2402 394.5723 m
313.3447 394.5723 l
S
300 Ar
318.2402 394.7764 m
313.3447 394.7764 l
S
300 Ar
318.2402 394.9805 m
313.3447 394.9805 l
S
300 Ar
318.2402 395.1841 m
313.3447 395.1841 l
S
300 Ar
318.2402 395.3882 m
313.3447 395.3882 l
S
300 Ar
318.0361 395.5918 m
313.5479 395.5918 l
S
300 Ar
317.832 395.7964 m
313.752 395.7964 l
S
300 Ar
317.832 396 m
313.752 396 l
S
300 Ar
317.6279 396.2041 m
313.9551 396.2041 l
S
300 Ar
317.6279 396.4082 m
313.9551 396.4082 l
S
300 Ar
317.4238 396.6123 m
314.1592 396.6123 l
S
300 Ar
317.0156 396.8164 m
314.5684 396.8164 l
S
300 Ar
316.6084 397.02 m
314.9766 397.02 l
S
300 Ar
369.8525 426.6001 m
368.2197 426.6001 l
S
300 Ar
370.2598 426.8042 m
367.8125 426.8042 l
S
300 Ar
370.668 427.0083 m
367.4043 427.0083 l
S
300 Ar
370.8721 427.2124 m
367.2002 427.2124 l
S
300 Ar
370.8721 427.416 m
367.2002 427.416 l
S
300 Ar
371.0762 427.6201 m
366.9961 427.6201 l
S
300 Ar
371.0762 427.8242 m
366.9961 427.8242 l
S
300 Ar
371.2803 428.0283 m
366.792 428.0283 l
S
300 Ar
371.4844 428.2324 m
366.5869 428.2324 l
S
300 Ar
371.4844 428.436 m
366.5869 428.436 l
S
300 Ar
371.4844 428.6401 m
366.5869 428.6401 l
S
300 Ar
371.4844 428.8442 m
366.5869 428.8442 l
S
300 Ar
371.4844 429.0483 m
366.5869 429.0483 l
S
300 Ar
371.4844 429.252 m
366.5869 429.252 l
S
300 Ar
371.4844 429.4565 m
366.5869 429.4565 l
S
300 Ar
371.2803 429.6602 m
366.792 429.6602 l
S
300 Ar
371.0762 429.8643 m
366.9961 429.8643 l
S
300 Ar
371.0762 430.0679 m
366.9961 430.0679 l
S
300 Ar
370.8721 430.2725 m
367.2002 430.2725 l
S
300 Ar
370.8721 430.4761 m
367.2002 430.4761 l
S
300 Ar
370.668 430.6802 m
367.4043 430.6802 l
S
300 Ar
370.2598 430.8843 m
367.8125 430.8843 l
S
300 Ar
369.8525 431.0884 m
368.2197 431.0884 l
S
300 Ar
186.8638 299.5088 m
185.2319 299.5088 l
S
300 Ar
187.2725 299.7119 m
184.8237 299.7119 l
S
300 Ar
187.6807 299.916 m
184.417 299.916 l
S
300 Ar
187.8833 300.1201 m
184.2124 300.1201 l
S
300 Ar
187.8833 300.3242 m
184.2124 300.3242 l
S
300 Ar
188.0874 300.5283 m
184.0083 300.5283 l
S
300 Ar
188.0874 300.7324 m
184.0083 300.7324 l
S
300 Ar
188.2915 300.9365 m
183.8042 300.9365 l
S
300 Ar
188.4956 301.1406 m
183.6001 301.1406 l
S
300 Ar
188.4956 301.3447 m
183.6001 301.3447 l
S
300 Ar
188.4956 301.5479 m
183.6001 301.5479 l
S
300 Ar
188.4956 301.752 m
183.6001 301.752 l
S
300 Ar
188.4956 301.9561 m
183.6001 301.9561 l
S
300 Ar
188.4956 302.1602 m
183.6001 302.1602 l
S
300 Ar
188.4956 302.3643 m
183.6001 302.3643 l
S
300 Ar
188.2915 302.5684 m
183.8042 302.5684 l
S
300 Ar
188.0874 302.7725 m
184.0083 302.7725 l
S
300 Ar
188.0874 302.9766 m
184.0083 302.9766 l
S
300 Ar
187.8833 303.1797 m
184.2124 303.1797 l
S
300 Ar
187.8833 303.3838 m
184.2124 303.3838 l
S
300 Ar
187.6807 303.5879 m
184.417 303.5879 l
S
300 Ar
187.2725 303.792 m
184.8237 303.792 l
S
300 Ar
186.8638 303.9961 m
185.2319 303.9961 l
S
300 Ar
135.0488 285.0244 m
133.417 285.0244 l
S
300 Ar
135.4556 285.2285 m
133.0083 285.2285 l
S
300 Ar
135.8638 285.4316 m
132.6001 285.4316 l
S
300 Ar
136.0679 285.6357 m
132.396 285.6357 l
S
300 Ar
136.0679 285.8408 m
132.396 285.8408 l
S
300 Ar
136.2725 286.0449 m
132.1914 286.0449 l
S
300 Ar
136.2725 286.248 m
132.1914 286.248 l
S
300 Ar
136.4766 286.4521 m
131.9873 286.4521 l
S
300 Ar
136.6807 286.6563 m
131.7832 286.6563 l
S
300 Ar
136.6807 286.8604 m
131.7832 286.8604 l
S
300 Ar
136.6807 287.0635 m
131.7832 287.0635 l
S
300 Ar
136.6807 287.2686 m
131.7832 287.2686 l
S
300 Ar
136.6807 287.4727 m
131.7832 287.4727 l
S
300 Ar
136.6807 287.6768 m
131.7832 287.6768 l
S
300 Ar
136.6807 287.8799 m
131.7832 287.8799 l
S
300 Ar
136.4766 288.084 m
131.9873 288.084 l
S
300 Ar
136.2725 288.2881 m
132.1914 288.2881 l
S
300 Ar
136.2725 288.4922 m
132.1914 288.4922 l
S
300 Ar
136.0679 288.6963 m
132.396 288.6963 l
S
300 Ar
136.0679 288.9004 m
132.396 288.9004 l
S
300 Ar
135.8638 289.1045 m
132.6001 289.1045 l
S
300 Ar
135.4556 289.3086 m
133.0083 289.3086 l
S
300 Ar
135.0488 289.5117 m
133.417 289.5117 l
S
300 Ar
88.5361 242.3887 m
86.9043 242.3887 l
S
300 Ar
88.9443 242.5928 m
86.4956 242.5928 l
S
300 Ar
89.3511 242.7959 m
86.0874 242.7959 l
S
300 Ar
89.5557 243 m
85.8833 243 l
S
300 Ar
89.5557 243.2041 m
85.8833 243.2041 l
S
300 Ar
89.7598 243.4082 m
85.6807 243.4082 l
S
300 Ar
89.7598 243.6113 m
85.6807 243.6113 l
S
300 Ar
89.9639 243.8164 m
85.4766 243.8164 l
S
300 Ar
90.168 244.0205 m
85.2725 244.0205 l
S
300 Ar
90.168 244.2246 m
85.2725 244.2246 l
S
300 Ar
90.168 244.4287 m
85.2725 244.4287 l
S
300 Ar
90.168 244.6318 m
85.2725 244.6318 l
S
300 Ar
90.168 244.8359 m
85.2725 244.8359 l
S
300 Ar
90.168 245.04 m
85.2725 245.04 l
S
300 Ar
90.168 245.2441 m
85.2725 245.2441 l
S
300 Ar
89.9639 245.4482 m
85.4766 245.4482 l
S
300 Ar
89.7598 245.6523 m
85.6807 245.6523 l
S
300 Ar
89.7598 245.8564 m
85.6807 245.8564 l
S
300 Ar
89.5557 246.0605 m
85.8833 246.0605 l
S
300 Ar
89.5557 246.2637 m
85.8833 246.2637 l
S
300 Ar
89.3511 246.4678 m
86.0874 246.4678 l
S
300 Ar
88.9443 246.6719 m
86.4956 246.6719 l
S
300 Ar
88.5361 246.877 m
86.9043 246.877 l
S
300 Ar
329.46 408.0361 m
327.8281 408.0361 l
S
300 Ar
329.8682 408.2402 m
327.4199 408.2402 l
S
300 Ar
330.2764 408.4443 m
327.0127 408.4443 l
S
300 Ar
330.4795 408.6484 m
326.8086 408.6484 l
S
300 Ar
330.4795 408.8521 m
326.8086 408.8521 l
S
300 Ar
330.6836 409.0562 m
326.6045 409.0562 l
S
300 Ar
330.6836 409.2603 m
326.6045 409.2603 l
S
300 Ar
330.8877 409.4644 m
326.4004 409.4644 l
S
300 Ar
331.0918 409.668 m
326.1953 409.668 l
S
300 Ar
331.0918 409.8721 m
326.1953 409.8721 l
S
300 Ar
331.0918 410.0762 m
326.1953 410.0762 l
S
300 Ar
331.0918 410.2803 m
326.1953 410.2803 l
S
300 Ar
331.0918 410.4839 m
326.1953 410.4839 l
S
300 Ar
331.0918 410.6885 m
326.1953 410.6885 l
S
300 Ar
331.0918 410.8921 m
326.1953 410.8921 l
S
300 Ar
330.8877 411.0962 m
326.4004 411.0962 l
S
300 Ar
330.6836 411.2998 m
326.6045 411.2998 l
S
300 Ar
330.6836 411.5044 m
326.6045 411.5044 l
S
300 Ar
330.4795 411.7085 m
326.8086 411.7085 l
S
300 Ar
330.4795 411.9121 m
326.8086 411.9121 l
S
300 Ar
330.2764 412.1162 m
327.0127 412.1162 l
S
300 Ar
329.8682 412.3203 m
327.4199 412.3203 l
S
300 Ar
329.46 412.5244 m
327.8281 412.5244 l
S
300 Ar
467.3643 486.9839 m
465.7314 486.9839 l
S
300 Ar
467.7725 487.1885 m
465.3232 487.1885 l
S
300 Ar
468.1797 487.3921 m
464.916 487.3921 l
S
300 Ar
468.3838 487.5962 m
464.7129 487.5962 l
S
300 Ar
468.3838 487.7998 m
464.7129 487.7998 l
S
300 Ar
468.5869 488.0044 m
464.5088 488.0044 l
S
300 Ar
468.5869 488.208 m
464.5088 488.208 l
S
300 Ar
468.792 488.4121 m
464.3037 488.4121 l
S
300 Ar
468.9961 488.6162 m
464.0996 488.6162 l
S
300 Ar
468.9961 488.8203 m
464.0996 488.8203 l
S
300 Ar
468.9961 489.0244 m
464.0996 489.0244 l
S
300 Ar
468.9961 489.228 m
464.0996 489.228 l
S
300 Ar
468.9961 489.4321 m
464.0996 489.4321 l
S
300 Ar
468.9961 489.6362 m
464.0996 489.6362 l
S
300 Ar
468.9961 489.8403 m
464.0996 489.8403 l
S
300 Ar
468.792 490.0439 m
464.3037 490.0439 l
S
300 Ar
468.5869 490.2485 m
464.5088 490.2485 l
S
300 Ar
468.5869 490.4521 m
464.5088 490.4521 l
S
300 Ar
468.3838 490.6563 m
464.7129 490.6563 l
S
300 Ar
468.3838 490.8599 m
464.7129 490.8599 l
S
300 Ar
468.1797 491.0645 m
464.916 491.0645 l
S
300 Ar
467.7725 491.2681 m
465.3232 491.2681 l
S
*U
*u
300 Ar
467.3643 491.4722 m
465.7314 491.4722 l
S
300 Ar
271.1167 370.9082 m
269.4834 370.9082 l
S
300 Ar
271.5234 371.1113 m
269.0767 371.1113 l
S
300 Ar
271.9321 371.3164 m
268.668 371.3164 l
S
300 Ar
272.1362 371.5205 m
268.4639 371.5205 l
S
300 Ar
272.1362 371.7246 m
268.4639 371.7246 l
S
300 Ar
272.3403 371.9287 m
268.2598 371.9287 l
S
300 Ar
272.3403 372.1318 m
268.2598 372.1318 l
S
300 Ar
272.5444 372.3359 m
268.0557 372.3359 l
S
300 Ar
272.7485 372.54 m
267.8511 372.54 l
S
300 Ar
272.7485 372.7441 m
267.8511 372.7441 l
S
300 Ar
272.7485 372.9482 m
267.8511 372.9482 l
S
300 Ar
272.7485 373.1523 m
267.8511 373.1523 l
S
300 Ar
272.7485 373.3564 m
267.8511 373.3564 l
S
300 Ar
272.7485 373.5605 m
267.8511 373.5605 l
S
300 Ar
272.7485 373.7637 m
267.8511 373.7637 l
S
300 Ar
272.5444 373.9678 m
268.0557 373.9678 l
S
300 Ar
272.3403 374.1719 m
268.2598 374.1719 l
S
300 Ar
272.3403 374.377 m
268.2598 374.377 l
S
300 Ar
272.1362 374.5801 m
268.4639 374.5801 l
S
300 Ar
272.1362 374.7842 m
268.4639 374.7842 l
S
300 Ar
271.9321 374.9883 m
268.668 374.9883 l
S
300 Ar
271.5234 375.1924 m
269.0767 375.1924 l
S
300 Ar
271.1167 375.3955 m
269.4834 375.3955 l
S
300 Ar
135.0488 266.2559 m
133.417 266.2559 l
S
300 Ar
135.4556 266.4609 m
133.0083 266.4609 l
S
300 Ar
135.8638 266.6641 m
132.6001 266.6641 l
S
300 Ar
136.0679 266.8682 m
132.396 266.8682 l
S
300 Ar
136.0679 267.0723 m
132.396 267.0723 l
S
300 Ar
136.2725 267.2764 m
132.1914 267.2764 l
S
300 Ar
136.2725 267.4795 m
132.1914 267.4795 l
S
300 Ar
136.4766 267.6836 m
131.9873 267.6836 l
S
300 Ar
136.6807 267.8887 m
131.7832 267.8887 l
S
300 Ar
136.6807 268.0928 m
131.7832 268.0928 l
S
300 Ar
136.6807 268.2959 m
131.7832 268.2959 l
S
300 Ar
136.6807 268.5 m
131.7832 268.5 l
S
300 Ar
136.6807 268.7041 m
131.7832 268.7041 l
S
300 Ar
136.6807 268.9082 m
131.7832 268.9082 l
S
300 Ar
136.6807 269.1113 m
131.7832 269.1113 l
S
300 Ar
136.4766 269.3164 m
131.9873 269.3164 l
S
300 Ar
136.2725 269.5205 m
132.1914 269.5205 l
S
300 Ar
136.2725 269.7246 m
132.1914 269.7246 l
S
300 Ar
136.0679 269.9287 m
132.396 269.9287 l
S
300 Ar
136.0679 270.1318 m
132.396 270.1318 l
S
300 Ar
135.8638 270.3359 m
132.6001 270.3359 l
S
300 Ar
135.4556 270.54 m
133.0083 270.54 l
S
300 Ar
135.0488 270.7441 m
133.417 270.7441 l
S
300 Ar
145.0444 272.9883 m
143.4126 272.9883 l
S
300 Ar
145.4512 273.1924 m
143.0044 273.1924 l
S
300 Ar
145.8599 273.3955 m
142.5957 273.3955 l
S
300 Ar
146.064 273.5996 m
142.3916 273.5996 l
S
300 Ar
146.064 273.8047 m
142.3916 273.8047 l
S
300 Ar
146.2681 274.0088 m
142.1875 274.0088 l
S
300 Ar
146.2681 274.2119 m
142.1875 274.2119 l
S
300 Ar
146.4722 274.416 m
141.9834 274.416 l
S
300 Ar
146.6763 274.6201 m
141.7808 274.6201 l
S
300 Ar
146.6763 274.8242 m
141.7808 274.8242 l
S
300 Ar
146.6763 275.0283 m
141.7808 275.0283 l
S
300 Ar
146.6763 275.2324 m
141.7808 275.2324 l
S
300 Ar
146.6763 275.4365 m
141.7808 275.4365 l
S
300 Ar
146.6763 275.6406 m
141.7808 275.6406 l
S
300 Ar
146.6763 275.8447 m
141.7808 275.8447 l
S
300 Ar
146.4722 276.0479 m
141.9834 276.0479 l
S
300 Ar
146.2681 276.252 m
142.1875 276.252 l
S
300 Ar
146.2681 276.4561 m
142.1875 276.4561 l
S
300 Ar
146.064 276.6602 m
142.3916 276.6602 l
S
300 Ar
146.064 276.8643 m
142.3916 276.8643 l
S
300 Ar
145.8599 277.0684 m
142.5957 277.0684 l
S
300 Ar
145.4512 277.2725 m
143.0044 277.2725 l
S
300 Ar
145.0444 277.4766 m
143.4126 277.4766 l
S
300 Ar
237.0488 350.5088 m
235.417 350.5088 l
S
300 Ar
237.4556 350.7119 m
235.0083 350.7119 l
S
300 Ar
237.8638 350.916 m
234.6001 350.916 l
S
300 Ar
238.0679 351.1201 m
234.396 351.1201 l
S
300 Ar
238.0679 351.3242 m
234.396 351.3242 l
S
300 Ar
238.2725 351.5283 m
234.1914 351.5283 l
S
300 Ar
238.2725 351.7324 m
234.1914 351.7324 l
S
300 Ar
238.4766 351.9365 m
233.9873 351.9365 l
S
300 Ar
238.6807 352.1406 m
233.7832 352.1406 l
S
300 Ar
238.6807 352.3447 m
233.7832 352.3447 l
S
300 Ar
238.6807 352.5479 m
233.7832 352.5479 l
S
300 Ar
238.6807 352.752 m
233.7832 352.752 l
S
300 Ar
238.6807 352.9561 m
233.7832 352.9561 l
S
300 Ar
238.6807 353.1602 m
233.7832 353.1602 l
S
300 Ar
238.6807 353.3643 m
233.7832 353.3643 l
S
300 Ar
238.4766 353.5684 m
233.9873 353.5684 l
S
300 Ar
238.2725 353.7725 m
234.1914 353.7725 l
S
300 Ar
238.2725 353.9766 m
234.1914 353.9766 l
S
300 Ar
238.0679 354.1797 m
234.396 354.1797 l
S
300 Ar
238.0679 354.3838 m
234.396 354.3838 l
S
300 Ar
237.8638 354.5879 m
234.6001 354.5879 l
S
300 Ar
237.4556 354.792 m
235.0083 354.792 l
S
300 Ar
237.0488 354.9961 m
235.417 354.9961 l
S
300 Ar
499.1875 500.6523 m
497.5557 500.6523 l
S
300 Ar
499.5957 500.8564 m
497.1475 500.8564 l
S
300 Ar
500.0039 501.0601 m
496.7402 501.0601 l
S
300 Ar
500.208 501.2642 m
496.5361 501.2642 l
S
300 Ar
500.208 501.4683 m
496.5361 501.4683 l
S
300 Ar
500.4121 501.6724 m
496.332 501.6724 l
S
300 Ar
500.4121 501.876 m
496.332 501.876 l
S
300 Ar
500.6162 502.0801 m
496.1279 502.0801 l
S
300 Ar
500.8203 502.2842 m
495.9238 502.2842 l
S
300 Ar
500.8203 502.4883 m
495.9238 502.4883 l
S
300 Ar
500.8203 502.6919 m
495.9238 502.6919 l
S
300 Ar
500.8203 502.896 m
495.9238 502.896 l
S
300 Ar
500.8203 503.1001 m
495.9238 503.1001 l
S
300 Ar
500.8203 503.3042 m
495.9238 503.3042 l
S
300 Ar
500.8203 503.5078 m
495.9238 503.5078 l
S
300 Ar
500.6162 503.7124 m
496.1279 503.7124 l
S
300 Ar
500.4121 503.9165 m
496.332 503.9165 l
S
300 Ar
500.4121 504.1201 m
496.332 504.1201 l
S
300 Ar
500.208 504.3242 m
496.5361 504.3242 l
S
300 Ar
500.208 504.5283 m
496.5361 504.5283 l
S
300 Ar
500.0039 504.7324 m
496.7402 504.7324 l
S
300 Ar
499.5957 504.936 m
497.1475 504.936 l
S
300 Ar
499.1875 505.1401 m
497.5557 505.1401 l
S
300 Ar
207.4683 318.8887 m
205.8359 318.8887 l
S
300 Ar
207.8765 319.0928 m
205.4277 319.0928 l
S
300 Ar
208.2832 319.2959 m
205.0195 319.2959 l
S
300 Ar
208.4873 319.5 m
204.8169 319.5 l
S
300 Ar
208.4873 319.7041 m
204.8169 319.7041 l
S
300 Ar
208.6914 319.9082 m
204.6128 319.9082 l
S
300 Ar
208.6914 320.1113 m
204.6128 320.1113 l
S
300 Ar
208.896 320.3164 m
204.4082 320.3164 l
S
300 Ar
209.1001 320.5205 m
204.2041 320.5205 l
S
300 Ar
209.1001 320.7246 m
204.2041 320.7246 l
S
300 Ar
209.1001 320.9287 m
204.2041 320.9287 l
S
300 Ar
209.1001 321.1318 m
204.2041 321.1318 l
S
300 Ar
209.1001 321.3359 m
204.2041 321.3359 l
S
300 Ar
209.1001 321.54 m
204.2041 321.54 l
S
300 Ar
209.1001 321.7441 m
204.2041 321.7441 l
S
300 Ar
208.896 321.9482 m
204.4082 321.9482 l
S
300 Ar
208.6914 322.1523 m
204.6128 322.1523 l
S
300 Ar
208.6914 322.3564 m
204.6128 322.3564 l
S
300 Ar
208.4873 322.5605 m
204.8169 322.5605 l
S
300 Ar
208.4873 322.7637 m
204.8169 322.7637 l
S
300 Ar
208.2832 322.9678 m
205.0195 322.9678 l
S
300 Ar
207.8765 323.1719 m
205.4277 323.1719 l
S
300 Ar
207.4683 323.377 m
205.8359 323.377 l
S
300 Ar
101.3872 257.4844 m
99.7554 257.4844 l
S
300 Ar
101.7959 257.6885 m
99.3486 257.6885 l
S
300 Ar
102.2041 257.8926 m
98.9404 257.8926 l
S
300 Ar
102.4082 258.0957 m
98.7363 258.0957 l
S
300 Ar
102.4082 258.2998 m
98.7363 258.2998 l
S
300 Ar
102.6128 258.5039 m
98.5317 258.5039 l
S
300 Ar
102.6128 258.708 m
98.5317 258.708 l
S
300 Ar
102.8169 258.9121 m
98.3276 258.9121 l
S
300 Ar
103.0195 259.1162 m
98.1235 259.1162 l
S
300 Ar
103.0195 259.3203 m
98.1235 259.3203 l
S
300 Ar
103.0195 259.5244 m
98.1235 259.5244 l
S
300 Ar
103.0195 259.7285 m
98.1235 259.7285 l
S
300 Ar
103.0195 259.9316 m
98.1235 259.9316 l
S
300 Ar
103.0195 260.1357 m
98.1235 260.1357 l
S
300 Ar
103.0195 260.3408 m
98.1235 260.3408 l
S
300 Ar
102.8169 260.5449 m
98.3276 260.5449 l
S
300 Ar
102.6128 260.748 m
98.5317 260.748 l
S
300 Ar
102.6128 260.9521 m
98.5317 260.9521 l
S
300 Ar
102.4082 261.1563 m
98.7363 261.1563 l
S
300 Ar
102.4082 261.3604 m
98.7363 261.3604 l
S
300 Ar
102.2041 261.5635 m
98.9404 261.5635 l
S
300 Ar
101.7959 261.7686 m
99.3486 261.7686 l
S
300 Ar
101.3872 261.9727 m
99.7554 261.9727 l
S
300 Ar
520.4043 542.8804 m
518.7725 542.8804 l
S
300 Ar
520.8125 543.084 m
518.3643 543.084 l
S
300 Ar
521.2197 543.2881 m
517.9551 543.2881 l
S
300 Ar
521.4238 543.4922 m
517.752 543.4922 l
S
300 Ar
521.4238 543.6963 m
517.752 543.6963 l
S
300 Ar
521.6279 543.8999 m
517.5479 543.8999 l
S
300 Ar
521.6279 544.104 m
517.5479 544.104 l
S
300 Ar
521.832 544.3081 m
517.3447 544.3081 l
S
300 Ar
522.0361 544.5122 m
517.1406 544.5122 l
S
300 Ar
522.0361 544.7158 m
517.1406 544.7158 l
S
300 Ar
522.0361 544.9204 m
517.1406 544.9204 l
S
300 Ar
522.0361 545.1245 m
517.1406 545.1245 l
S
300 Ar
522.0361 545.3281 m
517.1406 545.3281 l
S
300 Ar
522.0361 545.5322 m
517.1406 545.5322 l
S
300 Ar
522.0361 545.7363 m
517.1406 545.7363 l
S
300 Ar
521.832 545.9404 m
517.3447 545.9404 l
S
300 Ar
521.6279 546.144 m
517.5479 546.144 l
S
300 Ar
521.6279 546.3481 m
517.5479 546.3481 l
S
300 Ar
521.4238 546.5522 m
517.752 546.5522 l
S
300 Ar
521.4238 546.7563 m
517.752 546.7563 l
S
300 Ar
521.2197 546.96 m
517.9551 546.96 l
S
300 Ar
520.8125 547.1641 m
518.3643 547.1641 l
S
300 Ar
520.4043 547.3682 m
518.7725 547.3682 l
S
300 Ar
58.9556 222.5996 m
57.3237 222.5996 l
S
300 Ar
59.3638 222.8047 m
56.917 222.8047 l
S
300 Ar
59.7725 223.0088 m
56.5083 223.0088 l
S
300 Ar
59.9766 223.2119 m
56.3042 223.2119 l
S
300 Ar
59.9766 223.416 m
56.3042 223.416 l
S
300 Ar
60.1807 223.6201 m
56.1001 223.6201 l
S
300 Ar
60.1807 223.8242 m
56.1001 223.8242 l
S
300 Ar
60.3833 224.0283 m
55.896 224.0283 l
S
300 Ar
60.5874 224.2324 m
55.6914 224.2324 l
S
300 Ar
60.5874 224.4365 m
55.6914 224.4365 l
S
300 Ar
60.5874 224.6406 m
55.6914 224.6406 l
S
300 Ar
60.5874 224.8447 m
55.6914 224.8447 l
S
300 Ar
60.5874 225.0479 m
55.6914 225.0479 l
S
300 Ar
60.5874 225.252 m
55.6914 225.252 l
S
300 Ar
60.5874 225.4561 m
55.6914 225.4561 l
S
*U
*u
300 Ar
60.3833 225.6602 m
55.896 225.6602 l
S
300 Ar
60.1807 225.8643 m
56.1001 225.8643 l
S
300 Ar
60.1807 226.0684 m
56.1001 226.0684 l
S
300 Ar
59.9766 226.2725 m
56.3042 226.2725 l
S
300 Ar
59.9766 226.4766 m
56.3042 226.4766 l
S
300 Ar
59.7725 226.6797 m
56.5083 226.6797 l
S
300 Ar
59.3638 226.8838 m
56.917 226.8838 l
S
300 Ar
58.9556 227.0879 m
57.3237 227.0879 l
S
300 Ar
252.5513 339.2881 m
250.9194 339.2881 l
S
300 Ar
252.9595 339.4922 m
250.5127 339.4922 l
S
300 Ar
253.3682 339.6963 m
250.104 339.6963 l
S
300 Ar
253.5723 339.9004 m
249.8999 339.9004 l
S
300 Ar
253.5723 340.1045 m
249.8999 340.1045 l
S
300 Ar
253.7764 340.3086 m
249.6958 340.3086 l
S
300 Ar
253.7764 340.5117 m
249.6958 340.5117 l
S
300 Ar
253.9805 340.7158 m
249.4917 340.7158 l
S
300 Ar
254.1831 340.9199 m
249.2876 340.9199 l
S
300 Ar
254.1831 341.124 m
249.2876 341.124 l
S
300 Ar
254.1831 341.3281 m
249.2876 341.3281 l
S
300 Ar
254.1831 341.5322 m
249.2876 341.5322 l
S
300 Ar
254.1831 341.7363 m
249.2876 341.7363 l
S
300 Ar
254.1831 341.9404 m
249.2876 341.9404 l
S
300 Ar
254.1831 342.1445 m
249.2876 342.1445 l
S
300 Ar
253.9805 342.3477 m
249.4917 342.3477 l
S
300 Ar
253.7764 342.5518 m
249.6958 342.5518 l
S
300 Ar
253.7764 342.7559 m
249.6958 342.7559 l
S
300 Ar
253.5723 342.9609 m
249.8999 342.9609 l
S
300 Ar
253.5723 343.1641 m
249.8999 343.1641 l
S
300 Ar
253.3682 343.3682 m
250.104 343.3682 l
S
300 Ar
252.9595 343.5723 m
250.5127 343.5723 l
S
300 Ar
252.5513 343.7764 m
250.9194 343.7764 l
S
300 Ar
124.6445 280.1289 m
123.0127 280.1289 l
S
300 Ar
125.0513 280.332 m
122.604 280.332 l
S
300 Ar
125.4595 280.5361 m
122.1958 280.5361 l
S
300 Ar
125.6641 280.7402 m
121.9917 280.7402 l
S
300 Ar
125.6641 280.9443 m
121.9917 280.9443 l
S
300 Ar
125.8682 281.1475 m
121.7876 281.1475 l
S
300 Ar
125.8682 281.3525 m
121.7876 281.3525 l
S
300 Ar
126.0723 281.5566 m
121.583 281.5566 l
S
300 Ar
126.2764 281.7607 m
121.3809 281.7607 l
S
300 Ar
126.2764 281.9639 m
121.3809 281.9639 l
S
300 Ar
126.2764 282.168 m
121.3809 282.168 l
S
300 Ar
126.2764 282.3721 m
121.3809 282.3721 l
S
300 Ar
126.2764 282.5762 m
121.3809 282.5762 l
S
300 Ar
126.2764 282.7803 m
121.3809 282.7803 l
S
300 Ar
126.2764 282.9844 m
121.3809 282.9844 l
S
300 Ar
126.0723 283.1885 m
121.583 283.1885 l
S
300 Ar
125.8682 283.3926 m
121.7876 283.3926 l
S
300 Ar
125.8682 283.5957 m
121.7876 283.5957 l
S
300 Ar
125.6641 283.7998 m
121.9917 283.7998 l
S
300 Ar
125.6641 284.0039 m
121.9917 284.0039 l
S
300 Ar
125.4595 284.208 m
122.1958 284.208 l
S
300 Ar
125.0513 284.4121 m
122.604 284.4121 l
S
300 Ar
124.6445 284.6162 m
123.0127 284.6162 l
S
300 Ar
247.6553 334.3926 m
246.0234 334.3926 l
S
300 Ar
248.064 334.5957 m
245.6167 334.5957 l
S
300 Ar
248.4722 334.7998 m
245.2085 334.7998 l
S
300 Ar
248.6763 335.0039 m
245.0044 335.0039 l
S
300 Ar
248.6763 335.208 m
245.0044 335.208 l
S
300 Ar
248.8809 335.4121 m
244.7998 335.4121 l
S
300 Ar
248.8809 335.6162 m
244.7998 335.6162 l
S
300 Ar
249.083 335.8203 m
244.5957 335.8203 l
S
300 Ar
249.2876 336.0244 m
244.3916 336.0244 l
S
300 Ar
249.2876 336.2285 m
244.3916 336.2285 l
S
300 Ar
249.2876 336.4316 m
244.3916 336.4316 l
S
300 Ar
249.2876 336.6357 m
244.3916 336.6357 l
S
300 Ar
249.2876 336.8408 m
244.3916 336.8408 l
S
300 Ar
249.2876 337.0449 m
244.3916 337.0449 l
S
300 Ar
249.2876 337.248 m
244.3916 337.248 l
S
300 Ar
249.083 337.4521 m
244.5957 337.4521 l
S
300 Ar
248.8809 337.6563 m
244.7998 337.6563 l
S
300 Ar
248.8809 337.8604 m
244.7998 337.8604 l
S
300 Ar
248.6763 338.0635 m
245.0044 338.0635 l
S
300 Ar
248.6763 338.2686 m
245.0044 338.2686 l
S
300 Ar
248.4722 338.4727 m
245.2085 338.4727 l
S
300 Ar
248.064 338.6768 m
245.6167 338.6768 l
S
300 Ar
247.6553 338.8799 m
246.0234 338.8799 l
S
300 Ar
74.2554 233.208 m
72.6235 233.208 l
S
300 Ar
74.6641 233.4121 m
72.2168 233.4121 l
S
300 Ar
75.0723 233.6162 m
71.8086 233.6162 l
S
300 Ar
75.2764 233.8203 m
71.604 233.8203 l
S
300 Ar
75.2764 234.0244 m
71.604 234.0244 l
S
300 Ar
75.4805 234.2285 m
71.3999 234.2285 l
S
300 Ar
75.4805 234.4316 m
71.3999 234.4316 l
S
300 Ar
75.6831 234.6357 m
71.1958 234.6357 l
S
300 Ar
75.8872 234.8408 m
70.9917 234.8408 l
S
300 Ar
75.8872 235.0449 m
70.9917 235.0449 l
S
300 Ar
75.8872 235.248 m
70.9917 235.248 l
S
300 Ar
75.8872 235.4521 m
70.9917 235.4521 l
S
300 Ar
75.8872 235.6563 m
70.9917 235.6563 l
S
300 Ar
75.8872 235.8604 m
70.9917 235.8604 l
S
300 Ar
75.8872 236.0635 m
70.9917 236.0635 l
S
300 Ar
75.6831 236.2686 m
71.1958 236.2686 l
S
300 Ar
75.4805 236.4727 m
71.3999 236.4727 l
S
300 Ar
75.4805 236.6768 m
71.3999 236.6768 l
S
300 Ar
75.2764 236.8799 m
71.604 236.8799 l
S
300 Ar
75.2764 237.084 m
71.604 237.084 l
S
300 Ar
75.0723 237.2881 m
71.8086 237.2881 l
S
300 Ar
74.6641 237.4922 m
72.2168 237.4922 l
S
300 Ar
74.2554 237.6963 m
72.6235 237.6963 l
S
300 Ar
88.5361 280.7402 m
86.9043 280.7402 l
S
300 Ar
88.9443 280.9443 m
86.4956 280.9443 l
S
300 Ar
89.3511 281.1475 m
86.0874 281.1475 l
S
300 Ar
89.5557 281.3525 m
85.8833 281.3525 l
S
300 Ar
89.5557 281.5566 m
85.8833 281.5566 l
S
300 Ar
89.7598 281.7607 m
85.6807 281.7607 l
S
300 Ar
89.7598 281.9639 m
85.6807 281.9639 l
S
300 Ar
89.9639 282.168 m
85.4766 282.168 l
S
300 Ar
90.168 282.3721 m
85.2725 282.3721 l
S
300 Ar
90.168 282.5762 m
85.2725 282.5762 l
S
300 Ar
90.168 282.7803 m
85.2725 282.7803 l
S
300 Ar
90.168 282.9844 m
85.2725 282.9844 l
S
300 Ar
90.168 283.1885 m
85.2725 283.1885 l
S
300 Ar
90.168 283.3926 m
85.2725 283.3926 l
S
300 Ar
90.168 283.5957 m
85.2725 283.5957 l
S
300 Ar
89.9639 283.7998 m
85.4766 283.7998 l
S
300 Ar
89.7598 284.0039 m
85.6807 284.0039 l
S
300 Ar
89.7598 284.208 m
85.6807 284.208 l
S
300 Ar
89.5557 284.4121 m
85.8833 284.4121 l
S
300 Ar
89.5557 284.6162 m
85.8833 284.6162 l
S
300 Ar
89.3511 284.8203 m
86.0874 284.8203 l
S
300 Ar
88.9443 285.0244 m
86.4956 285.0244 l
S
300 Ar
88.5361 285.2285 m
86.9043 285.2285 l
S
300 Ar
113.4233 276.252 m
111.7915 276.252 l
S
300 Ar
113.832 276.4561 m
111.3833 276.4561 l
S
300 Ar
114.2402 276.6602 m
110.9766 276.6602 l
S
300 Ar
114.4443 276.8643 m
110.7725 276.8643 l
S
300 Ar
114.4443 277.0684 m
110.7725 277.0684 l
S
300 Ar
114.6489 277.2725 m
110.5679 277.2725 l
S
300 Ar
114.6489 277.4766 m
110.5679 277.4766 l
S
300 Ar
114.8511 277.6797 m
110.3638 277.6797 l
S
300 Ar
115.0557 277.8838 m
110.1597 277.8838 l
S
300 Ar
115.0557 278.0879 m
110.1597 278.0879 l
S
300 Ar
115.0557 278.292 m
110.1597 278.292 l
S
300 Ar
115.0557 278.4961 m
110.1597 278.4961 l
S
300 Ar
115.0557 278.7002 m
110.1597 278.7002 l
S
300 Ar
115.0557 278.9043 m
110.1597 278.9043 l
S
300 Ar
115.0557 279.1084 m
110.1597 279.1084 l
S
300 Ar
114.8511 279.3115 m
110.3638 279.3115 l
S
300 Ar
114.6489 279.5156 m
110.5679 279.5156 l
S
300 Ar
114.6489 279.7197 m
110.5679 279.7197 l
S
300 Ar
114.4443 279.9248 m
110.7725 279.9248 l
S
300 Ar
114.4443 280.1289 m
110.7725 280.1289 l
S
300 Ar
114.2402 280.332 m
110.9766 280.332 l
S
300 Ar
113.832 280.5361 m
111.3833 280.5361 l
S
300 Ar
113.4233 280.7402 m
111.7915 280.7402 l
S
300 Ar
213.7915 333.5762 m
212.1597 333.5762 l
S
300 Ar
214.2002 333.7803 m
211.7515 333.7803 l
S
300 Ar
214.6084 333.9844 m
211.3447 333.9844 l
S
300 Ar
214.8125 334.1885 m
211.1401 334.1885 l
S
300 Ar
214.8125 334.3926 m
211.1401 334.3926 l
S
300 Ar
215.0166 334.5957 m
210.936 334.5957 l
S
300 Ar
215.0166 334.7998 m
210.936 334.7998 l
S
300 Ar
215.2192 335.0039 m
210.7319 335.0039 l
S
300 Ar
215.4233 335.208 m
210.5278 335.208 l
S
300 Ar
215.4233 335.4121 m
210.5278 335.4121 l
S
300 Ar
215.4233 335.6162 m
210.5278 335.6162 l
S
300 Ar
215.4233 335.8203 m
210.5278 335.8203 l
S
300 Ar
215.4233 336.0244 m
210.5278 336.0244 l
S
300 Ar
215.4233 336.2285 m
210.5278 336.2285 l
S
300 Ar
215.4233 336.4316 m
210.5278 336.4316 l
S
300 Ar
215.2192 336.6357 m
210.7319 336.6357 l
S
300 Ar
215.0166 336.8408 m
210.936 336.8408 l
S
300 Ar
215.0166 337.0449 m
210.936 337.0449 l
S
300 Ar
214.8125 337.248 m
211.1401 337.248 l
S
300 Ar
214.8125 337.4521 m
211.1401 337.4521 l
S
300 Ar
214.6084 337.6563 m
211.3447 337.6563 l
S
300 Ar
214.2002 337.8604 m
211.7515 337.8604 l
S
300 Ar
213.7915 338.0635 m
212.1597 338.0635 l
S
300 Ar
520.4043 522.0723 m
518.7725 522.0723 l
S
300 Ar
520.8125 522.2759 m
518.3643 522.2759 l
S
300 Ar
521.2197 522.4805 m
517.9551 522.4805 l
S
300 Ar
521.4238 522.6841 m
517.752 522.6841 l
S
300 Ar
521.4238 522.8882 m
517.752 522.8882 l
S
300 Ar
521.6279 523.0918 m
517.5479 523.0918 l
S
300 Ar
521.6279 523.2964 m
517.5479 523.2964 l
S
300 Ar
521.832 523.5 m
517.3447 523.5 l
S
300 Ar
522.0361 523.7041 m
517.1406 523.7041 l
S
300 Ar
522.0361 523.9082 m
517.1406 523.9082 l
S
300 Ar
522.0361 524.1123 m
517.1406 524.1123 l
S
300 Ar
522.0361 524.3159 m
517.1406 524.3159 l
S
300 Ar
522.0361 524.52 m
517.1406 524.52 l
S
300 Ar
522.0361 524.7246 m
517.1406 524.7246 l
S
300 Ar
522.0361 524.9282 m
517.1406 524.9282 l
S
300 Ar
521.832 525.1323 m
517.3447 525.1323 l
S
300 Ar
521.6279 525.3359 m
517.5479 525.3359 l
S
300 Ar
521.6279 525.5405 m
517.5479 525.5405 l
S
300 Ar
521.4238 525.7441 m
517.752 525.7441 l
S
300 Ar
521.4238 525.9482 m
517.752 525.9482 l
S
300 Ar
521.2197 526.1523 m
517.9551 526.1523 l
S
300 Ar
520.8125 526.3564 m
518.3643 526.3564 l
S
300 Ar
520.4043 526.5601 m
518.7725 526.5601 l
S
300 Ar
527.748 534.5161 m
526.1162 534.5161 l
S
300 Ar
528.1553 534.7202 m
525.708 534.7202 l
S
300 Ar
528.5635 534.9243 m
525.2998 534.9243 l
S
300 Ar
528.7676 535.1279 m
525.0957 535.1279 l
S
300 Ar
528.7676 535.3325 m
525.0957 535.3325 l
S
300 Ar
528.9727 535.5361 m
524.8916 535.5361 l
S
300 Ar
528.9727 535.7402 m
524.8916 535.7402 l
S
300 Ar
529.1768 535.9443 m
524.6875 535.9443 l
S
*U
*u
300 Ar
529.3799 536.1484 m
524.4844 536.1484 l
S
300 Ar
529.3799 536.3521 m
524.4844 536.3521 l
S
300 Ar
529.3799 536.5562 m
524.4844 536.5562 l
S
300 Ar
529.3799 536.7603 m
524.4844 536.7603 l
S
300 Ar
529.3799 536.9644 m
524.4844 536.9644 l
S
300 Ar
529.3799 537.168 m
524.4844 537.168 l
S
300 Ar
529.3799 537.3721 m
524.4844 537.3721 l
S
300 Ar
529.1768 537.5762 m
524.6875 537.5762 l
S
300 Ar
528.9727 537.7803 m
524.8916 537.7803 l
S
300 Ar
528.9727 537.9839 m
524.8916 537.9839 l
S
300 Ar
528.7676 538.1885 m
525.0957 538.1885 l
S
300 Ar
528.7676 538.3921 m
525.0957 538.3921 l
S
300 Ar
528.5635 538.5962 m
525.2998 538.5962 l
S
300 Ar
528.1553 538.7998 m
525.708 538.7998 l
S
300 Ar
527.748 539.0044 m
526.1162 539.0044 l
S
300 Ar
58.9556 222.5996 m
57.3237 222.5996 l
S
300 Ar
59.3638 222.8047 m
56.917 222.8047 l
S
300 Ar
59.7725 223.0088 m
56.5083 223.0088 l
S
300 Ar
59.9766 223.2119 m
56.3042 223.2119 l
S
300 Ar
59.9766 223.416 m
56.3042 223.416 l
S
300 Ar
60.1807 223.6201 m
56.1001 223.6201 l
S
300 Ar
60.1807 223.8242 m
56.1001 223.8242 l
S
300 Ar
60.3833 224.0283 m
55.896 224.0283 l
S
300 Ar
60.5874 224.2324 m
55.6914 224.2324 l
S
300 Ar
60.5874 224.4365 m
55.6914 224.4365 l
S
300 Ar
60.5874 224.6406 m
55.6914 224.6406 l
S
300 Ar
60.5874 224.8447 m
55.6914 224.8447 l
S
300 Ar
60.5874 225.0479 m
55.6914 225.0479 l
S
300 Ar
60.5874 225.252 m
55.6914 225.252 l
S
300 Ar
60.5874 225.4561 m
55.6914 225.4561 l
S
300 Ar
60.3833 225.6602 m
55.896 225.6602 l
S
300 Ar
60.1807 225.8643 m
56.1001 225.8643 l
S
300 Ar
60.1807 226.0684 m
56.1001 226.0684 l
S
300 Ar
59.9766 226.2725 m
56.3042 226.2725 l
S
300 Ar
59.9766 226.4766 m
56.3042 226.4766 l
S
300 Ar
59.7725 226.6797 m
56.5083 226.6797 l
S
300 Ar
59.3638 226.8838 m
56.917 226.8838 l
S
300 Ar
58.9556 227.0879 m
57.3237 227.0879 l
S
300 Ar
135.0488 259.3203 m
133.417 259.3203 l
S
300 Ar
135.4556 259.5244 m
133.0083 259.5244 l
S
300 Ar
135.8638 259.7285 m
132.6001 259.7285 l
S
300 Ar
136.0679 259.9316 m
132.396 259.9316 l
S
300 Ar
136.0679 260.1357 m
132.396 260.1357 l
S
300 Ar
136.2725 260.3408 m
132.1914 260.3408 l
S
300 Ar
136.2725 260.5449 m
132.1914 260.5449 l
S
300 Ar
136.4766 260.748 m
131.9873 260.748 l
S
300 Ar
136.6807 260.9521 m
131.7832 260.9521 l
S
300 Ar
136.6807 261.1563 m
131.7832 261.1563 l
S
300 Ar
136.6807 261.3604 m
131.7832 261.3604 l
S
300 Ar
136.6807 261.5635 m
131.7832 261.5635 l
S
300 Ar
136.6807 261.7686 m
131.7832 261.7686 l
S
300 Ar
136.6807 261.9727 m
131.7832 261.9727 l
S
300 Ar
136.6807 262.1768 m
131.7832 262.1768 l
S
300 Ar
136.4766 262.3799 m
131.9873 262.3799 l
S
300 Ar
136.2725 262.584 m
132.1914 262.584 l
S
300 Ar
136.2725 262.7881 m
132.1914 262.7881 l
S
300 Ar
136.0679 262.9922 m
132.396 262.9922 l
S
300 Ar
136.0679 263.1963 m
132.396 263.1963 l
S
300 Ar
135.8638 263.4004 m
132.6001 263.4004 l
S
300 Ar
135.4556 263.6045 m
133.0083 263.6045 l
S
300 Ar
135.0488 263.8086 m
133.417 263.8086 l
S
300 Ar
237.0488 354.792 m
235.417 354.792 l
S
300 Ar
237.4556 354.9961 m
235.0083 354.9961 l
S
300 Ar
237.8638 355.2002 m
234.6001 355.2002 l
S
300 Ar
238.0679 355.4043 m
234.396 355.4043 l
S
300 Ar
238.0679 355.6084 m
234.396 355.6084 l
S
300 Ar
238.2725 355.8115 m
234.1914 355.8115 l
S
300 Ar
238.2725 356.0156 m
234.1914 356.0156 l
S
300 Ar
238.4766 356.2197 m
233.9873 356.2197 l
S
300 Ar
238.6807 356.4248 m
233.7832 356.4248 l
S
300 Ar
238.6807 356.6289 m
233.7832 356.6289 l
S
300 Ar
238.6807 356.832 m
233.7832 356.832 l
S
300 Ar
238.6807 357.0361 m
233.7832 357.0361 l
S
300 Ar
238.6807 357.2402 m
233.7832 357.2402 l
S
300 Ar
238.6807 357.4443 m
233.7832 357.4443 l
S
300 Ar
238.6807 357.6475 m
233.7832 357.6475 l
S
300 Ar
238.4766 357.8525 m
233.9873 357.8525 l
S
300 Ar
238.2725 358.0566 m
234.1914 358.0566 l
S
300 Ar
238.2725 358.2607 m
234.1914 358.2607 l
S
300 Ar
238.0679 358.4639 m
234.396 358.4639 l
S
300 Ar
238.0679 358.668 m
234.396 358.668 l
S
300 Ar
237.8638 358.8721 m
234.6001 358.8721 l
S
300 Ar
237.4556 359.0762 m
235.0083 359.0762 l
S
300 Ar
237.0488 359.2803 m
235.417 359.2803 l
S
300 Ar
58.9556 239.124 m
57.3237 239.124 l
S
300 Ar
59.3638 239.3281 m
56.917 239.3281 l
S
300 Ar
59.7725 239.5322 m
56.5083 239.5322 l
S
300 Ar
59.9766 239.7363 m
56.3042 239.7363 l
S
300 Ar
59.9766 239.9404 m
56.3042 239.9404 l
S
300 Ar
60.1807 240.1445 m
56.1001 240.1445 l
S
300 Ar
60.1807 240.3477 m
56.1001 240.3477 l
S
300 Ar
60.3833 240.5518 m
55.896 240.5518 l
S
300 Ar
60.5874 240.7559 m
55.6914 240.7559 l
S
300 Ar
60.5874 240.9609 m
55.6914 240.9609 l
S
300 Ar
60.5874 241.1641 m
55.6914 241.1641 l
S
300 Ar
60.5874 241.3682 m
55.6914 241.3682 l
S
300 Ar
60.5874 241.5723 m
55.6914 241.5723 l
S
300 Ar
60.5874 241.7764 m
55.6914 241.7764 l
S
300 Ar
60.5874 241.9795 m
55.6914 241.9795 l
S
300 Ar
60.3833 242.1836 m
55.896 242.1836 l
S
300 Ar
60.1807 242.3887 m
56.1001 242.3887 l
S
300 Ar
60.1807 242.5928 m
56.1001 242.5928 l
S
300 Ar
59.9766 242.7959 m
56.3042 242.7959 l
S
300 Ar
59.9766 243 m
56.3042 243 l
S
300 Ar
59.7725 243.2041 m
56.5083 243.2041 l
S
300 Ar
59.3638 243.4082 m
56.917 243.4082 l
S
300 Ar
58.9556 243.6113 m
57.3237 243.6113 l
S
300 Ar
225.8276 313.584 m
224.1958 313.584 l
S
300 Ar
226.2363 313.7881 m
223.7876 313.7881 l
S
300 Ar
226.6445 313.9922 m
223.3809 313.9922 l
S
300 Ar
226.8486 314.1963 m
223.1763 314.1963 l
S
300 Ar
226.8486 314.4004 m
223.1763 314.4004 l
S
300 Ar
227.0513 314.6045 m
222.9722 314.6045 l
S
300 Ar
227.0513 314.8086 m
222.9722 314.8086 l
S
300 Ar
227.2554 315.0117 m
222.7681 315.0117 l
S
300 Ar
227.4595 315.2158 m
222.564 315.2158 l
S
300 Ar
227.4595 315.4199 m
222.564 315.4199 l
S
300 Ar
227.4595 315.624 m
222.564 315.624 l
S
300 Ar
227.4595 315.8281 m
222.564 315.8281 l
S
300 Ar
227.4595 316.0322 m
222.564 316.0322 l
S
300 Ar
227.4595 316.2363 m
222.564 316.2363 l
S
300 Ar
227.4595 316.4404 m
222.564 316.4404 l
S
300 Ar
227.2554 316.6445 m
222.7681 316.6445 l
S
300 Ar
227.0513 316.8477 m
222.9722 316.8477 l
S
300 Ar
227.0513 317.0518 m
222.9722 317.0518 l
S
300 Ar
226.8486 317.2559 m
223.1763 317.2559 l
S
300 Ar
226.8486 317.4609 m
223.1763 317.4609 l
S
300 Ar
226.6445 317.6641 m
223.3809 317.6641 l
S
300 Ar
226.2363 317.8682 m
223.7876 317.8682 l
S
300 Ar
225.8276 318.0723 m
224.1958 318.0723 l
S
300 Ar
88.5361 231.7803 m
86.9043 231.7803 l
S
300 Ar
88.9443 231.9844 m
86.4956 231.9844 l
S
300 Ar
89.3511 232.1885 m
86.0874 232.1885 l
S
300 Ar
89.5557 232.3926 m
85.8833 232.3926 l
S
300 Ar
89.5557 232.5957 m
85.8833 232.5957 l
S
300 Ar
89.7598 232.7998 m
85.6807 232.7998 l
S
300 Ar
89.7598 233.0039 m
85.6807 233.0039 l
S
300 Ar
89.9639 233.208 m
85.4766 233.208 l
S
300 Ar
90.168 233.4121 m
85.2725 233.4121 l
S
300 Ar
90.168 233.6162 m
85.2725 233.6162 l
S
300 Ar
90.168 233.8203 m
85.2725 233.8203 l
S
300 Ar
90.168 234.0244 m
85.2725 234.0244 l
S
300 Ar
90.168 234.2285 m
85.2725 234.2285 l
S
300 Ar
90.168 234.4316 m
85.2725 234.4316 l
S
300 Ar
90.168 234.6357 m
85.2725 234.6357 l
S
300 Ar
89.9639 234.8408 m
85.4766 234.8408 l
S
300 Ar
89.7598 235.0449 m
85.6807 235.0449 l
S
300 Ar
89.7598 235.248 m
85.6807 235.248 l
S
300 Ar
89.5557 235.4521 m
85.8833 235.4521 l
S
300 Ar
89.5557 235.6563 m
85.8833 235.6563 l
S
300 Ar
89.3511 235.8604 m
86.0874 235.8604 l
S
300 Ar
88.9443 236.0635 m
86.4956 236.0635 l
S
300 Ar
88.5361 236.2686 m
86.9043 236.2686 l
S
300 Ar
171.3599 306.4443 m
169.7275 306.4443 l
S
300 Ar
171.7681 306.6475 m
169.3193 306.6475 l
S
300 Ar
172.1763 306.8525 m
168.9126 306.8525 l
S
300 Ar
172.3809 307.0566 m
168.7085 307.0566 l
S
300 Ar
172.3809 307.2607 m
168.7085 307.2607 l
S
300 Ar
172.583 307.4639 m
168.5044 307.4639 l
S
300 Ar
172.583 307.668 m
168.5044 307.668 l
S
300 Ar
172.7876 307.8721 m
168.2998 307.8721 l
S
300 Ar
172.9917 308.0762 m
168.0957 308.0762 l
S
300 Ar
172.9917 308.2803 m
168.0957 308.2803 l
S
300 Ar
172.9917 308.4844 m
168.0957 308.4844 l
S
300 Ar
172.9917 308.6885 m
168.0957 308.6885 l
S
300 Ar
172.9917 308.8926 m
168.0957 308.8926 l
S
300 Ar
172.9917 309.0957 m
168.0957 309.0957 l
S
300 Ar
172.9917 309.2998 m
168.0957 309.2998 l
S
300 Ar
172.7876 309.5039 m
168.2998 309.5039 l
S
300 Ar
172.583 309.708 m
168.5044 309.708 l
S
300 Ar
172.583 309.9121 m
168.5044 309.9121 l
S
300 Ar
172.3809 310.1162 m
168.7085 310.1162 l
S
300 Ar
172.3809 310.3203 m
168.7085 310.3203 l
S
300 Ar
172.1763 310.5244 m
168.9126 310.5244 l
S
300 Ar
171.7681 310.7285 m
169.3193 310.7285 l
S
300 Ar
171.3599 310.9316 m
169.7275 310.9316 l
S
300 Ar
145.0444 268.5 m
143.4126 268.5 l
S
300 Ar
145.4512 268.7041 m
143.0044 268.7041 l
S
300 Ar
145.8599 268.9082 m
142.5957 268.9082 l
S
300 Ar
146.064 269.1113 m
142.3916 269.1113 l
S
300 Ar
146.064 269.3164 m
142.3916 269.3164 l
S
300 Ar
146.2681 269.5205 m
142.1875 269.5205 l
S
300 Ar
146.2681 269.7246 m
142.1875 269.7246 l
S
300 Ar
146.4722 269.9287 m
141.9834 269.9287 l
S
300 Ar
146.6763 270.1318 m
141.7808 270.1318 l
S
300 Ar
146.6763 270.3359 m
141.7808 270.3359 l
S
300 Ar
146.6763 270.54 m
141.7808 270.54 l
S
300 Ar
146.6763 270.7441 m
141.7808 270.7441 l
S
300 Ar
146.6763 270.9482 m
141.7808 270.9482 l
S
300 Ar
146.6763 271.1523 m
141.7808 271.1523 l
S
300 Ar
146.6763 271.3564 m
141.7808 271.3564 l
S
300 Ar
146.4722 271.5605 m
141.9834 271.5605 l
S
300 Ar
146.2681 271.7637 m
142.1875 271.7637 l
S
300 Ar
146.2681 271.9678 m
142.1875 271.9678 l
S
300 Ar
146.064 272.1719 m
142.3916 272.1719 l
S
300 Ar
146.064 272.377 m
142.3916 272.377 l
S
300 Ar
145.8599 272.5801 m
142.5957 272.5801 l
S
300 Ar
145.4512 272.7842 m
143.0044 272.7842 l
S
300 Ar
145.0444 272.9883 m
143.4126 272.9883 l
S
300 Ar
58.9556 215.8682 m
57.3237 215.8682 l
S
*U
*u
300 Ar
59.3638 216.0723 m
56.917 216.0723 l
S
300 Ar
59.7725 216.2764 m
56.5083 216.2764 l
S
300 Ar
59.9766 216.4795 m
56.3042 216.4795 l
S
300 Ar
59.9766 216.6836 m
56.3042 216.6836 l
S
300 Ar
60.1807 216.8887 m
56.1001 216.8887 l
S
300 Ar
60.1807 217.0928 m
56.1001 217.0928 l
S
300 Ar
60.3833 217.2969 m
55.896 217.2969 l
S
300 Ar
60.5874 217.5 m
55.6914 217.5 l
S
300 Ar
60.5874 217.7041 m
55.6914 217.7041 l
S
300 Ar
60.5874 217.9082 m
55.6914 217.9082 l
S
300 Ar
60.5874 218.1113 m
55.6914 218.1113 l
S
300 Ar
60.5874 218.3164 m
55.6914 218.3164 l
S
300 Ar
60.5874 218.5205 m
55.6914 218.5205 l
S
300 Ar
60.5874 218.7246 m
55.6914 218.7246 l
S
300 Ar
60.3833 218.9287 m
55.896 218.9287 l
S
300 Ar
60.1807 219.1318 m
56.1001 219.1318 l
S
300 Ar
60.1807 219.3359 m
56.1001 219.3359 l
S
300 Ar
59.9766 219.54 m
56.3042 219.54 l
S
300 Ar
59.9766 219.7441 m
56.3042 219.7441 l
S
300 Ar
59.7725 219.9482 m
56.5083 219.9482 l
S
300 Ar
59.3638 220.1523 m
56.917 220.1523 l
S
300 Ar
58.9556 220.3564 m
57.3237 220.3564 l
S
300 Ar
145.0444 274.8242 m
143.4126 274.8242 l
S
300 Ar
145.4512 275.0283 m
143.0044 275.0283 l
S
300 Ar
145.8599 275.2324 m
142.5957 275.2324 l
S
300 Ar
146.064 275.4365 m
142.3916 275.4365 l
S
300 Ar
146.064 275.6406 m
142.3916 275.6406 l
S
300 Ar
146.2681 275.8447 m
142.1875 275.8447 l
S
300 Ar
146.2681 276.0479 m
142.1875 276.0479 l
S
300 Ar
146.4722 276.252 m
141.9834 276.252 l
S
300 Ar
146.6763 276.4561 m
141.7808 276.4561 l
S
300 Ar
146.6763 276.6602 m
141.7808 276.6602 l
S
300 Ar
146.6763 276.8643 m
141.7808 276.8643 l
S
300 Ar
146.6763 277.0684 m
141.7808 277.0684 l
S
300 Ar
146.6763 277.2725 m
141.7808 277.2725 l
S
300 Ar
146.6763 277.4766 m
141.7808 277.4766 l
S
300 Ar
146.6763 277.6797 m
141.7808 277.6797 l
S
300 Ar
146.4722 277.8838 m
141.9834 277.8838 l
S
300 Ar
146.2681 278.0879 m
142.1875 278.0879 l
S
300 Ar
146.2681 278.292 m
142.1875 278.292 l
S
300 Ar
146.064 278.4961 m
142.3916 278.4961 l
S
300 Ar
146.064 278.7002 m
142.3916 278.7002 l
S
300 Ar
145.8599 278.9043 m
142.5957 278.9043 l
S
300 Ar
145.4512 279.1084 m
143.0044 279.1084 l
S
300 Ar
145.0444 279.3115 m
143.4126 279.3115 l
S
300 Ar
58.9556 221.1719 m
57.3237 221.1719 l
S
300 Ar
59.3638 221.377 m
56.917 221.377 l
S
300 Ar
59.7725 221.5801 m
56.5083 221.5801 l
S
300 Ar
59.9766 221.7842 m
56.3042 221.7842 l
S
300 Ar
59.9766 221.9883 m
56.3042 221.9883 l
S
300 Ar
60.1807 222.1924 m
56.1001 222.1924 l
S
300 Ar
60.1807 222.3955 m
56.1001 222.3955 l
S
300 Ar
60.3833 222.5996 m
55.896 222.5996 l
S
300 Ar
60.5874 222.8047 m
55.6914 222.8047 l
S
300 Ar
60.5874 223.0088 m
55.6914 223.0088 l
S
300 Ar
60.5874 223.2119 m
55.6914 223.2119 l
S
300 Ar
60.5874 223.416 m
55.6914 223.416 l
S
300 Ar
60.5874 223.6201 m
55.6914 223.6201 l
S
300 Ar
60.5874 223.8242 m
55.6914 223.8242 l
S
300 Ar
60.5874 224.0283 m
55.6914 224.0283 l
S
300 Ar
60.3833 224.2324 m
55.896 224.2324 l
S
300 Ar
60.1807 224.4365 m
56.1001 224.4365 l
S
300 Ar
60.1807 224.6406 m
56.1001 224.6406 l
S
300 Ar
59.9766 224.8447 m
56.3042 224.8447 l
S
300 Ar
59.9766 225.0479 m
56.3042 225.0479 l
S
300 Ar
59.7725 225.252 m
56.5083 225.252 l
S
300 Ar
59.3638 225.4561 m
56.917 225.4561 l
S
300 Ar
58.9556 225.6602 m
57.3237 225.6602 l
S
300 Ar
113.4233 240.5518 m
111.7915 240.5518 l
S
300 Ar
113.832 240.7559 m
111.3833 240.7559 l
S
300 Ar
114.2402 240.9609 m
110.9766 240.9609 l
S
300 Ar
114.4443 241.1641 m
110.7725 241.1641 l
S
300 Ar
114.4443 241.3682 m
110.7725 241.3682 l
S
300 Ar
114.6489 241.5723 m
110.5679 241.5723 l
S
300 Ar
114.6489 241.7764 m
110.5679 241.7764 l
S
300 Ar
114.8511 241.9795 m
110.3638 241.9795 l
S
300 Ar
115.0557 242.1836 m
110.1597 242.1836 l
S
300 Ar
115.0557 242.3887 m
110.1597 242.3887 l
S
300 Ar
115.0557 242.5928 m
110.1597 242.5928 l
S
300 Ar
115.0557 242.7959 m
110.1597 242.7959 l
S
300 Ar
115.0557 243 m
110.1597 243 l
S
300 Ar
115.0557 243.2041 m
110.1597 243.2041 l
S
300 Ar
115.0557 243.4082 m
110.1597 243.4082 l
S
300 Ar
114.8511 243.6113 m
110.3638 243.6113 l
S
300 Ar
114.6489 243.8164 m
110.5679 243.8164 l
S
300 Ar
114.6489 244.0205 m
110.5679 244.0205 l
S
300 Ar
114.4443 244.2246 m
110.7725 244.2246 l
S
300 Ar
114.4443 244.4287 m
110.7725 244.4287 l
S
300 Ar
114.2402 244.6318 m
110.9766 244.6318 l
S
300 Ar
113.832 244.8359 m
111.3833 244.8359 l
S
300 Ar
113.4233 245.04 m
111.7915 245.04 l
S
300 Ar
171.3599 288.9004 m
169.7275 288.9004 l
S
300 Ar
171.7681 289.1045 m
169.3193 289.1045 l
S
300 Ar
172.1763 289.3086 m
168.9126 289.3086 l
S
300 Ar
172.3809 289.5117 m
168.7085 289.5117 l
S
300 Ar
172.3809 289.7158 m
168.7085 289.7158 l
S
300 Ar
172.583 289.9199 m
168.5044 289.9199 l
S
300 Ar
172.583 290.124 m
168.5044 290.124 l
S
300 Ar
172.7876 290.3281 m
168.2998 290.3281 l
S
300 Ar
172.9917 290.5322 m
168.0957 290.5322 l
S
300 Ar
172.9917 290.7363 m
168.0957 290.7363 l
S
300 Ar
172.9917 290.9404 m
168.0957 290.9404 l
S
300 Ar
172.9917 291.1445 m
168.0957 291.1445 l
S
300 Ar
172.9917 291.3477 m
168.0957 291.3477 l
S
300 Ar
172.9917 291.5518 m
168.0957 291.5518 l
S
300 Ar
172.9917 291.7559 m
168.0957 291.7559 l
S
300 Ar
172.7876 291.9609 m
168.2998 291.9609 l
S
300 Ar
172.583 292.1641 m
168.5044 292.1641 l
S
300 Ar
172.583 292.3682 m
168.5044 292.3682 l
S
300 Ar
172.3809 292.5723 m
168.7085 292.5723 l
S
300 Ar
172.3809 292.7764 m
168.7085 292.7764 l
S
300 Ar
172.1763 292.9795 m
168.9126 292.9795 l
S
300 Ar
171.7681 293.1836 m
169.3193 293.1836 l
S
300 Ar
171.3599 293.3887 m
169.7275 293.3887 l
S
300 Ar
194.0044 313.1768 m
192.3721 313.1768 l
S
300 Ar
194.4126 313.3799 m
191.9639 313.3799 l
S
300 Ar
194.8193 313.584 m
191.5557 313.584 l
S
300 Ar
195.0234 313.7881 m
191.3511 313.7881 l
S
300 Ar
195.0234 313.9922 m
191.3511 313.9922 l
S
300 Ar
195.2275 314.1963 m
191.1489 314.1963 l
S
300 Ar
195.2275 314.4004 m
191.1489 314.4004 l
S
300 Ar
195.4321 314.6045 m
190.9443 314.6045 l
S
300 Ar
195.6362 314.8086 m
190.7402 314.8086 l
S
300 Ar
195.6362 315.0117 m
190.7402 315.0117 l
S
300 Ar
195.6362 315.2158 m
190.7402 315.2158 l
S
300 Ar
195.6362 315.4199 m
190.7402 315.4199 l
S
300 Ar
195.6362 315.624 m
190.7402 315.624 l
S
300 Ar
195.6362 315.8281 m
190.7402 315.8281 l
S
300 Ar
195.6362 316.0322 m
190.7402 316.0322 l
S
300 Ar
195.4321 316.2363 m
190.9443 316.2363 l
S
300 Ar
195.2275 316.4404 m
191.1489 316.4404 l
S
300 Ar
195.2275 316.6445 m
191.1489 316.6445 l
S
300 Ar
195.0234 316.8477 m
191.3511 316.8477 l
S
300 Ar
195.0234 317.0518 m
191.3511 317.0518 l
S
300 Ar
194.8193 317.2559 m
191.5557 317.2559 l
S
300 Ar
194.4126 317.4609 m
191.9639 317.4609 l
S
300 Ar
194.0044 317.6641 m
192.3721 317.6641 l
S
300 Ar
186.8638 319.5 m
185.2319 319.5 l
S
300 Ar
187.2725 319.7041 m
184.8237 319.7041 l
S
300 Ar
187.6807 319.9082 m
184.417 319.9082 l
S
300 Ar
187.8833 320.1113 m
184.2124 320.1113 l
S
300 Ar
187.8833 320.3164 m
184.2124 320.3164 l
S
300 Ar
188.0874 320.5205 m
184.0083 320.5205 l
S
300 Ar
188.0874 320.7246 m
184.0083 320.7246 l
S
300 Ar
188.2915 320.9287 m
183.8042 320.9287 l
S
300 Ar
188.4956 321.1318 m
183.6001 321.1318 l
S
300 Ar
188.4956 321.3359 m
183.6001 321.3359 l
S
300 Ar
188.4956 321.54 m
183.6001 321.54 l
S
300 Ar
188.4956 321.7441 m
183.6001 321.7441 l
S
300 Ar
188.4956 321.9482 m
183.6001 321.9482 l
S
300 Ar
188.4956 322.1523 m
183.6001 322.1523 l
S
300 Ar
188.4956 322.3564 m
183.6001 322.3564 l
S
300 Ar
188.2915 322.5605 m
183.8042 322.5605 l
S
300 Ar
188.0874 322.7637 m
184.0083 322.7637 l
S
300 Ar
188.0874 322.9678 m
184.0083 322.9678 l
S
300 Ar
187.8833 323.1719 m
184.2124 323.1719 l
S
300 Ar
187.8833 323.377 m
184.2124 323.377 l
S
300 Ar
187.6807 323.5801 m
184.417 323.5801 l
S
300 Ar
187.2725 323.7842 m
184.8237 323.7842 l
S
300 Ar
186.8638 323.9883 m
185.2319 323.9883 l
S
300 Ar
135.0488 258.9121 m
133.417 258.9121 l
S
300 Ar
135.4556 259.1162 m
133.0083 259.1162 l
S
300 Ar
135.8638 259.3203 m
132.6001 259.3203 l
S
300 Ar
136.0679 259.5244 m
132.396 259.5244 l
S
300 Ar
136.0679 259.7285 m
132.396 259.7285 l
S
300 Ar
136.2725 259.9316 m
132.1914 259.9316 l
S
300 Ar
136.2725 260.1357 m
132.1914 260.1357 l
S
300 Ar
136.4766 260.3408 m
131.9873 260.3408 l
S
300 Ar
136.6807 260.5449 m
131.7832 260.5449 l
S
300 Ar
136.6807 260.748 m
131.7832 260.748 l
S
300 Ar
136.6807 260.9521 m
131.7832 260.9521 l
S
300 Ar
136.6807 261.1563 m
131.7832 261.1563 l
S
300 Ar
136.6807 261.3604 m
131.7832 261.3604 l
S
300 Ar
136.6807 261.5635 m
131.7832 261.5635 l
S
300 Ar
136.6807 261.7686 m
131.7832 261.7686 l
S
300 Ar
136.4766 261.9727 m
131.9873 261.9727 l
S
300 Ar
136.2725 262.1768 m
132.1914 262.1768 l
S
300 Ar
136.2725 262.3799 m
132.1914 262.3799 l
S
300 Ar
136.0679 262.584 m
132.396 262.584 l
S
300 Ar
136.0679 262.7881 m
132.396 262.7881 l
S
300 Ar
135.8638 262.9922 m
132.6001 262.9922 l
S
300 Ar
135.4556 263.1963 m
133.0083 263.1963 l
S
300 Ar
135.0488 263.4004 m
133.417 263.4004 l
S
300 Ar
237.0488 322.7637 m
235.417 322.7637 l
S
300 Ar
237.4556 322.9678 m
235.0083 322.9678 l
S
300 Ar
237.8638 323.1719 m
234.6001 323.1719 l
S
300 Ar
238.0679 323.377 m
234.396 323.377 l
S
300 Ar
238.0679 323.5801 m
234.396 323.5801 l
S
300 Ar
238.2725 323.7842 m
234.1914 323.7842 l
S
300 Ar
238.2725 323.9883 m
234.1914 323.9883 l
S
300 Ar
238.4766 324.1924 m
233.9873 324.1924 l
S
300 Ar
238.6807 324.3955 m
233.7832 324.3955 l
S
300 Ar
238.6807 324.5996 m
233.7832 324.5996 l
S
300 Ar
238.6807 324.8047 m
233.7832 324.8047 l
S
300 Ar
238.6807 325.0088 m
233.7832 325.0088 l
S
300 Ar
238.6807 325.2119 m
233.7832 325.2119 l
S
300 Ar
238.6807 325.416 m
233.7832 325.416 l
S
300 Ar
238.6807 325.6201 m
233.7832 325.6201 l
S
300 Ar
238.4766 325.8242 m
233.9873 325.8242 l
S
300 Ar
238.2725 326.0283 m
234.1914 326.0283 l
S
*U
*u
300 Ar
238.2725 326.2324 m
234.1914 326.2324 l
S
300 Ar
238.0679 326.4365 m
234.396 326.4365 l
S
300 Ar
238.0679 326.6406 m
234.396 326.6406 l
S
300 Ar
237.8638 326.8447 m
234.6001 326.8447 l
S
300 Ar
237.4556 327.0479 m
235.0083 327.0479 l
S
300 Ar
237.0488 327.252 m
235.417 327.252 l
S
300 Ar
302.9404 372.7441 m
301.3086 372.7441 l
S
300 Ar
303.3486 372.9482 m
300.8999 372.9482 l
S
300 Ar
303.7554 373.1523 m
300.4917 373.1523 l
S
300 Ar
303.9595 373.3564 m
300.2876 373.3564 l
S
300 Ar
303.9595 373.5605 m
300.2876 373.5605 l
S
300 Ar
304.1641 373.7637 m
300.083 373.7637 l
S
300 Ar
304.1641 373.9678 m
300.083 373.9678 l
S
300 Ar
304.3682 374.1719 m
299.8809 374.1719 l
S
300 Ar
304.5723 374.377 m
299.6763 374.377 l
S
300 Ar
304.5723 374.5801 m
299.6763 374.5801 l
S
300 Ar
304.5723 374.7842 m
299.6763 374.7842 l
S
300 Ar
304.5723 374.9883 m
299.6763 374.9883 l
S
300 Ar
304.5723 375.1924 m
299.6763 375.1924 l
S
300 Ar
304.5723 375.3955 m
299.6763 375.3955 l
S
300 Ar
304.5723 375.5996 m
299.6763 375.5996 l
S
300 Ar
304.3682 375.8047 m
299.8809 375.8047 l
S
300 Ar
304.1641 376.0088 m
300.083 376.0088 l
S
300 Ar
304.1641 376.2119 m
300.083 376.2119 l
S
300 Ar
303.9595 376.416 m
300.2876 376.416 l
S
300 Ar
303.9595 376.6201 m
300.2876 376.6201 l
S
300 Ar
303.7554 376.8242 m
300.4917 376.8242 l
S
300 Ar
303.3486 377.0283 m
300.8999 377.0283 l
S
300 Ar
302.9404 377.2324 m
301.3086 377.2324 l
S
300 Ar
316.6084 405.1802 m
314.9766 405.1802 l
S
300 Ar
317.0156 405.3843 m
314.5684 405.3843 l
S
300 Ar
317.4238 405.5884 m
314.1592 405.5884 l
S
300 Ar
317.6279 405.792 m
313.9551 405.792 l
S
300 Ar
317.6279 405.9961 m
313.9551 405.9961 l
S
300 Ar
317.832 406.2002 m
313.752 406.2002 l
S
300 Ar
317.832 406.4043 m
313.752 406.4043 l
S
300 Ar
318.0361 406.6084 m
313.5479 406.6084 l
S
300 Ar
318.2402 406.812 m
313.3447 406.812 l
S
300 Ar
318.2402 407.0166 m
313.3447 407.0166 l
S
300 Ar
318.2402 407.2202 m
313.3447 407.2202 l
S
300 Ar
318.2402 407.4243 m
313.3447 407.4243 l
S
300 Ar
318.2402 407.6279 m
313.3447 407.6279 l
S
300 Ar
318.2402 407.8325 m
313.3447 407.8325 l
S
300 Ar
318.2402 408.0361 m
313.3447 408.0361 l
S
300 Ar
318.0361 408.2402 m
313.5479 408.2402 l
S
300 Ar
317.832 408.4443 m
313.752 408.4443 l
S
300 Ar
317.832 408.6484 m
313.752 408.6484 l
S
300 Ar
317.6279 408.8521 m
313.9551 408.8521 l
S
300 Ar
317.6279 409.0562 m
313.9551 409.0562 l
S
300 Ar
317.4238 409.2603 m
314.1592 409.2603 l
S
300 Ar
317.0156 409.4644 m
314.5684 409.4644 l
S
300 Ar
316.6084 409.668 m
314.9766 409.668 l
S
300 Ar
329.46 405.5884 m
327.8281 405.5884 l
S
300 Ar
329.8682 405.792 m
327.4199 405.792 l
S
300 Ar
330.2764 405.9961 m
327.0127 405.9961 l
S
300 Ar
330.4795 406.2002 m
326.8086 406.2002 l
S
300 Ar
330.4795 406.4043 m
326.8086 406.4043 l
S
300 Ar
330.6836 406.6084 m
326.6045 406.6084 l
S
300 Ar
330.6836 406.812 m
326.6045 406.812 l
S
300 Ar
330.8877 407.0166 m
326.4004 407.0166 l
S
300 Ar
331.0918 407.2202 m
326.1953 407.2202 l
S
300 Ar
331.0918 407.4243 m
326.1953 407.4243 l
S
300 Ar
331.0918 407.6279 m
326.1953 407.6279 l
S
300 Ar
331.0918 407.8325 m
326.1953 407.8325 l
S
300 Ar
331.0918 408.0361 m
326.1953 408.0361 l
S
300 Ar
331.0918 408.2402 m
326.1953 408.2402 l
S
300 Ar
331.0918 408.4443 m
326.1953 408.4443 l
S
300 Ar
330.8877 408.6484 m
326.4004 408.6484 l
S
300 Ar
330.6836 408.8521 m
326.6045 408.8521 l
S
300 Ar
330.6836 409.0562 m
326.6045 409.0562 l
S
300 Ar
330.4795 409.2603 m
326.8086 409.2603 l
S
300 Ar
330.4795 409.4644 m
326.8086 409.4644 l
S
300 Ar
330.2764 409.668 m
327.0127 409.668 l
S
300 Ar
329.8682 409.8721 m
327.4199 409.8721 l
S
300 Ar
329.46 410.0762 m
327.8281 410.0762 l
S
300 Ar
332.5205 409.0562 m
330.8877 409.0562 l
S
300 Ar
332.9277 409.2603 m
330.4795 409.2603 l
S
300 Ar
333.3359 409.4644 m
330.0723 409.4644 l
S
300 Ar
333.54 409.668 m
329.8682 409.668 l
S
300 Ar
333.54 409.8721 m
329.8682 409.8721 l
S
300 Ar
333.7441 410.0762 m
329.6641 410.0762 l
S
300 Ar
333.7441 410.2803 m
329.6641 410.2803 l
S
300 Ar
333.9482 410.4839 m
329.46 410.4839 l
S
300 Ar
334.1523 410.6885 m
329.2559 410.6885 l
S
300 Ar
334.1523 410.8921 m
329.2559 410.8921 l
S
300 Ar
334.1523 411.0962 m
329.2559 411.0962 l
S
300 Ar
334.1523 411.2998 m
329.2559 411.2998 l
S
300 Ar
334.1523 411.5044 m
329.2559 411.5044 l
S
300 Ar
334.1523 411.7085 m
329.2559 411.7085 l
S
300 Ar
334.1523 411.9121 m
329.2559 411.9121 l
S
300 Ar
333.9482 412.1162 m
329.46 412.1162 l
S
300 Ar
333.7441 412.3203 m
329.6641 412.3203 l
S
300 Ar
333.7441 412.5244 m
329.6641 412.5244 l
S
300 Ar
333.54 412.728 m
329.8682 412.728 l
S
300 Ar
333.54 412.9321 m
329.8682 412.9321 l
S
300 Ar
333.3359 413.1362 m
330.0723 413.1362 l
S
300 Ar
332.9277 413.3403 m
330.4795 413.3403 l
S
300 Ar
332.5205 413.5439 m
330.8877 413.5439 l
S
300 Ar
335.376 409.668 m
333.7441 409.668 l
S
300 Ar
335.7842 409.8721 m
333.3359 409.8721 l
S
300 Ar
336.1914 410.0762 m
332.9277 410.0762 l
S
300 Ar
336.3955 410.2803 m
332.7236 410.2803 l
S
300 Ar
336.3955 410.4839 m
332.7236 410.4839 l
S
300 Ar
336.5996 410.6885 m
332.5205 410.6885 l
S
300 Ar
336.5996 410.8921 m
332.5205 410.8921 l
S
300 Ar
336.8037 411.0962 m
332.3164 411.0962 l
S
300 Ar
337.0088 411.2998 m
332.1123 411.2998 l
S
300 Ar
337.0088 411.5044 m
332.1123 411.5044 l
S
300 Ar
337.0088 411.7085 m
332.1123 411.7085 l
S
300 Ar
337.0088 411.9121 m
332.1123 411.9121 l
S
300 Ar
337.0088 412.1162 m
332.1123 412.1162 l
S
300 Ar
337.0088 412.3203 m
332.1123 412.3203 l
S
300 Ar
337.0088 412.5244 m
332.1123 412.5244 l
S
300 Ar
336.8037 412.728 m
332.3164 412.728 l
S
300 Ar
336.5996 412.9321 m
332.5205 412.9321 l
S
300 Ar
336.5996 413.1362 m
332.5205 413.1362 l
S
300 Ar
336.3955 413.3403 m
332.7236 413.3403 l
S
300 Ar
336.3955 413.5439 m
332.7236 413.5439 l
S
300 Ar
336.1914 413.7485 m
332.9277 413.7485 l
S
300 Ar
335.7842 413.9521 m
333.3359 413.9521 l
S
300 Ar
335.376 414.1563 m
333.7441 414.1563 l
S
300 Ar
341.292 410.0762 m
339.6592 410.0762 l
S
300 Ar
341.7002 410.2803 m
339.252 410.2803 l
S
300 Ar
342.1084 410.4839 m
338.8447 410.4839 l
S
300 Ar
342.3125 410.6885 m
338.6406 410.6885 l
S
300 Ar
342.3125 410.8921 m
338.6406 410.8921 l
S
300 Ar
342.5156 411.0962 m
338.4365 411.0962 l
S
300 Ar
342.5156 411.2998 m
338.4365 411.2998 l
S
300 Ar
342.7197 411.5044 m
338.2314 411.5044 l
S
300 Ar
342.9238 411.7085 m
338.0273 411.7085 l
S
300 Ar
342.9238 411.9121 m
338.0273 411.9121 l
S
300 Ar
342.9238 412.1162 m
338.0273 412.1162 l
S
300 Ar
342.9238 412.3203 m
338.0273 412.3203 l
S
300 Ar
342.9238 412.5244 m
338.0273 412.5244 l
S
300 Ar
342.9238 412.728 m
338.0273 412.728 l
S
300 Ar
342.9238 412.9321 m
338.0273 412.9321 l
S
300 Ar
342.7197 413.1362 m
338.2314 413.1362 l
S
300 Ar
342.5156 413.3403 m
338.4365 413.3403 l
S
300 Ar
342.5156 413.5439 m
338.4365 413.5439 l
S
300 Ar
342.3125 413.7485 m
338.6406 413.7485 l
S
300 Ar
342.3125 413.9521 m
338.6406 413.9521 l
S
300 Ar
342.1084 414.1563 m
338.8447 414.1563 l
S
300 Ar
341.7002 414.3599 m
339.252 414.3599 l
S
300 Ar
341.292 414.5645 m
339.6592 414.5645 l
S
300 Ar
343.9443 405.1802 m
342.3125 405.1802 l
S
300 Ar
344.3525 405.3843 m
341.9043 405.3843 l
S
300 Ar
344.7598 405.5884 m
341.4961 405.5884 l
S
300 Ar
344.9639 405.792 m
341.292 405.792 l
S
300 Ar
344.9639 405.9961 m
341.292 405.9961 l
S
300 Ar
345.168 406.2002 m
341.0869 406.2002 l
S
300 Ar
345.168 406.4043 m
341.0869 406.4043 l
S
300 Ar
345.3721 406.6084 m
340.8838 406.6084 l
S
300 Ar
345.5762 406.812 m
340.6797 406.812 l
S
300 Ar
345.5762 407.0166 m
340.6797 407.0166 l
S
300 Ar
345.5762 407.2202 m
340.6797 407.2202 l
S
300 Ar
345.5762 407.4243 m
340.6797 407.4243 l
S
300 Ar
345.5762 407.6279 m
340.6797 407.6279 l
S
300 Ar
345.5762 407.8325 m
340.6797 407.8325 l
S
300 Ar
345.5762 408.0361 m
340.6797 408.0361 l
S
300 Ar
345.3721 408.2402 m
340.8838 408.2402 l
S
300 Ar
345.168 408.4443 m
341.0869 408.4443 l
S
300 Ar
345.168 408.6484 m
341.0869 408.6484 l
S
300 Ar
344.9639 408.8521 m
341.292 408.8521 l
S
300 Ar
344.9639 409.0562 m
341.292 409.0562 l
S
300 Ar
344.7598 409.2603 m
341.4961 409.2603 l
S
300 Ar
344.3525 409.4644 m
341.9043 409.4644 l
S
300 Ar
343.9443 409.668 m
342.3125 409.668 l
S
300 Ar
343.9443 411.5044 m
342.3125 411.5044 l
S
300 Ar
344.3525 411.7085 m
341.9043 411.7085 l
S
300 Ar
344.7598 411.9121 m
341.4961 411.9121 l
S
300 Ar
344.9639 412.1162 m
341.292 412.1162 l
S
300 Ar
344.9639 412.3203 m
341.292 412.3203 l
S
300 Ar
345.168 412.5244 m
341.0869 412.5244 l
S
300 Ar
345.168 412.728 m
341.0869 412.728 l
S
300 Ar
345.3721 412.9321 m
340.8838 412.9321 l
S
300 Ar
345.5762 413.1362 m
340.6797 413.1362 l
S
300 Ar
345.5762 413.3403 m
340.6797 413.3403 l
S
300 Ar
345.5762 413.5439 m
340.6797 413.5439 l
S
300 Ar
345.5762 413.7485 m
340.6797 413.7485 l
S
300 Ar
345.5762 413.9521 m
340.6797 413.9521 l
S
300 Ar
345.5762 414.1563 m
340.6797 414.1563 l
S
300 Ar
345.5762 414.3599 m
340.6797 414.3599 l
S
300 Ar
345.3721 414.5645 m
340.8838 414.5645 l
S
300 Ar
345.168 414.7681 m
341.0869 414.7681 l
S
300 Ar
345.168 414.9722 m
341.0869 414.9722 l
S
300 Ar
344.9639 415.1763 m
341.292 415.1763 l
S
300 Ar
344.9639 415.3804 m
341.292 415.3804 l
S
300 Ar
344.7598 415.584 m
341.4961 415.584 l
S
300 Ar
344.3525 415.7881 m
341.9043 415.7881 l
S
300 Ar
343.9443 415.9922 m
342.3125 415.9922 l
S
300 Ar
349.4521 418.2363 m
347.8203 418.2363 l
S
300 Ar
349.8594 418.4404 m
347.4121 418.4404 l
S
300 Ar
350.2676 418.644 m
347.0039 418.644 l
S
300 Ar
350.4727 418.8481 m
346.7998 418.8481 l
S
300 Ar
350.4727 419.0522 m
346.7998 419.0522 l
S
300 Ar
350.6768 419.2563 m
346.5957 419.2563 l
S
300 Ar
350.6768 419.46 m
346.5957 419.46 l
S
300 Ar
350.8799 419.6641 m
346.3916 419.6641 l
S
300 Ar
351.084 419.8682 m
346.1875 419.8682 l
S
300 Ar
351.084 420.0723 m
346.1875 420.0723 l
S
*U
*u
300 Ar
351.084 420.2759 m
346.1875 420.2759 l
S
300 Ar
351.084 420.4805 m
346.1875 420.4805 l
S
300 Ar
351.084 420.6841 m
346.1875 420.6841 l
S
300 Ar
351.084 420.8882 m
346.1875 420.8882 l
S
300 Ar
351.084 421.0918 m
346.1875 421.0918 l
S
300 Ar
350.8799 421.2964 m
346.3916 421.2964 l
S
300 Ar
350.6768 421.5 m
346.5957 421.5 l
S
300 Ar
350.6768 421.7041 m
346.5957 421.7041 l
S
300 Ar
350.4727 421.9082 m
346.7998 421.9082 l
S
300 Ar
350.4727 422.1123 m
346.7998 422.1123 l
S
300 Ar
350.2676 422.3159 m
347.0039 422.3159 l
S
300 Ar
349.8594 422.52 m
347.4121 422.52 l
S
300 Ar
349.4521 422.7246 m
347.8203 422.7246 l
S
300 Ar
354.7559 412.9321 m
353.123 412.9321 l
S
300 Ar
355.1641 413.1362 m
352.7158 413.1362 l
S
300 Ar
355.5723 413.3403 m
352.3086 413.3403 l
S
300 Ar
355.7764 413.5439 m
352.1045 413.5439 l
S
300 Ar
355.7764 413.7485 m
352.1045 413.7485 l
S
300 Ar
355.9795 413.9521 m
351.9004 413.9521 l
S
300 Ar
355.9795 414.1563 m
351.9004 414.1563 l
S
300 Ar
356.1836 414.3599 m
351.6953 414.3599 l
S
300 Ar
356.3877 414.5645 m
351.4912 414.5645 l
S
300 Ar
356.3877 414.7681 m
351.4912 414.7681 l
S
300 Ar
356.3877 414.9722 m
351.4912 414.9722 l
S
300 Ar
356.3877 415.1763 m
351.4912 415.1763 l
S
300 Ar
356.3877 415.3804 m
351.4912 415.3804 l
S
300 Ar
356.3877 415.584 m
351.4912 415.584 l
S
300 Ar
356.3877 415.7881 m
351.4912 415.7881 l
S
300 Ar
356.1836 415.9922 m
351.6953 415.9922 l
S
300 Ar
355.9795 416.1963 m
351.9004 416.1963 l
S
300 Ar
355.9795 416.3999 m
351.9004 416.3999 l
S
300 Ar
355.7764 416.604 m
352.1045 416.604 l
S
300 Ar
355.7764 416.8086 m
352.1045 416.8086 l
S
300 Ar
355.5723 417.0122 m
352.3086 417.0122 l
S
300 Ar
355.1641 417.2163 m
352.7158 417.2163 l
S
300 Ar
354.7559 417.4204 m
353.123 417.4204 l
S
300 Ar
362.5088 436.1885 m
360.876 436.1885 l
S
300 Ar
362.916 436.3921 m
360.4678 436.3921 l
S
300 Ar
363.3232 436.5962 m
360.0596 436.5962 l
S
300 Ar
363.5273 436.7998 m
359.8555 436.7998 l
S
300 Ar
363.5273 437.0044 m
359.8555 437.0044 l
S
300 Ar
363.7314 437.2085 m
359.6523 437.2085 l
S
300 Ar
363.7314 437.4121 m
359.6523 437.4121 l
S
300 Ar
363.9365 437.6162 m
359.4482 437.6162 l
S
300 Ar
364.1406 437.8203 m
359.2441 437.8203 l
S
300 Ar
364.1406 438.0244 m
359.2441 438.0244 l
S
300 Ar
364.1406 438.228 m
359.2441 438.228 l
S
300 Ar
364.1406 438.4321 m
359.2441 438.4321 l
S
300 Ar
364.1406 438.6362 m
359.2441 438.6362 l
S
300 Ar
364.1406 438.8403 m
359.2441 438.8403 l
S
300 Ar
364.1406 439.0439 m
359.2441 439.0439 l
S
300 Ar
363.9365 439.2485 m
359.4482 439.2485 l
S
300 Ar
363.7314 439.4521 m
359.6523 439.4521 l
S
300 Ar
363.7314 439.6563 m
359.6523 439.6563 l
S
300 Ar
363.5273 439.8599 m
359.8555 439.8599 l
S
300 Ar
363.5273 440.0645 m
359.8555 440.0645 l
S
300 Ar
363.3232 440.2681 m
360.0596 440.2681 l
S
300 Ar
362.916 440.4722 m
360.4678 440.4722 l
S
300 Ar
362.5088 440.6763 m
360.876 440.6763 l
S
300 Ar
385.7637 426.6001 m
384.1318 426.6001 l
S
300 Ar
386.1719 426.8042 m
383.7236 426.8042 l
S
300 Ar
386.5801 427.0083 m
383.3164 427.0083 l
S
300 Ar
386.7842 427.2124 m
383.1123 427.2124 l
S
300 Ar
386.7842 427.416 m
383.1123 427.416 l
S
300 Ar
386.9873 427.6201 m
382.9082 427.6201 l
S
300 Ar
386.9873 427.8242 m
382.9082 427.8242 l
S
300 Ar
387.1914 428.0283 m
382.7041 428.0283 l
S
300 Ar
387.3955 428.2324 m
382.5 428.2324 l
S
300 Ar
387.3955 428.436 m
382.5 428.436 l
S
300 Ar
387.3955 428.6401 m
382.5 428.6401 l
S
300 Ar
387.3955 428.8442 m
382.5 428.8442 l
S
300 Ar
387.3955 429.0483 m
382.5 429.0483 l
S
300 Ar
387.3955 429.252 m
382.5 429.252 l
S
300 Ar
387.3955 429.4565 m
382.5 429.4565 l
S
300 Ar
387.1914 429.6602 m
382.7041 429.6602 l
S
300 Ar
386.9873 429.8643 m
382.9082 429.8643 l
S
300 Ar
386.9873 430.0679 m
382.9082 430.0679 l
S
300 Ar
386.7842 430.2725 m
383.1123 430.2725 l
S
300 Ar
386.7842 430.4761 m
383.1123 430.4761 l
S
300 Ar
386.5801 430.6802 m
383.3164 430.6802 l
S
300 Ar
386.1719 430.8843 m
383.7236 430.8843 l
S
300 Ar
385.7637 431.0884 m
384.1318 431.0884 l
S
300 Ar
396.168 445.9805 m
394.5361 445.9805 l
S
300 Ar
396.5762 446.1841 m
394.1279 446.1841 l
S
300 Ar
396.9844 446.3882 m
393.7197 446.3882 l
S
300 Ar
397.1875 446.5918 m
393.5156 446.5918 l
S
300 Ar
397.1875 446.7964 m
393.5156 446.7964 l
S
300 Ar
397.3916 447 m
393.3125 447 l
S
300 Ar
397.3916 447.2041 m
393.3125 447.2041 l
S
300 Ar
397.5957 447.4082 m
393.1084 447.4082 l
S
300 Ar
397.7998 447.6123 m
392.9043 447.6123 l
S
300 Ar
397.7998 447.8159 m
392.9043 447.8159 l
S
300 Ar
397.7998 448.02 m
392.9043 448.02 l
S
300 Ar
397.7998 448.2246 m
392.9043 448.2246 l
S
300 Ar
397.7998 448.4282 m
392.9043 448.4282 l
S
300 Ar
397.7998 448.6323 m
392.9043 448.6323 l
S
300 Ar
397.7998 448.8359 m
392.9043 448.8359 l
S
300 Ar
397.5957 449.0405 m
393.1084 449.0405 l
S
300 Ar
397.3916 449.2441 m
393.3125 449.2441 l
S
300 Ar
397.3916 449.4482 m
393.3125 449.4482 l
S
300 Ar
397.1875 449.6523 m
393.5156 449.6523 l
S
300 Ar
397.1875 449.8564 m
393.5156 449.8564 l
S
300 Ar
396.9844 450.0601 m
393.7197 450.0601 l
S
300 Ar
396.5762 450.2642 m
394.1279 450.2642 l
S
300 Ar
396.168 450.4683 m
394.5361 450.4683 l
S
300 Ar
398.208 456.1802 m
396.5762 456.1802 l
S
300 Ar
398.6162 456.3843 m
396.168 456.3843 l
S
300 Ar
399.0234 456.5884 m
395.7598 456.5884 l
S
300 Ar
399.2275 456.792 m
395.5557 456.792 l
S
300 Ar
399.2275 456.9961 m
395.5557 456.9961 l
S
300 Ar
399.4316 457.2002 m
395.3525 457.2002 l
S
300 Ar
399.4316 457.4043 m
395.3525 457.4043 l
S
300 Ar
399.6357 457.6084 m
395.1475 457.6084 l
S
300 Ar
399.8398 457.812 m
394.9443 457.812 l
S
300 Ar
399.8398 458.0161 m
394.9443 458.0161 l
S
300 Ar
399.8398 458.2202 m
394.9443 458.2202 l
S
300 Ar
399.8398 458.4243 m
394.9443 458.4243 l
S
300 Ar
399.8398 458.6279 m
394.9443 458.6279 l
S
300 Ar
399.8398 458.8325 m
394.9443 458.8325 l
S
300 Ar
399.8398 459.0361 m
394.9443 459.0361 l
S
300 Ar
399.6357 459.2402 m
395.1475 459.2402 l
S
300 Ar
399.4316 459.4443 m
395.3525 459.4443 l
S
300 Ar
399.4316 459.6484 m
395.3525 459.6484 l
S
300 Ar
399.2275 459.8521 m
395.5557 459.8521 l
S
300 Ar
399.2275 460.0562 m
395.5557 460.0562 l
S
300 Ar
399.0234 460.2603 m
395.7598 460.2603 l
S
300 Ar
398.6162 460.4644 m
396.168 460.4644 l
S
300 Ar
398.208 460.668 m
396.5762 460.668 l
S
300 Ar
417.1797 463.3203 m
415.5479 463.3203 l
S
300 Ar
417.5869 463.5244 m
415.1406 463.5244 l
S
300 Ar
417.9961 463.728 m
414.7314 463.728 l
S
300 Ar
418.2002 463.9321 m
414.5273 463.9321 l
S
300 Ar
418.2002 464.1362 m
414.5273 464.1362 l
S
300 Ar
418.4043 464.3403 m
414.3232 464.3403 l
S
300 Ar
418.4043 464.5439 m
414.3232 464.5439 l
S
300 Ar
418.6084 464.7485 m
414.1201 464.7485 l
S
300 Ar
418.8125 464.9521 m
413.916 464.9521 l
S
300 Ar
418.8125 465.1563 m
413.916 465.1563 l
S
300 Ar
418.8125 465.3599 m
413.916 465.3599 l
S
300 Ar
418.8125 465.5645 m
413.916 465.5645 l
S
300 Ar
418.8125 465.7681 m
413.916 465.7681 l
S
300 Ar
418.8125 465.9722 m
413.916 465.9722 l
S
300 Ar
418.8125 466.1763 m
413.916 466.1763 l
S
300 Ar
418.6084 466.3804 m
414.1201 466.3804 l
S
300 Ar
418.4043 466.584 m
414.3232 466.584 l
S
300 Ar
418.4043 466.7881 m
414.3232 466.7881 l
S
300 Ar
418.2002 466.9922 m
414.5273 466.9922 l
S
300 Ar
418.2002 467.1963 m
414.5273 467.1963 l
S
300 Ar
417.9961 467.3999 m
414.7314 467.3999 l
S
300 Ar
417.5869 467.604 m
415.1406 467.604 l
S
300 Ar
417.1797 467.8086 m
415.5479 467.8086 l
S
300 Ar
418.8125 466.7881 m
417.1797 466.7881 l
S
300 Ar
419.2197 466.9922 m
416.7725 466.9922 l
S
300 Ar
419.6279 467.1963 m
416.3643 467.1963 l
S
300 Ar
419.832 467.3999 m
416.1592 467.3999 l
S
300 Ar
419.832 467.604 m
416.1592 467.604 l
S
300 Ar
420.0361 467.8086 m
415.9551 467.8086 l
S
300 Ar
420.0361 468.0122 m
415.9551 468.0122 l
S
300 Ar
420.2402 468.2158 m
415.752 468.2158 l
S
300 Ar
420.4443 468.4204 m
415.5479 468.4204 l
S
300 Ar
420.4443 468.6245 m
415.5479 468.6245 l
S
300 Ar
420.4443 468.8281 m
415.5479 468.8281 l
S
300 Ar
420.4443 469.0322 m
415.5479 469.0322 l
S
300 Ar
420.4443 469.2363 m
415.5479 469.2363 l
S
300 Ar
420.4443 469.4404 m
415.5479 469.4404 l
S
300 Ar
420.4443 469.644 m
415.5479 469.644 l
S
300 Ar
420.2402 469.8481 m
415.752 469.8481 l
S
300 Ar
420.0361 470.0522 m
415.9551 470.0522 l
S
300 Ar
420.0361 470.2563 m
415.9551 470.2563 l
S
300 Ar
419.832 470.46 m
416.1592 470.46 l
S
300 Ar
419.832 470.6641 m
416.1592 470.6641 l
S
300 Ar
419.6279 470.8682 m
416.3643 470.8682 l
S
300 Ar
419.2197 471.0723 m
416.7725 471.0723 l
S
300 Ar
418.8125 471.2759 m
417.1797 471.2759 l
S
300 Ar
486.9482 519.6245 m
485.3164 519.6245 l
S
300 Ar
487.3555 519.8281 m
484.9082 519.8281 l
S
300 Ar
487.7637 520.0322 m
484.5 520.0322 l
S
300 Ar
487.9678 520.2363 m
484.2959 520.2363 l
S
300 Ar
487.9678 520.4404 m
484.2959 520.4404 l
S
300 Ar
488.1719 520.644 m
484.0918 520.644 l
S
300 Ar
488.1719 520.8481 m
484.0918 520.8481 l
S
300 Ar
488.376 521.0522 m
483.8877 521.0522 l
S
300 Ar
488.5801 521.2563 m
483.6836 521.2563 l
S
300 Ar
488.5801 521.46 m
483.6836 521.46 l
S
300 Ar
488.5801 521.6641 m
483.6836 521.6641 l
S
300 Ar
488.5801 521.8682 m
483.6836 521.8682 l
S
300 Ar
488.5801 522.0723 m
483.6836 522.0723 l
S
300 Ar
488.5801 522.2759 m
483.6836 522.2759 l
S
300 Ar
488.5801 522.4805 m
483.6836 522.4805 l
S
300 Ar
488.376 522.6841 m
483.8877 522.6841 l
S
300 Ar
488.1719 522.8882 m
484.0918 522.8882 l
S
300 Ar
488.1719 523.0918 m
484.0918 523.0918 l
S
300 Ar
487.9678 523.2964 m
484.2959 523.2964 l
S
300 Ar
487.9678 523.5 m
484.2959 523.5 l
S
300 Ar
487.7637 523.7041 m
484.5 523.7041 l
S
300 Ar
487.3555 523.9082 m
484.9082 523.9082 l
S
300 Ar
486.9482 524.1123 m
485.3164 524.1123 l
S
300 Ar
503.4727 519.6245 m
501.8398 519.6245 l
S
300 Ar
503.8799 519.8281 m
501.4316 519.8281 l
S
300 Ar
504.2871 520.0322 m
501.0234 520.0322 l
S
*U
*u
300 Ar
504.4912 520.2363 m
500.8203 520.2363 l
S
300 Ar
504.4912 520.4404 m
500.8203 520.4404 l
S
300 Ar
504.6953 520.644 m
500.6162 520.644 l
S
300 Ar
504.6953 520.8481 m
500.6162 520.8481 l
S
300 Ar
504.9004 521.0522 m
500.4121 521.0522 l
S
300 Ar
505.1045 521.2563 m
500.208 521.2563 l
S
300 Ar
505.1045 521.46 m
500.208 521.46 l
S
300 Ar
505.1045 521.6641 m
500.208 521.6641 l
S
300 Ar
505.1045 521.8682 m
500.208 521.8682 l
S
300 Ar
505.1045 522.0723 m
500.208 522.0723 l
S
300 Ar
505.1045 522.2759 m
500.208 522.2759 l
S
300 Ar
505.1045 522.4805 m
500.208 522.4805 l
S
300 Ar
504.9004 522.6841 m
500.4121 522.6841 l
S
300 Ar
504.6953 522.8882 m
500.6162 522.8882 l
S
300 Ar
504.6953 523.0918 m
500.6162 523.0918 l
S
300 Ar
504.4912 523.2964 m
500.8203 523.2964 l
S
300 Ar
504.4912 523.5 m
500.8203 523.5 l
S
300 Ar
504.2871 523.7041 m
501.0234 523.7041 l
S
300 Ar
503.8799 523.9082 m
501.4316 523.9082 l
S
300 Ar
503.4727 524.1123 m
501.8398 524.1123 l
S
300 Ar
508.5723 539.8203 m
506.9404 539.8203 l
S
300 Ar
508.9795 540.0244 m
506.5322 540.0244 l
S
300 Ar
509.3877 540.228 m
506.123 540.228 l
S
300 Ar
509.5918 540.4321 m
505.9189 540.4321 l
S
300 Ar
509.5918 540.6362 m
505.9189 540.6362 l
S
300 Ar
509.7959 540.8403 m
505.7158 540.8403 l
S
300 Ar
509.7959 541.0439 m
505.7158 541.0439 l
S
300 Ar
510 541.2485 m
505.5127 541.2485 l
S
300 Ar
510.2041 541.4521 m
505.3086 541.4521 l
S
300 Ar
510.2041 541.6563 m
505.3086 541.6563 l
S
300 Ar
510.2041 541.8599 m
505.3086 541.8599 l
S
300 Ar
510.2041 542.0645 m
505.3086 542.0645 l
S
300 Ar
510.2041 542.2681 m
505.3086 542.2681 l
S
300 Ar
510.2041 542.4722 m
505.3086 542.4722 l
S
300 Ar
510.2041 542.6763 m
505.3086 542.6763 l
S
300 Ar
510 542.8804 m
505.5127 542.8804 l
S
300 Ar
509.7959 543.084 m
505.7158 543.084 l
S
300 Ar
509.7959 543.2881 m
505.7158 543.2881 l
S
300 Ar
509.5918 543.4922 m
505.9189 543.4922 l
S
300 Ar
509.5918 543.6963 m
505.9189 543.6963 l
S
300 Ar
509.3877 543.8999 m
506.123 543.8999 l
S
300 Ar
508.9795 544.104 m
506.5322 544.104 l
S
300 Ar
508.5723 544.3081 m
506.9404 544.3081 l
S
300 Ar
536.5205 570.0122 m
534.8877 570.0122 l
S
300 Ar
536.9277 570.2158 m
534.4795 570.2158 l
S
300 Ar
537.3359 570.4204 m
534.0723 570.4204 l
S
300 Ar
537.54 570.6245 m
533.8682 570.6245 l
S
300 Ar
537.54 570.8281 m
533.8682 570.8281 l
S
300 Ar
537.7441 571.0322 m
533.6641 571.0322 l
S
300 Ar
537.7441 571.2363 m
533.6641 571.2363 l
S
300 Ar
537.9482 571.4404 m
533.46 571.4404 l
S
300 Ar
538.1523 571.644 m
533.2559 571.644 l
S
300 Ar
538.1523 571.8481 m
533.2559 571.8481 l
S
300 Ar
538.1523 572.0522 m
533.2559 572.0522 l
S
300 Ar
538.1523 572.2563 m
533.2559 572.2563 l
S
300 Ar
538.1523 572.46 m
533.2559 572.46 l
S
300 Ar
538.1523 572.6641 m
533.2559 572.6641 l
S
300 Ar
538.1523 572.8682 m
533.2559 572.8682 l
S
300 Ar
537.9482 573.0723 m
533.46 573.0723 l
S
300 Ar
537.7441 573.2759 m
533.6641 573.2759 l
S
300 Ar
537.7441 573.4805 m
533.6641 573.4805 l
S
300 Ar
537.54 573.6841 m
533.8682 573.6841 l
S
300 Ar
537.54 573.8882 m
533.8682 573.8882 l
S
300 Ar
537.3359 574.0918 m
534.0723 574.0918 l
S
300 Ar
536.9277 574.2964 m
534.4795 574.2964 l
S
300 Ar
536.5205 574.5 m
534.8877 574.5 l
S
300 Ar
219.0957 330.9248 m
219.0957 341.124 l
S
300 Ar
221.5444 341.124 m
216.6489 341.124 l
221.5444 341.124 l
S
300 Ar
144.2275 280.9443 m
144.2275 289.7158 l
S
300 Ar
146.6763 289.7158 m
141.7808 289.7158 l
146.6763 289.7158 l
S
300 Ar
265.8125 385.1885 m
265.8125 394.7764 l
S
300 Ar
268.2598 394.7764 m
263.3638 394.7764 l
268.2598 394.7764 l
S
300 Ar
319.0557 391.5117 m
319.0557 397.8359 l
S
300 Ar
321.5039 397.8359 m
316.6084 397.8359 l
321.5039 397.8359 l
S
300 Ar
236.2319 354.5879 m
236.2319 361.5244 l
S
300 Ar
238.6807 361.5244 m
233.7832 361.5244 l
238.6807 361.5244 l
S
300 Ar
282.9487 376.8242 m
282.9487 386.6162 l
S
300 Ar
285.396 386.6162 m
280.5 386.6162 l
285.396 386.6162 l
S
300 Ar
278.8682 348.877 m
278.8682 358.4639 l
S
300 Ar
281.3169 358.4639 m
276.4194 358.4639 l
281.3169 358.4639 l
S
300 Ar
112.6084 263.6045 m
112.6084 268.9082 l
S
300 Ar
115.0557 268.9082 m
110.1597 268.9082 l
115.0557 268.9082 l
S
300 Ar
337.6201 412.728 m
337.6201 422.52 l
S
300 Ar
340.0684 422.52 m
335.1719 422.52 l
340.0684 422.52 l
S
300 Ar
251.7363 349.2842 m
251.7363 358.0566 l
S
300 Ar
254.1831 358.0566 m
249.2876 358.0566 l
254.1831 358.0566 l
S
300 Ar
384.9482 433.1279 m
384.9482 440.4722 l
S
300 Ar
387.3955 440.4722 m
382.5 440.4722 l
387.3955 440.4722 l
S
300 Ar
212.9766 319.2959 m
212.9766 328.0684 l
S
300 Ar
215.4233 328.0684 m
210.5278 328.0684 l
215.4233 328.0684 l
S
300 Ar
112.6084 266.4609 m
112.6084 271.3564 l
S
300 Ar
115.0557 271.3564 m
110.1597 271.3564 l
115.0557 271.3564 l
S
300 Ar
433.2959 469.0322 m
433.2959 472.9082 l
S
300 Ar
435.7441 472.9082 m
430.8477 472.9082 l
435.7441 472.9082 l
S
300 Ar
351.4912 409.4644 m
351.4912 415.1763 l
S
300 Ar
353.9404 415.1763 m
349.0449 415.1763 l
353.9404 415.1763 l
S
300 Ar
170.5444 298.4883 m
170.5444 301.752 l
S
300 Ar
172.9917 301.752 m
168.0957 301.752 l
172.9917 301.752 l
S
300 Ar
265.8125 367.2363 m
265.8125 375.3955 l
S
300 Ar
268.2598 375.3955 m
263.3638 375.3955 l
268.2598 375.3955 l
S
300 Ar
302.1235 396.4082 m
302.1235 403.1401 l
S
300 Ar
304.5723 403.1401 m
299.6763 403.1401 l
304.5723 403.1401 l
S
300 Ar
343.1279 402.1201 m
343.1279 407.0166 l
S
300 Ar
345.5762 407.0166 m
340.6797 407.0166 l
345.5762 407.0166 l
S
300 Ar
294.5767 364.7881 m
294.5767 368.6641 l
S
300 Ar
297.0234 368.6641 m
292.1279 368.6641 l
297.0234 368.6641 l
S
300 Ar
153.4082 286.8604 m
153.4082 291.1445 l
S
300 Ar
155.8555 291.1445 m
150.9595 291.1445 l
155.8555 291.1445 l
S
300 Ar
393.3125 430.6802 m
393.3125 435.5762 l
S
300 Ar
395.7598 435.5762 m
390.8643 435.5762 l
395.7598 435.5762 l
S
300 Ar
410.8555 451.4883 m
410.8555 458.4243 l
S
300 Ar
413.3037 458.4243 m
408.4082 458.4243 l
413.3037 458.4243 l
S
300 Ar
356.5918 427.416 m
356.5918 434.1484 l
S
300 Ar
359.04 434.1484 m
354.1445 434.1484 l
359.04 434.1484 l
S
300 Ar
305.5918 382.7402 m
305.5918 390.4922 l
S
300 Ar
308.04 390.4922 m
303.1445 390.4922 l
308.04 390.4922 l
S
300 Ar
73.4404 249.5283 m
73.4404 260.1357 l
S
300 Ar
75.8872 260.1357 m
70.9917 260.1357 l
75.8872 260.1357 l
S
300 Ar
212.9766 335.208 m
212.9766 341.9404 l
S
300 Ar
215.4233 341.9404 m
210.5278 341.9404 l
215.4233 341.9404 l
S
300 Ar
315.792 411.9121 m
315.792 421.5 l
S
300 Ar
318.2402 421.5 m
313.3447 421.5 l
318.2402 421.5 l
S
300 Ar
144.2275 270.3359 m
144.2275 275.6406 l
S
300 Ar
146.6763 275.6406 m
141.7808 275.6406 l
146.6763 275.6406 l
S
300 Ar
319.0557 403.1401 m
319.0557 410.2803 l
S
300 Ar
321.5039 410.2803 m
316.6084 410.2803 l
321.5039 410.2803 l
S
300 Ar
230.7236 338.2686 m
230.7236 345.4082 l
S
300 Ar
233.1724 345.4082 m
228.2764 345.4082 l
233.1724 345.4082 l
S
300 Ar
375.9727 442.9204 m
375.9727 451.0801 l
S
300 Ar
378.4199 451.0801 m
373.5234 451.0801 l
378.4199 451.0801 l
S
300 Ar
206.6514 319.7041 m
206.6514 327.0479 l
S
300 Ar
209.1001 327.0479 m
204.2041 327.0479 l
209.1001 327.0479 l
S
300 Ar
325.584 401.1001 m
325.584 406.4043 l
S
300 Ar
328.0322 406.4043 m
323.1357 406.4043 l
328.0322 406.4043 l
S
300 Ar
414.5273 475.3564 m
414.5273 480.0483 l
S
300 Ar
416.9766 480.0483 m
412.0801 480.0483 l
416.9766 480.0483 l
S
300 Ar
322.3203 386.208 m
322.3203 392.9404 l
S
300 Ar
324.7676 392.9404 m
319.8721 392.9404 l
324.7676 392.9404 l
S
300 Ar
200.1235 314.4004 m
200.1235 321.1318 l
S
300 Ar
202.5723 321.1318 m
197.6763 321.1318 l
202.5723 321.1318 l
S
300 Ar
230.7236 341.124 m
230.7236 347.4482 l
S
300 Ar
233.1724 347.4482 m
228.2764 347.4482 l
233.1724 347.4482 l
S
300 Ar
134.2319 279.1084 m
134.2319 283.7998 l
S
300 Ar
136.6807 283.7998 m
131.7832 283.7998 l
136.6807 283.7998 l
S
300 Ar
265.8125 357.6475 m
265.8125 363.3604 l
S
300 Ar
268.2598 363.3604 m
263.3638 363.3604 l
268.2598 363.3604 l
S
300 Ar
315.792 394.7764 m
315.792 402.1201 l
S
300 Ar
318.2402 402.1201 m
313.3447 402.1201 l
318.2402 402.1201 l
S
300 Ar
369.0361 428.8442 m
369.0361 444.7563 l
S
300 Ar
371.4844 444.7563 m
366.5869 444.7563 l
371.4844 444.7563 l
S
300 Ar
186.0488 301.752 m
186.0488 310.1162 l
S
300 Ar
188.4956 310.1162 m
183.6001 310.1162 l
188.4956 310.1162 l
S
300 Ar
134.2319 287.2686 m
134.2319 295.4287 l
S
300 Ar
136.6807 295.4287 m
131.7832 295.4287 l
136.6807 295.4287 l
S
300 Ar
87.7192 244.6318 m
87.7192 252.792 l
S
300 Ar
90.168 252.792 m
85.2725 252.792 l
90.168 252.792 l
S
300 Ar
328.6445 410.2803 m
328.6445 416.604 l
S
300 Ar
331.0918 416.604 m
326.1953 416.604 l
331.0918 416.604 l
S
300 Ar
466.5479 489.228 m
466.5479 495.5522 l
S
300 Ar
468.9961 495.5522 m
464.0996 495.5522 l
468.9961 495.5522 l
S
300 Ar
270.2998 373.1523 m
270.2998 380.9043 l
S
300 Ar
272.7485 380.9043 m
267.8511 380.9043 l
272.7485 380.9043 l
S
300 Ar
134.2319 268.5 m
134.2319 276.6602 l
S
300 Ar
136.6807 276.6602 m
131.7832 276.6602 l
136.6807 276.6602 l
S
300 Ar
144.2275 275.2324 m
144.2275 284.8203 l
S
300 Ar
146.6763 284.8203 m
141.7808 284.8203 l
146.6763 284.8203 l
S
300 Ar
236.2319 352.752 m
236.2319 358.4639 l
S
300 Ar
238.6807 358.4639 m
233.7832 358.4639 l
238.6807 358.4639 l
S
300 Ar
498.3721 502.896 m
498.3721 522.2759 l
S
300 Ar
500.8203 522.2759 m
495.9238 522.2759 l
500.8203 522.2759 l
S
300 Ar
206.6514 321.1318 m
206.6514 331.9443 l
S
300 Ar
209.1001 331.9443 m
204.2041 331.9443 l
209.1001 331.9443 l
S
300 Ar
100.5723 259.7285 m
100.5723 268.5 l
S
300 Ar
103.0195 268.5 m
98.1235 268.5 l
103.0195 268.5 l
S
300 Ar
519.5869 545.1245 m
519.5869 556.752 l
S
300 Ar
522.0361 556.752 m
517.1406 556.752 l
522.0361 556.752 l
S
300 Ar
58.1401 224.8447 m
58.1401 234.4316 l
S
300 Ar
60.5874 234.4316 m
55.6914 234.4316 l
60.5874 234.4316 l
S
300 Ar
251.7363 341.5322 m
251.7363 351.3242 l
S
300 Ar
254.1831 351.3242 m
249.2876 351.3242 l
254.1831 351.3242 l
S
300 Ar
123.8276 282.3721 m
123.8276 290.124 l
S
300 Ar
126.2764 290.124 m
121.3809 290.124 l
126.2764 290.124 l
S
300 Ar
246.8403 336.6357 m
246.8403 345 l
S
300 Ar
249.2876 345 m
244.3916 345 l
249.2876 345 l
S
300 Ar
73.4404 235.4521 m
73.4404 241.7764 l
S
300 Ar
75.8872 241.7764 m
70.9917 241.7764 l
75.8872 241.7764 l
S
300 Ar
87.7192 282.9844 m
87.7192 297.4678 l
S
300 Ar
90.168 297.4678 m
85.2725 297.4678 l
90.168 297.4678 l
S
300 Ar
112.6084 278.4961 m
112.6084 287.2686 l
S
300 Ar
115.0557 287.2686 m
110.1597 287.2686 l
115.0557 287.2686 l
S
300 Ar
212.9766 335.8203 m
212.9766 345 l
S
300 Ar
215.4233 345 m
210.5278 345 l
215.4233 345 l
S
300 Ar
519.5869 524.3159 m
519.5869 532.8843 l
S
300 Ar
522.0361 532.8843 m
517.1406 532.8843 l
522.0361 532.8843 l
S
300 Ar
526.9316 536.7603 m
526.9316 545.1245 l
S
300 Ar
529.3799 545.1245 m
524.4844 545.1245 l
529.3799 545.1245 l
S
300 Ar
58.1401 224.8447 m
58.1401 231.9844 l
S
300 Ar
60.5874 231.9844 m
55.6914 231.9844 l
60.5874 231.9844 l
S
300 Ar
134.2319 261.5635 m
134.2319 278.0879 l
S
300 Ar
136.6807 278.0879 m
131.7832 278.0879 l
136.6807 278.0879 l
S
*U
*u
300 Ar
236.2319 357.0361 m
236.2319 360.5039 l
S
300 Ar
238.6807 360.5039 m
233.7832 360.5039 l
238.6807 360.5039 l
S
300 Ar
58.1401 241.3682 m
58.1401 245.2441 l
S
300 Ar
60.5874 245.2441 m
55.6914 245.2441 l
60.5874 245.2441 l
S
300 Ar
225.0127 315.8281 m
225.0127 326.0283 l
S
300 Ar
227.4595 326.0283 m
222.564 326.0283 l
227.4595 326.0283 l
S
300 Ar
87.7192 234.0244 m
87.7192 247.0801 l
S
300 Ar
90.168 247.0801 m
85.2725 247.0801 l
90.168 247.0801 l
S
300 Ar
170.5444 308.6885 m
170.5444 314.4004 l
S
300 Ar
172.9917 314.4004 m
168.0957 314.4004 l
172.9917 314.4004 l
S
300 Ar
144.2275 270.7441 m
144.2275 272.1719 l
S
300 Ar
146.6763 272.1719 m
141.7808 272.1719 l
146.6763 272.1719 l
S
300 Ar
58.1401 218.1113 m
58.1401 222.3955 l
S
300 Ar
60.5874 222.3955 m
55.6914 222.3955 l
60.5874 222.3955 l
S
300 Ar
144.2275 277.0684 m
144.2275 281.5566 l
S
300 Ar
146.6763 281.5566 m
141.7808 281.5566 l
146.6763 281.5566 l
S
300 Ar
58.1401 223.416 m
58.1401 229.1289 l
S
300 Ar
60.5874 229.1289 m
55.6914 229.1289 l
60.5874 229.1289 l
S
300 Ar
112.6084 242.7959 m
112.6084 249.1201 l
S
300 Ar
115.0557 249.1201 m
110.1597 249.1201 l
115.0557 249.1201 l
S
300 Ar
170.5444 291.1445 m
170.5444 295.0205 l
S
300 Ar
172.9917 295.0205 m
168.0957 295.0205 l
172.9917 295.0205 l
S
300 Ar
193.1875 315.4199 m
193.1875 319.2959 l
S
300 Ar
195.6362 319.2959 m
190.7402 319.2959 l
195.6362 319.2959 l
S
300 Ar
186.0488 321.7441 m
186.0488 324.5996 l
S
300 Ar
188.4956 324.5996 m
183.6001 324.5996 l
188.4956 324.5996 l
S
300 Ar
134.2319 261.1563 m
134.2319 265.0322 l
S
300 Ar
136.6807 265.0322 m
131.7832 265.0322 l
136.6807 265.0322 l
S
300 Ar
236.2319 325.0088 m
236.2319 351.3242 l
S
300 Ar
238.6807 351.3242 m
233.7832 351.3242 l
238.6807 351.3242 l
S
300 Ar
302.1235 374.9883 m
302.1235 379.2725 l
S
300 Ar
304.5723 379.2725 m
299.6763 379.2725 l
304.5723 379.2725 l
S
300 Ar
315.792 407.4243 m
315.792 416.1963 l
S
300 Ar
318.2402 416.1963 m
313.3447 416.1963 l
318.2402 416.1963 l
S
300 Ar
328.6445 407.8325 m
328.6445 414.7681 l
S
300 Ar
331.0918 414.7681 m
326.1953 414.7681 l
331.0918 414.7681 l
S
300 Ar
331.7041 411.2998 m
331.7041 415.1763 l
S
300 Ar
334.1523 415.1763 m
329.2559 415.1763 l
334.1523 415.1763 l
S
300 Ar
334.5596 411.9121 m
334.5596 415.7881 l
S
300 Ar
337.0088 415.7881 m
332.1123 415.7881 l
337.0088 415.7881 l
S
300 Ar
340.4766 412.3203 m
340.4766 420.4805 l
S
300 Ar
342.9238 420.4805 m
338.0273 420.4805 l
342.9238 420.4805 l
S
300 Ar
343.1279 407.4243 m
343.1279 421.0918 l
S
300 Ar
345.5762 421.0918 m
340.6797 421.0918 l
345.5762 421.0918 l
S
300 Ar
343.1279 413.7485 m
343.1279 443.7363 l
S
300 Ar
345.5762 443.7363 m
340.6797 443.7363 l
345.5762 443.7363 l
S
300 Ar
348.6357 420.4805 m
348.6357 431.7002 l
S
300 Ar
351.084 431.7002 m
346.1875 431.7002 l
351.084 431.7002 l
S
300 Ar
353.9404 415.1763 m
353.9404 421.9082 l
S
300 Ar
356.3877 421.9082 m
351.4912 421.9082 l
356.3877 421.9082 l
S
300 Ar
361.6914 438.4321 m
361.6914 444.3481 l
S
300 Ar
364.1406 444.3481 m
359.2441 444.3481 l
364.1406 444.3481 l
S
300 Ar
384.9482 428.8442 m
384.9482 433.1279 l
S
300 Ar
387.3955 433.1279 m
382.5 433.1279 l
387.3955 433.1279 l
S
300 Ar
395.3525 448.2246 m
395.3525 459.8521 l
S
300 Ar
397.7998 459.8521 m
392.9043 459.8521 l
397.7998 459.8521 l
S
300 Ar
397.3916 458.4243 m
397.3916 470.8682 l
S
300 Ar
399.8398 470.8682 m
394.9443 470.8682 l
399.8398 470.8682 l
S
300 Ar
416.3643 465.5645 m
416.3643 472.2964 l
S
300 Ar
418.8125 472.2964 m
413.916 472.2964 l
418.8125 472.2964 l
S
300 Ar
417.9961 469.0322 m
417.9961 483.5166 l
S
300 Ar
420.4443 483.5166 m
415.5479 483.5166 l
420.4443 483.5166 l
S
300 Ar
486.1318 521.8682 m
486.1318 528.6001 l
S
300 Ar
488.5801 528.6001 m
483.6836 528.6001 l
488.5801 528.6001 l
S
300 Ar
502.6553 521.8682 m
502.6553 550.4282 l
S
300 Ar
505.1045 550.4282 m
500.208 550.4282 l
505.1045 550.4282 l
S
300 Ar
507.7559 542.0645 m
507.7559 563.8921 l
S
300 Ar
510.2041 563.8921 m
505.3086 563.8921 l
510.2041 563.8921 l
S
300 Ar
535.7041 572.2563 m
535.7041 585.312 l
S
300 Ar
538.1523 585.312 m
533.2559 585.312 l
538.1523 585.312 l
S
300 Ar
219.0957 330.9248 m
219.0957 320.7246 l
S
300 Ar
221.5444 320.7246 m
216.6489 320.7246 l
221.5444 320.7246 l
S
300 Ar
144.2275 280.9443 m
144.2275 272.1719 l
S
300 Ar
146.6763 272.1719 m
141.7808 272.1719 l
146.6763 272.1719 l
S
300 Ar
265.8125 385.1885 m
265.8125 375.3955 l
S
300 Ar
268.2598 375.3955 m
263.3638 375.3955 l
268.2598 375.3955 l
S
300 Ar
319.0557 391.5117 m
319.0557 385.1885 l
S
300 Ar
321.5039 385.1885 m
316.6084 385.1885 l
321.5039 385.1885 l
S
300 Ar
236.2319 354.5879 m
236.2319 347.8564 l
S
300 Ar
238.6807 347.8564 m
233.7832 347.8564 l
238.6807 347.8564 l
S
300 Ar
282.9487 376.8242 m
282.9487 367.2363 l
S
300 Ar
285.396 367.2363 m
280.5 367.2363 l
285.396 367.2363 l
S
300 Ar
278.8682 348.877 m
278.8682 339.084 l
S
300 Ar
281.3169 339.084 m
276.4194 339.084 l
281.3169 339.084 l
S
300 Ar
112.6084 263.6045 m
112.6084 258.2998 l
S
300 Ar
115.0557 258.2998 m
110.1597 258.2998 l
115.0557 258.2998 l
S
300 Ar
337.6201 412.728 m
337.6201 403.1401 l
S
300 Ar
340.0684 403.1401 m
335.1719 403.1401 l
340.0684 403.1401 l
S
300 Ar
251.7363 349.2842 m
251.7363 340.5117 l
S
300 Ar
254.1831 340.5117 m
249.2876 340.5117 l
254.1831 340.5117 l
S
300 Ar
384.9482 433.1279 m
384.9482 425.7842 l
S
300 Ar
387.3955 425.7842 m
382.5 425.7842 l
387.3955 425.7842 l
S
300 Ar
212.9766 319.2959 m
212.9766 310.5244 l
S
300 Ar
215.4233 310.5244 m
210.5278 310.5244 l
215.4233 310.5244 l
S
300 Ar
112.6084 266.4609 m
112.6084 261.5635 l
S
300 Ar
115.0557 261.5635 m
110.1597 261.5635 l
115.0557 261.5635 l
S
300 Ar
433.2959 469.0322 m
433.2959 465.1563 l
S
300 Ar
435.7441 465.1563 m
430.8477 465.1563 l
435.7441 465.1563 l
S
300 Ar
351.4912 409.4644 m
351.4912 403.5483 l
S
300 Ar
353.9404 403.5483 m
349.0449 403.5483 l
353.9404 403.5483 l
S
300 Ar
170.5444 298.4883 m
170.5444 295.0205 l
S
300 Ar
172.9917 295.0205 m
168.0957 295.0205 l
172.9917 295.0205 l
S
300 Ar
265.8125 367.2363 m
265.8125 359.0762 l
S
300 Ar
268.2598 359.0762 m
263.3638 359.0762 l
268.2598 359.0762 l
S
300 Ar
302.1235 396.4082 m
302.1235 389.4727 l
S
300 Ar
304.5723 389.4727 m
299.6763 389.4727 l
304.5723 389.4727 l
S
300 Ar
343.1279 402.1201 m
343.1279 397.2246 l
S
300 Ar
345.5762 397.2246 m
340.6797 397.2246 l
345.5762 397.2246 l
S
300 Ar
294.5767 364.7881 m
294.5767 360.9121 l
S
300 Ar
297.0234 360.9121 m
292.1279 360.9121 l
297.0234 360.9121 l
S
300 Ar
153.4082 286.8604 m
153.4082 282.3721 l
S
300 Ar
155.8555 282.3721 m
150.9595 282.3721 l
155.8555 282.3721 l
S
300 Ar
393.3125 430.6802 m
393.3125 425.7842 l
S
300 Ar
395.7598 425.7842 m
390.8643 425.7842 l
395.7598 425.7842 l
S
300 Ar
410.8555 451.4883 m
410.8555 444.7563 l
S
300 Ar
413.3037 444.7563 m
408.4082 444.7563 l
413.3037 444.7563 l
S
300 Ar
356.5918 427.416 m
356.5918 420.4805 l
S
300 Ar
359.04 420.4805 m
354.1445 420.4805 l
359.04 420.4805 l
S
300 Ar
305.5918 382.7402 m
305.5918 374.9883 l
S
300 Ar
308.04 374.9883 m
303.1445 374.9883 l
308.04 374.9883 l
S
300 Ar
73.4404 249.5283 m
73.4404 238.9199 l
S
300 Ar
75.8872 238.9199 m
70.9917 238.9199 l
75.8872 238.9199 l
S
300 Ar
212.9766 335.208 m
212.9766 328.4766 l
S
300 Ar
215.4233 328.4766 m
210.5278 328.4766 l
215.4233 328.4766 l
S
300 Ar
315.792 411.9121 m
315.792 402.1201 l
S
300 Ar
318.2402 402.1201 m
313.3447 402.1201 l
318.2402 402.1201 l
S
300 Ar
144.2275 270.3359 m
144.2275 265.0322 l
S
300 Ar
146.6763 265.0322 m
141.7808 265.0322 l
146.6763 265.0322 l
S
300 Ar
319.0557 403.1401 m
319.0557 395.7964 l
S
300 Ar
321.5039 395.7964 m
316.6084 395.7964 l
321.5039 395.7964 l
S
300 Ar
230.7236 338.2686 m
230.7236 330.9248 l
S
300 Ar
233.1724 330.9248 m
228.2764 330.9248 l
233.1724 330.9248 l
S
300 Ar
375.9727 442.9204 m
375.9727 434.5562 l
S
300 Ar
378.4199 434.5562 m
373.5234 434.5562 l
378.4199 434.5562 l
S
300 Ar
206.6514 319.7041 m
206.6514 312.5635 l
S
300 Ar
209.1001 312.5635 m
204.2041 312.5635 l
209.1001 312.5635 l
S
300 Ar
325.584 401.1001 m
325.584 395.7964 l
S
300 Ar
328.0322 395.7964 m
323.1357 395.7964 l
328.0322 395.7964 l
S
300 Ar
414.5273 475.3564 m
414.5273 470.46 l
S
300 Ar
416.9766 470.46 m
412.0801 470.46 l
416.9766 470.46 l
S
300 Ar
322.3203 386.208 m
322.3203 379.2725 l
S
300 Ar
324.7676 379.2725 m
319.8721 379.2725 l
324.7676 379.2725 l
S
300 Ar
200.1235 314.4004 m
200.1235 307.668 l
S
300 Ar
202.5723 307.668 m
197.6763 307.668 l
202.5723 307.668 l
S
300 Ar
230.7236 341.124 m
230.7236 334.7998 l
S
300 Ar
233.1724 334.7998 m
228.2764 334.7998 l
233.1724 334.7998 l
S
300 Ar
134.2319 279.1084 m
134.2319 274.2119 l
S
300 Ar
136.6807 274.2119 m
131.7832 274.2119 l
136.6807 274.2119 l
S
300 Ar
265.8125 357.6475 m
265.8125 351.7324 l
S
300 Ar
268.2598 351.7324 m
263.3638 351.7324 l
268.2598 351.7324 l
S
300 Ar
315.792 394.7764 m
315.792 387.6357 l
S
300 Ar
318.2402 387.6357 m
313.3447 387.6357 l
318.2402 387.6357 l
S
300 Ar
369.0361 428.8442 m
369.0361 412.728 l
S
300 Ar
371.4844 412.728 m
366.5869 412.728 l
371.4844 412.728 l
S
300 Ar
186.0488 301.752 m
186.0488 293.5928 l
S
300 Ar
188.4956 293.5928 m
183.6001 293.5928 l
188.4956 293.5928 l
S
300 Ar
134.2319 287.2686 m
134.2319 279.1084 l
S
300 Ar
136.6807 279.1084 m
131.7832 279.1084 l
136.6807 279.1084 l
S
300 Ar
87.7192 244.6318 m
87.7192 236.4727 l
S
300 Ar
90.168 236.4727 m
85.2725 236.4727 l
90.168 236.4727 l
S
300 Ar
328.6445 410.2803 m
328.6445 403.9565 l
S
300 Ar
331.0918 403.9565 m
326.1953 403.9565 l
331.0918 403.9565 l
S
300 Ar
466.5479 489.228 m
466.5479 483.1079 l
S
300 Ar
468.9961 483.1079 m
464.0996 483.1079 l
468.9961 483.1079 l
S
300 Ar
270.2998 373.1523 m
270.2998 365.4004 l
S
300 Ar
272.7485 365.4004 m
267.8511 365.4004 l
272.7485 365.4004 l
S
300 Ar
134.2319 268.5 m
134.2319 260.1357 l
S
300 Ar
136.6807 260.1357 m
131.7832 260.1357 l
136.6807 260.1357 l
S
300 Ar
144.2275 275.2324 m
144.2275 265.4404 l
S
300 Ar
146.6763 265.4404 m
141.7808 265.4404 l
146.6763 265.4404 l
S
300 Ar
236.2319 352.752 m
236.2319 346.8359 l
S
300 Ar
238.6807 346.8359 m
233.7832 346.8359 l
238.6807 346.8359 l
S
300 Ar
498.3721 502.896 m
498.3721 483.5166 l
S
300 Ar
500.8203 483.5166 m
495.9238 483.5166 l
500.8203 483.5166 l
S
300 Ar
206.6514 321.1318 m
206.6514 310.5244 l
S
300 Ar
209.1001 310.5244 m
204.2041 310.5244 l
209.1001 310.5244 l
S
300 Ar
100.5723 259.7285 m
100.5723 250.9561 l
S
300 Ar
103.0195 250.9561 m
98.1235 250.9561 l
103.0195 250.9561 l
S
300 Ar
519.5869 545.1245 m
519.5869 533.4961 l
S
300 Ar
522.0361 533.4961 m
517.1406 533.4961 l
522.0361 533.4961 l
S
300 Ar
58.1401 224.8447 m
58.1401 215.0518 l
S
300 Ar
60.5874 215.0518 m
55.6914 215.0518 l
60.5874 215.0518 l
S
300 Ar
251.7363 341.5322 m
251.7363 331.9443 l
S
300 Ar
254.1831 331.9443 m
249.2876 331.9443 l
254.1831 331.9443 l
S
300 Ar
123.8276 282.3721 m
123.8276 274.6201 l
S
300 Ar
126.2764 274.6201 m
121.3809 274.6201 l
126.2764 274.6201 l
S
300 Ar
246.8403 336.6357 m
246.8403 328.4766 l
S
300 Ar
249.2876 328.4766 m
244.3916 328.4766 l
249.2876 328.4766 l
S
300 Ar
73.4404 235.4521 m
73.4404 229.1289 l
S
300 Ar
75.8872 229.1289 m
70.9917 229.1289 l
75.8872 229.1289 l
S
300 Ar
87.7192 282.9844 m
87.7192 268.5 l
S
300 Ar
90.168 268.5 m
85.2725 268.5 l
90.168 268.5 l
S
300 Ar
112.6084 278.4961 m
112.6084 269.9287 l
S
300 Ar
115.0557 269.9287 m
110.1597 269.9287 l
115.0557 269.9287 l
S
300 Ar
212.9766 335.8203 m
212.9766 326.6406 l
S
300 Ar
215.4233 326.6406 m
210.5278 326.6406 l
215.4233 326.6406 l
S
300 Ar
519.5869 524.3159 m
519.5869 515.5439 l
S
300 Ar
522.0361 515.5439 m
517.1406 515.5439 l
522.0361 515.5439 l
S
300 Ar
526.9316 536.7603 m
526.9316 528.6001 l
S
300 Ar
529.3799 528.6001 m
524.4844 528.6001 l
529.3799 528.6001 l
S
*U
*u
300 Ar
58.1401 224.8447 m
58.1401 217.5 l
S
300 Ar
60.5874 217.5 m
55.6914 217.5 l
60.5874 217.5 l
S
300 Ar
134.2319 261.5635 m
134.2319 245.04 l
S
300 Ar
136.6807 245.04 m
131.7832 245.04 l
136.6807 245.04 l
S
300 Ar
236.2319 357.0361 m
236.2319 353.7725 l
S
300 Ar
238.6807 353.7725 m
233.7832 353.7725 l
238.6807 353.7725 l
S
300 Ar
58.1401 241.3682 m
58.1401 237.2881 l
S
300 Ar
60.5874 237.2881 m
55.6914 237.2881 l
60.5874 237.2881 l
S
300 Ar
225.0127 315.8281 m
225.0127 305.6289 l
S
300 Ar
227.4595 305.6289 m
222.564 305.6289 l
227.4595 305.6289 l
S
300 Ar
87.7192 234.0244 m
87.7192 220.9678 l
S
300 Ar
90.168 220.9678 m
85.2725 220.9678 l
90.168 220.9678 l
S
300 Ar
170.5444 308.6885 m
170.5444 302.7725 l
S
300 Ar
172.9917 302.7725 m
168.0957 302.7725 l
172.9917 302.7725 l
S
300 Ar
144.2275 270.7441 m
144.2275 269.3164 l
S
300 Ar
146.6763 269.3164 m
141.7808 269.3164 l
146.6763 269.3164 l
S
300 Ar
58.1401 218.1113 m
58.1401 213.624 l
S
300 Ar
60.5874 213.624 m
55.6914 213.624 l
60.5874 213.624 l
S
300 Ar
144.2275 277.0684 m
144.2275 272.7842 l
S
300 Ar
146.6763 272.7842 m
141.7808 272.7842 l
146.6763 272.7842 l
S
300 Ar
58.1401 223.416 m
58.1401 217.5 l
S
300 Ar
60.5874 217.5 m
55.6914 217.5 l
60.5874 217.5 l
S
300 Ar
112.6084 242.7959 m
112.6084 236.4727 l
S
300 Ar
115.0557 236.4727 m
110.1597 236.4727 l
115.0557 236.4727 l
S
300 Ar
170.5444 291.1445 m
170.5444 287.2686 l
S
300 Ar
172.9917 287.2686 m
168.0957 287.2686 l
172.9917 287.2686 l
S
300 Ar
193.1875 315.4199 m
193.1875 311.5449 l
S
300 Ar
195.6362 311.5449 m
190.7402 311.5449 l
195.6362 311.5449 l
S
300 Ar
186.0488 321.7441 m
186.0488 318.6836 l
S
300 Ar
188.4956 318.6836 m
183.6001 318.6836 l
188.4956 318.6836 l
S
300 Ar
134.2319 261.1563 m
134.2319 257.2803 l
S
300 Ar
136.6807 257.2803 m
131.7832 257.2803 l
136.6807 257.2803 l
S
300 Ar
236.2319 325.0088 m
236.2319 298.8955 l
S
300 Ar
238.6807 298.8955 m
233.7832 298.8955 l
238.6807 298.8955 l
S
300 Ar
302.1235 374.9883 m
302.1235 370.7041 l
S
300 Ar
304.5723 370.7041 m
299.6763 370.7041 l
304.5723 370.7041 l
S
300 Ar
315.792 407.4243 m
315.792 398.6523 l
S
300 Ar
318.2402 398.6523 m
313.3447 398.6523 l
318.2402 398.6523 l
S
300 Ar
328.6445 407.8325 m
328.6445 401.1001 l
S
300 Ar
331.0918 401.1001 m
326.1953 401.1001 l
331.0918 401.1001 l
S
300 Ar
331.7041 411.2998 m
331.7041 407.4243 l
S
300 Ar
334.1523 407.4243 m
329.2559 407.4243 l
334.1523 407.4243 l
S
300 Ar
334.5596 411.9121 m
334.5596 407.8325 l
S
300 Ar
337.0088 407.8325 m
332.1123 407.8325 l
337.0088 407.8325 l
S
300 Ar
340.4766 412.3203 m
340.4766 404.1602 l
S
300 Ar
342.9238 404.1602 m
338.0273 404.1602 l
342.9238 404.1602 l
S
300 Ar
343.1279 407.4243 m
343.1279 393.9609 l
S
300 Ar
345.5762 393.9609 m
340.6797 393.9609 l
345.5762 393.9609 l
S
300 Ar
343.1279 413.7485 m
343.1279 383.7607 l
S
300 Ar
345.5762 383.7607 m
340.6797 383.7607 l
345.5762 383.7607 l
S
300 Ar
348.6357 420.4805 m
348.6357 409.4644 l
S
300 Ar
351.084 409.4644 m
346.1875 409.4644 l
351.084 409.4644 l
S
300 Ar
353.9404 415.1763 m
353.9404 408.4443 l
S
300 Ar
356.3877 408.4443 m
351.4912 408.4443 l
356.3877 408.4443 l
S
300 Ar
361.6914 438.4321 m
361.6914 432.7202 l
S
300 Ar
364.1406 432.7202 m
359.2441 432.7202 l
364.1406 432.7202 l
S
300 Ar
384.9482 428.8442 m
384.9482 424.3564 l
S
300 Ar
387.3955 424.3564 m
382.5 424.3564 l
387.3955 424.3564 l
S
300 Ar
395.3525 448.2246 m
395.3525 436.5962 l
S
300 Ar
397.7998 436.5962 m
392.9043 436.5962 l
397.7998 436.5962 l
S
300 Ar
397.3916 458.4243 m
397.3916 445.7759 l
S
300 Ar
399.8398 445.7759 m
394.9443 445.7759 l
399.8398 445.7759 l
S
300 Ar
416.3643 465.5645 m
416.3643 458.8325 l
S
300 Ar
418.8125 458.8325 m
413.916 458.8325 l
418.8125 458.8325 l
S
300 Ar
417.9961 469.0322 m
417.9961 454.5483 l
S
300 Ar
420.4443 454.5483 m
415.5479 454.5483 l
420.4443 454.5483 l
S
300 Ar
486.1318 521.8682 m
486.1318 514.9321 l
S
300 Ar
488.5801 514.9321 m
483.6836 514.9321 l
488.5801 514.9321 l
S
300 Ar
502.6553 521.8682 m
502.6553 493.3081 l
S
300 Ar
505.1045 493.3081 m
500.208 493.3081 l
505.1045 493.3081 l
S
300 Ar
507.7559 542.0645 m
507.7559 520.2363 l
S
300 Ar
510.2041 520.2363 m
505.3086 520.2363 l
510.2041 520.2363 l
S
300 Ar
535.7041 572.2563 m
535.7041 558.9961 l
S
300 Ar
538.1523 558.9961 m
533.2559 558.9961 l
538.1523 558.9961 l
S
*U
U
/BBAccumRotation (0.000000) XT
51 221 m
580.9912 571.644 l
S
0 To
1 0 0 1 296 177 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
0 J 0 j 4 M
%_ 0 50 XQ
/_TimesNewRomanPSMT 18 18 -5.5195 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
1 TA
%_ 0 XL
0 TY
0 TV
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
0 Tc
0 Tw
(redshift) Tx 1 0 Tk
(\r) TX 
TO
0 To
0 1 -1 0 25 363 0 Tp
0 Tv
TP
0 Tr
(m-M \(mag\)) Tx 1 0 Tk
(\r) TX 
TO
/BBAccumRotation (1.570796) XT
LB
%AI5_EndLayer--
gsave annotatepage grestore showpage
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec

%%EndDocument
 @endspecial 523 2548 a Fs(Fig.)15 b(3.)40 b Ft(The)c(Hubble)f(diagram)
h(for)g(SNIa)f(from)h(0)p Fq(:)p Ft(01)j Fq(>)f(z)j(>)c
Ft(0)p Fq(:)p Ft(2)g([24,33,41,84].)k(The)36 b(102)523
2640 y(ob)t(jects)27 b(in)e(this)h(range)g(ha)n(v)n(e)g(a)g(residual)g
(ab)r(out)g(the)f(in)n(v)n(erse)h(square)f(line)h(of)h
Fr(\030)21 b Ft(10\045.)523 2901 y Fo(5)112 b(The)38
b(Measuremen)m(t)g(of)f(Acceleration)523 3098 y Fw(The)d(in)n(trinsic)g
(brigh)n(tness)f(of)i(SNIa)f(allo)n(w)f(them)i(to)f(b)r(e)h(disco)n(v)n
(ered)d(to)i Fm(z)j(>)d Fw(1)p Fm(:)p Fw(5)f(with)523
3197 y(curren)n(t)25 b(instrumen)n(tation)g(\(while)i(a)e(comparably)f
(deep)i(searc)n(h)f(for)g(t)n(yp)r(e)h(I)r(I)g(SNe)g(w)n(ould)523
3297 y(only)h(reac)n(h)g(redshifts)g(of)h Fm(z)e Fj(\030)d
Fw(0)p Fm(:)p Fw(5\).)k(In)h(the)g(1980s,)e(ho)n(w)n(ev)n(er,)f
(\014nding,)j(iden)n(tifying,)g(and)523 3397 y(studying)f(ev)n(en)g
(the)h(impressiv)n(ely)e(luminous)h(t)n(yp)r(e)g(Ia)g(SNe)h(w)n(as)e(a)
h(daun)n(ting)g(c)n(hallenge,)523 3496 y(ev)n(en)40 b(to)n(w)n(ards)f
(the)i(lo)n(w)n(er)f(end)h(of)f(the)h(redshift)g(range)f(sho)n(wn)g(in)
h(Fig.)f(1.)h(A)n(t)g(these)523 3596 y(redshifts,)24
b(b)r(ey)n(ond)f Fm(z)j Fj(\030)d Fw(0)p Fm(:)p Fw(25,)f(Fig.)h(1)h
(sho)n(ws)e(that)i(relev)-5 b(an)n(t)23 b(cosmological)e(mo)r(dels)i
(could)523 3696 y(b)r(e)35 b(distinguished)h(b)n(y)e(di\013erences)h
(of)g(order)f(0.2)g(mag)g(in)h(their)g(predicted)g(luminosit)n(y)523
3795 y(distances.)21 b(F)-7 b(or)22 b(SNIa)f(with)i(a)e(disp)r(ersion)g
(of)h(0.2)f(mag,)g(10)g(w)n(ell)h(observ)n(ed)e(ob)5
b(jects)21 b(should)523 3895 y(pro)n(vide)29 b(a)g(3)p
Fm(\033)k Fw(separation)c(b)r(et)n(w)n(een)h(the)g(v)-5
b(arious)29 b(cosmological)f(mo)r(dels.)h(It)i(should)f(b)r(e)523
3995 y(noted)j(that)h(the)f(uncertain)n(t)n(y)g(describ)r(ed)f(ab)r(o)n
(v)n(e)g(in)i(measuring)e Fm(H)2728 4007 y Fv(0)2798
3995 y Fw(is)h(not)g(imp)r(ortan)n(t)523 4094 y(in)24
b(measuring)f(the)h(parameters)e(for)h(di\013eren)n(t)h(cosmological)d
(mo)r(dels.)j(Only)f(the)h(relativ)n(e)523 4194 y(brigh)n(tness)h(of)i
(ob)5 b(jects)26 b(near)f(and)h(far)g(is)h(b)r(eing)f(exploited)g(in)h
(Eq.)f(\(7\))h(and)f(the)h(absolute)523 4293 y(v)-5 b(alue)28
b(of)f Fm(H)901 4305 y Fv(0)966 4293 y Fw(scales)g(out.)648
4393 y(The)35 b(\014rst)h(distan)n(t)g(SN)g(searc)n(h)e(w)n(as)h
(started)g(b)n(y)g(the)i(Danish)e(team)h(of)g(N\034rgaard-)523
4493 y(Nielsen)d(et)g(al.)g([57].)f(With)i(signi\014can)n(t)e(e\013ort)
h(and)f(large)g(amoun)n(ts)g(of)h(telescop)r(e)f(time)523
4592 y(spread)i(o)n(v)n(er)g(more)h(than)g(t)n(w)n(o)g(y)n(ears,)e
(they)j(disco)n(v)n(ered)d(a)i(single)g(SNIa)g(in)h(a)f
Fm(z)k Fw(=)d(0)p Fm(:)p Fw(3)523 4692 y(cluster)30 b(of)h(galaxies)e
(\(and)i(one)f(SNI)r(I)h(at)g Fm(z)g Fw(=)d(0)p Fm(:)p
Fw(2\))i([35,57].)f(The)i(SNIa)f(w)n(as)g(disco)n(v)n(ered)523
4792 y(w)n(ell)h(after)f(maxim)n(um)h(ligh)n(t)f(on)h(an)f(observing)g
(nigh)n(t)g(that)h(could)g(not)g(ha)n(v)n(e)e(b)r(een)j(pre-)523
4891 y(dicted,)f(and)e(w)n(as)g(only)h(marginally)f(useful)h(for)f
(cosmology.)f(Ho)n(w)n(ev)n(er,)g(it)j(sho)n(w)n(ed)e(that)p
eop
%%Page: 11 11
11 10 bop 1829 232 a Ft(Measuring)27 b(cosmology)g(with)e(Sup)r(erno)n
(v)l(ae)198 b(11)523 415 y Fw(suc)n(h)34 b(high)h(redshift)f(SNe)h(did)
g(exist)f(and)h(could)f(b)r(e)h(found,)g(but)g(that)g(they)g(w)n(ould)f
(b)r(e)523 515 y(v)n(ery)26 b(di\016cult)j(to)e(use)h(as)f
(cosmological)e(to)r(ols.)648 614 y(Just)37 b(b)r(efore)g(this)g
(\014rst)g(disco)n(v)n(ery)e(in)j(1988,)d(a)i(searc)n(h)f(for)g(high)i
(redshift)f(t)n(yp)r(e)g(Ia)523 714 y(SNe)30 b(using)f(a)h(then)g(no)n
(v)n(el)f(wide)g(\014eld)h(camera)f(on)g(a)g(m)n(uc)n(h)h(larger)e
(\(4m\))i(telescop)r(e)f(w)n(as)523 814 y(b)r(egun)j(at)h(the)f
Fi(La)n(wrence)f(Berk)n(eley)g(National)g(Lab)r(oratory)f(\(LBNL\))j
Fw(and)f(the)h Fi(Cen)n(ter)523 913 y(for)23 b(P)n(article)g(Astroph)n
(ysics)p Fw(,)f(at)i(Berk)n(eley)-7 b(.)22 b(This)i(searc)n(h,)e(no)n
(w)h(kno)n(wn)g(as)h(the)g Fi(Sup)r(erno)n(v)-5 b(a)523
1013 y(Cosmological)27 b(Pro)5 b(ject)29 b(\(SCP\))p
Fw(,)h(w)n(as)e(inspired)i(b)n(y)f(the)h(impressiv)n(e)f(studies)g(of)h
(the)g(late)523 1112 y(1980s)g(indicating)h(that)h(extremely)f(similar)
g(t)n(yp)r(e)h(Ia)g(SN)g(ev)n(en)n(ts)f(could)g(b)r(e)h(recognized)523
1212 y(b)n(y)c(their)g(sp)r(ectra)g(and)g(ligh)n(t)h(curv)n(es,)e(and)h
(b)n(y)g(the)h(success)e(of)i(the)g Fi(LBNL)f Fw(fully)h(rob)r(otic)523
1312 y(lo)n(w-redshift)d(SN)h(searc)n(h)f(in)h(\014nding)g(20)f(SNe)h
(with)h(automatic)e(image)g(analysis)g([56,67].)648 1411
y(The)d Fi(SCP)g Fw(targeted)g(a)g(m)n(uc)n(h)g(higher)g(redshift)h
(range,)e Fm(z)k(>)d Fw(0)p Fm(:)p Fw(3,)g(in)h(order)e(to)h(measure)
523 1511 y(the)38 b(\(presumed\))g(deceleration)f(of)h(the)g(Univ)n
(erse,)f(so)g(it)h(faced)g(a)f(di\013eren)n(t)h(c)n(hallenge)523
1611 y(than)30 b(the)f Fi(CTSS)h Fw(searc)n(h.)e(The)i(high)f(redshift)
h(SNe)f(required)g(disco)n(v)n(ery)-7 b(,)27 b(sp)r(ectroscopic)523
1710 y(con\014rmation,)19 b(and)g(photometric)g(follo)n(w)g(up)h(on)f
(m)n(uc)n(h)h(larger)d(telescop)r(es.)i(This)h(precious)523
1810 y(telescop)r(e)25 b(time)h(could)g(neither)f(b)r(e)h(b)r(orro)n(w)
n(ed)d(from)i(other)g(visiting)h(observ)n(ers)d(and)i(sta\013)523
1910 y(nor)32 b(applied)h(for)f(in)h(su\016cien)n(t)g(quan)n(tities)g
(spread)f(throughout)g(the)h(y)n(ear)f(to)g(co)n(v)n(er)f(all)523
2009 y(SNe)k(disco)n(v)n(ered)d(in)j(a)f(giv)n(en)g(searc)n(h)e
(\014eld,)j(and)f(with)h(observ)-5 b(ations)33 b(early)g(enough)h(to)
523 2109 y(establish)f(their)g(p)r(eak)g(brigh)n(tness.)f(Moreo)n(v)n
(er,)e(since)j(the)h(observing)d(time)j(to)f(con\014rm)523
2208 y(high)k(redshift)h(SNe)g(w)n(as)f(signi\014can)n(t)g(on)g(the)h
(largest)e(telescop)r(es,)h(there)g(w)n(as)g(a)g(clear)523
2308 y(\\c)n(hic)n(k)n(en)e(and)i(egg")e(problem:)h(telescop)r(e)h
(time)g(assignmen)n(t)f(committees)h(w)n(ould)f(not)523
2408 y(a)n(w)n(ard)25 b(follo)n(w-up)i(time)h(for)e(a)h(SN)h(disco)n(v)
n(ery)d(that)j(migh)n(t,)f(or)f(migh)n(t)i(not,)f(happ)r(en)g(on)g(a)
523 2507 y(giv)n(en)k(run)h(\(and)g(migh)n(t,)g(or)g(migh)n(t)g(not,)g
(b)r(e)g(w)n(ell)g(past)g(maxim)n(um\))g(and,)g(without)h(the)523
2607 y(follo)n(w-up)h(time,)i(it)f(w)n(as)f(imp)r(ossible)h(to)g
(demonstrate)f(that)h(high)g(redshift)h(SNe)f(w)n(ere)523
2707 y(b)r(eing)28 b(disco)n(v)n(ered)d(b)n(y)j(the)g
Fi(SCP)p Fw(.)648 2806 y(By)d(1994,)g(the)h Fi(SCP)g
Fw(had)g(solv)n(ed)f(this)i(problem,)f(\014rst)g(b)n(y)g(pro)n(viding)e
(con)n(vincing)i(ev-)523 2906 y(idence)36 b(that)h(SNe,)g(suc)n(h)f(as)
g(SN1992bi,)f(could)h(b)r(e)h(disco)n(v)n(ered)d(near)i(maxim)n(um)g
(\(and)523 3005 y(K-corrected\))k(out)h(to)h Fm(z)49
b Fw(=)d(0)p Fm(:)p Fw(45)40 b([73],)h(and)g(then)h(b)n(y)g(dev)n
(eloping)e(and)h(successfully)523 3105 y(demonstrating)23
b(a)h(new)g(observing)e(strategy)h(that)h(could)g(e\013ectiv)n(ely)g
(guaran)n(tee)e(SN)i(dis-)523 3205 y(co)n(v)n(eries)j(on)i(a)h
(predetermined)f(date,)g(all)g(b)r(efore)g(or)g(near)g(maxim)n(um)g
(ligh)n(t)g([70{72,76].)523 3304 y(Instead)36 b(of)h(disco)n(v)n(ering)
d(a)i(single)f(SN)i(at)g(a)f(time)g(on)h(a)n(v)n(erage)c(\(with)k(some)
f(runs)g(not)523 3404 y(\014nding)h(one)f(at)h(all\),)g(the)g(new)g
(approac)n(h)e(aimed)i(to)g(disco)n(v)n(er)e(an)h(en)n(tire)g(\\batc)n
(h")g(of)523 3504 y(half-a-dozen)26 b(or)h(more)f(t)n(yp)r(e)i(Ia)f
(SNe)g(at)h(a)f(time)h(b)n(y)f(observing)f(a)h(m)n(uc)n(h)g(larger)e(n)
n(um)n(b)r(er)523 3603 y(of)f(galaxies)f(in)h(a)g(single)f(t)n(w)n(o)h
(or)f(three)h(da)n(y)f(p)r(erio)r(d)h(a)g(few)h(nigh)n(ts)e(b)r(efore)h
(new)g(Mo)r(on.)g(By)523 3703 y(comparing)f(these)h(observ)-5
b(ations)23 b(with)i(the)f(same)g(observ)-5 b(ations)23
b(tak)n(en)h(to)n(w)n(ards)e(the)j(end)523 3802 y(of)j(dark)f(time)h
(almost)f(three)h(w)n(eeks)f(earlier,)g(it)h(w)n(as)f(p)r(ossible)g(to)
h(select)g(just)g(those)g(SNe)523 3902 y(that)h(w)n(ere)f(still)h(on)f
(the)h(rise)f(or)g(near)g(maxim)n(um.)g(The)h(c)n(hic)n(k)n(en)f(and)g
(egg)g(problem)g(w)n(as)523 4002 y(solv)n(ed,)34 b(and)h(no)n(w)g(the)g
(follo)n(w-up)g(sp)r(ectroscop)n(y)e(and)i(photometry)f(could)h(b)r(e)h
(applied)523 4101 y(for)d(and)g(sc)n(heduled)g(on)f(a)h(pre-sp)r
(eci\014ed)g(set)g(of)g(nigh)n(ts.)g(The)g(new)g(strategy)f(w)n(ork)n
(ed)f({)523 4201 y(the)i Fi(SCP)f Fw(disco)n(v)n(ered)f(batc)n(hes)h
(of)h(high)f(redshift)h(SNe,and)g(no)f(one)g(w)n(ould)h(ev)n(er)e
(again)523 4301 y(ha)n(v)n(e)j(to)h(h)n(un)n(t)g(for)g(high-redshift)g
(SNe)g(without)h(the)f(crucial)g(follo)n(w-up)f(sc)n(heduled)h(in)523
4400 y(adv)-5 b(ance.)648 4500 y(The)23 b Fi(High-Z)h(SN)g(Searc)n(h)e
(\(HZSNS\))j Fw(w)n(as)e(conceiv)n(ed)g(at)g(the)h(end)g(of)g(1994,)e
(when)i(this)523 4599 y(group)34 b(of)h(astronomers)e(b)r(ecame)i(con)n
(vinced)f(that)i(it)f(w)n(as)g(b)r(oth)g(p)r(ossible)g(to)g(disco)n(v)n
(er)523 4699 y(SNIa)28 b(in)g(large)e(n)n(um)n(b)r(ers)h(at)h
Fm(z)e(>)d Fw(0)p Fm(:)p Fw(3)k(b)n(y)h(the)g(e\013orts)f(of)h(P)n
(erlm)n(utter)e(et)i(al.[70{72],)d(and)523 4799 y(also)37
b(use)g(them)h(as)f(precision)g(distance)g(indicators)g(as)g
(demonstrated)f(b)n(y)i(the)g Fi(CTSS)p eop
%%Page: 12 12
12 11 bop 523 232 a Ft(12)199 b(P)n(erlm)n(utter)25 b(and)g(Sc)n(hmidt)
523 415 y Fw(group)h([32].)g(Since)i(1995,)d(the)i Fi(SCP)g
Fw(and)g Fi(HZSNS)g Fw(ha)n(v)n(e)f(b)r(oth)i(w)n(ork)n(ed)d(a)n(vidly)
h(to)h(obtain)523 515 y(a)g(signi\014can)n(t)g(set)h(of)f(high)h
(redshift)f(SNIa.)523 754 y Fn(5.1)95 b(Disco)m(v)m(ering)31
b(SNIa)523 910 y Fw(The)d(t)n(w)n(o)e(high)h(redshift)h(teams)f(b)r
(oth)h(used)f(this)h(pre-sc)n(heduled)f(disco)n(v)n(ery)e(and)i(follo)n
(w-)523 1009 y(up)37 b(batc)n(h)g(strategy)-7 b(.)36
b(They)h(eac)n(h)f(aimed)h(to)g(use)g(the)g(observing)f(resources)f
(they)i(had)523 1109 y(a)n(v)-5 b(ailable)24 b(to)i(b)r(est)g(scien)n
(ti\014c)g(adv)-5 b(an)n(tage,)24 b(c)n(ho)r(osing,)g(for)i(example,)f
(somewhat)g(di\013eren)n(t)523 1209 y(exp)r(osure)i(times)h(or)e
(\014lters.)648 1308 y(Quan)n(titativ)n(ely)-7 b(,)34
b(t)n(yp)r(e)i(Ia)f(SNe)g(are)g(rare)f(ev)n(en)n(ts)g(on)i(an)f
(astronomer's)e(time)j(scale)523 1408 y({)c(they)g(o)r(ccur)g(in)g(a)g
(galaxy)f(lik)n(e)g(the)i(Milky)f(W)-7 b(a)n(y)32 b(a)g(few)g(times)h
(p)r(er)f(millennium)h(\(see,)523 1507 y(e.g.,)k([12,60,61])e(and)i
(the)h(c)n(hapter)f(b)n(y)g(Capp)r(ellaro)f(in)i(this)g(v)n(olume\).)f
(With)h(mo)r(dern)523 1607 y(instrumen)n(ts)24 b(on)g(4)g(meter-class)f
(telescop)r(es,)g(whic)n(h)i(observ)n(e)d(1/3)h(of)h(a)g(square)f
(degree)g(to)523 1707 y(R)g(=)g(24)h(mag)h(in)h(less)e(than)i(10)e(min)
n(utes,)i(it)g(is)f(p)r(ossible)g(to)g(searc)n(h)f(a)h(million)h
(galaxies)d(to)523 1806 y Fm(z)j(<)d Fw(0)p Fm(:)p Fw(5)k(for)g(SNIa)g
(in)h(a)f(single)h(nigh)n(t.)648 1906 y(Since)35 b(SNIa)g(tak)n(e)f
(appro)n(ximately)g(20)g(da)n(ys)g(to)h(rise)f(from)h(undetectable)h
(to)f(max-)523 2006 y(im)n(um)j(ligh)n(t)g([81],)f(the)h(three-w)n(eek)
e(separation)g(b)r(et)n(w)n(een)i(observing)e(p)r(erio)r(ds)i(\(whic)n
(h)523 2105 y(equates)32 b(to)g(14)f(rest)h(frame)f(da)n(ys)g(at)h
Fm(z)i Fw(=)d(0)p Fm(:)p Fw(5\))g(is)h(a)g(go)r(o)r(d)f(\014lter)i(to)f
(catc)n(h)f(the)i(SNe)f(on)523 2205 y(the)37 b(rise.)f(The)h(SNe)g(are)
f(not)g(alw)n(a)n(ys)f(easily)h(iden)n(ti\014ed)h(as)f(new)h(stars)e
(on)i(the)g(brigh)n(t)523 2304 y(bac)n(kground)27 b(of)i(their)f(host)h
(galaxies,)e(so)h(a)g(relativ)n(ely)g(sophisticated)g(pro)r(cess)g(m)n
(ust)h(b)r(e)523 2404 y(used)24 b(to)f(iden)n(tify)h(them.)g(The)g(pro)
r(cess,)f(whic)n(h)g(in)n(v)n(olv)n(es)f(20)h(Gigab)n(ytes)f(of)i
(imaging)e(data)523 2504 y(p)r(er)i(nigh)n(t,)f(consists)g(of)h
(aligning)f(a)g(previous)g(ep)r(o)r(c)n(h,)h(matc)n(hing)f(the)h(image)
f(star)g(pro\014les)523 2603 y(\(through)33 b(con)n(v)n(olution\),)f
(and)h(scaling)f(the)h(t)n(w)n(o)g(ep)r(o)r(c)n(hs)f(to)h(mak)n(e)g
(the)g(t)n(w)n(o)g(images)f(as)523 2703 y(iden)n(tical)e(as)f(p)r
(ossible.)h(The)g(di\013erence)f(b)r(et)n(w)n(een)h(these)g(t)n(w)n(o)f
(images)g(is)h(then)h(searc)n(hed)523 2803 y(for)22 b(new)h(ob)5
b(jects)22 b(whic)n(h)h(stand)f(out)h(against)e(the)i(static)g(sources)
e(that)i(ha)n(v)n(e)e(b)r(een)j(largely)523 2902 y(remo)n(v)n(ed)f(in)i
(the)g(di\013erencing)g(pro)r(cess)e([73,74,76,87].)f(The)i(dramatic)g
(increase)g(in)h(com-)523 3002 y(puting)i(p)r(o)n(w)n(er)e(in)i(the)g
(1980s)d(w)n(as)i(an)g(imp)r(ortan)n(t)g(elemen)n(t)h(in)f(the)h(dev)n
(elopmen)n(t)f(of)h(this)523 3101 y(searc)n(h)e(tec)n(hnique,)j(as)e(w)
n(as)g(the)h(construction)f(of)h(wide-\014eld)g(cameras)f(with)h(ev)n
(er)f(larger)523 3201 y(CCD)i(detectors)f(or)g(mosaics)f(of)h(suc)n(h)h
(detectors)f([104].)648 3301 y(This)33 b(tec)n(hnique)g(is)g(v)n(ery)f
(e\016cien)n(t)h(at)g(pro)r(ducing)g(large)e(n)n(um)n(b)r(ers)i(of)g
(ob)5 b(jects)33 b(that)523 3400 y(are,)39 b(on)g(a)n(v)n(erage,)e(at)i
(or)g(near)g(maxim)n(um)g(ligh)n(t,)h(and)f(do)r(es)g(not)h(require)f
(unrealistic)523 3500 y(amoun)n(ts)28 b(of)i(large)d(telescop)r(e)i
(time.)h(It)f(do)r(es,)g(ho)n(w)n(ev)n(er,)e(place)i(the)g(burden)h(of)
f(w)n(ork)e(on)523 3600 y(follo)n(w-up)20 b(observ)-5
b(ations,)19 b(usually)h(with)h(di\013eren)n(t)g(instrumen)n(ts)f(on)h
(di\013eren)n(t)f(telescop)r(es.)523 3699 y(With)35 b(the)f(large)e(n)n
(um)n(b)r(er)h(of)h(ob)5 b(jects)33 b(disco)n(v)n(ered)f(\(50)h(in)h(t)
n(w)n(o)f(nigh)n(ts)g(b)r(eing)h(t)n(ypical\),)523 3799
y(a)g(new)f(strategy)g(is)h(b)r(eing)g(adopted)f(b)n(y)h(b)r(oth)g(the)
h Fi(SCP)e Fw(and)h Fi(HZSNS)g Fw(teams,)g(as)f(w)n(ell)523
3898 y(as)i(additional)g(teams)g(lik)n(e)g(the)h Fi(Canada)e(F)-7
b(rance)35 b(Ha)n(w)n(aii)f(T)-7 b(elescop)r(e)35 b(\(CFHT\))h
Fw(legacy)523 3998 y(surv)n(ey)-7 b(,)22 b(where)h(the)h(same)f
(\014elds)g(are)f(rep)r(eatedly)h(scanned)g(sev)n(eral)e(times)j(p)r
(er)f(mon)n(th,)h(in)523 4098 y(m)n(ultiple)k(colors,)d(for)i(sev)n
(eral)e(consecutiv)n(e)h(mon)n(ths.)h(This)g(t)n(yp)r(e)h(of)f
(observing)e(program)523 4197 y(pro)n(vides)19 b(b)r(oth)h(disco)n(v)n
(ery)e(of)i(new)g(ob)5 b(jects)20 b(and)g(their)g(follo)n(w)f(up,)i
(all)e(in)n(tegrated)h(in)n(to)f(one)523 4297 y(e\016cien)n(t)28
b(program.)e(It)j(do)r(es)f(require)f(a)h(large)e(blo)r(c)n(k)i(of)g
(time)h(on)e(a)h(single)g(telescop)r(e)g({)f(a)523 4397
y(requiremen)n(t)d(whic)n(h)g(w)n(as)g(not)h(p)r(olitically)f(feasible)
h(in)g(y)n(ears)e(past,)h(but)i(is)e(no)n(w)g(p)r(ossible.)523
4636 y Fn(5.2)95 b(Obstacles)31 b(to)g(Measuring)g(Luminosit)m(y)g
(Distances)g(at)i(High-)p Fb(Z)523 4792 y Fw(As)d(sho)n(wn)f(ab)r(o)n
(v)n(e,)f(the)i(distances)f(measured)g(to)g(SNIa)h(are)e(w)n(ell)i(c)n
(haracterized)d(at)j Fm(z)f(<)523 4891 y Fw(0)p Fm(:)p
Fw(1,)18 b(but)h(comparing)f(these)g(ob)5 b(jects)19
b(to)f(their)h(more)f(distan)n(t)h(coun)n(terparts)e(requires)g(great)p
eop
%%Page: 13 13
13 12 bop 1829 232 a Ft(Measuring)27 b(cosmology)g(with)e(Sup)r(erno)n
(v)l(ae)198 b(13)523 415 y Fw(care.)29 b(Selection)h(e\013ects)g(can)f
(in)n(tro)r(duce)h(systematic)f(errors)f(as)h(a)g(function)i(of)f
(redshift,)523 515 y(as)f(can)h(uncertain)f(K-corrections)e(and)j(a)f
(p)r(ossible)g(ev)n(olution)g(of)h(the)g(SNIa)g(progenitor)523
614 y(p)r(opulation)g(as)g(a)f(function)i(of)f(lo)r(ok-bac)n(k)f(time.)
h(These)g(e\013ects,)h(if)g(they)f(are)f(large)g(and)523
714 y(not)23 b(constrained)f(or)h(corrected,)f(will)h(limit)h(our)f
(abilit)n(y)g(to)g(accurately)f(measure)g(relativ)n(e)523
814 y(luminosit)n(y)h(distances,)f(and)g(ha)n(v)n(e)g(the)h(p)r(oten)n
(tial)g(to)f(reduce)g(the)i(e\016cacy)e(of)g(high-)p
Fm(z)k Fw(t)n(yp)r(e)523 913 y(Ia)h(SNe)h(for)f(measuring)g(cosmology)e
([74,77,83,87].)523 1155 y Fn(K-Corrections:)40 b Fw(As)27
b(SNe)g(are)f(observ)n(ed)f(at)i(larger)e(and)h(larger)f(redshifts,)i
(their)g(ligh)n(t)523 1255 y(is)33 b(shifted)i(to)e(longer)f(w)n(a)n(v)
n(elengths.)g(Since)h(astronomical)f(observ)-5 b(ations)32
b(are)g(normally)523 1354 y(made)21 b(in)f(\014xed)h(band)g(passes)e
(on)i(Earth,)e(corrections)g(need)i(to)f(b)r(e)i(applied)e(to)h(accoun)
n(t)f(for)523 1454 y(the)26 b(di\013erences)g(caused)g(b)n(y)f(the)i
(sp)r(ectrum)f(shifting)g(within)h(these)f(band)g(passes.)f(These)523
1554 y(corrections)e(tak)n(e)h(the)i(form)f(of)g(in)n(tegrating)e(the)j
(sp)r(ectrum)f(of)g(an)g(SN)g(o)n(v)n(er)e(the)j(relev)-5
b(an)n(t)523 1653 y(band)22 b(passes,)f(shifting)h(the)g(SN)h(sp)r
(ectrum)f(to)f(the)i(correct)d(redshift,)i(and)g(re-in)n(tegrating.)523
1753 y(Kim)31 b(et)g(al.)g([43])f(sho)n(w)n(ed)g(that)i(these)f
(e\013ects)g(can)g(b)r(e)g(minimized)h(if)g(one)e(do)r(es)h(not)g(use)
523 1853 y(a)36 b(single)f(bandpass,)g(but)i(instead)f(c)n(ho)r(oses)f
(the)h(bandpass)f(closest)g(to)h(the)h(redshifted)523
1952 y(rest-frame)25 b(bandpass,)g(as)g(they)h(had)g(done)g(for)f
(SN1992bi)g([73].)g(They)h(sho)n(w)n(ed)e(that)j(the)523
2052 y(in)n(ter-band)g(K-correction)e(is)i(giv)n(en)g(b)n(y)691
2359 y Fm(K)762 2371 y Fl(ij)820 2359 y Fw(\()p Fm(z)t
Fw(\))c(=)g(2)p Fm(:)p Fw(5)14 b(log)1279 2242 y Fk(\024)1322
2359 y Fw(\(1)19 b(+)f Fm(z)t Fw(\))1748 2234 y Fk(R)1817
2301 y Fm(F)12 b Fw(\()p Fm(\025)p Fw(\))p Fm(S)2045
2313 y Fl(i)2073 2301 y Fw(\()p Fm(\025)p Fw(\))p Fm(d\025)p
1583 2339 862 4 v 1583 2349 a Fk(R)1651 2416 y Fm(F)g
Fw(\()p Fm(\025=)p Fw(\(1)19 b(+)f Fm(z)t Fw(\)\))p Fm(S)2172
2428 y Fl(j)2206 2416 y Fw(\()p Fm(\025)p Fw(\))p Fm(d\025)p
Fw(\))2463 2234 y Fk(R)2533 2301 y Fm(Z)6 b Fw(\()p Fm(\025)p
Fw(\))p Fm(S)2759 2313 y Fl(j)2794 2301 y Fw(\()p Fm(\025)p
Fw(\))p Fm(d\025)p 2463 2339 536 4 v 2467 2349 a Fk(R)2536
2416 y Fm(Z)g Fw(\()p Fm(\025)p Fw(\))p Fm(S)2762 2428
y Fl(i)2790 2416 y Fw(\()p Fm(\025)p Fw(\))p Fm(d\025)3009
2242 y Fk(\025)3066 2359 y Fm(;)168 b Fw(\(10\))523 2586
y(where)36 b Fm(K)843 2598 y Fl(ij)901 2586 y Fw(\()p
Fm(z)t Fw(\))h(is)g(the)g(correction)e(to)i(go)f(from)g(\014lter)h
Fm(i)f Fw(to)h(\014lter)g Fm(j)5 b Fw(,)37 b(and)f Fm(Z)6
b Fw(\()p Fm(\025)p Fw(\))38 b(is)f(the)523 2686 y(sp)r(ectrum)28
b(corresp)r(onding)d(to)j(zero)e(magnitude)i(of)f(the)h(\014lters.)648
2786 y(The)f(brigh)n(tness)g(of)g(an)h(ob)5 b(ject)27
b(expressed)f(in)i(magnitudes,)g(as)f(a)g(function)h(of)f
Fm(z)k Fw(is)1169 3005 y Fm(m)1242 3017 y Fl(i)1270 3005
y Fw(\()p Fm(z)t Fw(\))23 b(=)f(5)14 b(log)1664 2888
y Fk(\024)1718 2949 y Fm(D)1787 2961 y Fl(L)1836 2949
y Fw(\()p Fm(z)t Fw(\))p 1718 2986 226 4 v 1750 3062
a(Mp)r(c)1953 2888 y Fk(\025)2015 3005 y Fw(+)k(25)g(+)g
Fm(M)2364 3017 y Fl(j)2417 3005 y Fw(+)g Fm(K)2571 3017
y Fl(ij)2629 3005 y Fw(\()p Fm(z)t Fw(\))p Fm(;)498 b
Fw(\(11\))523 3228 y(where)37 b Fm(D)842 3240 y Fl(L)892
3228 y Fw(\()p Fm(z)t Fw(\))g(is)h(giv)n(en)f(b)n(y)g(Eq.)h(\(7\),)g
Fm(M)1892 3240 y Fl(j)1964 3228 y Fw(is)g(the)g(absolute)f(magnitude)g
(of)h(ob)5 b(ject)38 b(in)523 3328 y(\014lter)25 b Fm(j)5
b Fw(,)25 b(and)g Fm(K)1036 3340 y Fl(ij)1119 3328 y
Fw(is)g(giv)n(en)f(b)n(y)h(Eq.)g(\(10\).)g(F)-7 b(or)24
b(example,)h(for)f Fm(H)2557 3340 y Fv(0)2618 3328 y
Fw(=)e(70)52 b(km)28 b(s)3015 3298 y Ff(\000)p Fv(1)3131
3328 y Fw(Mp)r(c)3292 3298 y Ff(\000)p Fv(1)3382 3328
y Fw(,)523 3428 y(and)38 b Fm(D)764 3440 y Fl(L)853 3428
y Fw(=)i(2835)35 b(Mp)r(c)k(\()p Fm(\012)1457 3440 y
Fl(M)1571 3428 y Fw(=)g(0)p Fm(:)p Fw(3)p Fm(;)14 b(\012)1883
3440 y Fl(\003)1973 3428 y Fw(=)39 b(0)p Fm(:)p Fw(7\),)f(at)f(maxim)n
(um)h(ligh)n(t)g(a)f(SNIa)h(has)523 3527 y Fm(M)604 3539
y Fl(B)697 3527 y Fw(=)e Fj(\000)p Fw(19)p Fm(:)p Fw(5)e(mag)h(and)g(a)
h Fm(K)1552 3539 y Fl(B)s(R)1695 3527 y Fw(=)g Fj(\000)p
Fw(0)p Fm(:)p Fw(7)f(mag.)g(W)-7 b(e)36 b(therefore)e(exp)r(ect)i(an)g
(SNIa)f(at)523 3627 y Fm(z)26 b Fw(=)d(0)p Fm(:)p Fw(5)k(to)g(p)r(eak)h
(at)f Fm(m)1284 3639 y Fv(R)1359 3627 y Fj(\030)c Fw(22)p
Fm(:)p Fw(1)j(mag)h(for)g(this)h(set)g(of)f(cosmological)e(parameters.)
648 3726 y(K-correction)g(errors)g(dep)r(end)j(critically)f(on)h(three)
f(uncertain)n(ties:)558 3898 y(1.)41 b(Accuracy)32 b(of)h(sp)r
(ectrophotometry)f(of)h(SNe.)h(T)-7 b(o)33 b(calculate)f(the)i
(K-correction,)d(the)664 3998 y(sp)r(ectra)38 b(of)g(SNe)g(are)g(in)n
(tegrated)f(in)h(Eq.)g(\(10\).)g(These)g(in)n(tegrals)e(are)h
(insensitiv)n(e)664 4098 y(to)g(a)g(grey)e(shift)j(in)f(the)g(\015ux)h
(calibration)d(of)i(the)h(sp)r(ectra,)e(but)h(an)n(y)g(w)n(a)n(v)n
(elength)664 4197 y(dep)r(enden)n(t)28 b(\015ux)g(calibration)f(error)e
(will)j(translate)f(in)n(to)g(erroneous)e(K-corrections.)558
4295 y(2.)41 b(Accuracy)28 b(of)g(the)h(absolute)f(calibration)f(of)i
(the)f(fundamen)n(tal)h(astronomical)e(stan-)664 4395
y(dard)39 b(systems.)f(Eq.)h(\(10\))g(sho)n(ws)f(that)h(the)h
(K-corrections)c(are)i(sensitiv)n(e)h(to)g(the)664 4494
y(shap)r(e)28 b(of)g(the)g(astronomical)e(band)i(passes)f(and)g(to)h
(the)h(zero)d(p)r(oin)n(ts)i(of)g(these)g(band)664 4594
y(passes.)558 4692 y(3.)41 b(Accuracy)19 b(of)h(the)g(c)n(hoice)f(of)h
(SNIa)g(sp)r(ectrophotometry)f(template)h(used)g(to)g(calculate)664
4792 y(the)k(corrections.)e(Although)h(a)g(relativ)n(ely)f(homogenous)g
(class,)h(there)g(are)f(v)-5 b(ariations)664 4891 y(in)35
b(the)g(sp)r(ectra)e(of)i(SNIa.)f(If)h(a)f(particular)f(ob)5
b(ject)34 b(has,)g(for)g(example,)g(a)g(stronger)p eop
%%Page: 14 14
14 13 bop 523 232 a Ft(14)199 b(P)n(erlm)n(utter)25 b(and)g(Sc)n(hmidt)
664 415 y Fw(calcium)38 b(triplet)h(than)g(the)f(a)n(v)n(erage)e(SNIa,)
i(the)h(K-corrections)d(will)i(b)r(e)h(in)g(error)664
515 y(unless)28 b(an)f(appropriate)f(subset)h(of)h(SNIa)f(sp)r(ectra)g
(are)g(used)h(in)f(the)h(calculations.)648 697 y(The)e(\014rst)g(error)
e(should)j(not)f(b)r(e)h(an)f(issue)g(if)g(correct)f(observ)-5
b(ational)25 b(pro)r(cedures)g(are)523 797 y(used)31
b(on)f(an)h(instrumen)n(t)g(that)g(has)f(no)h(fundamen)n(tal)g
(problems.)f(The)h(second)f(error)f(is)523 897 y(curren)n(tly)c
(estimated)h(to)g(b)r(e)h(small)f(\()p Fj(\030)d Fw(0)p
Fm(:)p Fw(01)h(mag\),)i(based)g(on)f(the)i(consistency)e(of)h(sp)r(ec-)
523 996 y(trophotometry)d(and)i(broadband)e(photometry)h(of)g(the)h
(fundamen)n(tal)g(standards,)e(Sirius)523 1096 y(and)28
b(V)-7 b(ega)27 b([5].)g(T)-7 b(o)28 b(impro)n(v)n(e)e(this)i
(uncertain)n(t)n(y)f(will)h(require)e(new,)i(careful)f(exp)r(erimen)n
(ts)523 1196 y(to)f(accurately)f(calibrate)g(a)h(star,)g(suc)n(h)f(as)h
(V)-7 b(ega)26 b(or)f(Sirius)h(\(or)g(a)f(White)i(Dw)n(arf)f(or)g
(solar)523 1295 y(analog)g(star\),)h(and)g(to)g(carefully)g(infer)h
(the)f(standard)g(bandpass)f(that)i(de\014nes)g(the)f(pho-)523
1395 y(tometric)22 b(system)h(in)g(use)f(at)h(telescop)r(es.)f(The)h
(third)g(error)e(requires)g(a)h(large)g(database)f(to)523
1494 y(matc)n(h)i(as)f(closely)g(as)h(p)r(ossible)f(an)h(SN)g(with)h
(the)f(sp)r(ectrophotometry)f(used)h(to)g(calculate)523
1594 y(the)33 b(K-corrections.)c(Nugen)n(t)j(et)h(al.)f([58])f(ha)n(v)n
(e)g(sho)n(wn)g(that)i(extinction)f(and)g(color)f(are)523
1694 y(related)g(and,)h(b)n(y)g(correcting)e(the)j(sp)r(ectra)e(to)h
(force)f(them)i(to)f(matc)n(h)f(the)i(photometry)523
1793 y(of)28 b(the)g(SN)g(needing)f(K-corrections,)e(that)j(it)g(is)f
(p)r(ossible)h(to)f(largely)f(eliminate)i(errors)d(1)523
1893 y(and)k(3,)f(ev)n(en)g(when)h(using)f(sp)r(ectra)g(that)h(are)f
(not)g(exact)g(matc)n(hes)g(\(in)i(ep)r(o)r(c)n(h)e(or)g(in)h(\014ne)
523 1993 y(detail\))37 b(to)f(the)g(SNIa)h(b)r(eing)f(K-corrected.)e
(Scatter)i(in)h(the)f(measured)g(K-corrections)523 2092
y(from)26 b(a)g(v)-5 b(ariet)n(y)25 b(of)i(telescop)r(es)f(and)g(ob)5
b(jects)26 b(allo)n(ws)f(us)h(to)g(estimate)h(the)f(com)n(bined)g(size)
523 2192 y(of)33 b(the)g(e\013ect)g(for)f(the)h(\014rst)f(and)h(third)f
(errors.)f(These)h(app)r(ear)g(to)g(b)r(e)h Fj(\030)e
Fw(0)p Fm(:)p Fw(01)h(mag)g(for)523 2291 y(redshifts)d(where)g(the)g
(high-)p Fm(z)j Fw(and)d(lo)n(w-)p Fm(z)j Fw(\014lters)d(ha)n(v)n(e)f
(a)g(large)g(region)g(of)h(o)n(v)n(erlap)e(\(e.g.,)523
2391 y(R-band)g(matc)n(hed)h(to)f(B-band)g(at)h Fm(z)e
Fw(=)d(0)p Fm(:)p Fw(5\).)523 2640 y Fn(Extinction:)42
b Fw(In)29 b(the)g(nearb)n(y)f(Univ)n(erse)f(w)n(e)i(see)f(SNIa)h(in)g
(a)f(v)-5 b(ariet)n(y)28 b(of)g(en)n(vironmen)n(ts,)523
2740 y(and)g(ab)r(out)g(10\045)f(ha)n(v)n(e)g(signi\014can)n(t)g
(extinction)h([30].)g(Since)g(w)n(e)f(can)h(correct)f(for)g(extinc-)523
2839 y(tion)36 b(b)n(y)g(observing)e(t)n(w)n(o)h(or)g(more)g(w)n(a)n(v)
n(elengths,)f(it)j(is)f(p)r(ossible)f(to)h(remo)n(v)n(e)e(an)n(y)h
(\014rst)523 2939 y(order)24 b(e\013ects)h(caused)g(b)n(y)g(a)g(c)n
(hanging)e(a)n(v)n(erage)g(extinction)i(of)g(SNIa)g(as)g(a)g(function)g
(of)h Fm(z)t Fw(.)523 3039 y(Ho)n(w)n(ev)n(er,)g(second)h(order)f
(e\013ects,)j(suc)n(h)e(as)g(p)r(ossible)h(ev)n(olution)e(of)i(the)g(a)
n(v)n(erage)d(prop)r(er-)523 3138 y(ties)d(of)g(in)n(terv)n(ening)f
(dust,)h(could)f(still)i(in)n(tro)r(duce)e(systematic)g(errors.)f(This)
i(problem)f(can)523 3238 y(also)29 b(b)r(e)h(addressed)f(b)n(y)g
(observing)g(distan)n(t)h(SNIa)f(o)n(v)n(er)g(a)g(decade)h(or)f(so)g
(of)h(w)n(a)n(v)n(elength)523 3337 y(in)c(order)d(to)i(measure)g(the)g
(extinction)h(la)n(w)e(to)h(individual)h(ob)5 b(jects.)24
b(Unfortunately)-7 b(,)26 b(this)523 3437 y(is)33 b(observ)-5
b(ationally)30 b(v)n(ery)i(exp)r(ensiv)n(e.)g(Curren)n(t)g(observ)-5
b(ations)31 b(limit)i(the)g(total)g(system-)523 3537
y(atic)j(e\013ect)h(to)f Fm(<)i Fw(0)p Fm(:)p Fw(06)d(mag,)g(as)h(most)
g(of)h(our)e(curren)n(t)h(data)g(is)g(based)g(on)g(t)n(w)n(o)f(color)
523 3636 y(observ)-5 b(ations.)648 3736 y(An)22 b(additional)f(problem)
h(is)g(the)g(existence)g(of)g(a)f(thin)i(v)n(eil)e(of)h(dust)h(around)e
(the)h(Milky)523 3836 y(W)-7 b(a)n(y.)37 b(Measuremen)n(ts)f(from)i
(the)f Fi(Cosmic)g(Bac)n(kground)f(Explorer)f(\(COBE\))i
Fw(satellite)523 3935 y(accurately)27 b(determined)i(the)h(relativ)n(e)
d(amoun)n(t)i(of)f(dust)i(around)d(the)j(Galaxy)d([89],)h(but)523
4035 y(there)k(is)h(an)f(uncertain)n(t)n(y)g(in)h(the)g(absolute)f
(amoun)n(t)g(of)h(extinction)f(of)h(ab)r(out)f(2)22 b
Fj(\000)f Fw(3\045.)523 4134 y(This)i(uncertain)n(t)n(y)g(is)g(not)h
(normally)e(a)h(problem,)g(since)g(it)h(a\013ects)f(ev)n(erything)f(in)
i(the)g(sky)523 4234 y(more)g(or)g(less)h(equally)-7
b(.)24 b(Ho)n(w)n(ev)n(er,)f(as)h(w)n(e)h(observ)n(e)e(SNe)i(at)g
(higher)f(and)h(higher)f(redshifts,)523 4334 y(the)f(ligh)n(t)f(from)h
(the)f(ob)5 b(jects)23 b(is)f(shifted)h(to)g(the)g(red)f(and)g(is)h
(less)f(a\013ected)g(b)n(y)h(the)g(Galactic)523 4433
y(dust.)32 b(Our)f(presen)n(t)g(kno)n(wledge)g(indicates)g(that)h(a)g
(systematic)f(error)f(as)h(large)f(as)h(0.06)523 4533
y(mag)c(is)g(attributable)h(to)f(this)h(uncertain)n(t)n(y)-7
b(.)523 4782 y Fn(Selection)28 b(E\013ects:)39 b Fw(As)25
b(w)n(e)h(disco)n(v)n(er)d(SNe,)j(w)n(e)f(are)f(sub)5
b(ject)26 b(to)f(a)g(v)-5 b(ariet)n(y)25 b(of)g(selection)523
4882 y(e\013ects,)d(b)r(oth)g(in)g(our)e(nearb)n(y)h(and)g(distan)n(t)h
(searc)n(hes.)d(The)j(most)f(signi\014can)n(t)g(e\013ect)h(is)g(the)p
eop
%%Page: 15 15
15 14 bop 1829 232 a Ft(Measuring)27 b(cosmology)g(with)e(Sup)r(erno)n
(v)l(ae)198 b(15)523 415 y Fw(Malmquist)33 b(Bias)e({)i(a)f(selection)g
(e\013ect)h(whic)n(h)g(leads)f(magnitude)g(limited)h(searc)n(hes)e(to)
523 515 y(\014nd)23 b(brigh)n(ter)e(than)i(a)n(v)n(erage)c(ob)5
b(jects)22 b(near)g(their)g(distance)g(limit)h(since)f(brigh)n(ter)f
(ob)5 b(jects)523 614 y(can)29 b(b)r(e)g(seen)f(in)i(a)e(larger)f(v)n
(olume)h(than)h(their)g(fain)n(ter)g(coun)n(terparts.)e(Malmquist)i
(Bias)523 714 y(errors)g(are)h(prop)r(ortional)f(to)i(the)g(square)f
(of)h(the)g(in)n(trinsic)g(disp)r(ersion)f(of)h(the)g(distance)523
814 y(metho)r(d,)24 b(and)g(b)r(ecause)f(SNIa)g(are)g(suc)n(h)g
(accurate)f(distance)i(indicators)e(these)i(errors)d(are)523
913 y(quite)28 b(small,)f Fj(\030)22 b Fw(0)p Fm(:)p
Fw(04)k(mag.)h(Mon)n(te)g(Carlo)f(sim)n(ulations)g(can)h(b)r(e)h(used)f
(to)g(estimate)g(suc)n(h)523 1013 y(selection)e(e\013ects,)h(and)f(to)h
(remo)n(v)n(e)e(them)i(from)f(our)g(data)g(sets)g([74,76,77,87].)e(The)
i(total)523 1112 y(uncertain)n(t)n(y)e(from)h(selection)f(e\013ects)h
(is)g Fj(\030)f Fw(0)p Fm(:)p Fw(01)f(mag)h(and,)h(in)n(terestingly)-7
b(,)23 b(ma)n(y)g(b)r(e)i(w)n(orse)523 1212 y(for)i(lo)n(w)n(er)f
(redshift)i(ob)5 b(jects)27 b(b)r(ecause)g(they)h(are,)f(at)g(presen)n
(t,)g(more)g(p)r(o)r(orly)g(quan)n(ti\014ed.)523 1458
y Fn(Gra)m(vitational)37 b(Lensing:)44 b Fw(Sev)n(eral)30
b(authors)f(ha)n(v)n(e)h(p)r(oin)n(ted)h(out)g(that)g(the)g(radiation)
523 1557 y(from)g(an)n(y)f(ob)5 b(ject,)32 b(as)e(it)i(tra)n(v)n(erses)
d(the)i(large)f(scale)h(structure)f(b)r(et)n(w)n(een)i(where)e(it)i(w)n
(as)523 1657 y(emitted)f(and)e(where)g(it)h(is)g(detected,)g(will)g(b)r
(e)g(w)n(eakly)e(lensed)i(as)f(it)h(encoun)n(ters)f(\015uctu-)523
1756 y(ations)j(in)i(the)f(gra)n(vitational)e(p)r(oten)n(tial)i
([37,45,100].)d(On)j(a)n(v)n(erage,)d(most)j(of)g(the)g(ligh)n(t)523
1856 y(tra)n(v)n(el)f(paths)h(go)f(through)g(under-dense)g(regions)g
(and)h(ob)5 b(jects)32 b(app)r(ear)h(de-magni\014ed.)523
1956 y(Occasionally)-7 b(,)33 b(the)j(ligh)n(t)e(path)i(encoun)n(ters)e
(dense)h(regions)e(and)i(the)h(ob)5 b(ject)34 b(b)r(ecomes)523
2055 y(magni\014ed.)26 b(The)g(distribution)h(of)f(observ)n(ed)f
(\015uxes)h(for)g(sources)f(is)h(sk)n(ew)n(ed)f(b)n(y)h(this)h(pro-)523
2155 y(cess)20 b(suc)n(h)g(that)h(the)g(v)-5 b(ast)20
b(ma)5 b(jorit)n(y)19 b(of)i(ob)5 b(jects)20 b(app)r(ear)f(sligh)n(tly)
h(fain)n(ter)h(than)f(the)h(canon-)523 2255 y(ical)26
b(luminosit)n(y)g(distance,)g(with)g(the)h(few)f(highly)g(magni\014ed)g
(ev)n(en)n(ts)f(making)h(the)g(mean)523 2354 y(of)32
b(all)f(ligh)n(t)g(paths)h(un)n(biased.)f(Unfortunately)-7
b(,)31 b(since)h(w)n(e)f(do)g(not)h(observ)n(e)e(enough)h(ob-)523
2454 y(jects)e(to)f(capture)g(the)h(en)n(tire)f(distribution,)g(unless)
h(w)n(e)f(kno)n(w)f(and)h(include)h(the)g(sk)n(ew)n(ed)523
2554 y(shap)r(e)24 b(of)h(the)g(lensing)f(a)g(bias)g(will)h(o)r(ccur.)e
(A)n(t)i Fm(z)i Fw(=)22 b(0)p Fm(:)p Fw(5,)i(this)h(lensing)f(is)g(not)
h(a)f(signi\014can)n(t)523 2653 y(problem:)30 b(If)h(the)g(Univ)n(erse)
f(is)h(\015at)f(in)h(normal)f(matter,)g(the)h(large)e(scale)h
(structure)g(can)523 2753 y(induce)h(a)g(shift)g(of)g(the)g(mo)r(de)g
(of)g(the)g(distribution)g(b)n(y)g(only)f(a)h(few)g(p)r(ercen)n(t.)g
(Ho)n(w)n(ev)n(er,)523 2852 y(the)d(e\013ect)g(scales)f(roughly)g(as)g
Fm(z)1565 2822 y Fv(2)1601 2852 y Fw(,)h(and)g(b)n(y)f
Fm(z)g Fw(=)c(1)p Fm(:)p Fw(5)k(the)h(e\013ect)g(can)g(b)r(e)g(as)f
(large)g(as)g(25\045)523 2952 y([38].)21 b(While)h(corrections)e(can)h
(b)r(e)h(deriv)n(ed)f(b)n(y)g(measuring)f(the)i(distortion)f(of)h(bac)n
(kground)523 3052 y(galaxies)31 b(near)h(the)h(line)g(of)f(sigh)n(t)h
(to)f(eac)n(h)g(SN,)h(at)g Fm(z)i(>)c Fw(1,)h(this)h(problem)f(ma)n(y)g
(b)r(e)h(one)523 3151 y(whic)n(h)d(ultimately)g(limits)h(the)f
(accuracy)f(of)h(luminosit)n(y)f(distance)h(measuremen)n(ts,)f(un-)523
3251 y(less)i(a)f(large)g(enough)g(sample)g(of)h(SNe)h(at)e(eac)n(h)g
(redshift)i(can)e(b)r(e)i(used)e(to)h(c)n(haracterize)523
3351 y(the)f(lensing)e(distribution)h(and)g(a)n(v)n(erage)e(out)i(the)g
(e\013ect.)h(F)-7 b(or)28 b(the)i Fm(z)e Fj(\030)e Fw(0)p
Fm(:)p Fw(5)i(sample,)h(the)523 3450 y(error)24 b(is)h
Fm(<)e Fw(0)p Fm(:)p Fw(02)h(mag,)h(but)i(it)f(is)f(m)n(uc)n(h)h(more)e
(signi\014can)n(t)h(at)h Fm(z)g(>)d Fw(1)i(\(e.g.,)h(for)f
(SN1997\013\))523 3550 y([4,55],)h(esp)r(ecially)i(if)g(the)g(sample)f
(size)g(is)h(small.)523 3795 y Fn(Ev)m(olution:)43 b
Fw(SNIa)30 b(are)f(seen)h(to)f(ev)n(olv)n(e)g(in)h(the)g(nearb)n(y)f
(Univ)n(erse.)g(Ham)n(uy)g(et)h(al.)g([29])523 3895 y(plotted)k(the)g
(shap)r(e)g(of)f(the)h(SN)g(ligh)n(t)g(curv)n(es)e(against)h(the)h(t)n
(yp)r(e)g(of)f(host)h(galaxy)-7 b(.)32 b(SNe)523 3995
y(in)i(early)f(hosts)h(\(galaxies)e(without)j(recen)n(t)e(star)g
(formation\))h(consisten)n(tly)f(sho)n(w)g(ligh)n(t)523
4094 y(curv)n(es)f(whic)n(h)g(rise)h(and)f(fade)h(more)f(quic)n(kly)g
(than)h(SNe)h(in)f(late-t)n(yp)r(e)f(hosts)h(\(galaxies)523
4194 y(with)24 b(on-going)e(star)h(formation\).)g(Ho)n(w)n(ev)n(er,)f
(once)h(corrected)g(for)g(ligh)n(t)g(curv)n(e)g(shap)r(e)h(the)523
4293 y(luminosit)n(y)g(sho)n(ws)f(no)h(bias)g(as)g(a)g(function)h(of)f
(host)g(t)n(yp)r(e.)h(This)f(empirical)g(in)n(v)n(estigation)523
4393 y(pro)n(vides)h(reassurance)e(for)i(using)h(SNIa)g(as)f(distance)h
(indicators)f(o)n(v)n(er)f(a)h(v)-5 b(ariet)n(y)25 b(of)h(stel-)523
4493 y(lar)k(p)r(opulation)g(ages.)g(It)h(is)g(p)r(ossible,)f(of)h
(course,)e(to)i(devise)f(scenarios)f(where)h(some)g(of)523
4592 y(the)e(more)e(distan)n(t)h(SNe)h(do)f(not)g(ha)n(v)n(e)f(nearb)n
(y)g(analogues,)g(so)g(as)h(sup)r(erno)n(v)-5 b(ae)26
b(are)g(stud-)523 4692 y(ied)31 b(at)f(increasingly)f(higher)h
(redshifts)g(it)h(can)f(b)r(ecome)g(imp)r(ortan)n(t)g(to)h(obtain)f
(detailed)523 4792 y(sp)r(ectroscopic)21 b(and)i(photometric)f(observ)
-5 b(ations)21 b(of)h(ev)n(ery)f(distan)n(t)i(SN)g(to)f(recognize)f
(and)523 4891 y(reject)28 b(examples)e(that)i(ha)n(v)n(e)f(no)g(nearb)n
(y)f(analogues.)p eop
%%Page: 16 16
16 15 bop 523 232 a Ft(16)199 b(P)n(erlm)n(utter)25 b(and)g(Sc)n(hmidt)
648 415 y Fw(In)j(principle,)h(it)g(should)g(b)r(e)g(p)r(ossible)f(to)h
(use)f(di\013erences)h(in)g(the)g(sp)r(ectra)f(and)g(ligh)n(t)523
515 y(curv)n(es)c(b)r(et)n(w)n(een)g(nearb)n(y)g(and)h(distan)n(t)f
(SNe,)i(com)n(bined)e(with)h(theoretical)f(mo)r(deling,)h(to)523
614 y(correct)j(an)n(y)h(di\013erences)g(in)h(absolute)f(magnitude.)g
(Unfortunately)-7 b(,)30 b(theoretical)e(in)n(v)n(es-)523
714 y(tigations)k(are)f(not)h(y)n(et)g(adv)-5 b(anced)32
b(enough)g(to)g(precisely)g(quan)n(tify)g(the)h(e\013ect)g(of)f(these)
523 814 y(di\013erences)23 b(on)g(the)h(absolute)f(magnitude.)g(A)h
(di\013eren)n(t,)f(empirical)g(approac)n(h)f(to)h(handle)523
913 y(SN)30 b(ev)n(olution)f([10])g(is)h(to)g(divide)g(the)g(SNe)g(in)n
(to)g(subsamples)f(of)h(v)n(ery)e(closely)h(matc)n(hed)523
1013 y(ev)n(en)n(ts,)i(based)g(on)g(the)h(details)f(of)g(the)h(their)f
(ligh)n(t)h(curv)n(es,)e(sp)r(ectral)h(time)h(series,)e(host)523
1112 y(galaxy)e(prop)r(erties,)g(etc.)h(A)h(separate)d(Hubble)j
(diagram)e(can)h(then)g(b)r(e)h(constructed)f(for)523
1212 y(eac)n(h)d(subsample)h(of)g(SNe,)h(and)f(eac)n(h)f(will)i(yield)f
(an)g(indep)r(enden)n(t)h(measuremen)n(t)e(of)i(the)523
1312 y(cosmological)f(parameters.)g(The)i(agreemen)n(t)f(\(or)g
(disagreemen)n(t\))g(b)r(et)n(w)n(een)h(the)h(results)523
1411 y(from)g(the)h(separate)e(subsamples)g(is)h(an)h(indicator)e(of)h
(the)h(total)f(e\013ect)h(of)f(ev)n(olution.)g(A)523
1511 y(simple,)g(\014rst)f(attempt)h(at)g(this)g(kind)g(of)f(test)h
(has)f(b)r(een)h(p)r(erformed)f(b)n(y)h(comparing)e(the)523
1611 y(results)j(for)h(SNe)g(found)g(in)g(elliptical)g(host)g(galaxies)
e(to)i(SNe)g(found)g(in)g(late)g(spirals)f(or)523 1710
y(irregular)c(hosts,)i(and)h(the)g(cosmological)d(results)i(from)g
(these)g(subsamples)g(w)n(ere)g(found)523 1810 y(to)f(agree)e(w)n(ell)h
([91].)648 1910 y(Finally)-7 b(,)29 b(it)h(is)f(p)r(ossible)g(to)g(mo)n
(v)n(e)g(to)g(higher)f(redshifts)i(and)f(see)g(if)h(the)g(SNe)f
(deviate)523 2009 y(from)d(the)i(predictions)e(of)h(Eq.)f(\(7\).)h(A)n
(t)g(a)f(gross)f(lev)n(el,)i(w)n(e)f(exp)r(ect)h(an)g(accelerating)e
(Uni-)523 2109 y(v)n(erse)j(to)h(b)r(e)g(decelerating)f(in)h(the)h
(past)f(b)r(ecause)f(the)i(matter)f(densit)n(y)f(of)h(the)h(Univ)n
(erse)523 2208 y(increases)i(with)j(redshift,)f(whereas)e(the)i(densit)
n(y)g(of)g(an)n(y)f(dark)f(energy)h(leading)g(to)h(ac-)523
2308 y(celeration)f(will)h(increase)f(at)h(a)g(slo)n(w)n(er)e(rate)i
(than)g(this)g(\(or)g(not)g(at)g(all)g(in)g(the)h(case)e(of)523
2408 y(a)28 b(cosmological)e(constan)n(t\).)i(If)h(the)f(observ)n(ed)f
(acceleration)g(is)h(caused)g(b)n(y)g(some)g(sort)f(of)523
2507 y(systematic)i(e\013ect,)h(it)g(is)f(lik)n(ely)g(to)g(con)n(tin)n
(ue)g(to)g(increase)f(\(or)h(at)h(least)e(remain)h(steady\))523
2607 y(with)f Fm(z)t Fw(,)e(rather)g(than)h(disapp)r(ear)f(lik)n(e)h
(the)g(e\013ects)g(of)g(dark)g(energy)-7 b(.)26 b(A)h(\014rst)g
(comparison)523 2707 y(has)34 b(b)r(een)h(made)f(with)h(SN1997\013)e
(at)i Fm(z)i Fj(\030)d Fw(1)p Fm(:)p Fw(7)g([85],)g(and)g(it)h(seems)f
(consisten)n(t)f(with)i(a)523 2806 y(decelerating)27
b(Univ)n(erse)g(at)h(that)g(ep)r(o)r(c)n(h.)h(More)e(ob)5
b(jects)27 b(are)g(necessary)g(for)g(a)h(de\014nitiv)n(e)523
2906 y(answ)n(er,)e(and)h(these)g(should)g(b)r(e)h(pro)n(vided)e(b)n(y)
h(sev)n(eral)e(large)h(programs)f(that)j(ha)n(v)n(e)e(b)r(een)523
3005 y(disco)n(v)n(ering)g(suc)n(h)j(t)n(yp)r(e)f(Ia)g(SNe)h(at)g(the)g
Fi(W.M.)g(Kec)n(k)e(T)-7 b(elescop)r(e)28 b(I)h(\(KECK)e(I\))p
Fw(,)i Fi(Subaru)523 3105 y(T)-7 b(elescop)r(e\))p Fw(,)27
b(and)h Fi(HST)g Fw(telescop)r(es.)523 3354 y Fn(5.3)95
b(High)30 b(Redshift)h(SNIa)h(Observ)-5 b(ations)523
3520 y Fw(The)33 b Fi(SCP)g Fw([74])g(in)g(1997)f(presen)n(ted)g(their)
i(\014rst)f(results)f(with)i(7)f(ob)5 b(jects)33 b(at)g(a)g(redshift)
523 3620 y(around)23 b Fm(z)j Fw(=)d(0)p Fm(:)p Fw(4.)f(These)i(ob)5
b(jects)23 b(hin)n(ted)h(at)g(a)f(decelerating)f(Univ)n(erse)h(with)h
(a)f(measure-)523 3719 y(men)n(t)j(of)f Fm(\012)887 3731
y Fl(M)984 3719 y Fw(=)e(0)p Fm(:)p Fw(88)1221 3684 y
Fv(+0)p Fl(:)p Fv(69)1221 3742 y Ff(\000)p Fv(0)p Fl(:)p
Fv(60)1394 3719 y Fw(,)j(but)g(w)n(ere)f(not)g(de\014nitiv)n(e.)h(So)r
(on)f(after,)g(the)h Fi(SCP)g Fw(published)523 3819 y(a)36
b(further)h(result,)g(with)g(a)f Fm(z)42 b Fj(\030)c
Fw(0)p Fm(:)p Fw(84)d(SNIa)i(observ)n(ed)e(with)j(the)f
Fi(KECK)e(I)i Fw(and)g Fi(HST)523 3919 y Fw(added)29
b(to)g(the)g(sample)g([75],)f(and)h(the)h Fi(HZSNS)f
Fw(presen)n(ted)g(the)g(results)g(from)f(their)h(\014rst)523
4018 y(four)e(ob)5 b(jects)26 b([22,87].)g(The)h(results)f(from)h(b)r
(oth)g(teams)g(no)n(w)f(ruled)h(out)g(a)g Fm(\012)2993
4030 y Fl(M)3090 4018 y Fw(=)22 b(1)27 b(Uni-)523 4118
y(v)n(erse)g(with)h(greater)f(than)h(95\045)f(signi\014cance.)g(These)h
(\014ndings)g(w)n(ere)f(again)g(sup)r(erceded)523 4218
y(dramatically)g(when)h(b)r(oth)g(teams)g(announced)f(results)h
(including)g(more)f(SNe)h(\(10)g(more)523 4317 y Fi(HZSNS)i
Fw(SNe,)h(and)e(34)g(more)g Fi(SCP)h Fw(SNe\))g(that)g(sho)n(w)n(ed)f
(not)h(only)f(w)n(ere)g(the)h(SN)g(obser-)523 4417 y(v)-5
b(ations)24 b(incompatible)g(with)g(a)g Fm(\012)1609
4429 y Fl(M)1706 4417 y Fw(=)f(1)g(Univ)n(erse,)h(they)g(w)n(ere)f
(also)g(incompatible)h(with)523 4516 y(a)j(Univ)n(erse)g(con)n(taining)
g(only)g(normal)g(matter)g([77,83].)f(Fig.)h(4)h(sho)n(ws)e(the)i
(Hubble)h(dia-)523 4616 y(gram)c(for)h(b)r(oth)g(teams.)g(Both)g
(samples)g(sho)n(w)f(that)h(SNe)h(are,)e(on)h(a)n(v)n(erage,)d(fain)n
(ter)j(than)523 4716 y(w)n(ould)i(b)r(e)g(exp)r(ected,)g(ev)n(en)g(for)
f(an)h(empt)n(y)g(Univ)n(erse,)f(indicating)h(that)g(the)g(Univ)n(erse)
f(is)523 4815 y(accelerating.)f(The)i(agreemen)n(t)e(b)r(et)n(w)n(een)i
(the)g(exp)r(erimen)n(tal)f(results)g(of)h(the)g(t)n(w)n(o)f(teams)p
eop
%%Page: 17 17
17 16 bop 1829 232 a Ft(Measuring)27 b(cosmology)g(with)e(Sup)r(erno)n
(v)l(ae)198 b(17)547 3927 y @beginspecial 59 @llx 101
@lly 566 @urx 744 @ury 3401 @rwi @setspecial
%%BeginDocument: PerlmutterSchmidtfig4.eps
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%AI3_TemplateBox: 307 395 307 395
%AI3_TileBox: 2 -6 588 760
%AI3_DocumentPreview: Header
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 1 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 4
%AI5_OpenToView: -276.5 763.5 -1.5 1586 1095 18 1 1 8 66 0 0
%AI5_OpenViewLayers: 7777
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 50 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 40 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIDataProc null def
	/XIVersion 6 def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
end
currentdict /_colorimage known not {
	/colorimage where {
		/colorimage get /_colorimage exch def
	}{
		/_colorimage null def
	} ifelse
} if
/_image systemdict /image get def
/_currenttransfer systemdict /currenttransfer get def
/FourEqual {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual { 
				/plateindex 0 def
			}{
				0 1 0 0 FourEqual { 
					/plateindex 1 def
				}{
					0 0 1 0 FourEqual {
						/plateindex 2 def
					}{
						0 0 0 1 FourEqual { 
							/plateindex 3 def
						}{
							0 0 0 0 FourEqual {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/clrspaceissepn {
	type /arraytype eq 
} def
/clrspacegetname {
	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse
} def
/clrspacegetalt {
	aload pop pop pop colormake
} def
/clrspacegetcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/clrspacemarksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				/findcmykcustomcolor where {
					pop
					dup length 2 sub get
					0.1 0.1 0.1 0.1 5 -1 roll
					findcmykcustomcolor 1 setcustomcolor
					systemdict /currentgray get exec
					1 ne
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/colormake {
	dup clrspacegetcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/colorexpand {
	dup clrspacegetname exch
	dup clrspaceissepn {
		clrspacegetalt
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				clrspacegetalt colortint colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/WalkRGBString {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/CMYKToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/SeparateCMYKImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne {
			sourcearray plateindex get exec
		}{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub {
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/ColorImageCompositeEmulator {
	pop true eq {
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/colorimage {
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index
 end
	
	dup 8 eq exch 1 eq or not {
		/_colorimage load null ne {
			_colorimage
		}{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}{
		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {
			/_colorimage load null eq {
				ColorImageCompositeEmulator
			}{
				dup 1 eq {
					pop pop image
				}{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						grestore
					} if
				} ifelse
			} ifelse
		}{
			dup 1 eq {
				pop pop
				image
			}{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0 {			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace clrspacegetcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] makeimagedict _image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] makeimagedict _image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} stringapply
			} concatprocs _image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} stringapply
			} concatprocs false _pticomps
			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse
		} ifelse
	} ifelse
} def
/graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray proctintimage
} def
/cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK proctintimage
} def
/rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB proctintimage
} def
/tintimage {
	TestPlateIndex -1 eq {
		colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop graytintimage
		}{
			dup /DeviceRGB eq {
				pop rgbtintimage
			}{
				pop cmyktintimage
			} ifelse
		} ifelse
	}{
		dup clrspacemarksplate {
			plateindex 5 lt {
				colortocmyk plateindex get 1 exch sub
				exch {1 0}{0 1} ifelse () graytintimage
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage
			} ifelse
		}{
			pop pop pop
			{pop 1} 0 1 () /DeviceGray proctintimage
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace tintimage
} def
/XIImage {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIType 1 eq {
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEncoding 0 ne XIVersion 6 le and {
			currentfile 128 string readline pop pop
		} if
		XICompression 0 eq {
			/XIBuffer1 XIRowBytes string def
			XIEncoding 0 eq {
				{currentfile XIBuffer1 readhexstring pop}
			}{
				{currentfile XIBuffer1 readstring pop}
			} ifelse
		}{
			/XIBuffer1 256 string def
			/XIBuffer2 XIRowBytes string def
			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
			/ASCIIHexDecode filter /DCTDecode filter
			/XIFile exch def
			{XIFile XIBuffer2 readstring pop}
		} ifelse
		/XIDataProc exch def
		
		XIVersion 6 le {
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIType 1 eq {
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		XIEnable {
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		grestore
 end
} def
end
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
userdict /_useSmoothShade false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRider
currentpacking true setpacking
11 dict begin
/FontInfo 10 dict dup begin
/version (001.000) readonly def
/Notice (Copyright (c) 1992, 1994 Adobe Systems Incorporated.  All Rights Reserved.Myriad is a trademark of Adobe Systems Incorporated may be registered in certain jurisdictions.) readonly def
/FullName (Myriad Roman) readonly def
/FamilyName (Myriad) readonly def
/Weight (Regular) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Myriad-Roman def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/UniqueID 41987 def
/FontBBox{-46 -250 1126 831}readonly def
currentdict end
currentfile eexec
fcecc98c2aefb25089edad915372f7632807d0d80113c0fbda4614dda7560bffacbeaa4f371815c991f0682cbc45f51895a8e6fc33b63b87db33f2f141b34c80b26ba7d9f30c5d0811a31c14ca6d1250d33478395ee2096ad1b742ed78b95145f606e652e4d2bd83f4cf7d67cdca3268c1d165c3cf471a6094892362712d5e
19b5084335eaca009edef0af8bc976eadf7c336b76887cf63653a555e0538ab47d8bf6a8c45725720630bc185740fdab20647654dd2e6d2db3254e482024a1dd45e865357b140bacb98f0a8066087af1076333e21e51e77d70bad81d05e6b7e6f4d3a88423efbdf6eb3b9d4ca66e9ad97e0bde315f13542863a4a6b71a9c35
60eaea09bb5a75ea3eaf84bfd6a5549a045e20540ac787976353c114cca7c97ce57501589cc846a1320ba2c618644bd7ead0f736873e8d07e7f550df45b51deefee29c13aa19896638a8f580a26665a8d50511d6a0a1d8822fe99e3d82a19244ed668b2d510ea6ef05c17002e01d0a4c4154288c2156ae5fba08cfb2394c78
221f1b67ca0c6dd8bc930eb9cd6d5b77619e5cfb0e19da187d81124f0793bc0eac6aff145fd8deb6b9100aad8798983107b205f36eb8f7c6b46c6149ccda404549845c5177d0b318b4e621f7c02260faf5e4af8463b776c5b12e6fb1d6735ef91f91d9132268c0c67f18915d0807f99694d4ae8c6d9d495b000604d311a9b9
6d2520458341a4efa4fa686e80300f18d6681a99a5c3eaeb4767306554865d708a58419b05c24200c59454847988d50b7abbe83a2756cc5781be5b71c28318750549b21f7ce539909e8425c5c38a4a24cad2cb70396b88777346c838c7c8ae27833df843db788ca8a3f0594707a2e54f427a416d3e07d838039d5edc835b68
ea0aac86f3bd470b37f7ba7c53045a8460d1e7a3175fc90d877ed022ba3f45622569455e31a3d1dc8261541bcd25c8b52845ce4a9dc2e3eedadbcbca781989cf5c51284a4e74b7c0d163c25a608196e89ca4e3444395562311d405ab1707e3dbcba475c61e3774137432519b9e0384112c5da682e59ed4c7e1db1ee381d8fe
a4ced481f9823b96b719e51b5f059d26949588d5d33c4149ac36cfcac4ca83210c06b15377d9911bca684f27ab16f18ba374261a00514f0ff70163c0d5c41093cc02725b828f004cd04c5297bfc77d3185475d17569f430472d6d67aed94ebcf0b9808ed4489c233e69eb9139561dd741605b62511aaa09a44fc841851ccd7
80f15c71bdea5386f1bdcc7e30fc4b07b461f21bab5fc313d3424519359f17a4f5f44332ebc0bc269892cb1d91a414817b152a77192c21a0501b586a667f3a5352940ca13f840f5377f30c60b6740ff7fa07964332c76def2b8925245fab5de0ae53a0226fab8218c703a4bbc6733de7a68114d6048f85e7ba1aa4f3b044fa
052182ccc1b98e9a33ee688bcc29d195ee42d78d814b058abcf57d8970241d14c21f66107ae839a4b3a8ba06f6300d6b1199f3c255140776c5e1b9db2cfe374926e90bfa7ed45dc371ea7a3a9715347b17c9cf2ce89fbd64f7a932146cf5f766a702936791071ce8d01c7c36f77c1796da835f45b43ffef471feac9f548c39
ee0d15805da6381d46062e084c3aca65b9abd3aa4636bdee45cb6ae316302385bfe24279f27d9017d98233d0839a17c34c40a140b9ebb38bece8bb0ea78b602573d457bcba967cba9191fc3e689c2204f798b8ce4785d908a20a8b7af26a59da060b181c1375745de477c32b46e059157e1bff21058709f5ed1e8a561505f0
ed7fbe0212099e9dbe1c02412f63eb6274f62db5075d74c2aad39a2305a52c4267fefc948faeb4afa2de78ec35e2cb02f212e5f772ccb07ca14636535ca1330c44afb15689daca6808c32592bab5c1427f87572983d82ca79707177e7d2799df80faeb622efdd1afcfdf20dc7a6c18d0f3ac98e9cabe609d0ddd71ff2cf57d
438e3caf3933449994fa51703c49ccbe30982ad2ac4e09f1e10dc393eca013bab3de6205e7c78ebbdc19f8d30d6087acc505ef874f28f299993aa81f21bdc769e0d238dfc42057eb50fdf73b9a637425fbb2e79876941d51720e5cd95e42ee0d8d0c3c2460272508530ecdb2a086f11fa43560f6dbe830f455b26684f6927c
b653a092af8c202f39c31cccd2f0ac5de6d5b03b66e97872e4eae9451a3162514a6a7b4e6f55d1742b3fd1cbcf8b0f75ec005244759bd68e7781459a2519d59b16f9c88d4cd4fb37d6ba5fa740ddfb7dbccf5a6a95f7c4c7d1e62ca9ab6cc08dfd08ca2f1aa9dd44012de2be0b26c222d43eeb3f987a396e498f028ddc3528
dd3d956a9e14e6776c4ca5ae0dbad3227b1dc293df5a68679fcf7463b0f5107469f31f688e241e4058437bcaa3debe0a522a797088521405d8e5ca15c23d77701e441d10b92c5a6e0f731d6073e328f89051625b4f788222062ffcccb5ad208805c17b28e97167510b891b65b6f3583fd60945081fbfe0e78f317947230517
545be57c398e2a60f51c622473fcb3fdd659a5cf4c6d8f2337bc3cd617d3aa6d080d4247a7d78c7b1963ad2ac7e0924e29f5184dd1082e58b0e8218c7b390d07412a2cc18239a8ed7414f9372375ad6d546aa06c9735867665cea3619b0912399adb32995b6dff08ce7ccff0320ed318a5a609259895d00948876707bc9631
c4c5fe755c4c884b09f3f7e6694ad188dd3a7d61d1ebe85c61eb3067c7a12ac3719b1f1f9d099fdb0a6b118fdddb67ed0107415894e427c5f5895f5258dbbb6395504d93f9012d76ecd59ba1f134430c92e944cdac08f57a19341161acd1d7ded4b4aae204bdb10f9fc3684a47a4958f815bb544e6abf7f9bd2afe96e2dd7e
eef096bb1654faa5c80fc2c66d09968a1238b9671bc6d96fcdd6aa2a402d0fa9db18650556a2ae8c44550a03d98cfc02730d8cf948f1a84e3a0edf4c209cdadef9d780e408d8d161965249e48856cf33de593276b50e82abe13b81ee3d67bef7eea9562563238d539b3a256dfaa10c4867bb48c67795a15160d54973d84a49
19fb5855b5f11e5e51a64ee190a25b3beb482c07e61b8663c3d79f4b3a2f5b8c749d3603e6eadab1e89fb73c426f12cc026791ac66fd1dd83ad47eaa9a9aa23f304ea10e6862f4fb0d41d676f7a42f5512f3b8098c8b6fe7c50dd0af3222c8b4b00aa57199354998ab52ac54d30d17b24e22306b74744c42b434eaebddbf8d
1d3d3f1504d6caab0446b8ffa56ccecc8ec9976d19d0d9b6a6e0ea7e44c6fdb29f0b50ae017aa453deb992db2ae3087b78beaf7211b00200c65089f5ed726d4251dd284d22fa28e28fbe0f1b064723d3196af84cb1644e39f61fbfbdde02cbf70465789380e1912b7d3cc8118428ed9af4f633790b4d219f09c13c3e8f3f73
9def2f967c7bfeecd25daf9b5a747eb281d2535b31c7dc99e34ee537a478ecc8174c6a3a1ed0c2c74b871493599be9a2ecccee1136fc7eaaa6f30758b607700faa7d19b586fa6aa4dc5a813ac33fc3e28d226b6665dac7de35a014f89a31195a416833e9a13123be1ae1518effefc0523499f54377362bbcf9d91650d6d283
e1bc19a5f2e53e5e1973c406bc3b4878d4a4b8278b878d9bce540ca936d369af2d1c31850d5abd466083845e1479b51d368df23c5243c131db75853e962c66db13f8ffc95affaf6336abce1cd0a699e733aa64b29ebe04915471de4d165e4d85573ec24ff0e09bd7ea8cba8169299eeabfdbdff58bb12460e20b9145b67872
484d911af649e1d39fb9a44aeba926f3a83dd87202020f674613001107a5d1f184b9ed1c1f8eb24a32f41defee4874b4ecf3d9897c00c2a859ba745e11304823f59c0aea5bfa21081b2eafad4c4c94ef891ce7c97f388ff1753e1d53d485e9d5b18e333f9436572eced77d9197c3deee53a26dea76f0a738aa979f4f2a358b
725eb5b2321e717ff9bec75804606fd0489a36852ff5474df878831431a0257d2b6909e5b954afc9a49dab3aca5b02e02e3565e762d240542917fc4cc781bceab43f7c53950ad992e596582bf87ee042f4bc7f9e91ea20ba6561019e184a34c8a5e17d7912edc431fcea320c7066afc23bdb5f64c3606b11b1fe9e810a9c82
2e60bb187be38c7b87b35539048b8a507233a86f6b8b363656eaca0f8de48f3cdfba3616a743c579a7ef6b922d2d282b1c77cbda888177ba7037513b64d21a8a6a09ffc1e3d46769ae279e68799e520a412ff61d952aa3b552159e3814c8f185731c7269bb375c1a1e266dd2f73c7708635c2ed5a52d362c124a76c92410dd
3f00f21fe81977c80051eb8bf67997efcafb1593ca9307301c2ecf27c08b568e404d1d1414dc2220d73c6a352a2624c916ada967c3d189a1b893d41139c948b04d6f808452fcfde55603527e598a6590ed920be0d75cfe65e105bfee9cddaa6fc9934c42f611ae55681be92fc300e7249af0d7f863e2b69ce5bd4ea2ceab04
8dbf1548639ced835beca4cb4da0fd79e7936a451691f23c1859231f2bd61d239a352d33e063142ef8844b777e28eef2f286bdf4ea7326ea3ac9719a4cdb181640727493a2b94b7a9df5cf6844064558c63f27a72892b19812828d32c8c76a52636f16fce7c04a3a38c78abe0179e533746e1e1c8ac3e3bbe106ba78b05e6a
27f6fa044cf6281acfc616fbd096d15b607b86a61644947c5caf286f43223ecd23873e67c555f614759a4ae0bc8b78c136a1b050e79c682e1545e2d3c018b7321e63ab4f61f7173fc172d563a90b072b2fab9bf4d184650c1b6fbb6b14cc43c354fb4dd10fe294f9e7e2d1ad12e49f517775962e6edb08dc6fd08e554d014f
57bd2707948f910e79946e5992a7152893e562c4adef8b17f8e9c642e0cba85fd3998de2336908f3bc7d6f1c7af67020d5398b4356837e256fab4d507221db4772022b13022e02f3c72f91fe55758a990143fb641fc74b8968bd9c66c9829a7ec6898d0216d33aec6ce97e6d408712b81130fced7a2f83078a2a25fb6ccf74
ee3a76ef72a4eb35cda2e35aef2d203fc37d2d5497725c5491fc2029f90f19973512c8ca94e560780075b41f8cd42aa5a2b43261a0008201f4fdbf34b768f0e033692725bd196ab644a5c4680102d5b665b7061097844c1a663bbf1be878a2991c98fecc4b67508d7fe91b50c0aa373b02a19040bf72e6dd84a54dd0385f35
4af7b9288f434a80e79982107b31272e902cdd8d5306da0d306bb9ed2986d3498373442927a5c774769daf503c30616f24001cb17caf8d14d426c9d768b2ced9286ff6b0d1a932056e25aed939e893f4d9dbbbcb5f9817c6d0b0c469f1a9f6e2af3c5046808dc130e18673ae7bb5ee973229bbcd78a193e0360c9d4729bc92
933a65866eaa926fd9d7031ff212f3c770dff6740640dadc6238d1fa2b44e979edf743f2ce2227491776ea376dd1f833d7d4099cc8914e92decda2cb2bc9c82987ddad25097e7db47c4c4237f879085866856c68079bb837c87af84429bee7052a7e4e1a609a235501ea40c921bd5ce7050bbfa2c8cabd184c109d14d9e359
5603efbbd39715fa6959290eddd302be9417190a47c8d1e6d7b05bbe50bdaab53d8164413d28c2f2b684640f5cc8768e564023892b9f573b37ed8b4a49a82de14b097ee47c0edd61a0694820cee6afb2b9b836a06a420833976dbc30f081cb44876ce406261794ba472afa4e42a57784052f19cf1e9d46605044235ee32394
9e6d09c83b087fcd55dcd7245b717f09b5b584fe9fcc06ea9f785b790f5efefc8fe8bdf26e1ace1c05033c4dae7d271738159ed7d8da8145da39d7a73c7b54424c52424a60746a738fd4ff0c4af80ee7976790c7d4af15d1bd9dff8b21e21ea965feeca5c241be2b5b8ef1715596e3a5492ee5f67fba7f2532513ec40dd18b
03656b3f75c5d8515c1d14d385043418ea8d34b54e19e68264ff8c3d3c94bb9e41a47e2689ff90ab1c8eebc4ef16753017766cfaa4b583e48f8f6649eeb4aaaf7ccf549f2bccd421c7ec43d0a3e58f5fcf41da55255c38dcafbab0550fd7bcc7988a49d4efa19e96f83460cf1078dce4574b6feace55e587282addad042a77
7ad11b356ffd95af1cdd79982839a3d9835c78cadde2b7911fa4b9d3d8fef1736cc4e946942f887b023118f9d510c391b54d26728d7a2ecc75fdbc3183671c97d0139691723f07096829c8d3b74e0ca32b5b1ba45d2d429f2b3c1f7408bbadf1109e6aad96a464dc16bdfeefa0b15286ade98d69ba0f664f19c2abf7b5947c
9db71aebb11ffa9d0471db01dfa4849a90ddcb5cdc833984c119a66b5cf4b43b193a4d061a9f8b95cda62837c2c6b54f8de5bdaf9e20bb2c31cae1e23ec3fab581ffcd25915fd2a54b61f5d316a3443a2d417f65f4b9baea2309f1b7d610c5c412048be7e47ef4e48dd21b3b1627e06d530b07f5bb21723b26f51d1a2646c8
834a6f5ec1e736dead4ad042a09bb6c117fad1a3605e77ce6204aab04610a3af8efcf6f015bc26a6a937b0bf790e751a5829112b26122059ccd4972fd902f44b7efd3abf42a8b837aa1c36b6e38ce39bac31d6e187b24809f2f65aea0f98f8bbe1c28d2e27852d80a307c3878a481f0a3c1850d92d7f68fdfaaf22f87b79c8
73cf9b85ff3de77c2d479d996533689c53374262a28a5e2b27d375490ca2ceaa6e5f6c1ad2a4b044591c243dadf5a7f04788cb4138f263710cb535d5d1d3bdcc58a2cc2b978000aabb4d82de04523952b02232b5686034641dab18ef3c9fb8fb72e32361d62679fc0b79b638df933f2683650c9129f349952ffa0339f30bb0
efb733ec3c0592417801dee756fcf0e0cafcbaf192a31ae4bd2c5a450d578364446aaeb6e6dc70d633b4aa814ca0dd22b134eaac110f8e97830c71a7668a6af257b1920e45b49e407e0e4edc260d5efd2e5af984a24a292474ddb97859dd52f0777df04a38fa8162484a0bb509326a2c69557053f667a718e74f6961923b77
d0bf2e78f70c0c054080dc950a656d7f66a191f36b9fdc39d1ca58bbb7775eb6a74dc7cc5aeecad4d5be08ced461a2df18c79e93a79eaa9a30e75c5430c4dcbd3c0df71184dffdc78aa6163611ec6415c3e75919bf9f61d1a48b1c8c1d694236703e7f512cd94b48f05b231de1b00077a2c764b2ded73c07c12c5f4f1e5cca
80cd905364cede8535d12b83677f886644aee1e500deb52302d9eab6b8da7040b0e38cc8691a201b970bef3a61affc8016e345c9295f60cf8496d39021e1c8998b83cc0d5ba59ce7d0d39537dd4aca4d8709f2687ec57e82f8cfbc8ed01efa020d27dc30da72995a7f1ef26aeb85dd1cbe5565d38d407bee29356516615c12
d451f2792018fb7fd733841c6844ac937f0100235c70b4e0cad08b1e0eb2559972df3a06d387cb172876c7c886af2fe8997ec131ec9d5f0054d10a6da33de7cefc93d28625fd0b31c0c51d87a07e3ff150cbed0aa53658e3d5ca68a9dbad920f3fbeb7a669fa44287d41f43e70239748e7b86cd7f56d8747c942e91f031216
9f13b0d6a0b48e156772b09198024c4899334e9bac261eb9d2a12baf043beb9146c0f317684ed59f5102e168c8ebc1457a426f761bbd0ae6732de783d77b1ede35edac6c9c806cdaec4d2d1f2b0e0989c92c63de9406ed690199a3a6c92eaf35328ece2afe2259e98da23976049eeeb8904715e0c30ddc9f83cf9e9330d57c
375a91df767405b685faffd062575fa32d28b488bb21a9e9dd64146c5302385c01b3b32fc557d731a7365d556c229e02dbeee87f16190ee17b1d6610e49ba9ce2da2790646a0f4135fb1c7d4050a58668704ce08a45454f6272d38412e43fbd141a5a2fae3d78267bbef02b79ff6052307c55c0c08e0dfb447be19944306be
f250e552d87bdf34b06d7b9f5e15633b1a7c9a1c4ad5ae03d603f596a0f84a65c09c6bffa6284b6eac429799ac6e834ff8b2c749e04049b8c28c81966af8d9f8dc3b872a86754ee4fc2a6dc78b3d7ec8eedf585d54bbf8548314e65465ea1fe463f4788a7d26701b77c35e4f4ecbc8dfd5645313cba4ae9fd8708776104aa9
53c5ced171062cd919bf5430506de264b09359bb0d32c59484f369e05e402c86f9872c35a43aacfdede6619e16c206fc306e65b89f96ce9c591c64936d58ff343922e0650acbe34dce279d3f31dea0e7b467fef530816ca58264eaa8bf46576dc6a4c466d7603d033ff17b8a634ace8d0c12d742d1bceb2423b4802a5d9146
10e5f54c5bf9330950b24668f0727faab92b8da23923caba71b9d519c1df5867ec5696796d5c800cbd7dca45a3ee712087f07cb8320474783a2e8a89ce3bc5dc0fe83ec18c1d75695a0d13688ee8f59c7a6855ba80f4c8faf1051fa9511cdfd5bac786bd7226eef6c10aac0982fdd596934c2acceb044927b1f8b47eb0a730
eaba241abaddaecc1f565084df13ba16f70435a947b40cba85c8ff103d65829575a95b844709ea6c7cefa992e9984179ae4aee2b20ac658e4c45ac5c0d4109c7087545bb7ebd0856ba283e122286dea2f7e7a6de5e1974ca5c3ab3f3b36a3f1065f9fc6dd3c80c419762bcbfde2f2368b6714dc2d972ce96cd0001b5069df7
612f079f06115d0513916db8e31005001f81e7e45c8f9cf7376fb1073280aac3a28374f346c30d069e5e3227169b77be94de1fae88bd533a12fdd8b723ea665ed68eca303f8f7e67c704a4e754d569381322d18b2736999231b5a9146dd6777fa62fb92a61ddbfb8b5fac877de4d7b7a32f65cfee163e31790354ed262e66d
f841b21f5af794026d03973d586cc48ec892fda6ed2195ad5994e179d72b63b3615e1c8b37c5b4a35d5b9114848fa9b256e1aee627d3d2555f6f1155fa56d641701e83e9d0a0dea236ebb1cd06ba5df6b3d180e75f3a5d5bab694b50565f8d94096f007cb435e5012d11d50ff06b11e4627c2a68942b8e22afcf1fda80213a
49609d7f37135d7be8dd9c07a5fe279d02d2a4942ec98ba46a6161f9adc3403b77a2dafe021ba37e0a0ad63dcb1aa6ab490b5d7a716c1ec09de7a9d4d06eaad43b64cfb40c8e834a2467d0ec68d441ee0a9a67d0c4ce2f6e1b973a3b8d35e9c9f21a4885fc671cb022360d426146426ce1b48f7013d98a4c4ba74cbc07468b
de59944b07a91b3632b275e02b02b83f3d14678960165159c46a9a1919304814c608b4ddd708168181a5c4d6152eadf5fe8aa5a0ba3a4510dee18ebff1c1e2e222082b38378f7242f1a6635cc2e8dc10b6e8266df9da6d2b001990ad0559dc329f0623bc40925e4c075873ffecda33956174b95e5946dfb89d9c13c9791580
8517aba5b443d75a673d23e23aabe3ce8680a444047f106951bfd2a9c609bc4cade57d8d74872f89b31b98d54e2d382f16a56d8fed0583070443f386d564388495d48def25dcde0139cd2103b993ed7f2f0a42ebeef52e4e536fe0e77d4c7d2dd24979b3bc0dfb0c4fd798dbae91cd584f794eacae55b1693f98c24e807f32
82a17271c022e29e45c07f4a9343c6725466269c0b84c8fb7257630404df5fb9462ac1ca783b3c236d2b71aeea329950a0d596bf473d86eda8250258cff33b85a2d5fd39bb9576350f6da89756b9ad50f14a9209de8a4d5ddb1541c6d892a3c71d4769fb8668779a140fb2f7f3b9118304c403a3670c45bca56946ad2314d0
2345f6e8f6441f3d4fa11dcbdeb0cfde771d98b4a3c229c598c3930dce9bdac57de5c92d51e3dbc43ade500a4a4bc7ae95a377ae8789828660d5ce612b0a3fbd04cb47c8256d8c45cd883898719e04ddf66345d752a0d5807c08b69fe5aec2d62a1b03780c55b2d264f84205261e4042530a9d1cd83648b2f0fc092a1f3dd5
16d6d5ef68bf5959b1808646af474ac98eb91f1aa2a27c29b26cbf398b0543d161d6335ead1357f379e9be619f524416069f4fceb98bc9ae2b90b58bc2ae1cb4d783b961e15ae4914db5bce4b3661fb755d29d8be343c716213f9f08dfc1efe3cb5f8b6ead9f54512c9248798af5e963b56cf72fe0dd4cbd1f2875c2709c3b
5fdcb3a32f653a372373113ed1ad4e63e99dc9650a230b76caa23db7681bc2b8968bb436d734f7c52f7dbb5c407d6c78de709d020a7db6f5d87061e463c61dc847519241d3d83064ad3f4e276f6cd3786a66529acad1869f895ae59cd940b46a533fb77bf2fe875e86cf33dc6d153c486d9c3322b7b4e7534071ad001bcaac
d3ecdda204ad751101606c2f8a87e0d78439d82e8ced891ff633f7d47fe7c1d36ea903f635c68d3a43a6ec347a5c3a53217ff9854755efb34b9c2c86b8578a4b433a2e44e326f21d697adc5c78fae3ff19b0974c5a18da8f12dab89d9d496c867036b7184c6ff88779eef5a7f6138cc73ff6c17c243c96883233a17a31dca2
e6dbbd5cfae9ebf98c80f81ca4e4ef04e37fadffab35506d9e406f24ac7904e9f8704ec591c5c117b5a2444952301202c43a62d4782672bab9114b3f340503e3b5211fb545ff86dcde7f2b58acfbb9866a40ae1bd6a6b0254c5830c70762da6ab4eb2bb2ccb1ca03392c6d0cd411f2b8827f7e06b9bf43ea2db210f7fe3c37
02e902a1c8b0cdd52e9d170df67a90b642af92c779570a61d203d40dd619095807cac1786696b28c7ab139150c7abac724fcdb6ce755d5e85a6b55798d41b8ae80d073bc484c694e7b6dba32453d515d5807606d460303b065bf316c06ba6ce5d8fc13ad261028620ae820001c9f5288a3d9669dd2b630d789083eefbbccca
d7034813255e0658200d73f2e773934e66c52f2dcb56e4a8051bf67e5018fe7743087410c5bc3a55e8af500f10de3c88a43a18f5f7247652df8b028e4f2cd63ca29e638c11cbe5d479d3a907b17d1b88f5b8e89f1471421b74e3740e76a374d5f5a9fd81078d4d8aa385f5c6069bf62feb6e077c039076baae312feeb68b0f
e5929ab8547f064a2de9fd89c82be2ca99d83e8f7e344d9fb3b74111ec9c2ca79ef5430dcf3d07fd591f59a84c679b0b0c0f4245770bfc1b94c985d26a208f1f7386868c1d244f6399a859583db75106dce52efb8b0c4d1e6824cf11b13f6b82cce7256d444801484365b00c3076e1f7d0b913616c5db904f66ecfebac4211
dfe3111e1d1826e3f2fa44e3607b839c14ed218810587b6dd483fdbb3395452eb6243acc612b2bf43289ce69e86c650cd5e5a0f96a265c2617b2d2d6ec2759dc4ae6e32c94978932671c1e0d72aaeae835c447912f66a39925da78528b43d567f9ba003bd952e2de86df8660274919c4c1f2ea9c2967d30d8326a838df881d
35adbe41ac3b1680c0fde52c3f1c1e2d6d568f7822baeeb16e1f2b959dc637e0194e7dfb1cacf3018b39d0d2c5e954a58cfd002cdbf390d1bf281df3eaba5fd82b542d6faaf3664a89523a5d0e95d7fdf91a1999822094b0666a6e91be0eb2236a85e6ec4dc8cb561984eeb99e52ad0dafcad0acfccbfd62af62150c749438
8a77e8ef10a09c5c88c511e5e3d25d0f54e53f100c87810f3a9d50bc6a04368e024c896e2ab00ef625c5754801705b9c8abd0e1d2dbe0d5de2e9c3c2281781ce2f2c917f424ed45168e81e639491e952cd670226059fa5e248f9ba9d8d683d9cb975fc09d8a50c89aa00ea7755eac81a11320cf74eae634cf3866dd1b3673c
9a58c91e9e8b94581f7628d2ae0f97485b590b5f3ebd7c268044ba7f8f9b07fe50989081f1ac50e6ba5d02577601bfea699ac59432de6e125001de032169ddbb10854b0f90f55d3b3a85e461c7944c5ffa1a3250f71f3c535cc142cd16c4fc8c9c1de0761f87cb840136719e63b342011d02486b75bf81997f9e7849bebfa8
71370b7414491cc16f38d5d4eaedc34047d3ee80256aea589585f063d056eb62a6849eb56b488d0d646dc22bed4d316bafb5428d5049bf5400a7a1b69c463a80ee16906eff9beabc7bae61a7edcffdaf1a57fe269155f7a7113bdb3cf70a5c8c8509d8bd1e3c5126ed4e1a4853a25939b01a03673a4275571e6db4dfff36ca
6ea232bff15e576bf012b5a946a81e48bbff414a94db7968a1f0d4bf163873c842cfaaf83554775fbd7428d8286d97fc546e899c88a16bbcd93bcb5b78939539b0cafc14b68344e42c70c182804bc63fb0eb6ef54bb5f316d45155e20beaa7fd4684ce238004cdb5d23adc7c2e618667e88fee3c5d7a1fa67deb9fd654ef75
479056d32a7bddefc6332b1d430b862cbb02757ab5d9eb079e053d509eff800232c195e8e3518cf9e2dd4102f59fa55b2686b0d7d39adf9ac37f55bf9882184293c3a216730d26426986ce6633ec5fa6820fb8243dc46fae0deda0580864045aebc5b25a3747c43bb9d8f7374e4ff01593985121efcdc51dad1fad55f8a750
93859cc5b08f83dfd3bb4990011db4712420c2d941dee159227656e5e54ef1d33320554ab70ec8b70f73ff31f84f50ae38fcfbf4a7957290d21d5232a3e230ca7453125cf6f799ab62312a12ed8444e837a854374b33d43904f5cb9f4163d716fcd8fc025200d4388fcc4075b166273ece9bd55699bfbf1dfb9afb47a17797
75e6ed5648874afac0f5199bb65472bbc0492863a4d2df2b9d7b0c91ad8509382f6eb68b236b8127acf3c37b3b3e2119bfb5766591e152d794b3ebd3f295989836ee729141047139efbc409fc46aaecf32bda5692dd28664b0636f89be326b72b1a79dcec126fafea7150b99df8d57006cc11d29982fb55dd7ce5972da22f8
baff4c43f94f0e4616a2929e3849c8425ae6dc950a626d6137da8985f4692f61b5c37a0640b09e841db4f86ac7fd66d5af3a95259125bae1999d9fa5fb21eeac7926a7f6fc9940b19b0f81c8a94e26e8677decc980c4b7f28016a31153b745eec51a8661266d37a09f9c64255649e64090856cdac677a66647a9ebf427dd1d
222c8150a86b8f7d12ec27b5a119ba6ffc942b0f34623875d640e79535ba6fdc5f9e936549e949ab53323ea863afdff2911a91d1bde89ee15da1a752738a7744e9aba6ecf3ac402fecb52e2851eb82bacbb125c2dfa5f2797ed1b15aa6f5bcbc2686c7c7ee3376b9d7645399cd2fa28a4c7b6d68c043b8241e55a75bd99a23
2109044ebe7796199b97309d62c6b677d78d98e982adde52016d1dd3f232d57f0cf66325dbf2f338a27530d01ddb87865a792c827d7ea48b07f7d35a00a236c87f97ec486f7c1b518969d7498009f8a6ac1dcf052c167697aecbc1e35758694df075f85e5d07a08c2a0c3b0785dd39b31faf36b7902eb150d1b4c0f13af878
605995bddc766dbb1776381eebec65924a450b3965110753df533d38a414c1af4e58825cd6bdb803c4dcb49617811fd9274d0ca8b3a10efc1635fa81b8d4ce892f321d7e5eacf5f26e7c07fe8ff9daf3cc7c33e1df1c3f795bd427a977f5bbe6ae6e001852922ff4a30098c38aa7b9b9b0fc5862dbfeae46295a8da3eebd0f
0c372039bdec907bf3407146b485469fa08fc11c2619360cad71d6dede0f8b49fc7bf3fc6a158252a228ce6930cdfc0fc07d18dc4cdc4cfdc7854bac54e0c2949fe16f2736e9005538bdaad95ff396d3969b6d5a2ad0c99ee9a4a6eb5f548e659a766f69b6395852719629cc135a01c30f55002efcff8091a2477f752c3365
771790d5b7ef5a9bdb5c88096f497563166a3969190db41181098e8dde06b54cbc40842aa08a6947071a49c3d02f4655d49b4fb3a3f164858c15cf813f800c0def66135e1d15edd4314f75949db00b28bcb41428a3e1a58e8edefee9d21774c336323bea90826e7bf07fc0478e5f4a6500660b95379474543ff2d482a68276
f38710ee5407ccc3aaa27d21c28ed3f60879e14723060ac34e91568de52d8f34baf046f2bea349471fd3eaa6cd12e377e37bb7fc103058169df4f595f3ca6b15e343f59437770ccc36ec393debf2defb3ac1846eeb9532e862e0acd98b36605bc535b88a5e5e3b6b6e86f95b8ba093c68bab5fe5588f1c3edfc51e55b512e4
a3f1a61b4cb72ae51494802cabbcdc1fcbee06ee21b64c35045d9fed344fa9facc0a539b5148d7dd255771c76f4892f1a398811404730e7dea2717760943c78ab7975a422507b7e2bcbf2de6bd7756d098942a1e4bf2185f74af7febf2e29062f05deb585f0ef1d57bd10a5eef0e56ff2804ede0576269ce93ad23d2c501e0
4e5644847a026dce845c5f38ec0c155b67bb0df4e672706d08b35c8578485809c06526464e1d7575394386c2b77583fd56851ddf67e0ffafba970256907d069bc545863e2e847e9a52ba27fa0c60838b92b11883363d8aa8bdd4be8edef5f1c074d4a6fb068101805b4318a586a9409664a48a49639d1bb19083e77931ff92
bd724a761b5300ba8332b8412248296f3b89045603988c1162fc0d917f614c6ef84112554f8bae7ae6dc9dc73193c0dfe72d77040c1e632686eb8d87071f3bdb3d2c72c97ef1e8874e657bc36f9ac3551ea37a56827bdc66809d5fcee7cf651e4e65ec1889723f803adb69930eb509d788003c63fb158c764db263778f7152
3ce577e8ae531258b5a33886624205fed4f56e3ef9d3c994298edcd2d59a3633aa63f831e99ee4e20dc4735eb17aeae03e31cf9b35ccb512035bbde359a1d123752fad616a095e2fb1a246755c699e073fd33a77d1e391a765639eacb04a27ec5e70523a296c6f9127aab3b380aaee76af3c9c8ca147a00b860fd235839ebf
cb9105dacd64668f62247562457053617ec79486ed91fad906f38147f988b84caedeb9c6acbd6575ce2971053b79bec5c7ddc1c0a05e1e42e6ec0e4dbd180cc00e6b6aa8c458a2fb0787542c674580cf4a70b88f30af08005eb3d4ebebefc88e4af65b3cd9fbf680d770b79e150eebd0a41941e3f01535dee3e8244e4a50a0
0b993973be46564bb69f73c229b60e72aa023826515083bb65a70dfbc8f246320c97a9bcf123765499d116ef7281eeacdd55ff71f0831be417925d9656b545d8e56de71b656342f1b3100e9099dfb4394ee7235e9246e81ed09558555ffae7f7a2cc47ecf963e9ad959d2e2c95bcb4c5bebcf3018d505f697cec50acd2cf6c
b43e7b60314d35a2c14b025d66b8a68b1de9ec53f72a00ac8e7010dce365eb9bf8705c92f4f8fddf91d56c4bffbf8f342679bc3059df5df6e919e3443f3597f60189c1f9b1a47cf4266b48f6d8b0cbccf9347682ef3d85651b235b2cbff0db7153bfbc2cf59094c5e682a83cac5d58cab9e2f4e9d30c5bd8c92d5f874131b5
1d273a3b6f57c210291bf0294f0f2016b80871381ae47ec95d63bdb757b28a14e3cc9431747879791ab83e7ee5ecd0d226f7b5f42079633b42f31d007ea2fe4728f353530434eae7f5f03f1ea03ff081768a4dfe815783d44a9662322f0fbf2e21b6ab07c6af457848d49e37783bcf4d4ee852d603eb60cf8b520f5f32deaf
8934badd620d40fc52fe047275fc4468571c084f5910e1f5f88b1e1d50d03f7b13b2579a046c0b0d6f03544a81ef4559e15c740854e95fbc1bcf1e6d2696f12f6b7146c82f77e9ae591c9b9252cefa2d6d534cae5e16621698f441e0463e70705b982fffb7fc23d39469a3b213c3479f5f9263f68c36af3c58fba33bb1c0d9
d2c59e3037c787dc2210548ee9749a42af9d34b470f53eca9f4d614b87df34d5bf4cd5e88c19815d7049c12b2c8a1ac3d6d82503218aa54b71550602ddc6aac54c7558c79650d2a15cad3ebc6a2f9d6288f8b63bb3ae1c83c9f24f8a50b15181ea9fd71fd34bb21c11e668c0ac538bf610156268a779f1a750c6d962788900
504d6a88f8d1457c3d23dff4b7c7dc4ffd29b1ad888377539f41bba722fb39427e94a1a53c1c50d63bde4740097cc6f835226dbb52af3f82bc614d2ab4febbf8b138609e8bb957446d75d5cc9132fbcb193172bf20fdf15bd0276dfb957dcdcd495a9ea845122ad8416372632ea58ee4c98c61ee314873a9cbf6a90a6d9fd3
f0b3d951e7818ca95888142b926b49fe6fe30cd86c176155ef7e078259a8b765b9cb9858ba7af634cd66e5a7194468ef8b9bd22de3e83855760fa9d73d29bfae16352cbe2bf4546d0aa5a303d9b621a637d380b556f7d8b671675626f35a4d814ddc8d636cd80ec82d0587b70923b9cd0be206d6498de7ede78a407f66379f
c5a1a21ffcc003671d2966f6d88329e2641be547e9f86d36eae5da176532792f2e78733262956950b59025d82550b217e68a7ca0904708495e1f1a8500b85afb12fdb3441e282ff674b11f10b9d95937f6a5216af24c21bb9e3ead9d36910092c9db7c11be221331da36c6435406e6f579945a5a11ae59c67460b17d197e49
c70ac5f20eb8225e50de3b9327c04c94c4a1b0bca1913429df6740d7193a24232289a807d815f1530442f7cf7975c848354128b85ee05b4cdb538268649adb30af9105e58e98bddd4047a3e39032ee1749828ff1811691ae5e83aaa0ee912927dbfcd857366ce53647e67ccd7e6db5a8f02664be0500a8d04072f8e125c615
81dfa16c04fd17bfe43a40042d8fa7d63da86c60302c17a51c7d4585f3f54abe6aee02bf03f8d1b9edc1a3e07f4d1101d6464dbc099b09837e6eefd90a52e36678dfce40f58feabbbd9e5e71747abd6bd9dff1de4a31e1ca6d3768285db207a0e61c635f5bc404ebb89d19c01afa54bee15049035b40d2aabfd9c6e942cd06
559507ecbf5bbfff1a9ab8171f0991f434fc4dcd20b6ca6ebf1cfa6fce43ad5f51b30aa67b88986f3090c636fda5c7555a25f4f30a18c7d310dba00a34fa6dee95e17b97687dce089f929df1e7ed3581c38ad304df967148291783f91904085b4707d56f761a6518c5c7312e55aa34b874e792d8950ac99c760aa08d601724
b1522fe0c72980b05986affd302f757b37e0a176c05b356e8ce0881584595a5710146bf39a92d43ee8f1774e795cadb6823a70e090609f40a6afd3b3c41699b36f0717154b6d90878547ecf0223a17e250fb729d43cd48f0d57b05f6206e618357589c26259e6da00804d9e1d931010bb59b7ecf9337592b79d9a41b21fb85
92659d537e1a38f9b0716b8a53d9a7b7c8591db7e2bc85b47a3fb704d27fe6f369c34c363737332f48d0b3442bbb27dd083799b791145dbdf33490ffd9251ecaa1239ce5376e7d7faf69cc6091685fb4576649cf27743e25e451df78b850e6066d727b015ef813a685e49b0749dea9e07c506ef37a6139500550cd52967d0c
179dc78da3c5e06bc884d93e21d3c7da599f78b779a9ed1a87673216ee02165aa4a0cd8ff637d229a96177affc8b39b73bdd04f953fe354bf97da3edcf922ae8c99fff0b535e79722ed84e1970834834d0f81952fdc90f308402e514e25b67a5bd7d8f89e41a1d2b5e6d50517f98bd2b6051609d21fedced4667a11b331264
8f2d369939775a283118249f3ac136114642b0a3003738570d9e6d820e84b32f41aa07bb689e3a2e9b8b71f5f16e7ff5bfe5d7cef61af8d4e1f66ac8fd4ebb15b81667a6777fd2c65911970f47547eca714e07379c0eebc77f902cf1d7a8fb26d918281f9ffda2e9f3fcf13c4692b856b653fb96d8db4cb0520ab224f650f6
b54df1bf2361a7008d2f9b398426458fc7d554b21cc49a21b679b6814784698bb5c9002a093910389839620bc24c57dccdd8e5673d05c5a9cd91c15690b8b6d0a4ad689ebb091bf16a19a1198a710843b85548e601315ff75737a353dcd3578ea91a9165d9310175a769ea6bf1188f044586a4751340aeb95774eddbfb9271
5cd1e13ac0c25ba33e81834d25b4eba8766364ca2c02d757e2eb93830c57f24fd15aeac44d5e4e01e99ca27eef2883a952f5c52bed754012b3ec587d4db775e6444370ca98376418827a19aae7d113cab6689da95a0e4447bb3496510cec640083bc7884c08750bdadd254e6910ec02fdb3ddf07f0fc8e61e227030c9dd6be
c917684bd7f20cf8dcf79ee2c84c4d3affd15559e9e7adc2f3363fdc9840d01ea65dc2c7a1a677a21f723df4d2b63dd8cb1badf58f63c1dd590fab21a0107babe7c06270e247353615b4fb8cbae6f6f4d68d29b8e8ea5eaf6cd0283563bc5da66df1cce125a62f02848cf6fe379f33d11250b30f4ae202abba92519b91b223
851bb68fa5363aa745f76ec3bae67661d21c604014f10db45049781c2f1fcaa906910b973c938c2c799876613444a0264a5f3309288a47b1f2df72e90f519860d78b1c7a021b63936ccb9723ae4172c10264861c2e3e842663fe623457143375cbfd670739f2f01f4e9332e139a78e65036e414e9a0856027b14fa015c3029
14cd58d042240dfc711759fffc0f7e0af71294012247a3f827e494a4ade47cf78de8561158a3318ae38753cd6ecf82777ed916949684f63d0c7d56fb3d5fa891cae1cc2417fbe734954b52d7b1baa1510c943997ca78c8e5bba26a5e6c2ecd5e204647377991f2bad8234cf28f71c30e8b0cb51354b4461a99737cf4122988
25ff9706b1865a997456e22cdc981136d641207d56b7ab203f15a2b48fc6ad499ce3529ff67319b64fc87d5e1ed9ea7f359d0446fb34da085b3fce1749c56498ac103019cf7e06ce15aaf9e9833047a8d06a0b9792a821ea0e6bf23f4cd71072795d9fa50bd3a343f1a01fcf313741ff1ce9e485561a124b60979207d83abc
64e33258b8a4499d1fb2e9fe64cc9d451ea5c9883dbb90d62e1d37c5cdd3fb5c7f3769a3beaa44e81540b4223835ec1513e40f6bca362d8e370766c2c09b3f65bc908b2242a83b532a42d5e2be1b88b1bdf2f2ebba0c6c00b041ece7c628b424b4129e3c7ecf1686fe7df96e8069eba24806d225b487057ca45c51ed184542
157e396ee15896d3218715bff7a7d3c6b7225281fe0731799f85930c52eca4ff4d52033398143df84ac8dbdda872379074d34bdd818043485c97005ef1291e36d6cc0a0247e03e7ea59397ede235f9e5a667661ce2f89391a68937d18dd1248b81c45e4427433d1cef0500636b83c8a82becb3d62a9d750742a91817039387
3cb3a317188a7d875a0ac68b1e3dceedf2c24f34a73b4f8ec0a593414e740aa05f92260fe3936eb0bcf95d2c20b8d186f2740d8d80084b43130483cdfd5e1fd72fff02ade4021e7044fc567ac7484ae84be004137ad4370f68b7015a115c4c74638b147384115429045904b90dce5e0e1126eead8a7e3aa07e88686fa61ff3
46303a9cf00cc7ed566cd9eb55587bca1363faa6d936aec23fb900df32b485943775df0d3dacd78abce4336b85a6a6d3c34a2dfe82c98eebd8cfa48683417b87d87fc6cb7490da544c002eb61d5f8c9394f64a39c33b6fc32c5c68d533569654c3aa7750b76e42dbb58e9315577c1af2eb97b04a060b953f4274d59e2269ff
fa486d3fe9fe292e767f2c32c35b69d62e6905ba4511cc4997865d372006d2f47b13e1d00ae9e21881c5c35ac7744ff4b6155f44f683e15ce7e94aa45ed01c0d93fef9b413a3686ba410dd1997a13a8b6acb56f98501be1250743e102936cd53f0b0ca4aac60c8e45b396377cc1ae9d429787a2bb4e58946cd27c44676f7be
c6712ca15771851a335bd1907454f1aa48fcb9e144dc108d25a2a0a29da3b6889dc243e58cf4f0effea3bfd9390e9ef435ca0bde273117c7067a4e3139e0bb8a7a42398383e82a9158668d8ae9b0f853d403388533688ede1d4e39323095b62193fee792fba05595f89d5e885fa854421430486d068efd99a3019f903b631f
ac37f5939b9cc09e9fb55e8770248a8e171a4927c55c0550c954bf29fdcfe104a4d8c5f4b8cee2c181208492b54a7b8e9d9c1851077ce831a3809c34db39ffaa95e7f268a7d1d8b00a3655a9d8bd0795b6efbd2673e5ffab8bd809cff4ab0cea8a46bd6d378a4d678ad8195dff91bff775dcec4907e115381056342ba78e1f
5ba0b768349e2af84b9df227085f0b0976dedb08cf3fd45c54af2b7fee33eb56e4170c7485ffe29b05b08ff1f5a502c86fe044e05ab61522ecccadbdda74d2e9577b9384f41c933756e6789305929756e8523c13ffdfcc6553718357506f1cb5e0bfa99b95e4afdf622ba483391d96e9ff449b297613b5be941b6e2e10bc00
7ce716000a5f0b848fc8d0da6b3c3943eb1577aed337d6c1bc090ea7af28b703123b338db4ae1bc9ca0c49029bee08ce3f2ab94e225fba22ce399bc15e8951e3c889ac4a77486466fa1e109035e5eb9c0b478d705011653cd7619bb47cd2319ee29a82a4e624d1f95e09c134d78e1d9a2a267653f2aace82066f27172d26bd
9247e2fdb867488d4bdd55bc354ca0ac96e1639b5de0626620aea95739fca1e6739e4c60f8db618b01235562f79aa3b11875d5e6a7edebeca38051670607f11e49fb82a7568bbb280618740dedd55a79fee1036482b326934c0a5e16a1ab4701926467b81485caf16f0a8cb9c6678ed81e8638cbfa410aefbedcd3d18c3d4d
c07eb131e6f35cfc86f9d0157a677d0c2d7e3b4abe3a59e07893817b939c734963c3e6abc86003b6383c6c5ac4f2462f87fb69bddac42c0e1f0845d24b1b909fbe03a93a4ea55c923acd4238a6aa20a384d300eb44a4e33c5867c3f82855b2621108419dcfc5845730d99c031e29d2ec3999f24564c9f7fdb687ee7f7469d2
7e8c06d3f5b99f3fba2b431e1b016f7c0777b1d7cb209374e54a1e9ebadb0fe0405335bdf6f0ab285d1b3d6bf53a9fcd2e6748e5f76ca45a49c2ab5dd68edc59cd42f38f28427b01a3a2a3df74a442be1bcf7bcba6af7b539b1d148e6c75b5c35c4d7483c1209a753c510709be09dcddfd3dedc18cb976fa5389cc960211f8
7e2dd57e86fd0158b2a0822d81f32ab0e6be3aba720ad374bfa454577b44cc8c9d96b2d5dfc95fbfb528d7e76a60486d33ff9afa2f16f7b4c09c69377adfb9863b6cb5f75f00fea2648de40dbd89e46a59d50a522e8cf5eaedb1946d4344b00430603ac426817e2b376acd0974b3c37f65230b8b5d9eb500ff8e52610b7c2f
b3097e380fe2752ec948b46b323fa0ab178f34bcdb6c471c8cefb5635564d5d7a8d9b869a56ee5e7f97d2e240d94b689204cd44ab2aa067a7a4b09e71bc475d3edce56f03356937ec1ffaa4eda180da13396859c5c85a0f71313ed8d4858ca9394d4df8d2d9b95fb2be76b8a3d08d662aaad760f2730efc2f6782a6234bec7
900b93ef744f05dc53021c01b456ab653cccd32528a76a974a24d93a67de276b0c7a6eadb306a420fb5c14db4a19671b6256e2f1239457c5b9808fcff5ac7ff494f457ee0a04788256a4f079affd0bd880ffcfc98fa12197c9fa128500ad5a416d7888297d5348cad355511b44f9a4ba1f2fda06b8f0e5e53715ca8230f740
b12c9c4ce34deea8dd6e10093dba924d182e27d87e24e85f2da026d332651afda0afc7ef42cfeafa0aac976fa04ea29eeaf4243cde03edfc0bbfb10259ca2005d1ffe7af6b4b9b9f271c805bedb30c9016e8129a013b662240de6a9b3c64305cd8fc2dfa746c5a6a836714f04ad67287b30a21d53d484d44d263ff9d697ede
9d0250ced442ae69c1af297cac6c5a67c24f5659e4ebb64af3297e481ce55a19016d510aa5bdf6fd8f27fb8002683d3d2e0c73a4caa3b9a71c35a1798034126c1760ef65c20ff02b5f971d4c843c327424fc9ed7e714439c17f339a1b7486330b3446f4ddb020714129780f88d0365509c481ca8474fe8552630ef36146556
e1f3ca751363169d50190b0db124e2230b46e42475bddd584435f0fca6aa65533841253a9ee250c378ac22f56e1eedbeaf6788f82ce806bfa2c3208da57be3eec807ffb8e86a1cdd83f95b8812c07ebb36f2fcf3641d9c3f3ad1d7c604ba85891fbd97063dcc52164488e9aaae40821bbddcb6512980d01be2a8197a67e264
dbfc76642eb69909da9c0d32a2a08de62a5fe165be73d5811d0f0172e1c3d95cd1bcf7f006b03bdb011d59f115a1b03e9e510a2be83e0c303e78085c6399f73000340810da2eed9b889c5e7f44fd479cd7a5cba4f1d1a8df20fc31d73d13f88ca5ced625e0b76d70461e39786ac20680790ea9e836c6082eff9b15b6540878
f7ba0dd194cc93818013214156ac9278fba4d25c276d413834e2c077c5ffd45f0367e6099fb76618c276daa565ff8b47d70725dd1d612733b23a244f315a96548281df0df7c1a6141713107fd777f3150d4012eec5f8dd4442f95c6788c3fcad4b1d75c6a46eab03c412d5194b4e90f9a6607a04577824f5495d359761878a
b1b0da9fb29884579f2cb4708ea65ca4601c7d8063975caa43e18f9c28f9daf31f92e2536fde729b4a620a786339f9cab5117d38e7d08d035c01a8a652880b776d64e61bc1abeffe61992da6593016aa7e8d9c42c7f126e574048a653d12a9300b0864ad905eb22a86bc81235836882b113b75d44a95b1f6ee0084172ad703
6b7c2b1a5b8d79d1854519692a15705979f3492e2ba0638f6056b134386af0443610871f3bdae7fd150d394c4315e8bbe54578e91172352541fc1bb6b7219d19cc4c17d611c9c7ac1f6f5bc7022debde0f953a235f4d3901a9d800a00cee7d2879d7b8517c0d8e77f5e03918afb64895e67ee07aa92ffb4d0fa06ef55ab615
681ae8983607c1c26aa24e2d32f9cc3cbef9a442010962f13447b5f451ccf6517bda24a53ae49e391df43eb21a55a21736074518cc79b9e67cc0f955274eeb5043beec6eb65bab1a452b28cd0eadc43b5d8f019acf3e458303dd62f4f78f3eaea23012866ca9da905a6441a09a7ccc86707fbdcaa77dee19d0d5db9643dead
e7e829e24d1095e07848b4316309a1e0e7e1004135cc5119b19fe6a739407fd6782c36b2b082f150c617dcc453ebfee07e1dfb8dc1105237405f89b41a81f461cf03dfb5d9d13db21757878642c4373b946f052f7c094ada92115c9fcc25a374f42bb1fe7830f1909b78d9abb2461f84280f2ccc6dac98a0c64862b6353e7c
e2354ef01fe572059d6ae25af308e20cd36508345411e41aace28e4fa8e02edea172dc99c7a200048a7de4dddef619fd90f4dbf7255b7fe188794e42d7cdb8eea28c0d886a1435ece7e4681adbc8aafd7c4250865c5550c06fbe2db519fa9ae8d4f455df4660c9506e60c6baebdc61bcff8e249a26c495420901e548b7d2fb
f978741c3fdb26636120b8bc93677814e55a871a428d81fc6ac23ee71edb85739a92c20a86c84d6fbfeabd86462fb3b249440ea7c0517e230d567eaea7fc73ae495843221ebf44d2ee5ace164c8d09749227d1e09669e4addb6750479ca45dab1fafaa0e961f11a0eae6fdfb8edead318a477c3b480d6e642ca3c3e2927253
6b304d374f66cfb416ff4baf24217d011a5e57638103db4a466baa95ff8aad9650931fd179c3f9c80a1b57b6a080ae49b110a5c1b4733381615a85efb8dac06b2f770572c3d1826ee972f43387694d3ab4ac73231d97ffe98f01bf83ff20aa623ce57ff5a8aa1b4203d6992761bcd10322f9bd8ed075c94ecffe6d10bb1934
05fb314a363280de060657b19a72b9e1869b97b999ceb2dee4aac63485fe96b5b550db2e98c0a1d0511e741a12becfe5d59e968f7833c1eba2ab4f0111d19025ec745dfde1d18803de29f4ca4810b0c68de3d57f174ef5b9f648b507e0e0e1fbe4121f0b7ca4116f037bad6091f9a91cc64c8ee02caad6e4634488e4288c83
f34dc8ddb91a2a1f01a49f4e48de607f8375ec953d5ee22e28c9f3aa8e4f6074254c770bcc2f6739c24d30455bc9dce6f87084af762acfc547b5e56d88f0b97a22c777baaebb6a9eb1c3d42420da473f8dc0ece39b20484125b0d62a27982f9616aa74dfb89ad704689e901d5c84f07c8951b2c4b869dba939e99cec5cdf45
3a97246c6255a8f349f07a669c66c0013b105a0f58ab84e5e014712c7d91425d61a3c15ab358686ffbff9797e020fd43fc6141298910010cae25e8fdd0d574a55f699ec3a4015d9baaeb12df1fbbab16361eb92479dd3dc22810827151eec3174c22a94c8841b94446b74c22fd1932535c7c7e1107d6e1a1bba0ea8155dc41
f6e2c725f98669de5569f33514b6528a61a534d22d7ceb6babb2f824771862299cf6369c2847f88aee2a76417bf51d81ca6a390663501b9215b4861a644efad6e15e3ce4dea623e8bd06c220f372cc7d836beb72bbda20288afce2ed884e9178fd9995e528a38c0293690054f0047c629b5dfe85baf65be877a1ef133e7bd1
1204ac206c8dbccb7d3e55113b24872f9034257cfa15fcc7ece44b821b8c74288c147c37bdf27a595e65f2037416bf9a78a245c93c4c7c8aa9444c20ef3021ad783fe5835889c5fe99c3e1856e58902655571432d49f43bccb0440498d8eb41fc07b9fcdfa44a2fcf5d3327109287f816285140c471308cc4499adc95977a8
71f8fbe0d43e3c1bd9ffea8d68695c1cb83673c7d4710829394d0e0fecd1016f1145ed219f60411cc2bdd628f72f60aaaec58187032dbb6543b3a138d45c5cdc955abb05c1fecfeed4011168a0c93fdb2d454c66a25a81fab137e70ec07787dcc132144c53a15cf0909bf10134ba9205a65545b441f1280239409d3bc95f1b
0251d408e32b36a1d5f146928dce90c91f815d3ff79bf3a6e53726122e8c2b2d30e7092fb07e1a736b51cf13fde2a940154fc9e67568c7dda81c1d49072b4987af38584dee02328ad9476876ac02a1637dbf13fa61596588f25f20c08dc982ce453cf27b40bce8ecbb9a064da740f5c75497ac7e915d0d90904fc4dd614af5
5e66151efeb466b98423ff03fe3a8472c9a6a09965a81c831ca8ed875489a729c2d54b0d496d83cd009f9cc027eb116a865020e2159909a3210c0c6f5c04a5418e53f49ad35fa915e3bf11361e1808b22ab4ad96cb70771e9894f2b2853be3af22df08168e67fddd7abddce1ee95cb7e9e2bd075ecafcc4acb6ca79aacb2de
df98ce002babddb84b832197f0e4592c0c24bc97477416885713d49c5e54bd834db02d4977d8287f1e268d765e61c41b64f8f32bd9b961c72963a226d0bcd1f412f35b140bc547de69d7cb48019b9d939d9bee291693a4b1d787b12b4d8607ecb54c1109ba0d3b2579d5a4eb71c43859e996e87f8f62f03a4fdca481e1597d
18d91245aa1102629c3a87268f2c526c5281f8d8a5f1fb4896a55232319791654bea0c5dadfa2cf56b1a9cd344d3225759f778e86c03a19fa1bb9272d99d7e4ce5254d321379f6febb97619eda6493e50a932db686e48a2c08415f1039baa1c62a46b960c078e7ee5e1a928578e491d622abd370d75aeb126e60667b8c2a4e
8f6f079742d805aaac642341612d5a4da0056770b0d241f85bcbe26946363b1d0654fae73e66dd77d19e4c616b3a5b2fff244e6de6ec051bea09444c83b691e3933bf18e606193b242e5f26a53fde3621e5ff648ed9b2e133315fa72bfe9a2145de0911d277ce0ba118f32af9b3e3981da06d88ebfd936d675d35c47f09d69
1f68bdc2b864f41cf16680a60613839d9110fa6d3cad642242577c17f64ec3ccde2f532fe397e6299d0ffc4e4c82c82ed6ac813fc8afdec88302a0fa6c6b9dbd0a5bb5fc129686e8c9d60d3c8c024bfa8a82d0b70f2cb541cf08f3205d991129f26354596f09d84b81af4d11a4311fca55782cc7ab91c43570a9f93f910878
9ed61a3ad1916d48c84241c8b939fa5749f57c13f67e46c2b1f6990deb284f22988ed3ff87f3a4893319b8a1e124b704171602db712c6531b3c7d6e573a9d8825fc78a42acfd014f87302515bcc12b98fea057c668620e4089b85c9efda576f029cce97ba5709191e2a4850235ca0a7f76e6565c375740771bc3556cf654c7
2681550517c0daaa38193efd335baadb8d74945507b1c205af82e3828c0e49636abaddf24554634b268717a20b4a0ee9153fd69243e470cb86f82e327a6b4c10576fba94a720650bec7491e6d8ab927d78eb9724c3bb0e57c2f7635064cefd39be742f14572d15eb3c071db19b21c395666303e86b74f2ba59d314e4b1a78a
f52250ae13fd9947c38322ef9eb2545a518bdd6246f3923a03133fadcb08bd3ab2f54f8f65cee6bb23b072f8637e63d075d55fd70c2013bc6c7baae4da712e71fa07ea68b32b58e832e9bc8e3f8cc1d562552fb916f35e8a47d0d8f33acfd33a93e0949a4d8087413f837a672c84b9daa42154fbad948b310559bac30aa416
348091e77490c006ffd37deab8144f53738d4005b73b532a0f9f181b6cbf8844b01f0c86bd2f4281187bb4186c2a4425d9255aaccc99cb9586a9564e11b4be5cdfe521e581b23c02319ea62ff36da19bc72ef3245fb76da03b3f570d8b86187659c05658077b53a7aa4c4b36cbe4ceccb7a45c031e8104cb489b4e2f8e434e
e0a7e5088a33b9b95c58fc59e94ffabdf1428db844cfadc0de0c70f87df940694053347db6f55e330a28dbe62ad81c4f134b0be88454ef7fde8b83a50fe0697a6ae22a2008d13126cfb25bcd52bf0f4d66ce2090fcb74227d7747a798b52aabcc30672436430cd296a861db99271792d196740bf3f40ffa32095a68f20d3e2
d6ae11e58d4492914212b71a9fd24a2c43aeaecb2e38811029681691b7d30555d7c2acef4889768d0ae02d2c640567553ad3c8370dc471091278cdb8f4fdf83441a69c885ae7c2df863a23a3c8a8ab3f324a3f6b0413790114ee923ac731335c71075bbec27c9cecb5ed78d50e4445ca13aa222fa5f3f57b1f37ea9558a93b
03c6b217bfc62c6cf642f3473352377865cd47fe599f79062bdbc5a1ce07081b0742ff5a918a3b976e303ea68e60098aba208b6932a7415d833316b42fc552643262e8dacda5cb399796ac53d321b7c1ff5b7d536025924d7912b776e33de08f747ff7d938aad9f7b9c8e222f2dfc36a9935fd9776503d3255704be2f87681
5a1800afb6e0e088a881fdcb8fa06519b31f1882c75bc12edfe8ee10a682ccccabf1b7590f64b8b2364fa2f770ef0a9a3cb22202989bc412c0f0b16ee45b059ce22568d04d191c658aa94417db08e26016ded5da8b13886981ebd6d97b8dd73b878447d1993dae50ab57eec31f5a4aa0ef531a86493372eb77951c9825409f
b74ca8b2d93f37549cec4fef92df3f6094b3480ffb4b576c8b0155530645212e265465916017323259d276a4b81ba014439bc3bbc55a2498cfdf411594503bec04237d96333ad872c29dadbc62202c17f6346af9556733a64564deaf61b24d84e657b138c37c3604c5c1da709053f7a75bddac0bc3229a00040e6d1f9ee207
465717e9f33a1b11c095efd75486665ca6e7e1e6b82c06a26586a38ad0bbd4e0f8eea6128281b39665d47325f10d28820fcc900650ee330616538cee7454f1c807574cc9cf6a55ddfc428f9e7c107af7f44f02ed3be9a1047584c927e4a9970c55094afa481b82c8c40e91fe96791699f9128e0ef9da59b1d7dd3c20cc2803
5d5571e3e5dbc0ed14e00f31dcc0d6abc1b19c48926b82a7d61cdc95d29fbbd9b81dce9c518954d1a2c6c518452b6de06e9c65ce5c90baf0493f31022493cd05041e05a7a0f8eb0bafdcb41169cbfa504255cdf2bd13cb167482fed8750189169b951e54a18ef428e9ccdfe2ed0dc7a39dc85e480a9c7f47c3de2744c2a9c0
3dc40a63c62a8aac041036e295cdb1dbdd70a47cf0ce18257a258aba254fe866590bc7ef46f7154df46a8e4117068656e7126d7053506daa3dcd7b66e53bfa99cdfb82fbe5ca1e5ec177fdaf04f25ae27142e2b040afa421474c181c7943643b0976e3805af1a3f47600a2d8912f1ff654c41f826522c07d0e35099b283a65
9fe3241cad8cdcaf551a1f31fd7eb2abb2eaa65f2a15aed783718f86f56966b0b2d21ceb722b8ac38957f38932acf9a19e4ee9a609259eb0f6b9de75c1b29d87790563e79f425091966b936a4428df2aa1c281ecb8401e3f8f3c67f6dc631634832ef74a8c94ad979439b30bc8ec1c99b1e54c99f26d09974b5d92e96be88e
ad84918267a050f2c6ff91508f6e045fc9bf267f6464c901c6b2ee48fbe4f7696d26da1fceac4a2e9d6cbb9d7ed7660b4011beb631b80f6b97297a20ee5e52719a3db2732129fd8eacec5b84d94363f4de595556494b89d26e70bc33f5da1031505674602aa5391a649c4220e1b14f2d8312e445a15276a52f1d7f45cdbcb3
c95786779a266651cfba24926fcb2b44b5116273e67aa1c6ed0b4ce53a946e74d4c291ebf7e9d1c1ab84b09126b081978c2b0fb3feda78703cdca556f178febdf0153c6615cabf44ec1400ff8c02370c9ed1086e7b4cebafc2acce977568b8e3ab6c334e55b850e5e35262e9ac4eb201bcc21bafa2e342ae824b79c9728527
315e32a7ebf413af7aaf2d87c73d97f100b06a940a98816ec4c26fd451673caf4abd2dbace36898a853ba4c3acfcc14042676e65d69979aa1543d0965578c64ecfd194ce21fc8314fef29e35d5597a539d4bd67b077e880ebc4d41b072b8462dc63584bb256094eb353e355b346d6313fb265b8f713015642d61c843b1358b
fcfebe5a86307bae9b574c71371509fd56ace646d61e0a328a707e3cee1c3e3e9c40c42ac453ef5b692a1c2f24626d0cf130c3a819c54d798dc577ff7956bf27f2b6110af08f0301f44008739ecad974aaa7d68e6883dc7ca3ca0b95ba226d819904cbf79b11ff35831c7258bc605c97582aeccbd2a5e64d6ede5f4d5445d6
e83641b35ddc7cc6778e3ac7eef59b688a3d247306caec81765246ed6106b3ca3feb27e066de66b65e792548a57d9aa20e60f6a6f0de006845f8d75252ed9122728971f33120b49265cbdd1d8b0f42f3e673d99915684038c49e5ce0eda876c2f8f1ded27b035263256f986ad7aa8020f24e25731884e026c4e4c93b385a4f
ec7fb1fde9e7dcc5ad30bd18c739bf39f72ec5b2c36a98575bec2105560c733d7e074e0289cfe0b374bd89bc94e3110ec7fa6d117c012319870bbb612ec2c75a838a07a7cf229140d5ad195aec2cd0c980955953bb8009348a5b4c700b123b00156f57257c1d06a7d5d175167aef7095e63dd7da9dfa591dca1c59db066ad3
dd36d2e1162acef1c20cea01052c010e89276c8ddfac9ad719214eb3aea6089edd5b66193a5efbb6eb71ab1d2ff19f1931bcf5f2aa54b7f40da7114b49fff966de7f5b972aa76d02e31aa6d6b36b61157d0150e89d4d4c116ba19bf10bb33e2ef1fbd14009cae33d03248507083dccdf90d4e3dafba0b5b480f74b8fe3a71e
4020707a940b3053bdc7a8db04706dd04029f9180564a829480dfb462619f48bf91b55567896a8dce27e4d324c8e2b4e669cf659c16c0f6b82dc72823d0a4b7e992a8f80ad0386473fc407dfda4e7f18d614369631e8d241aaa48dca013c4368ae87faa94a6fbc4a7e425a53bda770bbce6b524c07a517e9367f611857f6d2
5dc35589ae182d098797f9312ea7874f03c5d19746425aebb87d803182d98a8b43528131aa077596d4e37e091567165cec8192466d21d21c97dca1daa89285afa44fbfec5c8c369e3f6eb4e7538a831964e68e7dd069d4816337a07a5983c954e48a09e8638b060040614e1b9d7f745c74a1b50973e831916789c540af9fc2
55cf152aa8ab85ce2d47502abdc31f3d2efe0ef16a7593a8bf5facaf83cc8dd8f7bb53e73a869e114a352393d3ff15846f1203442ddb1189903b3a0d772de82728cb3dd36cb06a5a7feec342105c3fcae9acb6c39ad706772835370df24e865e52f504701ef0a739952d2704e3e1f3c7e74091c3b3fd4a7330ea94744d4f1e
1aecdf1e733ec1e4efa24ee73121f6b4ee0df14ac0f859e56fca07db9b41e79e9d144c7df44970f0137795e8d5c80fa2e3978bdbdaafe4b4c71973d6e20a60e8211529bb5b96286d8065b65d4ca9124fad2a4b935863b3f886edbd9bf7a57cebd03a3358cd90cf5cb91babfd8757565e9680cb800869674e4c356ce76fa50c
aaa6e0dd75a61aed50acc2373609972d065263dfc6b9326c41b967b61e78b8d3442e8d30c50155aa7ca9cd1cb9247f306206ca691b0d5b1b8fdae901fd66a04eb6ceea6b8495f5061e0efbc0017e95623e196b88ebb9b74cb283f006cdd5f6e7687c6cacf1223f09658b2a1b0e1430beee0cd6936a93dc037dbbefdfb2cc1a
2c84036ef6b567d8926e6b524586143a6689266ac7c00cc11830a8d1a2bc3ca74356863bdb535398037b77b82472cdc5e0c4bc80bcedee7fe043aaf1e5ea75615c46dd2a5ca22d3e032f7c0b33523a2d5613f3eba692d641b0a0a33b5cab39cf4ccd8fe72bb4ab6ca71cabb4e13625231f81857ce493fabadb25280f209f75
f1adb15ce277f7cf3e0ccb79293c3871cf1fb2b516a2f87a84bf8aecdf84cae2582076a2af591c19cd604bb2b56e65371bd062db57035de806bc6e864e27d7a27c72e175b9122cc656e8b71bacc85d8e20bba92322a50063ef7f91fb05597a8221ed0d542e42d58d6f8e50de5377ff027da0127bc9661a2ae255fe1a844063
29d44a50c68a0903f4669c4324af974a97de6b60365f992de322fb446da39ea54e3e33660d0ce7f0b31504109f954f11eeb823bb4eb4d893b8c1190a1c9fb9dd71c3f0302dfe9ba1305e52f67afa320459ed0b6f870d7585d53790261dc14e26c26791bd9c99740158cc333c36f4230d12737e8c8a688ef66a51f80962dc0b
5492e2443ac24ba132954aacaedeebd9cc62bff8f8e5e08c14187629f13b6a94568e5d4f2b55463c70f863b407cebafae6ac9566ec05d48ffaddb7a567d5a2816634d1c5f79280de20d78387e23db4303144454e3a437015747b048a170c497e8433dc28361e610e5a2b503cb51f5dbc63a292f16fc267fdedd7925c58d314
dd6705cfa8f1612defe39682c12d47ef0c3d9b5ec686ffa4fbd04742974cb6a9483b5e03cad1f0d140aad97d74e456c75e6642151d167c1a822dcfe56c247e0af1af264aecbc735e218f42d9f817cc1a5394bea937965f7afb1313ad55e1f317c53b535882120a2230d00dade248ae0f7981031bea25dbb72dbe2e8547ee40
02a0c251387c68ecc120adad0f0748e19edc9dbf3a4566ae5e2f38c74f6b731a4a97600534c29aa689e4551421aa5ca24d32abdf485a12df2701fbd1745230271757cea59b63de1ab59113bb574ad553d98955e41c6df5c7e91636eace1e5a0603e10253fcdaaf8ccb8a2e28eeb2ca9c7231f5d1e420110bbb7ac464e131c1
78312efe0a67b81bd80c4d428286eb9a149cd7b9909ff160b057d9ea89528a00206f5228a3dd8581ace94ca99fedbd7b21154e0e7509dcc0e107c0fe2f45b0fefd1ddf56ae11d7f17713c989095a5c046745f4d801f19fe0e248635f8c57b5028096e7f12f5b2f28c38f8d8403828b7cfc9c9da1c8ddc94b99688a050afd26
58870b4fa3dd87eb75fc0f38cb2fc2b949042f1008d1cd2887d9977663064865c6df078abcf76b0faa79aa3657acc916cee0668ba5888f6d497c318a1aa53849eeb939c3696e1b18224b789dbd87495f007bc11b86db8e9bdc4249e1f7c9c40a0de26a580d28aedbda4313fa07b53cdae3d5abe5e580c79c1ed42736dfb824
660a10eb0e9412339624b21bba4ef66196dfcd89bd539fc6e9a660a05b3c73a315fc48f8d68d7de440d8c7a1c8bccc4e09657445b3f5dc43b52763b21354fef400f9bbc0d1bba85802e4ed2baa3d11aead44ddc825c755ac4ccb6a1f1a6f65365f609f5cb3fe0ab0ec9b0428f8aeafed197d05874a80b87e3b0afcdd7bba62
2c4c416c110f8627ea81643efe6181686ae0b70f80cdc5a1cdad97ece8f77b87d52ad6cbee78642fa2c9a6504f2a17cd6861b050a90fde964831d4c43af525bb043d7e78af1deb2fdd442c43cebe9e91c04420b2029dc4541662999e750574d4fd387c88306fb654def8a3eb995729d20e1b730e61f697d5ffa998714251c8
18f5c0aebc7c45475163a859d9541c2282d9ffa97a310cae7fe9b35e635a8a7df366040b480fd578e21f7b2b5d1088b8487c34c028ef3baaba0cdd7c1e7e694b17c5f25b29a2de9d8f29220c9ac477fe369838b3537bb49b1fe9ad1549580bf7799bfb709eada7c3c8614207c28c9c654420c1b16d7f0bd461f61ccfd93402
4c3033fbb6b3dc15f9956f6bac3ab1dc43c7785d42a084d3ea583258ef531202056ee73cc09f137994322bb00085e97fc204224c96b0f5843a171326901e49a94a4e46d00364f177adcc2ea9e5b4760b6ceaa0849a7cb2c232b91f4ef3898ae87a796f62f1a96e31188d12ba2c21089e227594fa35b40bcbb1570321e1657d
a8abef8e1ac37cbacf67d719f1605af599dbf37b7d083f45a80063fb9f8ba01ce9a63ef25413ba5fb0454131b586aae594edbefef70242552762989968614b1b50cf8339166dc97ca1fd7e4382c53fab164c0e469ec39704d6dc6f49d18463e944438eda86183311e340062ef76bbc0fde1905f5fc0968e17292ff4d1efcad
1f1d12d5986ed3812214ca855370c635c39edbc0761aeab87f4651a8a28b0965fd5da6d2d45a2e5a517377cc80d81527912f9f4c163d05c1239a3d4389a78b6047f34e2011fa62d61433bc3c5c6b7dc5aaa5c7b3156d396975b372f51ce56ad05a3c55f24a22712eb86aeaf45c1bb268398b3e790869da81cb0017909eb08b
7274550445adb6439ce0898acf8928e681ac0f7a7f94a52ced2ab6f43d526f399a5b3b911d7cd38a66b65bdebaaa16d82de09a532665d8d17b1a1a33c33017e68b4f0dc14d5b7740e634e62212205071ded125590c91a34e81843970b0c444e9adb434e09a20d005b6605087d2a87277dc0e94d319f088748f51525141a681
b129e5aaef51c21af8dbc19cdd19aced661ed7a6c7b9821d9eb4742036d2e69223bde8bf108a1aaebf3eb87d689effeb55dfc86c1bd3a68cf998aaabfc85b54cf4cb78cb673f9bef76034ce010a2b4e845b056ed1aa51354e65ea1321f60ba829b4e9426c2101bf0015f3b85b31d0255d4d6fc2d054b6b4e6bbebb89a25bc9
c510318116ea5e1b8710b42761a18d283eb1a5ab154b034ff30d2b829f552653fa000aead47603a4740e90a54b13734e94dbb6a030823d29c1e68a75c3f361cf9efab4691d65cb4ca6382826e1db005ea774c3ac9b85256d626a7bd1fe8612726b07dc7ceab780192aff9a436d7324952dfc994bd670b2f271d142fc84c8d6
52efa5353518a52817c019ac2cbd31111bb7e560dfea2e81a2e55cc1110278204761073fb0a40bfc89ec3cd9d34b5d59affbc6930b09b8226ffce9a8a93fe28c5ce2bc536953a91b2bf6195460c8677f2bf314a16a7b4311f969ad289ed2c65177193db462719db6680e1cc03c2c3154e60dbdf7db0e270b0154bcace82bbb
2616f8a418d898da0ae875514b7c4327c66c0b6826515f29b972eb52e220429d27e16b9b5ceabe45aff2ef9f645f196886cb989687e951f608e738f1ea6cf2a79e507be7f080485c3668af2c8c3cb8a9d4e0ca896c5ae8a19702d64c71bc4c89a414576b07ae2e38d6a655de7d336b2b1927a156e0850e6594bde58480a07c
0f3c026467cf9b96b873c8bb203002e2b69ba3445fd368780c425360ba831766a37ea41c03f69454823b46e55170aa82c194be95cd4f6f32fd93f3701c5cd730038e8ea9b6a1e563bccb223e9d86751123671c0b92f7fac56d296bf09f5eeef39c32dedd67034fb718034ad4ee1252a80529e5e119b48d5a1dca82e04fa906
d3fe0eec976ba1ecec8992d0c2f9594d790da7b52d71687c3a15c4a325594207bf603e2dc80cf93f71958724ccbc53b3b514b1108d6fe912ad5531dd8a294ba705b1ad011d35cd6a0e80b7d8b345e0795498295b18a622708751e8f961104e7871c5e78f0011d936e6e86dcb8ba738be88c899b81df3feca87c2bec0282e26
242f22fc596b83be010e8799eab36e37674a2d25f507c734801be5fd0166c3605206e5038b95ec649de2cd85e970935cf3822fae2b92de3d88343c9a03e0a775f2760a422e468b7b6e0714a2eea42a675d18eaf42fedd9544742a9f8cc4a9eaf3d77629ef815904799cc0917badc507cb247b808e543524d903c2437050f2f
8d5dae66f994a88e334398d5fd17dd9f9c50f6002b0e52ad911532b9022fb3a83de7359b9b57457fbe91471e2e31685e7bd8ab907cbf527200efd0d55b7745b9feabadbbd037c8e05f5d38196d3abfce6dc605c9f8e9543c9b364af5f0bb4146cfa84af9ea4906515a37d9aecff4305d7fa0d4c82440a01a5eb66abe43cbbd
6ea131c43a16cd0433c39abacee00a58638872d90a349dadc0debc1f64ce060f05956b989b084ea5c42fc7933ccfdce2d538c45df01ddc4d025f450994168f7b00bbcf5fbaa45c396c84e67db0463c0422d830ccddd69fac0434eb4f6f6db9a4fcbe063ca705f3d2ac8b38ab65fb32789313db034852f172f9ee3bbfe0a4ec
ff0275b06bf586fea2fc5bbcea05f0777aa8306e5cb7eaf97547430a79c8a74185abc137c7e30cec2f61ffca8c38bd34a20dee0388ef6dfd2d68612c37fe50a3fadbfd1efb17b04ecd5173b37a85ccd63e6e6bc83acdde36b27e8827a54badf3822d9eed4afa49839ee1a49828f9e7d945b4545a85178febab85903940fc65
8bf53669e12735d351a2858c5be4270ef9cfb187161278216e2eb359a0f01ce0326b6152c56f44600e3152c07f00ce0b766ca8192c6e2cef6a9bfba1a6b042de3ee0f793da682d07628baf6f60961336bb4f09e7ae7fb5a37064bfa5e2d9390f78d7976575b82e27510219a0f3a7e0ef06536255b9e9a545f8c6ba2f746426
d6f7f0d43b84abb4a0ecf66edbdef6724bb060bcbcc13124a1dd801768fcacdd51f7d13ac3cf5ebc3965127f4772ae3c296fc955da79143d65290d99d2b8204d5227ade3cde4a2e523c88b93eb089707226777565c7bf63b5cfe1fa261ba54d692f3a9bb4a10e08e6335bc73fe3a4abef58baba568da69911064bc5790251a
618638c4906151100d57e5dd8f05c804c29370822a95903e6feca634e70be1adbc0e0f4bb5cb68b995c0c17433bd9d039b89e202f278a829143fb7fccdb7e9ef900aaf2daec6b25e9edcb1ffefd889ebf80fc69a5e817b45bdc4f5afed089ad32256c50b0de86b1797ebc6108cf3fce226c7866e92dda1b8a1a9b225988f5c
e866118085ea4356c3a77fb3e3a9a847039aec345344af70b8fca478a3b79fe3c1ed74210789937232ebceb92e5ae683d7713dd39252ac439b969a2509fa6dd60c57c863bf06488b290a23121fd0900e6821f33bc4c41f23323c711ccce1edfa5116f569dc5fec01cd92c04818ce8a17b912bc4f62d9f72f4c0567c965d7d1
266706031d6d8b3f4b65a8ed125994275219223d5e2289c5dad045df1d912bdf7bcbd2666148f981273eed4fc85d190afec3843451d12900feeed5f42d357cbddc01579eac9fdf9adb6e212547733d3a22d2f65be27038c2c3fb5b2f51a3ea26751d0e12f64b4e6d6a8551d23080a8ff23d23e5cb0857e653a859246812efa
4dbf873f78813f4b5ebec1529768371f919c5b67c6458092590ec328be8bccdc238f103c7e166daa869758b517d9cd869820e0633beba0386b2e33965335740787530458a698a1664bedca0b586afb5482b2f580e7adfd584314144e3adc41b2b08bdff70789c06a87fd49ab7dfd4949c088464f296a8f1f69d60abf17850b
5a254dff8d52c9c4b8860b651e92a5973113f56f1c030ebd02417dc181029099007fba17e649ebcd1e1d044bdfcc279430f56e80eb54f921aea09dc18689beb9f34bf4005490373b98ed62ed66f887ea252160a6b15f91a0652288f55b704203d285ae011c79270bd5d21114334fb466ef469fde9df95a3e11914c69ba2abe
a27c2c5e43baae066c5b329dcd72cab79a214af8fdef80a2201082df01a595b21807a6a3342e8ae626c0e4598fec95553be69f8882d7378b3280665efee8e5ef126cccc2eacdb561fc84c491c227bdd2323198f73c8de2ca9068b0f8e4245da4645abb5d3fc748f70542314f06fe52befe20239e5e0eeabdeaeb0fd4299886
1463aab51c77bc0fd59900fac5ce1773e0b71ffd32410a02063a152104b211530e3692a794f794073e75d7b05dc2f78c0ad588aa76064d888b500e950d2f4553f9bf23b0c22ac95771c291140fbb45541f381999a18b0dbc0656f58493098c61007db73a88a35dced73ddc40b636becd3259ee495e8e90f76a40023e5d8c48
dc98a2ae34edfac225855620c93365bb8b10eb2f7943f1016e3099e6ea05474750ef6e6e32b2d49fb82662238f0a33a1f9260215fee59f8a7762f8b395d601e66c0627b4dde3c681e7e1323e1fc72f2a26a068f6a00c07a9862bcb41deb978c09ca94f01ab0449a159620c7987bf9501023955b27089b7f95af916c319ed37
819f4796e917101031aae8a271189cec405c5ec0195da3b965047a69f1d2df83cacd4f320a94b5abd2bb6f2c06f7292b0c43421567587f793e043fdc07231e2ed763642791842a73730e76da849297ac6f5c60ce4be1a4d64a42282cf1e049c80df994d78d488e03ba101e8520715e68a5159cf00427a7ec0d46971d881f68
256e2e9a4addf369a03252b0fdda0c05650279f72349ebbecc1431697f87df7d87d3726a4916609fb3674cfbf8bc59e2af9d855bd5f8d991e53bcbcde373df266e5998fff0064f4abacd91894f0b76e337e416ee7632e88aa7adcc56430a022f85bbd2e802339441aeadd92efd87f160a8f98368fe8b5061f5a4aaaefdfdb3
31bfd109a6d9641be4ed21eaa90561f84f9114d8187af6e0d231254fd4184efcbe11ac4ac0c4f2ef4ebee729356f6819cf9180fe32a4827c201970fa382c93363e11594980747e1323589e0f9fce87048c1c1b659c277f001bcc05525680c6778ebdc2b88658ac7f14a1866b8be9dcb50f2f6c3360b62fb95a1417db555e07
89bb6b213291e6fc13dbc15e1421e8225799cd65afbffb899e8819fba810b6129fcb43b3552cf6f42c1a836a3397d6fbca416896e97ccf3e00f8932b8a19e3245d9f8a19dff4dcd8fe9f8e068a87cae658b7cf4c613ad3e73d818ec217f3e604f0d5499e0eee62153829a6d22ef926606e87dc1a5f8c5449e3f7991bdf6b9c
a20fcde4ba519679575586ed701e777b3948b640b0c18aa62c326f0c73517dfc91ba5cc0dc1aa51256d2c9d330e822090b94012a13360ca15567ec72634f29477bf0d9f71162c9a9b138d62e17118eb12c5f7ff3ef464e6dcb0f9709dd6ef1fce7cebe59d7eeb9ecaba1dc08613a6206cb151513b55912d02dbbaeb3310bc8
ff725234dbe12ecbfe5e7680d6fbc60864ee0c07f89224326afe09b33ae142b7072715a120ddf29fdecddaa02d9616bc7962d6a0740ce050076b3461be5f12cb4a9fd2aa18a5ac8b67e9d6d13ff94ce18fce66225621c8f867bb66c741958b9e5b4c1cf7d1efbbd585284ea6e175d50c4e4cda2efe8f88aa6f004daa8e976f
37f1320c55a8679964077e3e800af1ed4333c6cb5b30301cb2812f228b1d196d3d87cf8035bdcf34d0a53ee1d3af0376143a02a762718fc97a777d6bada4877bfc0561d31af67e29ee7b81c15d676925fdca3f2d0c625b07bd4085dbde0b30610b05227d097364fdb30443cc1bc0227a76233871db622155052c294307a792
0fbec7a44784cb5dc6a4ab34a252fa948cb3e242d4bba9a821d0a04a9ef8ef1f5a40a1c623a26db245d9a4506a092b1261e647f553305e24db2358847f752e439ed4c15411c44620e78d01051db8c8d5408ebc2204f75e69ebb5d02ed0e82b0de812b31b882dad2506b6fed15be0c3f97e3b791f4e21eb9f21f873eb8045bc
e7352ec5207bc1bddf135d3f1de8d2fe86746566dbf2478faec9c41ab6d47da56798af8a67a213b9495cbbf3d0e309ec288c65ed73c16e6e8506e8067dd991bd4364a0eccaa1612f172a8d361408b8fe9313e2a4271e8f2ac9e9fccf76b71a8f445a3c362995c1b74b62abaa9408c4e7a1985754eed14d1948e7faf378fd05
750d6a616701de0b8bc6606398dd43e174ef7733723aee91bb18f4cda2e8eaecb92f5dfc4b51eab336fe9fc88609a7db57fe87ad076386a7c9e7ec95264192f004d3968779df827d365898a4090fa77584de6b0bb385397b2f3d0aadcb1b055ababba9c57b44f46d1bee53fe9b4aa7942b736a10f0cd996050f721a2c31190
9fc6e5714dbc0ef077ab022c586574087bf9e04ec2de91717e9fec8156ea0cf5a0d42c135d4f3765766018166110e0b977637644b7b5b3ead9e4daac9075d89e5e04d6b7412f287c4f232d50666973f4800dec6c0a3e7929ada06c760a0c032ba7e12016011074220c0b5a8521712e105ab165dfa64e20508aad153a5f3e66
748c2f592bd0ac23405952a6bb5f324d5d3508ee50168d3e42fd5bf68ab658818b94283e16eb124cd29f6a69a6a5f9058b93285a858d54a9e2937ceacc276a1f95ad867d159037f86acff2fb4179f2079a1d53f99cc875379478bb5fba5892eb50d5c516288f8c49735897331235eec56b25211b32b03a58ae893081ac8742
9f0139b15a23793b4d764e985f38d4f9a381e15c845742b1557e5e671697125ebc6ba21f7a141950c1ea22091a3bf12f2142c2375c57768136903a4152eb856c2aee37a20c3c51c4ba923ef61ad50f9a1352d14141faf2e2ce08e472801d0fe34576228bbf84f65bede6b126ee490f30c4641db47fb652fb05c16b8738c1eb
62ebdd7c9a31f7e92a568ab77cd097ac8dc57e97aa6327cfcc0c6792cbc6ada1087f2f0e561de05c9703048ea484338144401aff886af73af6f7133f203cee5c1fa43ea9cd751e5427784ccfa901329ff8e451f0b22669235f9b9ea9fd13ad0b1c57b554068dedda8745b6cc1bafdcdb2deea3827fbe52aa8a360e7859c5e1
899f8439431fe772ba668b3a3b1a99b57310bf0870f86d3b5d8d617ccd085fdfbb530a88d65a978e96f1b54137d4bbfbea1173253dd1d5fffa52b7fbce0882f521f17f4d4a9693c6f033588bb619a3dadfe922b97fe2047e9931447d372bd1bc802b53bdd2ab1b155da7ce01d01a47b490432cefbbe67ffed4078470c7e4dd
7ac8e76d57c5470f010c137f816da5425174cde833909dff07facb63580a034ace2d7ffc08d32c0ded750206dd0444f1f1e769474de065112b4877bfd30867ad9f3fb0d1f3e9cf2fcb25ce6990215d241e0b6d8e64a71f0b5178234afcb03373e09e7e35e71bdaf68551b2e3f900598b57ab6c61b0b1bffd256510864cb71a
4d7a2b742a78d380759bf7069b5f1ff4e34bff04b7ed7c0e023e4776d27c8d7fda75c358261031c68924835b83438e43dc7f5d357b4a719e7ee153438313c45a900e608a37d123de26b4bdaac57dc756d2de11281e723e09607255b080765755811e2040c158f7c664585666f2c87866e56ef03d74aaa183398329d3937162
651686f32cb9047a47edf42d294693ee311872c8ae8722c597673a52d3652ddab08ddf261f0c61b02e7542230a50e589518584173116ee4a3c76bc1a40df112d4eb97caaf7a650221127101328e4155780ee76be090a9fdfdaf29c0cd9ec37555f8cb4ffc61852249ba7ea3b4d251c61c7e8eae9f98866b669516c81d83a7a
391f9d8f34535db519e6e6a61ff5470203e604bd0a8e0c5778ba95875929f4f49b8d2ec26e0c8d030ec93b77e8a25b832f3373ce61a4b43491ee40edf057d4596efb3ad61cc29c1b6980b0e5039146d61934ca28b4dc8313f03dce37736b556c7107a55bd9729695e56939880ddf5004d93cbcdc9f68c95de59e38795adb2a
502fe8247259f82334ca32a2fb3dde620e303c3ead6650478dbb7f4afaab4805db2154600ec0b02fe926c9f42007ac24ced38df61f3889ae41825fb89c30e0eb5ef8b2dda787e6c75991013c5cdbcc10355e8bffeb473116c623ccdf2346afa7c739d0ad42f69ca0b7e68319c130ed981fd6c370e0d6369e6ee97e32752b86
10ae94de09bd96502c4e34e86610ccab2dc2cb527799df784d5643a6ff1aa4d3d9cd0b7798964fa330bbc3351243be6a3b1519211004acbb08f4b41ea396e485ac1de0613ab29174b61ae361c517bed30bd293e42d36853803e3c16766197024bf16d0d8dbd260ee5ba76cbae75890b66d5bb7ff72d1630f059f863c4a0f0c
207683e7eda064e6c8596759595735025ad9b3af08180bb722fa713e428fba0f98d82499cc7c747183f6ae4fb6bcf978bb7574c4a569618571e50dce8ffb78d4603295fbabbcbd02237ef2a213492a6b41ed0a7f9aad38f3825926688f7fe4426c590f5479bd22a451c342a564ab02ef8169f967d1ca87a238ddd6cfd5696c
8f97ae4870ca2d814005fa376e1376bdca52b732391c5b71f51ede618ad9370fdb2a89d95276df695b6db060f2d683aa9b80a40770a1c76cbff7bfc7628c155e0fec88ab4c5ce051c8681190c8e60970230a52c428b1b1043ea5df17d5c10b25a5c6ddd941a023b00a9f61e89a4760cfcb0851eeea9c393d8b7dddfb9efb64
f1118b3fb9d45b610b5ec92449c72a451540f25b407d5162d85bb57dd1864d69bf7dda142767d6397437e950ed071793b63fa5ec834ab66ea827f2801fb7f33a2445587fb17a431b9a89a512db355e4b2f0290f8528112fe52e3f30e8748c2f2125aa2e4d8781f74d173066e1cceb94931d004e11c916f5d60800000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/ArialMT havefont not {
/ArialMT
15 dict dup begin
/FontName /ArialMT def
/FontType 3 def
/FontMatrix [ 0.000977 0 0 0.000977 0 0 ] def
/FontAscent 1024 def
/FontDescent -333 def
/FontScript 0 def
/FontBBox [ 0 -512 1024 1024 ] def
/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
/l /lineto load def
/m /moveto load def
/c /curveto load def
/BuildChar {
	Adobe_Illustrator_AI5_vars exch /_bitlobyte exch put
	Adobe_Illustrator_AI5_vars exch /_bitfont exch put
	Adobe_Illustrator_AI5_vars /_bithibyte 0 put

	_bitlobyte 16 4 string cvrs dup length (K) dup length
	dup 4 -1 roll add string Adobe_Illustrator_AI5_vars exch /_bitkey exch put
	exch _bitkey copy pop _bitkey exch 3 -1 roll putinterval
	_bitfont /CharMetrics get _bitkey cvn get dup type /arraytype
	eq { aload pop setcachedevice }
	{ 0 setcharwidth } ifelse
	_bitfont /CharStrings get _bitkey cvn get exec
} bind def
56 dict dup begin
/KA {
} bind def
/KD {
} bind def
/K20 {
} bind def
/K26 {
{
newpath
598 -17 m
659 55 l
616 85 577 123 544 168 c
571 208 593 261 609 324 c
515 344 l
507 306 495 272 481 242 c
349 409 l
442 459 488 518 488 588 c
488 631 472 668 440 699 c
408 730 367 745 317 745 c
265 745 221 729 187 696 c
152 664 135 626 135 582 c
135 560 141 537 152 513 c
163 490 185 459 219 421 c
161 393 117 361 88 325 c
59 288 44 248 44 202 c
44 151 62 105 97 64 c
141 13 201 -12 276 -12 c
316 -12 354 -4 389 13 c
424 29 456 53 486 86 c
525 41 562 6 598 -17 c
598 -17 l
closepath
263 514 m
251 528 242 542 237 554 c
231 567 228 579 228 590 c
228 613 236 632 252 647 c
268 663 288 671 313 671 c
336 671 356 663 371 647 c
387 631 395 611 395 586 c
395 565 389 546 378 528 c
366 511 341 491 303 468 c
263 514 l
closepath
361 93 m
332 76 304 68 277 68 c
234 68 200 84 176 116 c
153 148 141 179 141 208 c
141 232 150 257 167 282 c
184 307 217 333 265 362 c
430 157 l
412 131 389 110 361 93 c
closepath
} exec
fill
} bind def
/K28 {
{
newpath
305 -216 m
205 -56 155 104 155 265 c
155 328 162 391 177 453 c
188 503 204 551 225 597 c
238 627 265 677 305 746 c
240 746 l
177 662 131 578 101 494 c
75 421 62 345 62 266 c
62 175 79 88 114 4 c
148 -80 190 -153 240 -216 c
305 -216 l
closepath
} exec
fill
} bind def
/K29 {
{
newpath
252 4 m
287 88 304 175 304 266 c
304 345 291 421 265 494 c
235 578 189 662 126 746 c
61 746 l
102 676 129 626 142 596 c
162 550 178 502 189 452 c
204 390 211 328 211 265 c
211 104 161 -56 61 -216 c
126 -216 l
175 -153 218 -80 252 4 c
closepath
} exec
fill
} bind def
/K2C {
{
newpath
142 0 m
141 -30 136 -53 127 -69 c
118 -86 104 -98 85 -106 c
110 -145 l
139 -132 160 -114 174 -91 c
187 -68 194 -38 194 0 c
194 103 l
91 103 l
91 0 l
142 0 l
closepath
} exec
fill
} bind def
/K2D {
{
newpath
309 220 m
309 311 l
32 311 l
32 220 l
309 220 l
closepath
} exec
fill
} bind def
/K2E {
{
newpath
196 0 m
196 103 l
93 103 l
93 0 l
196 0 l
closepath
} exec
fill
} bind def
/K2F {
{
newpath
73 -13 m
286 746 l
213 746 l
0 -13 l
73 -13 l
closepath
} exec
fill
} bind def
/K30 {
{
newpath
116 63 m
156 13 211 -12 282 -12 c
336 -12 380 2 415 31 c
450 60 477 100 495 153 c
512 206 521 276 521 362 c
521 434 516 492 505 535 c
494 578 478 614 459 644 c
440 674 416 696 386 712 c
356 728 321 736 282 736 c
229 736 184 722 149 693 c
114 665 88 624 70 571 c
52 518 43 448 43 362 c
43 224 67 125 116 63 c
116 63 l
closepath
182 609 m
207 644 240 661 281 661 c
323 661 358 641 386 602 c
414 562 428 482 428 361 c
428 241 414 161 386 122 c
358 82 323 62 282 62 c
241 62 206 82 178 121 c
150 161 136 241 136 361 c
136 482 151 564 182 609 c
182 609 l
closepath
} exec
fill
} bind def
/K31 {
{
newpath
382 736 m
324 736 l
308 704 282 672 244 638 c
206 604 162 576 112 552 c
112 465 l
140 475 172 491 207 512 c
242 532 270 553 292 574 c
292 0 l
382 0 l
382 736 l
closepath
} exec
fill
} bind def
/K32 {
{
newpath
156 87 m
166 103 178 120 194 136 c
209 152 244 183 298 228 c
363 282 409 325 437 357 c
465 388 485 418 497 446 c
509 474 515 503 515 533 c
515 590 494 639 453 678 c
412 717 356 736 286 736 c
216 736 160 718 119 682 c
77 646 53 593 47 524 c
140 514 l
140 560 154 596 180 622 c
206 648 240 661 284 661 c
325 661 358 649 384 624 c
409 600 422 570 422 534 c
422 500 408 464 380 426 c
352 388 298 336 218 271 c
167 229 127 192 100 160 c
73 128 53 96 41 63 c
33 43 29 22 30 0 c
516 0 l
516 87 l
156 87 l
closepath
} exec
fill
} bind def
/K33 {
{
newpath
116 46 m
158 7 212 -12 276 -12 c
347 -12 406 10 453 55 c
500 99 523 154 523 218 c
523 265 511 304 487 336 c
463 367 429 388 386 398 c
419 413 445 434 462 460 c
479 486 487 514 487 546 c
487 579 478 611 460 640 c
442 670 417 693 383 710 c
349 727 313 736 273 736 c
215 736 166 719 127 686 c
88 653 63 606 52 546 c
142 530 l
149 574 164 607 187 629 c
210 651 239 662 274 662 c
309 662 338 651 361 630 c
383 608 394 581 394 548 c
394 506 379 476 348 456 c
317 436 283 426 245 426 c
241 426 236 426 230 427 c
220 348 l
246 355 267 358 284 358 c
325 358 360 345 387 318 c
414 291 427 257 427 216 c
427 172 413 136 384 107 c
355 78 319 63 276 63 c
240 63 210 74 185 97 c
161 119 143 156 133 207 c
43 195 l
49 134 73 84 116 46 c
closepath
} exec
fill
} bind def
/K34 {
{
newpath
421 0 m
421 176 l
520 176 l
520 259 l
421 259 l
421 733 l
347 733 l
12 259 l
12 176 l
331 176 l
331 0 l
421 0 l
closepath
101 259 m
331 590 l
331 259 l
101 259 l
closepath
} exec
fill
} bind def
/K35 {
{
newpath
115 44 m
157 7 212 -12 279 -12 c
360 -12 424 18 471 77 c
510 125 529 183 529 249 c
529 319 507 376 463 420 c
419 465 365 487 301 487 c
253 487 206 472 162 441 c
202 638 l
494 638 l
494 724 l
130 724 l
59 347 l
144 335 l
157 356 175 374 199 387 c
222 400 248 407 277 407 c
324 407 362 392 390 363 c
419 333 433 292 433 241 c
433 187 418 144 389 111 c
359 78 322 62 279 62 c
242 62 212 74 186 97 c
161 120 145 154 138 200 c
43 193 l
49 131 73 82 115 44 c
closepath
} exec
fill
} bind def
/K36 {
{
newpath
445 687 m
408 720 360 736 303 736 c
225 736 163 708 118 652 c
65 588 39 485 39 343 c
39 217 63 126 110 71 c
157 16 219 -12 294 -12 c
338 -12 377 -2 412 20 c
446 41 473 71 493 110 c
513 150 523 193 523 239 c
523 309 502 366 460 410 c
418 454 367 476 307 476 c
272 476 240 468 208 452 c
177 436 151 412 129 379 c
130 452 138 508 155 548 c
171 587 193 617 221 638 c
243 654 268 662 297 662 c
333 662 363 649 387 623 c
402 607 413 581 421 546 c
511 553 l
504 610 482 655 445 687 c
closepath
185 352 m
213 381 248 396 288 396 c
329 396 363 381 390 352 c
417 323 430 283 430 233 c
430 180 416 139 389 108 c
362 77 330 62 292 62 c
266 62 241 69 217 84 c
194 99 176 121 163 149 c
150 177 143 207 143 238 c
143 285 157 323 185 352 c
closepath
} exec
fill
} bind def
/K37 {
{
newpath
407 637 m
361 585 318 521 278 445 c
238 369 207 291 185 209 c
163 127 152 58 151 0 c
244 0 l
249 73 260 140 278 202 c
303 289 339 373 385 456 c
430 538 476 604 523 654 c
523 724 l
48 724 l
48 637 l
407 637 l
closepath
} exec
fill
} bind def
/K38 {
{
newpath
79 332 m
54 300 42 260 42 213 c
42 149 64 95 109 52 c
153 9 211 -12 284 -12 c
356 -12 414 9 459 52 c
503 95 525 147 525 210 c
525 256 513 295 490 327 c
466 360 432 384 387 398 c
423 412 450 431 468 456 c
486 481 495 511 495 545 c
495 598 476 643 437 680 c
398 717 346 736 282 736 c
219 736 168 718 129 682 c
91 645 72 601 72 547 c
72 512 81 482 99 457 c
117 431 145 412 183 398 c
138 387 103 365 79 332 c
closepath
198 629 m
221 651 249 662 284 662 c
318 662 346 651 368 628 c
391 606 402 578 402 546 c
402 514 391 487 369 466 c
347 444 319 433 284 433 c
249 433 220 444 198 466 c
176 488 165 516 165 550 c
165 581 176 607 198 629 c
closepath
176 317 m
204 345 239 359 281 359 c
325 359 361 345 389 317 c
418 288 432 252 432 209 c
432 166 418 131 390 104 c
363 76 327 62 284 62 c
257 62 231 69 207 82 c
183 95 165 114 153 138 c
141 162 135 186 135 212 c
135 254 149 289 176 317 c
closepath
} exec
fill
} bind def
/K3A {
{
newpath
196 428 m
196 531 l
93 531 l
93 428 l
196 428 l
closepath
196 0 m
196 103 l
93 103 l
93 0 l
196 0 l
closepath
} exec
fill
} bind def
/K3C {
{
newpath
541 113 m
541 203 l
158 363 l
541 520 l
541 610 l
57 405 l
57 321 l
541 113 l
closepath
} exec
fill
} bind def
/K3D {
{
newpath
541 516 m
56 516 l
56 432 l
541 432 l
541 516 l
closepath
541 293 m
56 293 l
56 209 l
541 209 l
541 293 l
closepath
} exec
fill
} bind def
/K3E {
{
newpath
541 405 m
57 610 l
57 520 l
440 363 l
57 203 l
57 113 l
541 321 l
541 405 l
closepath
} exec
fill
} bind def
/K41 {
{
newpath
102 0 m
182 222 l
490 222 l
575 0 l
685 0 l
386 733 l
280 733 l
-1 0 l
102 0 l
closepath
290 516 m
307 562 321 609 330 657 c
342 617 359 566 383 504 c
459 301 l
210 301 l
290 516 l
closepath
} exec
fill
} bind def
/K43 {
{
newpath
526 118 m
488 87 442 71 388 71 c
343 71 301 83 263 106 c
225 129 196 163 178 210 c
160 256 151 311 151 373 c
151 421 159 468 174 514 c
189 559 216 596 254 623 c
291 650 338 663 394 663 c
443 663 484 651 516 627 c
548 602 573 563 590 510 c
686 533 l
666 600 632 653 582 690 c
532 727 470 746 397 746 c
332 746 273 731 219 702 c
165 672 124 629 95 572 c
66 515 51 449 51 373 c
51 303 64 237 90 176 c
116 115 153 68 203 36 c
252 4 317 -12 396 -12 c
472 -12 536 9 589 51 c
642 93 679 153 699 233 c
602 258 l
589 196 563 149 526 118 c
closepath
} exec
fill
} bind def
/K44 {
{
newpath
344 0 m
388 0 427 4 461 13 c
495 21 525 33 549 49 c
573 65 595 88 616 116 c
636 144 653 180 666 223 c
679 266 685 315 685 371 c
685 436 675 494 656 545 c
637 596 608 637 570 670 c
540 695 504 713 462 723 c
432 730 389 733 332 733 c
79 733 l
79 0 l
344 0 l
closepath
176 646 m
330 646 l
388 646 430 641 456 631 c
492 617 522 590 547 548 c
572 507 585 449 585 372 c
585 317 579 270 566 231 c
553 192 535 161 512 138 c
496 122 474 109 446 100 c
419 91 381 87 333 87 c
176 87 l
176 646 l
closepath
} exec
fill
} bind def
/K48 {
{
newpath
180 0 m
180 346 l
560 346 l
560 0 l
657 0 l
657 733 l
560 733 l
560 433 l
180 433 l
180 733 l
83 733 l
83 0 l
180 0 l
closepath
} exec
fill
} bind def
/K4C {
{
newpath
533 0 m
533 87 l
172 87 l
172 733 l
75 733 l
75 0 l
533 0 l
closepath
} exec
fill
} bind def
/K4D {
{
newpath
169 0 m
169 624 l
382 0 l
469 0 l
683 613 l
683 0 l
777 0 l
777 733 l
647 733 l
470 223 l
452 171 439 132 431 106 c
423 130 411 166 395 214 c
221 733 l
75 733 l
75 0 l
169 0 l
closepath
} exec
fill
} bind def
/K4E {
{
newpath
171 0 m
171 576 l
556 0 l
656 0 l
656 733 l
563 733 l
563 157 l
178 733 l
78 733 l
78 0 l
171 0 l
closepath
} exec
fill
} bind def
/K50 {
{
newpath
176 0 m
176 298 l
364 298 l
467 298 539 320 579 363 c
618 406 638 459 638 521 c
638 557 631 591 616 621 c
601 651 581 675 557 692 c
533 709 503 720 467 726 c
441 731 404 733 355 733 c
79 733 l
79 0 l
176 0 l
closepath
176 646 m
363 646 l
407 646 437 644 454 640 c
479 633 499 618 515 596 c
530 575 538 549 538 518 c
538 476 525 443 499 420 c
472 397 428 385 365 385 c
176 385 l
176 646 l
closepath
} exec
fill
} bind def
/K53 {
{
newpath
87 104 m
113 65 148 36 192 17 c
237 -2 293 -12 359 -12 c
411 -12 458 -2 500 17 c
541 36 573 63 596 97 c
618 131 629 168 629 207 c
629 246 619 281 599 311 c
578 341 547 366 504 386 c
475 399 421 415 343 432 c
264 450 216 467 197 484 c
178 501 169 523 169 549 c
169 580 182 605 209 627 c
236 648 278 659 337 659 c
393 659 435 647 464 624 c
492 600 509 566 514 520 c
607 527 l
605 570 593 609 571 643 c
549 677 517 702 476 720 c
434 737 386 746 332 746 c
283 746 238 738 198 721 c
158 704 127 680 106 648 c
85 615 75 581 75 544 c
75 510 84 479 101 452 c
118 425 144 402 179 384 c
206 369 253 354 320 338 c
387 322 430 310 450 302 c
480 291 502 276 515 259 c
528 242 535 222 535 199 c
535 177 528 156 514 137 c
501 118 480 103 452 92 c
423 81 391 75 354 75 c
313 75 275 82 242 97 c
209 111 185 130 169 154 c
153 177 143 207 139 244 c
47 236 l
48 187 62 143 87 104 c
closepath
} exec
fill
} bind def
/K54 {
{
newpath
363 0 m
363 646 l
605 646 l
605 733 l
24 733 l
24 646 l
266 646 l
266 0 l
363 0 l
closepath
} exec
fill
} bind def
/K5A {
{
newpath
600 0 m
600 87 l
132 87 l
176 138 l
588 646 l
588 733 l
63 733 l
63 646 l
472 646 l
448 622 423 593 396 559 c
20 91 l
20 0 l
600 0 l
closepath
} exec
fill
} bind def
/K61 {
{
newpath
432 0 m
526 0 l
515 20 507 42 504 64 c
500 86 498 139 498 223 c
498 342 l
498 382 497 410 494 425 c
488 450 479 470 466 487 c
452 503 431 516 403 527 c
375 538 338 543 293 543 c
247 543 207 537 172 524 c
137 512 111 494 93 471 c
74 447 61 417 53 379 c
141 367 l
151 405 166 431 186 446 c
206 461 237 468 279 468 c
324 468 359 458 382 438 c
399 423 407 397 407 360 c
407 357 407 349 407 337 c
372 325 319 315 246 306 c
210 302 184 297 166 293 c
142 286 120 276 101 263 c
82 250 67 233 55 211 c
43 190 37 166 37 140 c
37 96 53 59 84 31 c
115 2 160 -12 219 -12 c
254 -12 287 -6 318 6 c
349 18 381 38 414 67 c
417 41 423 19 432 0 c
432 0 l
closepath
407 233 m
407 194 402 164 392 144 c
379 117 360 97 333 82 c
306 67 275 59 240 59 c
205 59 178 67 160 83 c
142 99 133 119 133 143 c
133 158 137 172 145 185 c
154 198 166 208 181 214 c
196 221 222 227 259 232 c
324 241 373 253 406 266 c
407 233 l
closepath
} exec
fill
} bind def
/K63 {
{
newpath
368 95 m
345 73 316 62 281 62 c
237 62 202 78 175 111 c
148 143 134 195 134 266 c
134 336 148 388 176 420 c
204 453 240 469 285 469 c
315 469 340 460 361 442 c
382 424 397 398 405 362 c
493 376 l
483 429 459 471 423 500 c
386 529 339 543 282 543 c
236 543 194 532 156 511 c
117 489 88 457 69 414 c
50 371 41 321 41 264 c
41 175 63 107 107 59 c
151 12 209 -12 282 -12 c
340 -12 388 5 428 40 c
468 74 492 122 502 183 c
413 195 l
407 150 392 116 368 95 c
closepath
} exec
fill
} bind def
/K64 {
{
newpath
495 0 m
495 733 l
405 733 l
405 470 l
389 491 369 509 344 523 c
319 536 291 543 259 543 c
215 543 175 532 140 509 c
105 486 78 452 61 409 c
43 366 34 318 34 265 c
34 211 44 163 63 121 c
83 79 110 46 146 23 c
181 0 220 -12 263 -12 c
328 -12 377 14 411 67 c
411 0 l
495 0 l
closepath
167 419 m
194 452 228 468 268 468 c
309 468 344 451 372 417 c
400 383 414 330 414 257 c
414 191 400 142 373 110 c
345 78 311 62 272 62 c
233 62 199 79 170 112 c
141 146 127 197 127 265 c
127 335 140 386 167 419 c
closepath
} exec
fill
} bind def
/K65 {
{
newpath
376 88 m
352 71 324 62 291 62 c
247 62 210 78 180 109 c
151 140 134 185 131 243 c
527 243 l
527 254 527 262 527 267 c
527 354 505 422 460 471 c
415 519 357 543 286 543 c
212 543 153 518 107 469 c
61 420 38 350 38 261 c
38 175 61 108 106 60 c
152 12 213 -12 291 -12 c
352 -12 403 3 443 33 c
482 63 509 106 524 160 c
431 172 l
417 134 399 106 376 88 c
closepath
183 428 m
211 455 245 469 287 469 c
332 469 369 452 398 417 c
417 395 428 362 432 317 c
136 317 l
139 363 155 400 183 428 c
closepath
} exec
fill
} bind def
/K66 {
{
newpath
179 0 m
179 461 l
282 461 l
282 531 l
179 531 l
179 580 l
179 611 185 633 196 645 c
207 656 227 662 254 662 c
271 662 288 660 307 657 c
321 736 l
290 742 262 745 237 745 c
197 745 167 738 145 723 c
123 709 107 690 99 667 c
92 649 89 623 89 587 c
89 531 l
9 531 l
9 461 l
89 461 l
89 0 l
179 0 l
closepath
} exec
fill
} bind def
/K67 {
{
newpath
108 -173 m
147 -202 198 -216 261 -216 c
314 -216 359 -206 396 -186 c
432 -166 459 -139 476 -104 c
493 -70 501 -11 501 72 c
501 531 l
418 531 l
418 466 l
377 517 326 543 263 543 c
216 543 175 531 140 508 c
105 485 79 452 61 409 c
42 366 33 319 33 269 c
33 195 53 132 93 79 c
133 26 189 0 262 0 c
321 0 370 23 409 70 c
409 11 407 -27 403 -46 c
395 -76 379 -99 357 -116 c
334 -133 302 -141 261 -141 c
222 -141 192 -133 169 -116 c
153 -103 143 -83 139 -56 c
51 -44 l
50 -102 69 -145 108 -173 c
closepath
168 419 m
196 452 230 468 270 468 c
310 468 345 452 374 419 c
403 386 417 337 417 272 c
417 204 403 154 375 123 c
347 91 313 75 271 75 c
230 75 195 91 167 123 c
140 155 126 205 126 275 c
126 339 140 387 168 419 c
closepath
} exec
fill
} bind def
/K68 {
{
newpath
158 0 m
158 290 l
158 332 163 364 173 388 c
183 412 200 430 223 444 c
246 458 271 465 298 465 c
333 465 361 455 380 434 c
399 414 409 381 409 336 c
409 0 l
499 0 l
499 337 l
499 389 493 428 480 456 c
468 483 447 504 418 520 c
389 535 355 543 316 543 c
253 543 200 519 158 470 c
158 733 l
68 733 l
68 0 l
158 0 l
closepath
} exec
fill
} bind def
/K69 {
{
newpath
158 630 m
158 733 l
68 733 l
68 630 l
158 630 l
closepath
158 0 m
158 531 l
68 531 l
68 0 l
158 0 l
closepath
} exec
fill
} bind def
/K6A {
{
newpath
157 628 m
157 733 l
67 733 l
67 628 l
157 628 l
closepath
24 -216 m
74 -216 110 -199 132 -166 c
149 -140 157 -95 157 -29 c
157 531 l
67 531 l
67 -27 l
67 -76 62 -107 53 -119 c
44 -131 31 -137 12 -137 c
2 -137 -12 -135 -30 -130 c
-47 -207 l
-24 -213 -1 -216 24 -216 c
24 -216 l
closepath
} exec
fill
} bind def
/K6C {
{
newpath
156 0 m
156 733 l
66 733 l
66 0 l
156 0 l
closepath
} exec
fill
} bind def
/K6D {
{
newpath
157 0 m
157 276 l
157 324 162 361 172 387 c
181 412 197 432 218 445 c
240 458 263 465 289 465 c
322 465 346 455 361 435 c
376 415 383 385 383 345 c
383 0 l
473 0 l
473 309 l
473 363 485 403 510 428 c
535 453 566 465 604 465 c
625 465 643 460 658 451 c
674 441 684 428 690 412 c
696 396 699 371 699 335 c
699 0 l
789 0 l
789 365 l
789 425 775 470 746 499 c
718 528 677 543 624 543 c
556 543 501 512 459 450 c
449 479 431 502 406 519 c
380 535 348 543 309 543 c
273 543 241 535 214 519 c
186 503 164 483 147 457 c
147 531 l
67 531 l
67 0 l
157 0 l
closepath
} exec
fill
} bind def
/K6E {
{
newpath
158 0 m
158 290 l
158 358 172 404 200 429 c
227 453 260 465 299 465 c
323 465 344 460 361 449 c
379 438 392 423 399 405 c
406 387 409 360 409 323 c
409 0 l
499 0 l
499 327 l
499 368 497 397 494 414 c
489 440 479 462 466 481 c
453 499 433 514 406 526 c
379 537 350 543 318 543 c
244 543 188 514 149 456 c
149 531 l
68 531 l
68 0 l
158 0 l
closepath
} exec
fill
} bind def
/K6F {
{
newpath
103 60 m
149 12 209 -12 283 -12 c
330 -12 372 -1 412 21 c
451 42 481 73 501 112 c
522 151 532 205 532 273 c
532 357 509 423 462 471 c
416 519 356 543 283 543 c
218 543 162 523 116 484 c
61 437 34 364 34 266 c
34 176 57 107 103 60 c
closepath
171 418 m
201 451 238 468 283 468 c
328 468 365 451 394 417 c
424 384 439 334 439 268 c
439 199 424 147 395 113 c
365 79 328 62 283 62 c
238 62 201 79 171 113 c
142 146 127 197 127 265 c
127 333 142 384 171 418 c
closepath
} exec
fill
} bind def
/K70 {
{
newpath
158 -204 m
158 55 l
173 36 193 20 217 7 c
241 -6 268 -12 298 -12 c
339 -12 378 0 415 23 c
452 46 480 79 500 123 c
519 166 529 215 529 270 c
529 320 520 367 503 409 c
485 452 459 485 424 508 c
389 531 349 543 304 543 c
269 543 240 536 216 523 c
191 509 169 489 150 462 c
150 531 l
68 531 l
68 -204 l
158 -204 l
closepath
193 418 m
223 454 256 472 295 472 c
333 472 367 455 394 422 c
422 388 436 337 436 270 c
436 199 422 146 393 113 c
365 79 331 62 291 62 c
251 62 218 78 190 111 c
163 144 149 194 149 262 c
149 331 164 383 193 418 c
closepath
} exec
fill
} bind def
/K72 {
{
newpath
157 0 m
157 278 l
157 316 162 351 172 383 c
179 404 190 420 205 432 c
221 444 239 450 258 450 c
280 450 302 444 324 431 c
355 514 l
324 533 293 543 263 543 c
242 543 223 537 205 525 c
188 513 169 488 148 451 c
148 531 l
67 531 l
67 0 l
157 0 l
closepath
} exec
fill
} bind def
/K73 {
{
newpath
101 31 m
137 2 190 -12 259 -12 c
301 -12 338 -5 371 10 c
404 24 429 45 447 71 c
464 98 473 126 473 156 c
473 187 466 212 452 233 c
437 254 417 269 392 280 c
367 291 323 305 259 322 c
215 334 189 342 180 345 c
164 351 152 359 145 369 c
138 378 134 389 134 401 c
134 419 143 435 161 449 c
178 462 208 469 249 469 c
284 469 311 461 330 446 c
349 431 361 409 365 382 c
453 394 l
447 428 437 456 422 476 c
407 497 384 513 352 525 c
321 537 284 543 243 543 c
215 543 189 539 165 532 c
141 525 122 516 108 506 c
89 493 74 476 63 456 c
52 436 47 414 47 390 c
47 364 54 340 67 319 c
80 297 99 280 125 268 c
150 256 196 242 262 225 c
311 213 342 203 354 195 c
371 183 380 167 380 147 c
380 124 370 104 350 87 c
330 70 299 62 258 62 c
217 62 185 72 163 91 c
140 110 126 137 121 173 c
32 159 l
42 103 65 60 101 31 c
closepath
} exec
fill
} bind def
/K74 {
{
newpath
224 77 m
211 77 201 79 193 84 c
186 88 181 94 178 101 c
175 108 173 125 173 151 c
173 461 l
264 461 l
264 531 l
173 531 l
173 717 l
83 663 l
83 531 l
16 531 l
16 461 l
83 461 l
83 156 l
83 102 87 66 94 49 c
101 32 114 19 132 9 c
150 -2 175 -7 208 -7 c
228 -7 251 -4 276 1 c
264 81 l
248 78 234 77 224 77 c
224 77 l
closepath
} exec
fill
} bind def
/K75 {
{
newpath
496 0 m
496 531 l
406 531 l
406 247 l
406 202 401 167 391 143 c
381 119 365 101 341 87 c
318 73 292 66 265 66 c
238 66 216 73 197 86 c
179 100 167 118 161 142 c
158 158 156 190 156 237 c
156 531 l
66 531 l
66 202 l
66 164 68 136 72 118 c
77 92 86 69 99 51 c
112 33 133 18 160 6 c
187 -6 216 -12 248 -12 c
319 -12 375 18 416 78 c
416 0 l
496 0 l
closepath
} exec
fill
} bind def
/K76 {
{
newpath
300 0 m
501 531 l
408 531 l
290 207 l
276 168 265 134 257 106 c
246 143 235 179 222 213 c
108 531 l
12 531 l
214 0 l
300 0 l
closepath
} exec
fill
} bind def
/K77 {
{
newpath
258 0 m
366 409 l
387 318 l
472 0 l
564 0 l
732 531 l
644 531 l
553 224 l
522 122 l
496 223 l
415 531 l
323 531 l
239 220 l
222 153 212 116 211 111 c
180 225 l
96 531 l
2 531 l
164 0 l
258 0 l
closepath
} exec
fill
} bind def
/K79 {
{
newpath
122 -216 m
151 -216 175 -209 196 -195 c
217 -181 235 -160 251 -130 c
263 -108 280 -68 302 -9 c
503 531 l
413 531 l
300 221 l
285 182 273 142 262 101 c
250 144 237 185 223 224 c
112 531 l
16 531 l
218 -2 l
214 -12 212 -19 210 -24 c
197 -60 188 -82 183 -91 c
175 -103 165 -112 153 -119 c
141 -126 125 -129 105 -129 c
91 -129 74 -126 54 -121 c
64 -205 l
85 -212 105 -216 122 -216 c
122 -216 l
closepath
} exec
fill
} bind def
/K7A {
{
newpath
490 0 m
490 78 l
244 78 l
208 78 170 76 130 72 c
186 135 l
474 472 l
474 531 l
40 531 l
40 458 l
256 458 l
286 458 320 459 358 461 c
20 73 l
20 0 l
490 0 l
closepath
} exec
fill
} bind def
end /CharStrings exch def
56 dict dup begin
/KA [768 0 128 0 640 640] def
Encoding 10 /KA put
/KD [768 0 128 0 640 640] def
Encoding 13 /KD put
/K20 [285 0 0 0 0 0] def
Encoding 32 /K20 put
/K26 [683 0 44 -15 659 745] def
Encoding 38 /K26 put
/K28 [341 0 62 -215 304 745] def
Encoding 40 /K28 put
/K29 [341 0 62 -215 304 745] def
Encoding 41 /K29 put
/K2C [285 0 85 -145 194 102] def
Encoding 44 /K2C put
/K2D [341 0 32 220 310 310] def
Encoding 45 /K2D put
/K2E [285 0 93 0 196 102] def
Encoding 46 /K2E put
/K2F [285 0 0 -12 286 745] def
Encoding 47 /K2F put
/K30 [570 0 43 -12 520 736] def
Encoding 48 /K30 put
/K31 [570 0 111 0 381 736] def
Encoding 49 /K31 put
/K32 [570 0 29 0 515 736] def
Encoding 50 /K32 put
/K33 [570 0 43 -12 523 736] def
Encoding 51 /K33 put
/K34 [570 0 12 0 520 733] def
Encoding 52 /K34 put
/K35 [570 0 43 -12 528 724] def
Encoding 53 /K35 put
/K36 [570 0 39 -12 523 736] def
Encoding 54 /K36 put
/K37 [570 0 48 0 522 724] def
Encoding 55 /K37 put
/K38 [570 0 42 -12 524 736] def
Encoding 56 /K38 put
/K3A [285 0 92 0 195 531] def
Encoding 58 /K3A put
/K3C [598 0 57 113 541 609] def
Encoding 60 /K3C put
/K3D [598 0 57 209 541 515] def
Encoding 61 /K3D put
/K3E [598 0 57 113 541 609] def
Encoding 62 /K3E put
/K41 [683 0 -2 0 684 733] def
Encoding 65 /K41 put
/K43 [740 0 51 -12 698 745] def
Encoding 67 /K43 put
/K44 [740 0 79 0 685 733] def
Encoding 68 /K44 put
/K48 [740 0 83 0 656 733] def
Encoding 72 /K48 put
/K4C [570 0 75 0 532 733] def
Encoding 76 /K4C put
/K4D [853 0 77 0 776 733] def
Encoding 77 /K4D put
/K4E [740 0 78 0 655 733] def
Encoding 78 /K4E put
/K50 [683 0 79 0 639 733] def
Encoding 80 /K50 put
/K53 [683 0 47 -12 630 745] def
Encoding 83 /K53 put
/K54 [626 0 24 0 604 733] def
Encoding 84 /K54 put
/K5A [626 0 20 0 600 733] def
Encoding 90 /K5A put
/K61 [570 0 37 -11 526 543] def
Encoding 97 /K61 put
/K63 [512 0 41 -11 503 543] def
Encoding 99 /K63 put
/K64 [570 0 34 -11 495 733] def
Encoding 100 /K64 put
/K65 [570 0 38 -11 526 543] def
Encoding 101 /K65 put
/K66 [285 0 9 0 320 745] def
Encoding 102 /K66 put
/K67 [570 0 33 -215 501 543] def
Encoding 103 /K67 put
/K68 [570 0 68 0 499 733] def
Encoding 104 /K68 put
/K69 [228 0 68 0 158 733] def
Encoding 105 /K69 put
/K6A [228 0 -47 -215 157 733] def
Encoding 106 /K6A put
/K6C [228 0 66 0 156 733] def
Encoding 108 /K6C put
/K6D [853 0 68 0 788 543] def
Encoding 109 /K6D put
/K6E [570 0 68 0 499 543] def
Encoding 110 /K6E put
/K6F [570 0 34 -11 531 543] def
Encoding 111 /K6F put
/K70 [570 0 68 -204 528 543] def
Encoding 112 /K70 put
/K72 [341 0 67 0 355 543] def
Encoding 114 /K72 put
/K73 [512 0 32 -11 473 543] def
Encoding 115 /K73 put
/K74 [285 0 16 -7 275 717] def
Encoding 116 /K74 put
/K75 [570 0 66 -11 496 531] def
Encoding 117 /K75 put
/K76 [512 0 12 0 501 531] def
Encoding 118 /K76 put
/K77 [740 0 2 0 731 531] def
Encoding 119 /K77 put
/K79 [512 0 16 -215 503 531] def
Encoding 121 /K79 put
/K7A [512 0 20 0 490 531] def
Encoding 122 /K7A put
end /CharMetrics exch def
end
definefont pop
} if
/SymbolMT havefont not {
/SymbolMT
15 dict dup begin
/FontName /SymbolMT def
/FontType 3 def
/FontMatrix [ 0.000977 0 0 0.000977 0 0 ] def
/FontAscent 1024 def
/FontDescent -225 def
/FontScript 0 def
/FontBBox [ 0 -512 1024 1024 ] def
/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
/l /lineto load def
/m /moveto load def
/c /curveto load def
/BuildChar {
	Adobe_Illustrator_AI5_vars exch /_bitlobyte exch put
	Adobe_Illustrator_AI5_vars exch /_bitfont exch put
	Adobe_Illustrator_AI5_vars /_bithibyte 0 put

	_bitlobyte 16 4 string cvrs dup length (K) dup length
	dup 4 -1 roll add string Adobe_Illustrator_AI5_vars exch /_bitkey exch put
	exch _bitkey copy pop _bitkey exch 3 -1 roll putinterval
	_bitfont /CharMetrics get _bitkey cvn get dup type /arraytype
	eq { aload pop setcachedevice }
	{ 0 setcharwidth } ifelse
	_bitfont /CharStrings get _bitkey cvn get exec
} bind def
5 dict dup begin
/KA {
} bind def
/KD {
} bind def
/K4C {
{
newpath
340 694 m
122 133 l
104 87 85 55 66 38 c
53 27 34 21 10 19 c
10 0 l
214 0 l
214 19 l
188 21 171 26 161 34 c
152 42 147 52 147 65 c
147 75 152 94 163 120 c
322 528 l
478 123 l
489 95 494 75 494 64 c
494 51 490 40 481 32 c
472 25 456 20 432 19 c
432 0 l
693 0 l
693 19 l
667 20 647 26 632 37 c
612 54 595 80 581 118 c
359 694 l
340 694 l
closepath
} exec
fill
} bind def
/K4D {
{
newpath
437 0 m
698 572 l
698 118 l
698 80 694 56 687 45 c
675 28 655 19 625 19 c
601 19 l
601 0 l
891 0 l
891 19 l
867 19 l
840 19 821 26 808 40 c
799 50 794 76 794 118 c
794 561 l
794 599 798 623 805 634 c
817 651 838 660 867 660 c
891 660 l
891 679 l
699 679 l
456 148 l
211 679 l
17 679 l
17 660 l
29 660 l
59 660 81 653 94 640 c
107 626 114 600 114 561 c
114 118 l
114 80 110 56 103 45 c
91 28 70 19 41 19 c
17 19 l
17 0 l
255 0 l
255 19 l
231 19 l
204 19 184 26 172 40 c
163 50 158 76 158 118 c
158 570 l
419 0 l
437 0 l
closepath
} exec
fill
} bind def
/K57 {
{
newpath
758 139 m
739 139 l
737 119 730 104 718 95 c
706 86 685 81 654 81 c
516 81 l
520 116 l
585 131 639 164 679 215 c
720 266 740 326 740 395 c
740 451 725 503 696 550 c
666 597 624 633 570 657 c
515 682 456 694 391 694 c
285 694 200 665 138 608 c
76 550 45 479 45 395 c
45 328 64 270 102 220 c
140 171 194 136 264 116 c
264 81 l
129 81 l
99 81 76 87 62 98 c
52 105 47 119 46 139 c
27 139 l
27 0 l
309 0 l
297 140 l
251 157 217 185 194 224 c
171 264 160 317 160 384 c
160 468 182 535 227 584 c
271 633 326 658 391 658 c
457 658 513 634 557 585 c
601 537 623 467 623 377 c
623 311 612 260 590 224 c
568 188 533 160 486 140 c
474 0 l
758 0 l
758 139 l
closepath
} exec
fill
} bind def
end /CharStrings exch def
5 dict dup begin
/KA [615 0 51 0 564 640] def
Encoding 10 /KA put
/KD [615 0 51 0 564 640] def
Encoding 13 /KD put
/K4C [703 0 10 0 694 694] def
Encoding 76 /K4C put
/K4D [911 0 17 0 892 679] def
Encoding 77 /K4D put
/K57 [787 0 29 0 760 694] def
Encoding 87 /K57 put
end /CharMetrics exch def
end
definefont pop
} if
setpacking
%AI3_EndRider
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _ArialMT ArialMT
[/_ArialMT/ArialMT 0 0 0 TZ
%AI3_EndEncoding TrueType
%AI55J_Tsume: None
%AI3_BeginEncoding: _Myriad-Roman Myriad-Roman
[/_Myriad-Roman/Myriad-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI55J_Tsume: None
%AI3_BeginEncoding: _SymbolMT SymbolMT
[/_SymbolMT/SymbolMT 0 0 0 TZ
%AI3_EndEncoding TrueType
%AI5_BeginPalette
0 0 Pb
1 1 1 1 k
([Registration]) Pc
1 1 1 1 k
(C=100 M=100 Y=100 K=100) Pc
(C=100 M=100 Y=100 K=100) Pc
(C=100 M=100 Y=100 K=100) Pc
PB
%AI5_EndPalette
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
0 R
0 G
1 J 0 j 2 w 2.5 M [1.1339 2.8347 ]0 d
0 XR
156.1143 424.2681 m
416.9297 605.5327 478.9297 659.5327 V
518.0986 691.6606 560.6182 728.71 Y
557.8691 726.2437 L
S
0 J [5.6693 5.6693 ]0 d
564.9883 721.4771 m
402.9883 599.9771 L
156.333 424.7124 L
S
563.5361 213.5469 m
510 237 496.3203 242.0469 469.6602 246.7734 c
443 251.5 409.6602 256.2734 396.6602 257.2734 c
383.6602 258.2734 325.6602 261.2734 Y
129.75 263.1523 L
306.377 261.9902 L
S
0.2835 w
411.0322 605.6919 m
S
389.2617 589.9028 m
S
0.8504 w []0 d
130.0898 423.7354 m
S
*u
130.0898 423.7354 m
130.0898 426.9102 L
S
143.9512 423.7354 m
143.9512 426.9102 L
S
130.0898 742.6338 m
S
182.8145 742.6338 m
182.8145 736.2559 L
S
357.9395 742.6338 m
357.9395 736.2559 L
S
130.0898 742.6338 m
130.0898 739.4307 L
S
143.9512 742.6338 m
143.9512 739.4307 L
S
155.6865 742.6338 m
155.6865 739.4307 L
S
165.835 742.6338 m
165.835 739.4307 L
S
174.793 742.6338 m
174.793 739.4307 L
S
235.5107 742.6338 m
235.5107 739.4307 L
S
266.3516 742.6338 m
266.3516 739.4307 L
S
288.2354 742.6338 m
288.2354 739.4307 L
S
305.2148 742.6338 m
305.2148 739.4307 L
S
319.0762 742.6338 m
319.0762 739.4307 L
S
330.8115 742.6338 m
330.8115 739.4307 L
S
340.959 742.6338 m
340.959 739.4307 L
S
349.917 742.6338 m
349.917 739.4307 L
S
410.6348 742.6338 m
410.6348 739.4307 L
S
441.4766 742.6338 m
441.4766 739.4307 L
S
463.3594 742.6338 m
463.3594 739.4307 L
S
480.3389 742.6338 m
480.3389 739.4307 L
S
494.2002 742.6338 m
494.2002 739.4307 L
S
505.9365 742.6338 m
505.9365 739.4307 L
S
516.084 742.6338 m
516.084 739.4307 L
S
525.042 742.6338 m
525.042 739.4307 L
S
130.0898 423.7354 m
130.0898 742.6338 L
S
130.0898 460.5293 m
138.7637 460.5293 L
S
*U
130.0898 509.5688 m
138.7637 509.5688 L
S
130.0898 558.6367 m
138.7637 558.6367 L
S
130.0898 607.7046 m
138.7637 607.7046 L
S
130.0898 656.772 m
138.7637 656.772 L
S
130.0898 705.8398 m
138.7637 705.8398 L
S
*u
130.0898 423.7354 m
134.4268 423.7354 L
S
130.0898 435.9814 m
134.4268 435.9814 L
S
130.0898 448.2554 m
134.4268 448.2554 L
S
130.0898 472.7749 m
134.4268 472.7749 L
S
130.0898 485.0488 m
134.4268 485.0488 L
S
130.0898 497.3232 m
134.4268 497.3232 L
S
130.0898 521.8428 m
134.4268 521.8428 L
S
130.0898 534.1167 m
134.4268 534.1167 L
S
130.0898 546.3911 m
134.4268 546.3911 L
S
130.0898 570.9106 m
134.4268 570.9106 L
S
130.0898 583.1846 m
134.4268 583.1846 L
S
130.0898 595.4302 m
134.4268 595.4302 L
S
130.0898 619.9785 m
134.4268 619.9785 L
S
130.0898 632.2241 m
134.4268 632.2241 L
S
130.0898 644.498 m
134.4268 644.498 L
S
130.0898 669.0176 m
134.4268 669.0176 L
S
130.0898 681.292 m
134.4268 681.292 L
S
130.0898 693.5659 m
134.4268 693.5659 L
S
130.0898 718.0854 m
134.4268 718.0854 L
S
130.0898 730.3599 m
134.4268 730.3599 L
S
130.0898 742.6338 m
134.4268 742.6338 L
S
*U
*u
0 O
0 0 0 0 k
1 w
525.9756 700.3975 m
525.9756 695.04 L
B
1 D
259.0005 661.7793 m
258.9746 662.1523 L
258.8945 662.5264 L
258.7612 662.8994 L
258.6011 663.2461 L
258.3872 663.5664 L
258.1206 663.8589 L
257.8276 664.126 L
257.5078 664.3389 L
257.1606 664.4995 L
256.7876 664.6328 L
256.4141 664.7124 L
256.0405 664.7393 L
255.6411 664.7124 L
255.2671 664.6328 L
254.894 664.4995 L
254.5479 664.3389 L
254.2271 664.126 L
253.9341 663.8589 L
253.6675 663.5664 L
253.4531 663.2461 L
253.2935 662.8994 L
253.1606 662.5264 L
253.1074 662.1523 L
253.0806 661.7793 L
253.1074 661.3794 L
253.1606 661.0059 L
253.2935 660.6328 L
253.4531 660.2856 L
253.6675 659.9663 L
253.9341 659.6724 L
254.2271 659.4326 L
254.5479 659.2188 L
254.894 659.0322 L
255.2671 658.9253 L
255.6411 658.8457 L
256.0405 658.8193 L
256.4141 658.8457 L
256.7876 658.9253 L
257.1606 659.0322 L
257.5078 659.2188 L
257.8276 659.4326 L
258.1206 659.6724 L
258.3872 659.9663 L
258.6011 660.2856 L
258.7612 660.6328 L
258.8945 661.0059 L
258.9746 661.3794 L
B
259.0005 661.7793 m
258.9746 662.1523 L
258.8945 662.5264 L
258.7612 662.8994 L
258.6011 663.2461 L
258.3872 663.5664 L
258.1206 663.8589 L
257.8276 664.126 L
257.5078 664.3389 L
257.1606 664.4995 L
256.7876 664.6328 L
256.4141 664.7124 L
256.0405 664.7393 L
255.6411 664.7124 L
255.2671 664.6328 L
254.894 664.4995 L
254.5479 664.3389 L
254.2271 664.126 L
253.9341 663.8589 L
253.6675 663.5664 L
253.4531 663.2461 L
253.2935 662.8994 L
253.1606 662.5264 L
253.1074 662.1523 L
253.0806 661.7793 L
253.1074 661.3794 L
253.1606 661.0059 L
253.2935 660.6328 L
253.4531 660.2856 L
253.6675 659.9663 L
253.9341 659.6724 L
254.2271 659.4326 L
254.5479 659.2188 L
254.894 659.0322 L
255.2671 658.9253 L
255.6411 658.8457 L
256.0405 658.8193 L
256.4141 658.8457 L
256.7876 658.9253 L
257.1606 659.0322 L
257.5078 659.2188 L
257.8276 659.4326 L
258.1206 659.6724 L
258.3872 659.9663 L
258.6011 660.2856 L
258.7612 660.6328 L
258.8945 661.0059 L
258.9746 661.3794 L
B
*U
0 To
1 0 0 1 262.8413 657.166 0 Tp
0 Tv
TP
0 Tr
0 g
4 M
%_ 0 50 XQ
/_ArialMT 14.112 14.112 -4.5823 Tf
0 Ts
90 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
33.8688 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
0 Tc
0 Tw
(Supernova Cosmology Project) Tx 
(\r) TX 
TO
*u
0 D
0 R
0 G
0.8504 w 2.5 M
130.0898 423.7354 m
S
130.0898 423.7354 m
130.0898 420.5327 L
S
143.9512 423.7354 m
143.9512 420.5327 L
S
130.0898 423.7354 m
S
*U
130.0898 157.9863 m
138.7637 157.9863 L
S
130.0898 211.1367 m
138.7637 211.1367 L
S
130.0898 264.2871 m
138.7637 264.2871 L
S
130.0898 317.4355 m
138.7637 317.4355 L
S
130.0898 370.5859 m
138.7637 370.5859 L
S
130.0898 423.7354 m
138.7637 423.7354 L
S
*u
130.0898 168.6172 m
134.4268 168.6172 L
S
130.0898 179.2461 m
134.4268 179.2461 L
S
130.0898 189.877 m
134.4268 189.877 L
S
130.0898 200.5078 m
134.4268 200.5078 L
S
130.0898 221.7676 m
134.4268 221.7676 L
S
130.0898 232.3965 m
134.4268 232.3965 L
S
130.0898 243.0273 m
134.4268 243.0273 L
S
130.0898 253.6563 m
134.4268 253.6563 L
S
130.0898 274.916 m
134.4268 274.916 L
S
130.0898 285.5469 m
134.4268 285.5469 L
S
130.0898 296.1758 m
134.4268 296.1758 L
S
130.0898 306.8066 m
134.4268 306.8066 L
S
130.0898 328.0664 m
134.4268 328.0664 L
S
130.0898 338.6953 m
134.4268 338.6953 L
S
130.0898 349.3262 m
134.4268 349.3262 L
S
130.0898 359.9551 m
134.4268 359.9551 L
S
130.0898 381.2148 m
134.4268 381.2148 L
S
130.0898 391.8457 m
134.4268 391.8457 L
S
130.0898 402.4761 m
134.4268 402.4761 L
S
130.0898 413.106 m
134.4268 413.106 L
S
*U
1 J 2 w [1.1339 2.8347 ]0 d
130.0898 264.2871 m
563.876 264.2871 L
S
*u
0 J 1 w []0 d
530.7959 718.0854 m
530.7959 712.728 L
S
306.7168 532.2744 m
153.2207 423.7354 L
S
358.6758 570.5137 m
306.7168 532.2744 L
S
389.2617 593.6729 m
358.6758 570.5137 L
S
411.0322 610.5107 m
389.2617 593.6729 L
S
427.9268 623.8335 m
411.0322 610.5107 L
S
441.7314 634.917 m
427.9268 623.8335 L
S
453.4102 644.4131 m
441.7314 634.917 L
S
463.5576 652.7471 m
453.4102 644.4131 L
S
472.4873 660.1738 m
463.5576 652.7471 L
S
480.4805 666.8633 m
472.4873 660.1738 L
S
487.709 672.9863 m
480.4805 666.8633 L
S
494.3145 678.5708 m
487.709 672.9863 L
S
500.4082 683.7578 m
494.3145 678.5708 L
S
506.0215 688.5767 m
500.4082 683.7578 L
S
511.2656 693.0557 m
506.0215 688.5767 L
S
516.1689 697.2793 m
511.2656 693.0557 L
S
520.79 701.2476 m
516.1689 697.2793 L
S
525.127 704.9897 m
520.79 701.2476 L
S
529.2373 708.561 m
525.127 704.9897 L
S
533.1201 711.9341 m
529.2373 708.561 L
S
536.834 715.1377 m
533.1201 711.9346 L
S
540.377 718.1987 m
536.834 715.1377 L
S
543.75 721.1187 m
540.377 718.1987 L
S
546.9814 723.9248 m
543.75 721.1187 L
S
550.0713 726.6177 m
546.9814 723.9248 L
S
553.0762 729.1973 m
550.0713 726.6177 L
S
555.9395 731.6919 m
553.0762 729.1973 L
S
558.6885 734.0728 m
555.9395 731.6919 L
S
561.3535 736.3975 m
558.6885 734.0728 L
S
561.3535 736.3975 m
563.876 738.5518 L
S
*U
*u
3 w
306.7168 268.1406 m
130.0898 265.873 L
S
358.6758 271.5156 m
306.7168 268.1406 L
S
389.2617 274.4922 m
358.6758 271.5156 L
S
411.0322 277.0996 m
389.2617 274.4922 L
S
427.9268 279.4238 m
411.0322 277.0996 L
S
441.7314 281.4355 m
427.9268 279.4238 L
S
453.4102 283.2227 m
441.7314 281.4355 L
S
463.5576 284.752 m
453.4102 283.2227 L
S
472.4873 286.084 m
463.5576 284.752 L
S
480.4805 287.2188 m
472.4873 286.084 L
S
487.709 288.1816 m
480.4805 287.2188 L
S
494.3145 289.0039 m
487.709 288.1816 L
S
500.4082 289.6855 m
494.3145 289.0039 L
S
506.0215 290.2227 m
500.4082 289.6855 L
S
511.2656 290.6777 m
506.0215 290.2227 L
S
516.1689 290.9883 m
511.2656 290.6777 L
S
520.79 291.2441 m
516.1689 290.9883 L
S
525.127 291.4141 m
520.79 291.2441 L
S
529.2373 291.5 m
525.127 291.4141 L
S
533.1201 291.5 m
529.2373 291.5 L
S
536.834 291.4707 m
533.1201 291.5 L
S
540.377 291.3574 m
536.834 291.4707 L
S
543.75 291.2148 m
540.377 291.3574 L
S
546.9814 291.0176 m
543.75 291.2148 L
S
550.0713 290.791 m
546.9814 291.0176 L
S
553.0762 290.5078 m
550.0713 290.791 L
S
555.9395 290.1953 m
553.0762 290.5078 L
S
558.6885 289.8828 m
555.9395 290.1953 L
S
561.3535 289.5156 m
558.6885 289.8828 L
S
561.3535 289.5156 m
563.876 289.1172 L
S
*U
0.2835 w [1.1339 2.8347 ]0 d
153.8447 423.7354 m
306.7168 531.3672 L
S
306.7168 531.3672 m
358.6758 568.8413 L
S
[5.6693 5.6693 ]0 d
358.6758 567.9058 m
389.2617 589.9028 L
S
389.2617 589.9028 m
411.0322 605.6919 L
S
411.0322 605.6919 m
427.9268 618.0225 L
S
427.9268 618.0225 m
441.7314 628.1987 L
S
441.7314 628.1987 m
453.4102 636.8447 L
S
*u
2 w []0 d
130.0898 423.7354 m
563.876 423.7354 L
S
182.8145 423.7354 m
182.8145 430.1133 L
S
*U
0 To
1 0 0 1 180.1143 396.7778 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
1 w 4 M
/_Myriad-Roman 21.6 17.9495 -5.4 Tf
100 100 Tz
36 0 Xb
XB
( ) Tx 
(\r) TX 
TO
0 R
0 G
2 w 2.5 M
357.9395 423.7354 m
357.9395 430.1133 L
S
0 To
1 0 0 1 355.2393 396.7778 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
1 w 4 M
( ) Tx 
(\r) TX 
TO
0 R
0 G
2 w 2.5 M
533.0635 423.7354 m
533.0635 430.1133 L
S
0 To
1 0 0 1 530.3633 396.7778 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
1 w 4 M
( ) Tx 
(\r) TX 
TO
*u
0 R
0 G
2 w 2.5 M
130.0898 423.7354 m
130.0898 426.9102 L
S
143.9512 423.7354 m
143.9512 426.9102 L
S
155.6865 423.7354 m
155.6865 426.9102 L
S
165.835 423.7354 m
165.835 426.9102 L
S
174.793 423.7354 m
174.793 426.9102 L
S
235.5107 423.7354 m
235.5107 426.9102 L
S
266.3516 423.7354 m
266.3516 426.9102 L
S
288.2354 423.7354 m
288.2354 426.9102 L
S
305.2148 423.7354 m
305.2148 426.9102 L
S
319.0762 423.7354 m
319.0762 426.9102 L
S
330.8115 423.7354 m
330.8115 426.9102 L
S
340.959 423.7354 m
340.959 426.9102 L
S
349.917 423.7354 m
349.917 426.9102 L
S
410.6348 423.7354 m
410.6348 426.9102 L
S
441.4766 423.7354 m
441.4766 426.9102 L
S
463.3594 423.7354 m
463.3594 426.9102 L
S
480.3389 423.7354 m
480.3389 426.9102 L
S
494.2002 423.7354 m
494.2002 426.9102 L
S
505.9365 423.7354 m
505.9365 426.9102 L
S
516.084 423.7354 m
516.084 426.9102 L
S
525.042 423.7354 m
525.042 426.9102 L
S
130.0898 742.6338 m
563.876 742.6338 L
S
182.8145 742.6338 m
182.8145 736.2559 L
S
357.9395 742.6338 m
357.9395 736.2559 L
S
533.0635 742.6338 m
533.0635 736.2559 L
S
130.0898 742.6338 m
130.0898 739.4307 L
S
143.9512 742.6338 m
143.9512 739.4307 L
S
155.6865 742.6338 m
155.6865 739.4307 L
S
165.835 742.6338 m
165.835 739.4307 L
S
174.793 742.6338 m
174.793 739.4307 L
S
235.5107 742.6338 m
235.5107 739.4307 L
S
266.3516 742.6338 m
266.3516 739.4307 L
S
288.2354 742.6338 m
288.2354 739.4307 L
S
305.2148 742.6338 m
305.2148 739.4307 L
S
319.0762 742.6338 m
319.0762 739.4307 L
S
330.8115 742.6338 m
330.8115 739.4307 L
S
340.959 742.6338 m
340.959 739.4307 L
S
349.917 742.6338 m
349.917 739.4307 L
S
410.6348 742.6338 m
410.6348 739.4307 L
S
441.4766 742.6338 m
441.4766 739.4307 L
S
463.3594 742.6338 m
463.3594 739.4307 L
S
480.3389 742.6338 m
480.3389 739.4307 L
S
494.2002 742.6338 m
494.2002 739.4307 L
S
505.9365 742.6338 m
505.9365 739.4307 L
S
516.084 742.6338 m
516.084 739.4307 L
S
525.042 742.6338 m
525.042 739.4307 L
S
130.0898 423.7354 m
130.0898 742.6338 L
S
130.0898 460.5293 m
138.7637 460.5293 L
S
*U
0 To
1 0 0 1 102.8203 453.3291 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
1 w 4 M
/_ArialMT 21 21 -6.8188 Tf
(34) Tx 
(\r) TX 
TO
0 R
0 G
2 w 2.5 M
130.0898 509.5688 m
138.7637 509.5688 L
S
0 To
1 0 0 1 102.8203 502.397 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
1 w 4 M
(36) Tx 
(\r) TX 
TO
0 R
0 G
2 w 2.5 M
130.0898 558.6367 m
138.7637 558.6367 L
S
0 To
1 0 0 1 102.8203 551.4648 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
1 w 4 M
(38) Tx 
(\r) TX 
TO
0 R
0 G
2 w 2.5 M
130.0898 607.7046 m
138.7637 607.7046 L
S
0 To
1 0 0 1 102.8203 600.5327 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
1 w 4 M
(40) Tx 
(\r) TX 
TO
0 R
0 G
2 w 2.5 M
130.0898 656.772 m
138.7637 656.772 L
S
0 To
1 0 0 1 102.8203 649.5723 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
1 w 4 M
(42) Tx 
(\r) TX 
TO
0 R
0 G
2 w 2.5 M
130.0898 705.8398 m
138.7637 705.8398 L
S
0 To
1 0 0 1 102.8203 698.6401 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
1 w 4 M
(44) Tx 
(\r) TX 
TO
*u
0 R
0 G
2 w 2.5 M
130.0898 423.7354 m
134.4268 423.7354 L
S
130.0898 435.9814 m
134.4268 435.9814 L
S
130.0898 448.2554 m
134.4268 448.2554 L
S
130.0898 472.7749 m
134.4268 472.7749 L
S
130.0898 485.0488 m
134.4268 485.0488 L
S
130.0898 497.3232 m
134.4268 497.3232 L
S
130.0898 521.8428 m
134.4268 521.8428 L
S
130.0898 534.1167 m
134.4268 534.1167 L
S
130.0898 546.3911 m
134.4268 546.3911 L
S
130.0898 570.9106 m
134.4268 570.9106 L
S
130.0898 583.1846 m
134.4268 583.1846 L
S
130.0898 595.4302 m
134.4268 595.4302 L
S
130.0898 619.9785 m
134.4268 619.9785 L
S
130.0898 632.2241 m
134.4268 632.2241 L
S
130.0898 644.498 m
134.4268 644.498 L
S
130.0898 669.0176 m
134.4268 669.0176 L
S
130.0898 681.292 m
134.4268 681.292 L
S
130.0898 693.5659 m
134.4268 693.5659 L
S
130.0898 718.0854 m
134.4268 718.0854 L
S
130.0898 730.3599 m
134.4268 730.3599 L
S
130.0898 742.6338 m
134.4268 742.6338 L
S
563.876 423.7354 m
563.876 742.6338 L
S
563.876 460.5293 m
555.2021 460.5293 L
S
563.876 509.5688 m
555.2021 509.5688 L
S
563.876 558.6367 m
555.2021 558.6367 L
S
563.876 607.7046 m
555.2021 607.7046 L
S
563.876 656.772 m
555.2021 656.772 L
S
563.876 705.8398 m
555.2021 705.8398 L
S
563.876 423.7354 m
559.5391 423.7354 L
S
563.876 435.9814 m
559.5391 435.9814 L
S
563.876 448.2554 m
559.5391 448.2554 L
S
563.876 472.7749 m
559.5391 472.7749 L
S
563.876 485.0488 m
559.5391 485.0488 L
S
563.876 497.3232 m
559.5391 497.3232 L
S
563.876 521.8428 m
559.5391 521.8428 L
S
563.876 534.1167 m
559.5391 534.1167 L
S
563.876 546.3911 m
559.5391 546.3911 L
S
563.876 570.9106 m
559.5391 570.9106 L
S
563.876 583.1846 m
559.5391 583.1846 L
S
563.876 595.4302 m
559.5391 595.4302 L
S
563.876 619.9785 m
559.5391 619.9785 L
S
563.876 632.2241 m
559.5391 632.2241 L
S
563.876 644.498 m
559.5391 644.498 L
S
563.876 669.0176 m
559.5391 669.0176 L
S
563.876 681.292 m
559.5391 681.292 L
S
563.876 693.5659 m
559.5391 693.5659 L
S
563.876 718.0854 m
559.5391 718.0854 L
S
563.876 730.3599 m
559.5391 730.3599 L
S
563.876 742.6338 m
559.5391 742.6338 L
S
*U
0 To
1 0 0 1 410.6348 534.1167 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
1 w 4 M
/_SymbolMT 18 18 -3.9551 Tf
(W) Tx 
(\r) TX 
TO
0 To
1 0 0 1 425.8623 530.0386 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 11.16 11.16 -2.4521 Tf
(M) Tx 
(\r) TX 
TO
0 To
1 0 0 1 435.1592 534.1167 0 Tp
0 Tv
TP
0 Tr
/_ArialMT 17 17 -5.52 Tf
(=0.3, ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 480.6992 534.1167 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 18 18 -3.9551 Tf
(W) Tx 
(\r) TX 
TO
0 To
1 0 0 1 495.9258 530.0381 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 11.16 11.16 -2.4521 Tf
(L) Tx 
(\r) TX 
TO
0 To
1 0 0 1 501.1934 534.1167 0 Tp
0 Tv
TP
0 Tr
/_ArialMT 17 17 -5.52 Tf
(=0.7) Tx 
(\r) TX 
TO
0 To
1 0 0 1 410.6348 497.3232 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 18 18 -3.9551 Tf
(W) Tx 
(\r) TX 
TO
0 To
1 0 0 1 425.8623 493.2446 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 11.16 11.16 -2.4521 Tf
(M) Tx 
(\r) TX 
TO
0 To
1 0 0 1 435.1592 497.3232 0 Tp
0 Tv
TP
0 Tr
/_ArialMT 17 17 -5.52 Tf
(=0.3, ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 480.6992 497.3232 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 18 18 -3.9551 Tf
(W) Tx 
(\r) TX 
TO
0 To
1 0 0 1 495.9258 493.2446 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 11.16 11.16 -2.4521 Tf
(L) Tx 
(\r) TX 
TO
0 To
1 0 0 1 501.1934 497.3232 0 Tp
0 Tv
TP
0 Tr
/_ArialMT 17 17 -5.52 Tf
(=0.0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 410.6348 460.5293 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 18 18 -3.9551 Tf
(W) Tx 
(\r) TX 
TO
0 To
1 0 0 1 425.8623 456.4507 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 11.16 11.16 -2.4521 Tf
(M) Tx 
(\r) TX 
TO
0 To
1 0 0 1 435.1592 460.5293 0 Tp
0 Tv
TP
0 Tr
/_ArialMT 17 17 -5.52 Tf
(=1.0, ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 480.6992 460.5293 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 18 18 -3.9551 Tf
(W) Tx 
(\r) TX 
TO
0 To
1 0 0 1 495.9258 456.4507 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 11.16 11.16 -2.4521 Tf
(L) Tx 
(\r) TX 
TO
0 To
1 0 0 1 501.1934 460.5293 0 Tp
0 Tv
TP
0 Tr
/_ArialMT 17 17 -5.52 Tf
(=0.0) Tx 
(\r) TX 
TO
0 R
0 G
2.5 M
402.6416 539.021 m
383.5078 539.021 L
S
1 J 2 w [1.1339 2.8347 ]0 d
383.5078 502.2271 m
402.6416 502.2271 L
S
0 J [5.6693 5.6693 ]0 d
383.5078 465.4331 m
402.6416 465.4331 L
S
0 To
1 0 0 1 262.8413 680.2334 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
1 w 4 M []0 d
/_ArialMT 14.112 14.112 -4.5823 Tf
90 100 Tz
33.8688 0 Xb
XB
(High-Z SN Search Team) Tx 
(\r) TX 
TO
*u
0 R
0 G
2 w 2.5 M
130.0898 423.7354 m
563.876 423.7354 L
S
182.8145 423.7354 m
182.8145 417.3579 L
S
357.9395 423.7354 m
357.9395 417.3579 L
S
533.0635 423.7354 m
533.0635 417.3579 L
S
130.0898 423.7354 m
130.0898 420.5327 L
S
143.9512 423.7354 m
143.9512 420.5327 L
S
155.6865 423.7354 m
155.6865 420.5327 L
S
165.835 423.7354 m
165.835 420.5327 L
S
174.793 423.7354 m
174.793 420.5327 L
S
235.5107 423.7354 m
235.5107 420.5327 L
S
266.3516 423.7354 m
266.3516 420.5327 L
S
288.2354 423.7354 m
288.2354 420.5327 L
S
305.2148 423.7354 m
305.2148 420.5327 L
S
319.0762 423.7354 m
319.0762 420.5327 L
S
330.8115 423.7354 m
330.8115 420.5327 L
S
340.959 423.7354 m
340.959 420.5327 L
S
349.917 423.7354 m
349.917 420.5327 L
S
410.6348 423.7354 m
410.6348 420.5327 L
S
441.4766 423.7354 m
441.4766 420.5327 L
S
463.3594 423.7354 m
463.3594 420.5327 L
S
480.3389 423.7354 m
480.3389 420.5327 L
S
494.2002 423.7354 m
494.2002 420.5327 L
S
505.9365 423.7354 m
505.9365 420.5327 L
S
516.084 423.7354 m
516.084 420.5327 L
S
525.042 423.7354 m
525.042 420.5327 L
S
130.5039 157.9277 m
130.0898 423.7354 L
S
*U
130.0898 157.9863 m
138.7637 157.9863 L
S
130.0898 211.1367 m
138.7637 211.1367 L
S
0 To
1 0 0 1 87.2041 203.9375 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
1 w 4 M
/_ArialMT 21 21 -6.8188 Tf
100 100 Tz
36 0 Xb
XB
(-0.5) Tx 
(\r) TX 
TO
0 R
0 G
2 w 2.5 M
130.0898 264.2871 m
138.7637 264.2871 L
S
0 To
1 0 0 1 94.3965 257.0859 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
1 w 4 M
(0.0) Tx 
(\r) TX 
TO
0 R
0 G
2 w 2.5 M
130.0898 317.4355 m
138.7637 317.4355 L
S
0 To
1 0 0 1 94.3965 310.2363 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
1 w 4 M
(0.5) Tx 
(\r) TX 
TO
0 R
0 G
2 w 2.5 M
130.0898 370.5859 m
138.7637 370.5859 L
S
0 To
1 0 0 1 94.3965 363.3867 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
1 w 4 M
(1.0) Tx 
(\r) TX 
TO
0 R
0 G
2 w 2.5 M
130.0898 423.7354 m
138.7637 423.7354 L
S
*u
130.0898 168.6172 m
134.4268 168.6172 L
S
130.0898 179.2461 m
134.4268 179.2461 L
S
130.0898 189.877 m
134.4268 189.877 L
S
130.0898 200.5078 m
134.4268 200.5078 L
S
130.0898 221.7676 m
134.4268 221.7676 L
S
130.0898 232.3965 m
134.4268 232.3965 L
S
130.0898 243.0273 m
134.4268 243.0273 L
S
130.0898 253.6563 m
134.4268 253.6563 L
S
130.0898 274.916 m
134.4268 274.916 L
S
130.0898 285.5469 m
134.4268 285.5469 L
S
130.0898 296.1758 m
134.4268 296.1758 L
S
130.0898 306.8066 m
134.4268 306.8066 L
S
130.0898 328.0664 m
134.4268 328.0664 L
S
130.0898 338.6953 m
134.4268 338.6953 L
S
130.0898 349.3262 m
134.4268 349.3262 L
S
130.0898 359.9551 m
134.4268 359.9551 L
S
130.0898 381.2148 m
134.4268 381.2148 L
S
130.0898 391.8457 m
134.4268 391.8457 L
S
130.0898 402.4761 m
134.4268 402.4761 L
S
130.0898 413.106 m
134.4268 413.106 L
S
563.876 157.9277 m
563.876 423.7354 L
S
563.876 157.9863 m
555.2021 157.9863 L
S
563.876 211.1367 m
555.2021 211.1367 L
S
563.876 264.2871 m
555.2021 264.2871 L
S
563.876 317.4355 m
555.2021 317.4355 L
S
563.876 370.5859 m
555.2021 370.5859 L
S
563.876 423.7354 m
555.2021 423.7354 L
S
563.876 168.6172 m
559.5391 168.6172 L
S
563.876 179.2461 m
559.5391 179.2461 L
S
563.876 189.877 m
559.5391 189.877 L
S
563.876 200.5078 m
559.5391 200.5078 L
S
563.876 221.7676 m
559.5391 221.7676 L
S
563.876 232.3965 m
559.5391 232.3965 L
S
563.876 243.0273 m
559.5391 243.0273 L
S
563.876 253.6563 m
559.5391 253.6563 L
S
563.876 274.916 m
559.5391 274.916 L
S
563.876 285.5469 m
559.5391 285.5469 L
S
563.876 296.1758 m
559.5391 296.1758 L
S
563.876 306.8066 m
559.5391 306.8066 L
S
563.876 328.0664 m
559.5391 328.0664 L
S
563.876 338.6953 m
559.5391 338.6953 L
S
563.876 349.3262 m
559.5391 349.3262 L
S
563.876 359.9551 m
559.5391 359.9551 L
S
563.876 381.2148 m
559.5391 381.2148 L
S
563.876 391.8457 m
559.5391 391.8457 L
S
563.876 402.4761 m
559.5391 402.4761 L
S
563.876 413.106 m
559.5391 413.106 L
S
*U
0 To
0 1 -1 0 87.5234 267.4189 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
1 w 4 M
/_SymbolMT 18 18 -3.9551 Tf
(W) Tx 
(\r) TX 
TO
/BBAccumRotation (1.570796) XT
0 To
0 1 -1 0 91.0566 282.6465 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 11.16 11.16 -2.4521 Tf
(M) Tx 
(\r) TX 
TO
/BBAccumRotation (1.570796) XT
0 To
0 1 -1 0 86.9785 291.9434 0 Tp
0 Tv
TP
0 Tr
/_ArialMT 17 17 -5.52 Tf
(=0.3, ) Tx 
(\r) TX 
TO
/BBAccumRotation (1.570796) XT
0 To
0 1 -1 0 87.5234 331.4834 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 18 18 -3.9551 Tf
(W) Tx 
(\r) TX 
TO
/BBAccumRotation (1.570796) XT
0 To
0 1 -1 0 91.0566 346.71 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 11.16 11.16 -2.4521 Tf
(L) Tx 
(\r) TX 
TO
/BBAccumRotation (1.570796) XT
0 To
0 1 -1 0 86.9785 351.9775 0 Tp
0 Tv
TP
0 Tr
/_ArialMT 17 17 -5.52 Tf
(=0.0) Tx 
(\r) TX 
TO
/BBAccumRotation (1.570796) XT
*u
0 R
0 G
0.8504 w 2.5 M
130.5039 157.9277 m
S
183.2285 157.9277 m
183.2285 164.3047 L
S
*U
358.3535 157.9277 m
358.3535 164.3047 L
S
533.4775 157.9277 m
533.4775 164.3047 L
S
*u
130.5039 157.9277 m
130.5039 161.1016 L
S
144.3652 157.9277 m
144.3652 161.1016 L
S
156.1006 157.9277 m
156.1006 161.1016 L
S
166.249 157.9277 m
166.249 161.1016 L
S
175.207 157.9277 m
175.207 161.1016 L
S
235.9248 157.9277 m
235.9248 161.1016 L
S
266.7656 157.9277 m
266.7656 161.1016 L
S
288.6494 157.9277 m
288.6494 161.1016 L
S
305.6289 157.9277 m
305.6289 161.1016 L
S
319.4902 157.9277 m
319.4902 161.1016 L
S
331.2256 157.9277 m
331.2256 161.1016 L
S
341.373 157.9277 m
341.373 161.1016 L
S
350.3311 157.9277 m
350.3311 161.1016 L
S
411.0488 157.9277 m
411.0488 161.1016 L
S
441.8906 157.9277 m
441.8906 161.1016 L
S
463.7734 157.9277 m
463.7734 161.1016 L
S
480.7529 157.9277 m
480.7529 161.1016 L
S
494.6143 157.9277 m
494.6143 161.1016 L
S
506.3506 157.9277 m
506.3506 161.1016 L
S
516.498 157.9277 m
516.498 161.1016 L
S
525.4561 157.9277 m
525.4561 161.1016 L
S
*U
130.5039 157.9277 m
139.1777 157.9277 L
S
130.5039 168.5566 m
134.8408 168.5566 L
S
*u
2 w
130.5039 157.9277 m
564.29 157.9277 L
S
183.2285 157.9277 m
183.2285 164.3047 L
S
*U
0 To
1 0 0 1 162.2119 130.998 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
1 w 4 M
/_ArialMT 20 20 -6.4941 Tf
(0.01) Tx 
(\r) TX 
TO
0 R
0 G
2 w 2.5 M
358.3535 157.9277 m
358.3535 164.3047 L
S
0 To
1 0 0 1 337.3359 130.998 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
1 w 4 M
(0.10) Tx 
(\r) TX 
TO
0 R
0 G
2 w 2.5 M
533.4775 157.9277 m
533.4775 164.3047 L
S
0 To
1 0 0 1 512.4609 130.998 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
1 w 4 M
(1.00) Tx 
(\r) TX 
TO
*u
0 R
0 G
2 w 2.5 M
130.5039 157.9277 m
130.5039 161.1016 L
S
144.3652 157.9277 m
144.3652 161.1016 L
S
156.1006 157.9277 m
156.1006 161.1016 L
S
166.249 157.9277 m
166.249 161.1016 L
S
175.207 157.9277 m
175.207 161.1016 L
S
235.9248 157.9277 m
235.9248 161.1016 L
S
266.7656 157.9277 m
266.7656 161.1016 L
S
288.6494 157.9277 m
288.6494 161.1016 L
S
305.6289 157.9277 m
305.6289 161.1016 L
S
319.4902 157.9277 m
319.4902 161.1016 L
S
331.2256 157.9277 m
331.2256 161.1016 L
S
341.373 157.9277 m
341.373 161.1016 L
S
350.3311 157.9277 m
350.3311 161.1016 L
S
411.0488 157.9277 m
411.0488 161.1016 L
S
441.8906 157.9277 m
441.8906 161.1016 L
S
463.7734 157.9277 m
463.7734 161.1016 L
S
480.7529 157.9277 m
480.7529 161.1016 L
S
494.6143 157.9277 m
494.6143 161.1016 L
S
506.3506 157.9277 m
506.3506 161.1016 L
S
516.498 157.9277 m
516.498 161.1016 L
S
525.4561 157.9277 m
525.4561 161.1016 L
S
*U
0 To
1 0 0 1 342.0117 107.668 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
1 w 4 M
(z) Tx 
(\r) TX 
TO
0 R
0 G
2 w 2.5 M
130.5039 168.5566 m
134.8408 168.5566 L
S
564.29 168.5566 m
559.9531 168.5566 L
S
0 To
1 0 0 1 248.7661 703.2925 0 Tp
0 Tv
TP
0 Tr
0 O
0 g
1 w 4 M
/_ArialMT 14.112 14.112 -4.5823 Tf
90 100 Tz
33.8688 0 Xb
XB
(High-redshift \(z > 0.15\) SNe:) Tx 
(\r) TX 
TO
1 D
0 0 0 0 k
0 R
0 G
2.5 M
165.6621 555.3867 m
165.6362 555.7524 L
165.5581 556.1182 L
165.4272 556.4839 L
165.2705 556.8237 L
165.061 557.1372 L
164.8003 557.4238 L
164.5127 557.6855 L
164.1997 557.8945 L
163.8599 558.0513 L
163.4941 558.1821 L
163.1279 558.2603 L
162.7622 558.2866 L
162.3711 558.2603 L
162.0044 558.1821 L
161.6392 558.0513 L
161.2998 557.8945 L
160.9858 557.6855 L
160.6987 557.4238 L
160.438 557.1372 L
160.228 556.8237 L
160.0713 556.4839 L
159.9409 556.1182 L
159.8892 555.7524 L
159.8628 555.3867 L
159.8892 554.9951 L
159.9409 554.6294 L
160.0713 554.2637 L
160.228 553.9233 L
160.438 553.6104 L
160.6987 553.3228 L
160.9858 553.0879 L
161.2998 552.8789 L
161.6392 552.6963 L
162.0044 552.5913 L
162.3711 552.5127 L
162.7622 552.4873 L
163.1279 552.5127 L
163.4941 552.5913 L
163.8599 552.6963 L
164.1997 552.8789 L
164.5127 553.0879 L
164.8003 553.3228 L
165.061 553.6104 L
165.2705 553.9233 L
165.4272 554.2637 L
165.5581 554.6294 L
165.6362 554.9951 L
B
165.6621 555.3867 m
165.6362 555.7524 L
165.5581 556.1182 L
165.4272 556.4839 L
165.2705 556.8237 L
165.061 557.1372 L
164.8003 557.4238 L
164.5127 557.6855 L
164.1997 557.8945 L
163.8599 558.0513 L
163.4941 558.1821 L
163.1279 558.2603 L
162.7622 558.2866 L
162.3711 558.2603 L
162.0044 558.1821 L
161.6392 558.0513 L
161.2998 557.8945 L
160.9858 557.6855 L
160.6987 557.4238 L
160.438 557.1372 L
160.228 556.8237 L
160.0713 556.4839 L
159.9409 556.1182 L
159.8892 555.7524 L
159.8628 555.3867 L
159.8892 554.9951 L
159.9409 554.6294 L
160.0713 554.2637 L
160.228 553.9233 L
160.438 553.6104 L
160.6987 553.3228 L
160.9858 553.0879 L
161.2998 552.8789 L
161.6392 552.6963 L
162.0044 552.5913 L
162.3711 552.5127 L
162.7622 552.4873 L
163.1279 552.5127 L
163.4941 552.5913 L
163.8599 552.6963 L
164.1997 552.8789 L
164.5127 553.0879 L
164.8003 553.3228 L
165.061 553.6104 L
165.2705 553.9233 L
165.4272 554.2637 L
165.5581 554.6294 L
165.6362 554.9951 L
B
0 To
1 0 0 1 169.4243 550.8672 0 Tp
0 Tv
TP
0 Tr
0 g
4 M
/_ArialMT 13.824 13.824 -4.4887 Tf
33.1776 0 Xb
XB
(Calan/Tololo SN Search) Tx 
(\r) TX 
TO
0 To
1 0 0 1 169.4243 573.4648 0 Tp
0 Tv
TP
0 Tr
(CfA & other SN follow-up) Tx 
(\r) TX 
TO
0 To
1 0 0 1 156.0288 596.0527 0 Tp
0 Tv
TP
0 Tr
(Low-redshift \(z < 0.15\) SNe:) Tx 
(\r) TX 
TO
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 3 79 79 255 Lb
(Layer 4) Ln
0 A
0 D
0 R
0 G
0 J 0 j 0.5 w 2.5 M [0.3586 0.8964 ]0 d
0 XR
-7065.3779 531.5938 m
S
-7060.1821 569.2666 m
S
-7065.3779 531.5938 m
S
-7050.709 641.6069 m
S
-7051.8765 632.2808 m
S
-7046.6182 675.6226 m
S
-7047.2788 669.9814 m
S
-7045.4478 685.8555 m
S
-7043.9707 699.0649 m
S
[1.7928 1.7928 ]0 d
-7065.3779 530.9136 m
S
-7060.1821 567.9058 m
S
-7065.3779 530.9136 m
S
-7049.6938 644.3848 m
S
-7048.8013 651.0747 m
S
-7049.6938 644.3848 m
S
-7048.0269 656.9175 m
S
-7048.8262 650.9082 m
S
-7046.0088 672.1646 m
S
-7046.6182 667.5439 m
S
-7046.0088 672.1646 m
S
[]0 d
266.3516 504.9199 m
266.3516 495.1118 L
S
266.5625 500.0161 m
266.0557 500.0161 L
S
266.6343 495.1118 m
266.0981 495.1118 L
S
266.6343 504.9199 m
266.0981 504.9199 L
S
266.3516 504.9199 m
266.3516 495.1118 L
S
266.5625 500.0161 m
266.0557 500.0161 L
S
266.6343 495.1118 m
266.0981 495.1118 L
S
266.6343 504.9199 m
266.0981 504.9199 L
S
0.25 w
305.2148 538.0288 m
305.2148 529.2129 L
S
305.3521 533.6348 m
305.0483 533.6348 L
S
305.4683 529.2129 m
304.9321 529.2129 L
S
305.4683 538.0288 m
304.9321 538.0288 L
S
303.6836 536.2993 m
303.6836 530.9419 L
S
306.7168 536.2993 m
306.7168 530.9419 L
S
305.2148 538.0288 m
305.2148 529.2129 L
S
305.3521 533.6348 m
305.0483 533.6348 L
S
305.4683 529.2129 m
304.9321 529.2129 L
S
305.4683 538.0288 m
304.9321 538.0288 L
S
303.6836 536.2993 m
303.6836 530.9419 L
S
306.7168 536.2993 m
306.7168 530.9419 L
S
0.5 w
255.4668 501.4897 m
255.4668 489.6978 L
S
255.7178 495.5938 m
255.1309 495.5938 L
S
255.7485 489.6978 m
255.2124 489.6978 L
S
255.7485 501.4897 m
255.2124 501.4897 L
S
255.4668 501.4897 m
255.4668 489.6978 L
S
255.7178 495.5938 m
255.1309 495.5938 L
S
255.7485 489.6978 m
255.2124 489.6978 L
S
255.7485 501.4897 m
255.2124 501.4897 L
S
336.0557 558.1548 m
336.0557 548.3467 L
S
336.1426 553.2505 m
335.9404 553.2505 L
S
336.3086 548.3467 m
335.7734 548.3467 L
S
336.3086 558.1548 m
335.7734 558.1548 L
S
335.0352 555.9155 m
335.0352 550.5576 L
S
337.0479 555.9155 m
337.0479 550.5576 L
S
336.0557 558.1548 m
336.0557 548.3467 L
S
336.1426 553.2505 m
335.9404 553.2505 L
S
336.3086 548.3467 m
335.7734 548.3467 L
S
336.3086 558.1548 m
335.7734 558.1548 L
S
335.0352 555.9155 m
335.0352 550.5576 L
S
337.0479 555.9155 m
337.0479 550.5576 L
S
255.4668 505.4019 m
255.4668 495.5938 L
S
255.7178 500.498 m
255.1309 500.498 L
S
255.7485 495.5938 m
255.2124 495.5938 L
S
255.7485 505.4019 m
255.2124 505.4019 L
S
255.4668 505.4019 m
255.4668 495.5938 L
S
255.7178 500.498 m
255.1309 500.498 L
S
255.7485 495.5938 m
255.2124 495.5938 L
S
255.7485 505.4019 m
255.2124 505.4019 L
S
208.3828 461.748 m
208.3828 450.4663 L
S
208.6655 450.4663 m
208.1294 450.4663 L
S
208.6655 461.748 m
208.1294 461.748 L
S
208.3828 461.748 m
208.3828 450.4663 L
S
208.6655 450.4663 m
208.1294 450.4663 L
S
208.6655 461.748 m
208.1294 461.748 L
S
358.6758 576.8066 m
358.6758 565.5249 L
S
358.7656 571.1655 m
358.6152 571.1655 L
S
358.958 565.5249 m
358.4229 565.5249 L
S
358.958 576.8066 m
358.4229 576.8066 L
S
357.9395 573.8301 m
357.9395 568.4727 L
S
359.4414 573.8301 m
359.4414 568.4727 L
S
358.6758 576.8066 m
358.6758 565.5249 L
S
358.7656 571.1655 m
358.6152 571.1655 L
S
358.958 565.5249 m
358.4229 565.5249 L
S
358.958 576.8066 m
358.4229 576.8066 L
S
357.9395 573.8301 m
357.9395 568.4727 L
S
359.4414 573.8301 m
359.4414 568.4727 L
S
235.5107 478.416 m
235.5107 468.6079 L
S
235.8052 473.5122 m
235.0454 473.5122 L
S
235.7925 468.6079 m
235.2563 468.6079 L
S
235.7925 478.416 m
235.2563 478.416 L
S
235.5107 478.416 m
235.5107 468.6079 L
S
235.8052 473.5122 m
235.0454 473.5122 L
S
235.7925 468.6079 m
235.2563 468.6079 L
S
235.7925 478.416 m
235.2563 478.416 L
S
280.2129 514.9829 m
280.2129 504.6646 L
S
280.4102 509.8237 m
279.9873 509.8237 L
S
280.4956 504.6646 m
279.9595 504.6646 L
S
280.4956 514.9829 m
279.9595 514.9829 L
S
280.2129 514.9829 m
280.2129 504.6646 L
S
280.4102 509.8237 m
279.9873 509.8237 L
S
280.4956 504.6646 m
279.9595 504.6646 L
S
280.4956 514.9829 m
279.9595 514.9829 L
S
297.1924 537.8018 m
297.1924 528.4761 L
S
297.3472 533.1245 m
297.0103 533.1245 L
S
297.4751 528.4761 m
296.939 528.4761 L
S
297.4751 537.8018 m
296.939 537.8018 L
S
297.1924 537.8018 m
297.1924 528.4761 L
S
297.3472 533.1245 m
297.0103 533.1245 L
S
297.4751 528.4761 m
296.939 528.4761 L
S
297.4751 537.8018 m
296.939 537.8018 L
S
293.7344 527.2568 m
293.7344 518.4126 L
S
293.8975 522.835 m
293.543 522.835 L
S
294.0166 518.4126 m
293.4805 518.4126 L
S
294.0166 527.2568 m
293.4805 527.2568 L
S
293.7344 527.2568 m
293.7344 518.4126 L
S
293.8975 522.835 m
293.543 522.835 L
S
294.0166 518.4126 m
293.4805 518.4126 L
S
294.0166 527.2568 m
293.4805 527.2568 L
S
227.5166 489.2158 m
227.5166 478.9263 L
S
227.813 484.0571 m
226.9653 484.0571 L
S
227.771 478.9263 m
227.2349 478.9263 L
S
227.771 489.2158 m
227.2349 489.2158 L
S
227.5166 489.2158 m
227.5166 478.9263 L
S
227.813 484.0571 m
226.9653 484.0571 L
S
227.771 478.9263 m
227.2349 478.9263 L
S
227.771 489.2158 m
227.2349 489.2158 L
S
339.9961 553.7324 m
339.9961 544.917 L
S
340.0918 549.3105 m
339.8994 549.3105 L
S
340.2773 544.917 m
339.7422 544.917 L
S
340.2773 553.7324 m
339.7422 553.7324 L
S
339.0322 552.0034 m
339.0322 546.646 L
S
340.959 552.0034 m
340.959 546.646 L
S
339.9961 553.7324 m
339.9961 544.917 L
S
340.0918 549.3105 m
339.8994 549.3105 L
S
340.2773 544.917 m
339.7422 544.917 L
S
340.2773 553.7324 m
339.7422 553.7324 L
S
339.0322 552.0034 m
339.0322 546.646 L
S
340.959 552.0034 m
340.959 546.646 L
S
348.2158 578.5073 m
348.2158 569.6919 L
S
348.2891 574.0854 m
348.1152 574.0854 L
S
348.4697 569.6919 m
347.9346 569.6919 L
S
348.4697 578.5073 m
347.9346 578.5073 L
S
347.3379 576.7783 m
347.3379 571.4209 L
S
349.0664 576.7783 m
349.0664 571.4209 L
S
348.2158 578.5073 m
348.2158 569.6919 L
S
348.2891 574.0854 m
348.1152 574.0854 L
S
348.4697 569.6919 m
347.9346 569.6919 L
S
348.4697 578.5073 m
347.9346 578.5073 L
S
347.3379 576.7783 m
347.3379 571.4209 L
S
349.0664 576.7783 m
349.0664 571.4209 L
S
322.7891 552.9956 m
322.7891 544.1797 L
S
322.8955 548.5737 m
322.6543 548.5737 L
S
323.043 544.1797 m
322.5078 544.1797 L
S
323.043 552.9956 m
322.5078 552.9956 L
S
321.5703 551.2666 m
321.5703 545.9087 L
S
323.9795 551.2666 m
323.9795 545.9087 L
S
322.7891 552.9956 m
322.7891 544.1797 L
S
322.8955 548.5737 m
322.6543 548.5737 L
S
323.043 544.1797 m
322.5078 544.1797 L
S
323.043 552.9956 m
322.5078 552.9956 L
S
321.5703 551.2666 m
321.5703 545.9087 L
S
323.9795 551.2666 m
323.9795 545.9087 L
S
331.8887 555.6885 m
331.8887 545.8804 L
S
331.9805 550.7847 m
331.7686 550.7847 L
S
332.1416 545.8804 m
331.6064 545.8804 L
S
332.1416 555.6885 m
331.6064 555.6885 L
S
330.8115 553.4775 m
330.8115 548.1201 L
S
332.9375 553.4775 m
332.9375 548.1201 L
S
331.8887 555.6885 m
331.8887 545.8804 L
S
331.9805 550.7847 m
331.7686 550.7847 L
S
332.1416 545.8804 m
331.6064 545.8804 L
S
332.1416 555.6885 m
331.6064 555.6885 L
S
330.8115 553.4775 m
330.8115 548.1201 L
S
332.9375 553.4775 m
332.9375 548.1201 L
S
0.25 w
308.1914 535.8179 m
308.1914 527.002 L
S
308.3223 531.4238 m
308.0313 531.4238 L
S
308.4727 527.002 m
307.9375 527.002 L
S
308.4727 535.8179 m
307.9375 535.8179 L
S
306.7168 534.0884 m
306.7168 528.731 L
S
308.1914 535.8179 m
308.1914 527.002 L
S
308.3223 531.4238 m
308.0313 531.4238 L
S
308.4727 527.002 m
307.9375 527.002 L
S
308.4727 535.8179 m
307.9375 535.8179 L
S
306.7168 534.0884 m
306.7168 528.731 L
S
305.2148 540.0127 m
305.2148 530.1768 L
S
305.3521 535.0806 m
305.0483 535.0806 L
S
305.4683 530.1768 m
304.9321 530.1768 L
S
305.4683 540.0127 m
304.9321 540.0127 L
S
303.6836 537.7734 m
303.6836 532.416 L
S
306.7168 537.7734 m
306.7168 532.416 L
S
305.2148 540.0127 m
305.2148 530.1768 L
S
305.3521 535.0806 m
305.0483 535.0806 L
S
305.4683 530.1768 m
304.9321 530.1768 L
S
305.4683 540.0127 m
304.9321 540.0127 L
S
303.6836 537.7734 m
303.6836 532.416 L
S
306.7168 537.7734 m
306.7168 532.416 L
S
0.5 w
473.6494 679.3359 m
473.6494 656.772 L
S
473.666 668.0542 m
473.6328 668.0542 L
S
473.9316 656.772 m
473.3955 656.772 L
S
473.9316 679.3359 m
473.3955 679.3359 L
S
473.4795 670.7188 m
473.4795 665.3608 L
S
473.8193 670.7188 m
473.8193 665.3608 L
S
473.6494 679.3359 m
473.6494 656.772 L
S
473.666 668.0542 m
473.6328 668.0542 L
S
473.9316 656.772 m
473.3955 656.772 L
S
473.9316 679.3359 m
473.3955 679.3359 L
S
473.4795 670.7188 m
473.4795 665.3608 L
S
473.8193 670.7188 m
473.8193 665.3608 L
S
454.0615 658.2461 m
454.0615 642.0601 L
S
454.0977 650.1392 m
454.0547 650.1392 L
S
454.3438 642.0601 m
453.8086 642.0601 L
S
454.3438 658.2461 m
453.8086 658.2461 L
S
453.8633 652.832 m
453.8633 647.4746 L
S
454.2891 652.832 m
454.2891 647.4746 L
S
454.0615 658.2461 m
454.0615 642.0601 L
S
454.0977 650.1392 m
454.0547 650.1392 L
S
454.3438 642.0601 m
453.8086 642.0601 L
S
454.3438 658.2461 m
453.8086 658.2461 L
S
453.8633 652.832 m
453.8633 647.4746 L
S
454.2891 652.832 m
454.2891 647.4746 L
S
467.9805 656.0352 m
467.9805 631.9971 L
S
467.9844 644.0161 m
467.9473 644.0161 L
S
468.2334 631.9971 m
467.6982 631.9971 L
S
468.2334 656.0352 m
467.6982 656.0352 L
S
467.7813 646.6807 m
467.7813 641.3232 L
S
468.1504 646.6807 m
468.1504 641.3232 L
S
467.9805 656.0352 m
467.9805 631.9971 L
S
467.9844 644.0161 m
467.9473 644.0161 L
S
468.2334 631.9971 m
467.6982 631.9971 L
S
468.2334 656.0352 m
467.6982 656.0352 L
S
467.7813 646.6807 m
467.7813 641.3232 L
S
468.1504 646.6807 m
468.1504 641.3232 L
S
467.0732 660.457 m
467.0732 648.1831 L
S
467.0898 654.3062 m
467.0566 654.3062 L
S
467.3262 648.1831 m
466.791 648.1831 L
S
467.3262 660.457 m
466.791 660.457 L
S
466.9033 656.999 m
466.9033 651.6411 L
S
467.2432 656.999 m
467.2432 651.6411 L
S
467.0732 660.457 m
467.0732 648.1831 L
S
467.0898 654.3062 m
467.0566 654.3062 L
S
467.3262 648.1831 m
466.791 648.1831 L
S
467.3262 660.457 m
466.791 660.457 L
S
466.9033 656.999 m
466.9033 651.6411 L
S
467.2432 656.999 m
467.2432 651.6411 L
S
457.832 652.0947 m
457.832 642.2871 L
S
457.8672 647.1909 m
457.8252 647.1909 L
S
458.1143 642.2871 m
457.5791 642.2871 L
S
458.1143 652.0947 m
457.5791 652.0947 L
S
457.6338 649.8838 m
457.6338 644.5264 L
S
458.0586 649.8838 m
458.0586 644.5264 L
S
457.832 652.0947 m
457.832 642.2871 L
S
457.8672 647.1909 m
457.8252 647.1909 L
S
458.1143 642.2871 m
457.5791 642.2871 L
S
458.1143 652.0947 m
457.5791 652.0947 L
S
457.6338 649.8838 m
457.6338 644.5264 L
S
458.0586 649.8838 m
458.0586 644.5264 L
S
459.0508 664.1138 m
459.0508 645.9722 L
S
459.0703 655.043 m
459.0313 655.043 L
S
459.333 645.9722 m
458.7979 645.9722 L
S
459.333 664.1138 m
458.7979 664.1138 L
S
458.8525 657.7358 m
458.8525 652.3784 L
S
459.249 657.7358 m
459.249 652.3784 L
S
459.0508 664.1138 m
459.0508 645.9722 L
S
459.0703 655.043 m
459.0313 655.043 L
S
459.333 645.9722 m
458.7979 645.9722 L
S
459.333 664.1138 m
458.7979 664.1138 L
S
458.8525 657.7358 m
458.8525 652.3784 L
S
459.249 657.7358 m
459.249 652.3784 L
S
472.8271 675.6509 m
472.8271 663.377 L
S
472.8438 669.5278 m
472.8105 669.5278 L
S
473.0811 663.377 m
472.5459 663.377 L
S
473.0811 675.6509 m
472.5459 675.6509 L
S
472.6572 672.1929 m
472.6572 666.835 L
S
472.9971 672.1929 m
472.9971 666.835 L
S
472.8271 675.6509 m
472.8271 663.377 L
S
472.8438 669.5278 m
472.8105 669.5278 L
S
473.0811 663.377 m
472.5459 663.377 L
S
473.0811 675.6509 m
472.5459 675.6509 L
S
472.6572 672.1929 m
472.6572 666.835 L
S
472.9971 672.1929 m
472.9971 666.835 L
S
474.8115 680.8101 m
474.8115 666.0981 L
S
474.8281 673.4399 m
474.7949 673.4399 L
S
475.0938 666.0981 m
474.5586 666.0981 L
S
475.0938 680.8101 m
474.5586 680.8101 L
S
474.6416 676.1328 m
474.6416 670.7754 L
S
474.9814 676.1328 m
474.9814 670.7754 L
S
474.8115 680.8101 m
474.8115 666.0981 L
S
474.8281 673.4399 m
474.7949 673.4399 L
S
475.0938 666.0981 m
474.5586 666.0981 L
S
475.0938 680.8101 m
474.5586 680.8101 L
S
474.6416 676.1328 m
474.6416 670.7754 L
S
474.9814 676.1328 m
474.9814 670.7754 L
S
480.0273 688.8887 m
480.0273 676.6431 L
S
480.041 682.7661 m
480.0137 682.7661 L
S
480.2813 676.6431 m
479.7451 676.6431 L
S
480.2813 688.8887 m
479.7451 688.8887 L
S
479.8857 685.4585 m
479.8857 680.1011 L
S
480.1689 685.4585 m
480.1689 680.1011 L
S
480.0273 688.8887 m
480.0273 676.6431 L
S
480.041 682.7661 m
480.0137 682.7661 L
S
480.2813 676.6431 m
479.7451 676.6431 L
S
480.2813 688.8887 m
479.7451 688.8887 L
S
479.8857 685.4585 m
479.8857 680.1011 L
S
480.1689 685.4585 m
480.1689 680.1011 L
S
500.8623 677.125 m
500.8623 666.835 L
S
500.874 671.9658 m
500.8506 671.9658 L
S
501.1436 666.835 m
500.6084 666.835 L
S
501.1436 677.125 m
500.6084 677.125 L
S
500.749 674.6587 m
500.749 669.3013 L
S
500.9756 674.6587 m
500.9756 669.3013 L
S
500.8623 677.125 m
500.8623 666.835 L
S
500.874 671.9658 m
500.8506 671.9658 L
S
501.1436 666.835 m
500.6084 666.835 L
S
501.1436 677.125 m
500.6084 677.125 L
S
500.749 674.6587 m
500.749 669.3013 L
S
500.9756 674.6587 m
500.9756 669.3013 L
S
463.3594 654.3062 m
463.3594 644.98 L
S
463.3789 649.6572 m
463.3398 649.6572 L
S
463.6416 644.98 m
463.1064 644.98 L
S
463.6416 654.3062 m
463.1064 654.3062 L
S
463.1611 652.3218 m
463.1611 646.9644 L
S
463.5576 652.3218 m
463.5576 646.9644 L
S
463.3594 654.3062 m
463.3594 644.98 L
S
463.3789 649.6572 m
463.3398 649.6572 L
S
463.6416 644.98 m
463.1064 644.98 L
S
463.6416 654.3062 m
463.1064 654.3062 L
S
463.1611 652.3218 m
463.1611 646.9644 L
S
463.5576 652.3218 m
463.5576 646.9644 L
S
496.0713 676.1328 m
496.0713 663.8872 L
S
496.0986 670.0098 m
496.0723 670.0098 L
S
496.3535 663.8872 m
495.8184 663.8872 L
S
496.3535 676.1328 m
495.8184 676.1328 L
S
495.958 672.7026 m
495.958 667.3452 L
S
496.2129 672.7026 m
496.2129 667.3452 L
S
496.0713 676.1328 m
496.0713 663.8872 L
S
496.0986 670.0098 m
496.0723 670.0098 L
S
496.3535 663.8872 m
495.8184 663.8872 L
S
496.3535 676.1328 m
495.8184 676.1328 L
S
495.958 672.7026 m
495.958 667.3452 L
S
496.2129 672.7026 m
496.2129 667.3452 L
S
477.2207 670.2651 m
477.2207 658.4731 L
S
477.251 664.3691 m
477.2197 664.3691 L
S
477.5029 658.4731 m
476.9678 658.4731 L
S
477.5029 670.2651 m
476.9678 670.2651 L
S
477.0791 667.062 m
477.0791 661.7046 L
S
477.3916 667.062 m
477.3916 661.7046 L
S
477.2207 670.2651 m
477.2207 658.4731 L
S
477.251 664.3691 m
477.2197 664.3691 L
S
477.5029 658.4731 m
476.9678 658.4731 L
S
477.5029 670.2651 m
476.9678 670.2651 L
S
477.0791 667.062 m
477.0791 661.7046 L
S
477.3916 667.062 m
477.3916 661.7046 L
S
472.3174 658.9829 m
472.3174 647.7012 L
S
472.334 653.3423 m
472.3008 653.3423 L
S
472.5986 647.7012 m
472.0635 647.7012 L
S
472.5986 658.9829 m
472.0635 658.9829 L
S
472.1475 656.0068 m
472.1475 650.6494 L
S
472.4873 656.0068 m
472.4873 650.6494 L
S
472.3174 658.9829 m
472.3174 647.7012 L
S
472.334 653.3423 m
472.3008 653.3423 L
S
472.5986 647.7012 m
472.0635 647.7012 L
S
472.5986 658.9829 m
472.0635 658.9829 L
S
472.1475 656.0068 m
472.1475 650.6494 L
S
472.4873 656.0068 m
472.4873 650.6494 L
S
461.0352 661.6763 m
461.0352 651.8682 L
S
461.0547 656.772 m
461.0156 656.772 L
S
461.3174 651.8682 m
460.7822 651.8682 L
S
461.3174 661.6763 m
460.7822 661.6763 L
S
460.8369 659.4365 m
460.8369 654.0791 L
S
461.2334 659.4365 m
461.2334 654.0791 L
S
461.0352 661.6763 m
461.0352 651.8682 L
S
461.0547 656.772 m
461.0156 656.772 L
S
461.3174 651.8682 m
460.7822 651.8682 L
S
461.3174 661.6763 m
460.7822 661.6763 L
S
460.8369 659.4365 m
460.8369 654.0791 L
S
461.2334 659.4365 m
461.2334 654.0791 L
S
490.2891 677.3799 m
490.2891 666.5801 L
S
490.3164 671.9658 m
490.29 671.9658 L
S
490.5703 666.5801 m
490.0352 666.5801 L
S
490.5703 677.3799 m
490.0352 677.3799 L
S
490.1758 674.6587 m
490.1758 669.3013 L
S
490.4307 674.6587 m
490.4307 669.3013 L
S
490.2891 677.3799 m
490.2891 666.5801 L
S
490.3164 671.9658 m
490.29 671.9658 L
S
490.5703 666.5801 m
490.0352 666.5801 L
S
490.5703 677.3799 m
490.0352 677.3799 L
S
490.1758 674.6587 m
490.1758 669.3013 L
S
490.4307 674.6587 m
490.4307 669.3013 L
S
478.8086 672.7026 m
478.8086 662.895 L
S
478.8096 667.7988 m
478.7793 667.7988 L
S
479.0615 662.895 m
478.5264 662.895 L
S
479.0615 672.7026 m
478.5264 672.7026 L
S
478.6387 670.4917 m
478.6387 665.1343 L
S
478.9502 670.4917 m
478.9502 665.1343 L
S
478.8086 672.7026 m
478.8086 662.895 L
S
478.8096 667.7988 m
478.7793 667.7988 L
S
479.0615 662.895 m
478.5264 662.895 L
S
479.0615 672.7026 m
478.5264 672.7026 L
S
478.6387 670.4917 m
478.6387 665.1343 L
S
478.9502 670.4917 m
478.9502 665.1343 L
S
479.5742 665.8433 m
479.5742 656.5171 L
S
479.5752 661.1943 m
479.5439 661.1943 L
S
479.8271 656.5171 m
479.292 656.5171 L
S
479.8271 665.8433 m
479.292 665.8433 L
S
479.4033 663.8589 m
479.4033 658.5015 L
S
479.7158 663.8589 m
479.7158 658.5015 L
S
479.5742 665.8433 m
479.5742 656.5171 L
S
479.5752 661.1943 m
479.5439 661.1943 L
S
479.8271 656.5171 m
479.292 656.5171 L
S
479.8271 665.8433 m
479.292 665.8433 L
S
479.4033 663.8589 m
479.4033 658.5015 L
S
479.7158 663.8589 m
479.7158 658.5015 L
S
500.9756 686.1958 m
500.9756 672.4761 L
S
500.9873 679.3359 m
500.9639 679.3359 L
S
501.2568 672.4761 m
500.7217 672.4761 L
S
501.2568 686.1958 m
500.7217 686.1958 L
S
500.8623 682.0005 m
500.8623 676.6431 L
S
501.0889 682.0005 m
501.0889 676.6431 L
S
500.9756 686.1958 m
500.9756 672.4761 L
S
500.9873 679.3359 m
500.9639 679.3359 L
S
501.2568 672.4761 m
500.7217 672.4761 L
S
501.2568 686.1958 m
500.7217 686.1958 L
S
500.8623 682.0005 m
500.8623 676.6431 L
S
501.0889 682.0005 m
501.0889 676.6431 L
S
518.6924 719.0776 m
518.6924 692.5737 L
S
518.7012 705.8398 m
518.6836 705.8398 L
S
518.9736 692.5737 m
518.4385 692.5737 L
S
518.9736 719.0776 m
518.4385 719.0776 L
S
518.6074 708.5044 m
518.6074 703.147 L
S
518.7773 708.5044 m
518.7773 703.147 L
S
518.6924 719.0776 m
518.6924 692.5737 L
S
518.7012 705.8398 m
518.6836 705.8398 L
S
518.9736 692.5737 m
518.4385 692.5737 L
S
518.9736 719.0776 m
518.4385 719.0776 L
S
518.6074 708.5044 m
518.6074 703.147 L
S
518.7773 708.5044 m
518.7773 703.147 L
S
472.3174 675.1689 m
472.3174 663.8872 L
S
472.334 669.5278 m
472.3008 669.5278 L
S
472.5986 663.8872 m
472.0635 663.8872 L
S
472.5986 675.1689 m
472.0635 675.1689 L
S
472.1475 672.1929 m
472.1475 666.835 L
S
472.4873 672.1929 m
472.4873 666.835 L
S
472.3174 675.1689 m
472.3174 663.8872 L
S
472.334 669.5278 m
472.3008 669.5278 L
S
472.5986 663.8872 m
472.0635 663.8872 L
S
472.5986 675.1689 m
472.0635 675.1689 L
S
472.1475 672.1929 m
472.1475 666.835 L
S
472.4873 672.1929 m
472.4873 666.835 L
S
468.8584 673.9502 m
468.8584 663.1499 L
S
468.876 668.5356 m
468.8418 668.5356 L
S
469.1406 663.1499 m
468.6055 663.1499 L
S
469.1406 673.9502 m
468.6055 673.9502 L
S
468.6885 671.229 m
468.6885 665.8716 L
S
469.0293 671.229 m
469.0293 665.8716 L
S
468.8584 673.9502 m
468.8584 663.1499 L
S
468.876 668.5356 m
468.8418 668.5356 L
S
469.1406 663.1499 m
468.6055 663.1499 L
S
469.1406 673.9502 m
468.6055 673.9502 L
S
468.6885 671.229 m
468.6885 665.8716 L
S
469.0293 671.229 m
469.0293 665.8716 L
S
491.6211 682.2837 m
491.6211 671.002 L
S
491.6348 676.6431 m
491.6074 676.6431 L
S
491.874 671.002 m
491.3389 671.002 L
S
491.874 682.2837 m
491.3389 682.2837 L
S
491.4795 679.3076 m
491.4795 673.9502 L
S
491.7627 679.3076 m
491.7627 673.9502 L
S
491.6211 682.2837 m
491.6211 671.002 L
S
491.6348 676.6431 m
491.6074 676.6431 L
S
491.874 671.002 m
491.3389 671.002 L
S
491.874 682.2837 m
491.3389 682.2837 L
S
491.4795 679.3076 m
491.4795 673.9502 L
S
491.7627 679.3076 m
491.7627 673.9502 L
S
512.4844 714.4004 m
512.4844 688.4067 L
S
512.4805 701.418 m
512.46 701.418 L
S
512.7373 688.4067 m
512.2021 688.4067 L
S
512.7373 714.4004 m
512.2021 714.4004 L
S
512.3711 704.0825 m
512.3711 698.7251 L
S
512.5693 704.0825 m
512.5693 698.7251 L
S
512.4844 714.4004 m
512.4844 688.4067 L
S
512.4805 701.418 m
512.46 701.418 L
S
512.7373 688.4067 m
512.2021 688.4067 L
S
512.7373 714.4004 m
512.2021 714.4004 L
S
512.3711 704.0825 m
512.3711 698.7251 L
S
512.5693 704.0825 m
512.5693 698.7251 L
S
484.1943 673.9502 m
484.1943 664.1138 L
S
484.209 669.0176 m
484.1797 669.0176 L
S
484.4482 664.1138 m
483.9121 664.1138 L
S
484.4482 673.9502 m
483.9121 673.9502 L
S
484.0527 671.7104 m
484.0527 666.353 L
S
484.3359 671.7104 m
484.3359 666.353 L
S
484.1943 673.9502 m
484.1943 664.1138 L
S
484.209 669.0176 m
484.1797 669.0176 L
S
484.4482 664.1138 m
483.9121 664.1138 L
S
484.4482 673.9502 m
483.9121 673.9502 L
S
484.0527 671.7104 m
484.0527 666.353 L
S
484.3359 671.7104 m
484.3359 666.353 L
S
399.1836 600.3345 m
399.1836 591.5186 L
S
399.2129 595.9404 m
399.125 595.9404 L
S
399.4365 591.5186 m
398.9014 591.5186 L
S
399.4365 600.3345 m
398.9014 600.3345 L
S
398.7295 598.605 m
398.7295 593.2476 L
S
399.6084 598.605 m
399.6084 593.2476 L
S
399.1836 600.3345 m
399.1836 591.5186 L
S
399.2129 595.9404 m
399.125 595.9404 L
S
399.4365 591.5186 m
398.9014 591.5186 L
S
399.4365 600.3345 m
398.9014 600.3345 L
S
398.7295 598.605 m
398.7295 593.2476 L
S
399.6084 598.605 m
399.6084 593.2476 L
S
496.582 691.8364 m
496.582 678.1172 L
S
496.5811 684.9771 m
496.5547 684.9771 L
S
496.835 678.1172 m
496.2998 678.1172 L
S
496.835 691.8364 m
496.2998 691.8364 L
S
496.4404 687.6416 m
496.4404 682.2837 L
S
496.6953 687.6416 m
496.6953 682.2837 L
S
496.582 691.8364 m
496.582 678.1172 L
S
496.5811 684.9771 m
496.5547 684.9771 L
S
496.835 678.1172 m
496.2998 678.1172 L
S
496.835 691.8364 m
496.2998 691.8364 L
S
496.4404 687.6416 m
496.4404 682.2837 L
S
496.6953 687.6416 m
496.6953 682.2837 L
S
493.1797 709.27 m
493.1797 691.0996 L
S
493.1787 700.1987 m
493.1533 700.1987 L
S
493.4336 691.0996 m
492.8984 691.0996 L
S
493.4336 709.27 m
492.8984 709.27 L
S
493.0381 702.8638 m
493.0381 697.5059 L
S
493.2939 702.8638 m
493.2939 697.5059 L
S
493.1797 709.27 m
493.1797 691.0996 L
S
493.1787 700.1987 m
493.1533 700.1987 L
S
493.4336 691.0996 m
492.8984 691.0996 L
S
493.4336 709.27 m
492.8984 709.27 L
S
493.0381 702.8638 m
493.0381 697.5059 L
S
493.2939 702.8638 m
493.2939 697.5059 L
S
487.5674 683.9849 m
487.5674 671.7388 L
S
487.5947 677.8618 m
487.5684 677.8618 L
S
487.8496 671.7388 m
487.3145 671.7388 L
S
487.8496 683.9849 m
487.3145 683.9849 L
S
487.4541 680.5264 m
487.4541 675.1689 L
S
487.709 680.5264 m
487.709 675.1689 L
S
487.5674 683.9849 m
487.5674 671.7388 L
S
487.5947 677.8618 m
487.5684 677.8618 L
S
487.8496 671.7388 m
487.3145 671.7388 L
S
487.8496 683.9849 m
487.3145 683.9849 L
S
487.4541 680.5264 m
487.4541 675.1689 L
S
487.709 680.5264 m
487.709 675.1689 L
S
402.6416 606.4854 m
402.6416 598.123 L
S
402.668 602.3184 m
402.5859 602.3184 L
S
402.8945 598.123 m
402.3594 598.123 L
S
402.8945 606.4854 m
402.3594 606.4854 L
S
402.2158 604.9829 m
402.2158 599.6255 L
S
403.0381 604.9829 m
403.0381 599.6255 L
S
402.6416 606.4854 m
402.6416 598.123 L
S
402.668 602.3184 m
402.5859 602.3184 L
S
402.8945 598.123 m
402.3594 598.123 L
S
402.8945 606.4854 m
402.3594 606.4854 L
S
402.2158 604.9829 m
402.2158 599.6255 L
S
403.0381 604.9829 m
403.0381 599.6255 L
S
475.9453 672.7026 m
475.9453 663.377 L
S
475.9619 668.0542 m
475.9287 668.0542 L
S
476.2275 663.377 m
475.6924 663.377 L
S
476.2275 672.7026 m
475.6924 672.7026 L
S
475.7754 670.7188 m
475.7754 665.3608 L
S
476.1152 670.7188 m
476.1152 665.3608 L
S
475.9453 672.7026 m
475.9453 663.377 L
S
475.9619 668.0542 m
475.9287 668.0542 L
S
476.2275 663.377 m
475.6924 663.377 L
S
476.2275 672.7026 m
475.6924 672.7026 L
S
475.7754 670.7188 m
475.7754 665.3608 L
S
476.1152 670.7188 m
476.1152 665.3608 L
S
468.8584 659.21 m
468.8584 650.394 L
S
468.876 654.8159 m
468.8418 654.8159 L
S
469.1406 650.394 m
468.6055 650.394 L
S
469.1406 659.21 m
468.6055 659.21 L
S
468.6885 657.481 m
468.6885 652.1235 L
S
469.0293 657.481 m
469.0293 652.1235 L
S
468.8584 659.21 m
468.8584 650.394 L
S
468.876 654.8159 m
468.8418 654.8159 L
S
469.1406 650.394 m
468.6055 650.394 L
S
469.1406 659.21 m
468.6055 659.21 L
S
468.6885 657.481 m
468.6885 652.1235 L
S
469.0293 657.481 m
469.0293 652.1235 L
S
501.0889 691.355 m
501.0889 680.0728 L
S
501.1162 685.7139 m
501.0898 685.7139 L
S
501.3701 680.0728 m
500.835 680.0728 L
S
501.3701 691.355 m
500.835 691.355 L
S
500.9756 688.3784 m
500.9756 683.021 L
S
501.2305 688.3784 m
501.2305 683.021 L
S
501.0889 691.355 m
501.0889 680.0728 L
S
501.1162 685.7139 m
501.0898 685.7139 L
S
501.3701 680.0728 m
500.835 680.0728 L
S
501.3701 691.355 m
500.835 691.355 L
S
500.9756 688.3784 m
500.9756 683.021 L
S
501.2305 688.3784 m
501.2305 683.021 L
S
495.7031 687.4146 m
495.7031 677.125 L
S
495.7148 682.2837 m
495.6914 682.2837 L
S
495.9844 677.125 m
495.4492 677.125 L
S
495.9844 687.4146 m
495.4492 687.4146 L
S
495.5898 684.9487 m
495.5898 679.5913 L
S
495.8164 684.9487 m
495.8164 679.5913 L
S
495.7031 687.4146 m
495.7031 677.125 L
S
495.7148 682.2837 m
495.6914 682.2837 L
S
495.9844 677.125 m
495.4492 677.125 L
S
495.9844 687.4146 m
495.4492 687.4146 L
S
495.5898 684.9487 m
495.5898 679.5913 L
S
495.8164 684.9487 m
495.8164 679.5913 L
S
446.3799 641.8052 m
446.3799 632.9609 L
S
446.418 637.3833 m
446.3701 637.3833 L
S
446.6621 632.9609 m
446.127 632.9609 L
S
446.6621 641.8052 m
446.127 641.8052 L
S
446.1533 640.0762 m
446.1533 634.7188 L
S
446.6348 640.0762 m
446.6348 634.7188 L
S
446.3799 641.8052 m
446.3799 632.9609 L
S
446.418 637.3833 m
446.3701 637.3833 L
S
446.6621 632.9609 m
446.127 632.9609 L
S
446.6621 641.8052 m
446.127 641.8052 L
S
446.1533 640.0762 m
446.1533 634.7188 L
S
446.6348 640.0762 m
446.6348 634.7188 L
S
491.4795 682.5107 m
491.4795 671.7393 L
S
491.5068 677.125 m
491.4805 677.125 L
S
491.7607 671.7388 m
491.2256 671.7388 L
S
491.7607 682.5107 m
491.2256 682.5107 L
S
491.3662 679.8179 m
491.3662 674.4604 L
S
491.6211 679.8179 m
491.6211 674.4604 L
S
491.4795 682.5107 m
491.4795 671.7393 L
S
491.5068 677.125 m
491.4805 677.125 L
S
491.7607 671.7388 m
491.2256 671.7388 L
S
491.7607 682.5107 m
491.2256 682.5107 L
S
491.3662 679.8179 m
491.3662 674.4604 L
S
491.6211 679.8179 m
491.6211 674.4604 L
S
472.3174 668.5356 m
472.3174 653.8242 L
S
472.334 661.1943 m
472.3008 661.1943 L
S
472.5986 653.8242 m
472.0635 653.8242 L
S
472.5986 668.5356 m
472.0635 668.5356 L
S
472.1475 663.8589 m
472.1475 658.5015 L
S
472.4873 663.8589 m
472.4873 658.5015 L
S
472.3174 668.5356 m
472.3174 653.8242 L
S
472.334 661.1943 m
472.3008 661.1943 L
S
472.5986 653.8242 m
472.0635 653.8242 L
S
472.5986 668.5356 m
472.0635 668.5356 L
S
472.1475 663.8589 m
472.1475 658.5015 L
S
472.4873 663.8589 m
472.4873 658.5015 L
S
491.7627 672.958 m
491.7627 662.1577 L
S
491.7617 667.5723 m
491.7354 667.5723 L
S
492.0166 662.1577 m
491.4814 662.1577 L
S
492.0166 672.958 m
491.4814 672.958 L
S
491.6211 670.2368 m
491.6211 664.8794 L
S
491.876 670.2368 m
491.876 664.8794 L
S
491.7627 672.958 m
491.7627 662.1577 L
S
491.7617 667.5723 m
491.7354 667.5723 L
S
492.0166 662.1577 m
491.4814 662.1577 L
S
492.0166 672.958 m
491.4814 672.958 L
S
491.6211 670.2368 m
491.6211 664.8794 L
S
491.876 670.2368 m
491.876 664.8794 L
S
466.3359 659.7202 m
466.3359 649.8838 L
S
466.3682 654.8159 m
466.332 654.8159 L
S
466.6182 649.8838 m
466.083 649.8838 L
S
466.6182 659.7202 m
466.083 659.7202 L
S
466.166 657.481 m
466.166 652.1235 L
S
466.5342 657.481 m
466.5342 652.1235 L
S
466.3359 659.7202 m
466.3359 649.8838 L
S
466.3682 654.8159 m
466.332 654.8159 L
S
466.6182 649.8838 m
466.083 649.8838 L
S
466.6182 659.7202 m
466.083 659.7202 L
S
466.166 657.481 m
466.166 652.1235 L
S
466.5342 657.481 m
466.5342 652.1235 L
S
518.8906 703.1187 m
518.8906 692.3472 L
S
518.8867 697.7329 m
518.8662 697.7329 L
S
519.1436 692.3472 m
518.6084 692.3472 L
S
519.1436 703.1187 m
518.6084 703.1187 L
S
518.7773 700.3975 m
518.7773 695.04 L
S
518.9756 700.3975 m
518.9756 695.04 L
S
518.8906 703.1187 m
518.8906 692.3472 L
S
518.8867 697.7329 m
518.8662 697.7329 L
S
519.1436 692.3472 m
518.6084 692.3472 L
S
519.1436 703.1187 m
518.6084 703.1187 L
S
518.7773 700.3975 m
518.7773 695.04 L
S
[0.3586 0.8964 ]0 d
-7083.041 264.2871 m
S
[1.7928 1.7928 ]0 d
-7065.3779 261.3105 m
S
-7083.041 263.0117 m
S
-7048.8013 237.8105 m
S
-7048.8013 237.8105 m
S
-7046.0088 226.3594 m
S
[]0 d
266.3516 271.9961 m
266.3516 229.4766 L
S
266.5625 250.7363 m
266.0557 250.7363 L
S
266.6343 229.4766 m
266.0981 229.4766 L
S
266.6343 271.9961 m
266.0981 271.9961 L
S
266.3516 271.9961 m
266.3516 229.4766 L
S
266.5625 250.7363 m
266.0557 250.7363 L
S
266.6343 229.4766 m
266.0981 229.4766 L
S
266.6343 271.9961 m
266.0981 271.9961 L
S
305.2148 296.8281 m
305.2148 258.5605 L
S
305.3521 277.6953 m
305.0483 277.6953 L
S
305.4683 258.5605 m
304.9321 258.5605 L
S
305.4683 296.8281 m
304.9321 296.8281 L
S
305.2148 296.8281 m
305.2148 258.5605 L
S
305.3521 277.6953 m
305.0483 277.6953 L
S
305.4683 258.5605 m
304.9321 258.5605 L
S
305.4683 296.8281 m
304.9321 296.8281 L
S
255.4668 290.3379 m
255.4668 239.3125 L
S
255.7178 264.8242 m
255.1309 264.8242 L
S
255.7485 239.3125 m
255.2124 239.3125 L
S
255.7485 290.3379 m
255.2124 290.3379 L
S
255.4668 290.3379 m
255.4668 239.3125 L
S
255.7178 264.8242 m
255.1309 264.8242 L
S
255.7485 239.3125 m
255.2124 239.3125 L
S
255.7485 290.3379 m
255.2124 290.3379 L
S
336.0557 287.248 m
336.0557 244.7266 L
S
336.1426 265.9863 m
335.9404 265.9863 L
S
336.3086 244.7266 m
335.7734 244.7266 L
S
336.3086 287.248 m
335.7734 287.248 L
S
336.0557 287.248 m
336.0557 244.7266 L
S
336.1426 265.9863 m
335.9404 265.9863 L
S
336.3086 244.7266 m
335.7734 244.7266 L
S
336.3086 287.248 m
335.7734 287.248 L
S
255.4668 307.3457 m
255.4668 264.8242 L
S
255.7178 286.084 m
255.1309 286.084 L
S
255.7485 264.8242 m
255.2124 264.8242 L
S
255.7485 307.3457 m
255.2124 307.3457 L
S
255.4668 307.3457 m
255.4668 264.8242 L
S
255.7178 286.084 m
255.1309 286.084 L
S
255.7485 264.8242 m
255.2124 264.8242 L
S
255.7485 307.3457 m
255.2124 307.3457 L
S
208.3828 261.9336 m
208.3828 213.0352 L
S
208.729 237.4707 m
207.6401 237.4707 L
S
208.6655 213.0352 m
208.1294 213.0352 L
S
208.6655 261.9336 m
208.1294 261.9336 L
S
208.3828 261.9336 m
208.3828 213.0352 L
S
208.729 237.4707 m
207.6401 237.4707 L
S
208.6655 213.0352 m
208.1294 213.0352 L
S
208.6655 261.9336 m
208.1294 261.9336 L
S
358.6758 296.9141 m
358.6758 248.0156 L
S
358.7656 272.4512 m
358.6152 272.4512 L
S
358.958 248.0156 m
358.4229 248.0156 L
S
358.958 296.9141 m
358.4229 296.9141 L
S
358.6758 296.9141 m
358.6758 248.0156 L
S
358.7656 272.4512 m
358.6152 272.4512 L
S
358.958 248.0156 m
358.4229 248.0156 L
S
358.958 296.9141 m
358.4229 296.9141 L
S
235.5107 251.3613 m
235.5107 208.8398 L
S
235.8052 230.1016 m
235.0454 230.1016 L
S
235.7925 208.8398 m
235.2563 208.8398 L
S
235.7925 251.3613 m
235.2563 251.3613 L
S
235.5107 251.3613 m
235.5107 208.8398 L
S
235.8052 230.1016 m
235.0454 230.1016 L
S
235.7925 208.8398 m
235.2563 208.8398 L
S
235.7925 251.3613 m
235.2563 251.3613 L
S
280.2129 273.2148 m
280.2129 228.5703 L
S
280.4102 250.9063 m
279.9873 250.9063 L
S
280.4956 228.5703 m
279.9595 228.5703 L
S
280.4956 273.2148 m
279.9595 273.2148 L
S
280.2129 273.2148 m
280.2129 228.5703 L
S
280.4102 250.9063 m
279.9873 250.9063 L
S
280.4956 228.5703 m
279.9595 228.5703 L
S
280.4956 273.2148 m
279.9595 273.2148 L
S
297.1924 320.2422 m
297.1924 279.8496 L
S
297.3472 300.0605 m
297.0103 300.0605 L
S
297.4751 279.8496 m
296.939 279.8496 L
S
297.4751 320.2422 m
296.939 320.2422 L
S
297.1924 320.2422 m
297.1924 279.8496 L
S
297.3472 300.0605 m
297.0103 300.0605 L
S
297.4751 279.8496 m
296.939 279.8496 L
S
297.4751 320.2422 m
296.939 320.2422 L
S
293.7344 285.0938 m
293.7344 246.8242 L
S
293.8975 265.959 m
293.543 265.959 L
S
294.0166 246.8242 m
293.4805 246.8242 L
S
294.0166 285.0938 m
293.4805 285.0938 L
S
293.7344 285.0938 m
293.7344 246.8242 L
S
293.8975 265.959 m
293.543 265.959 L
S
294.0166 246.8242 m
293.4805 246.8242 L
S
294.0166 285.0938 m
293.4805 285.0938 L
S
227.5166 322.5957 m
227.5166 277.9492 L
S
227.813 300.2871 m
226.9653 300.2871 L
S
227.771 277.9492 m
227.2349 277.9492 L
S
227.771 322.5957 m
227.2349 322.5957 L
S
227.5166 322.5957 m
227.5166 277.9492 L
S
227.813 300.2871 m
226.9653 300.2871 L
S
227.771 277.9492 m
227.2349 277.9492 L
S
227.771 322.5957 m
227.2349 322.5957 L
S
339.9961 255.6973 m
339.9961 217.4297 L
S
340.0918 236.5645 m
339.8994 236.5645 L
S
340.2773 217.4297 m
339.7422 217.4297 L
S
340.2773 255.6973 m
339.7422 255.6973 L
S
339.9961 255.6973 m
339.9961 217.4297 L
S
340.0918 236.5645 m
339.8994 236.5645 L
S
340.2773 217.4297 m
339.7422 217.4297 L
S
340.2773 255.6973 m
339.7422 255.6973 L
S
348.2158 337.2793 m
348.2158 299.0117 L
S
348.2891 318.1445 m
348.1152 318.1445 L
S
348.4697 299.0117 m
347.9346 299.0117 L
S
348.4697 337.2793 m
347.9346 337.2793 L
S
348.2158 337.2793 m
348.2158 299.0117 L
S
348.2891 318.1445 m
348.1152 318.1445 L
S
348.4697 299.0117 m
347.9346 299.0117 L
S
348.4697 337.2793 m
347.9346 337.2793 L
S
322.7891 306.5801 m
322.7891 268.3125 L
S
322.8955 287.4453 m
322.6543 287.4453 L
S
323.043 268.3125 m
322.5078 268.3125 L
S
323.043 306.5801 m
322.5078 306.5801 L
S
323.9795 290.1387 m
323.9795 284.7813 L
S
322.7891 306.5801 m
322.7891 268.3125 L
S
322.8955 287.4453 m
322.6543 287.4453 L
S
323.043 268.3125 m
322.5078 268.3125 L
S
323.043 306.5801 m
322.5078 306.5801 L
S
323.9795 290.1387 m
323.9795 284.7813 L
S
331.8887 289.7129 m
331.8887 247.1934 L
S
331.9805 268.4531 m
331.7686 268.4531 L
S
332.1416 247.1934 m
331.6064 247.1934 L
S
332.1416 289.7129 m
331.6064 289.7129 L
S
331.8887 289.7129 m
331.8887 247.1934 L
S
331.9805 268.4531 m
331.7686 268.4531 L
S
332.1416 247.1934 m
331.6064 247.1934 L
S
332.1416 289.7129 m
331.6064 289.7129 L
S
308.1914 278.0352 m
308.1914 239.7676 L
S
308.3223 258.9004 m
308.0313 258.9004 L
S
308.4727 239.7676 m
307.9375 239.7676 L
S
308.4727 278.0352 m
307.9375 278.0352 L
S
308.1914 278.0352 m
308.1914 239.7676 L
S
308.3223 258.9004 m
308.0313 258.9004 L
S
308.4727 239.7676 m
307.9375 239.7676 L
S
308.4727 278.0352 m
307.9375 278.0352 L
S
305.2148 305.332 m
305.2148 262.8125 L
S
305.3521 284.0723 m
305.0483 284.0723 L
S
305.4683 262.8125 m
304.9321 262.8125 L
S
305.4683 305.332 m
304.9321 305.332 L
S
305.2148 305.332 m
305.2148 262.8125 L
S
305.3521 284.0723 m
305.0483 284.0723 L
S
305.4683 262.8125 m
304.9321 262.8125 L
S
305.4683 305.332 m
304.9321 305.332 L
S
473.6494 356.0449 m
473.6494 258.248 L
S
473.666 307.1465 m
473.6328 307.1465 L
S
473.9316 258.248 m
473.3955 258.248 L
S
473.9316 356.0449 m
473.3955 356.0449 L
S
473.4795 309.8398 m
473.4795 304.4824 L
S
473.8193 309.8398 m
473.8193 304.4824 L
S
473.6494 356.0449 m
473.6494 258.248 L
S
473.666 307.1465 m
473.6328 307.1465 L
S
473.9316 258.248 m
473.3955 258.248 L
S
473.9316 356.0449 m
473.3955 356.0449 L
S
473.4795 309.8398 m
473.4795 304.4824 L
S
473.8193 309.8398 m
473.8193 304.4824 L
S
454.0615 334.0762 m
454.0615 263.918 L
S
454.0977 298.9824 m
454.0547 298.9824 L
S
454.3438 263.918 m
453.8086 263.918 L
S
454.3438 334.0762 m
453.8086 334.0762 L
S
453.8633 301.6758 m
453.8633 296.3184 L
S
454.2891 301.6758 m
454.2891 296.3184 L
S
454.0615 334.0762 m
454.0615 263.918 L
S
454.0977 298.9824 m
454.0547 298.9824 L
S
454.3438 263.918 m
453.8086 263.918 L
S
454.3438 334.0762 m
453.8086 334.0762 L
S
453.8633 301.6758 m
453.8633 296.3184 L
S
454.2891 301.6758 m
454.2891 296.3184 L
S
467.9805 275.3984 m
467.9805 171.2246 L
S
467.9844 223.3262 m
467.9473 223.3262 L
S
468.2334 171.2246 m
467.6982 171.2246 L
S
468.2334 275.3984 m
467.6982 275.3984 L
S
467.7813 225.9902 m
467.7813 220.6328 L
S
468.1504 225.9902 m
468.1504 220.6328 L
S
467.9805 275.3984 m
467.9805 171.2246 L
S
467.9844 223.3262 m
467.9473 223.3262 L
S
468.2334 171.2246 m
467.6982 171.2246 L
S
468.2334 275.3984 m
467.6982 275.3984 L
S
467.7813 225.9902 m
467.7813 220.6328 L
S
468.1504 225.9902 m
468.1504 220.6328 L
S
467.0732 297.7637 m
467.0732 244.6133 L
S
467.0898 271.1738 m
467.0566 271.1738 L
S
467.3262 244.6133 m
466.791 244.6133 L
S
467.3262 297.7637 m
466.791 297.7637 L
S
466.9033 273.8672 m
466.9033 268.5098 L
S
467.2432 273.8672 m
467.2432 268.5098 L
S
467.0732 297.7637 m
467.0732 244.6133 L
S
467.0898 271.1738 m
467.0566 271.1738 L
S
467.3262 244.6133 m
466.791 244.6133 L
S
467.3262 297.7637 m
466.791 297.7637 L
S
466.9033 273.8672 m
466.9033 268.5098 L
S
467.2432 273.8672 m
467.2432 268.5098 L
S
457.832 294.248 m
457.832 251.7285 L
S
457.8672 272.9883 m
457.8252 272.9883 L
S
458.1143 251.7285 m
457.5791 251.7285 L
S
458.1143 294.248 m
457.5791 294.248 L
S
457.6338 275.6543 m
457.6338 270.2969 L
S
458.0586 275.6543 m
458.0586 270.2969 L
S
457.832 294.248 m
457.832 251.7285 L
S
457.8672 272.9883 m
457.8252 272.9883 L
S
458.1143 251.7285 m
457.5791 251.7285 L
S
458.1143 294.248 m
457.5791 294.248 L
S
457.6338 275.6543 m
457.6338 270.2969 L
S
458.0586 275.6543 m
458.0586 270.2969 L
S
459.0508 342.041 m
459.0508 263.3789 L
S
459.0703 302.7246 m
459.0313 302.7246 L
S
459.333 263.3789 m
458.7979 263.3789 L
S
459.333 342.041 m
458.7979 342.041 L
S
458.8525 305.3887 m
458.8525 300.0313 L
S
459.249 305.3887 m
459.249 300.0313 L
S
459.0508 342.041 m
459.0508 263.3789 L
S
459.0703 302.7246 m
459.0313 302.7246 L
S
459.333 263.3789 m
458.7979 263.3789 L
S
459.333 342.041 m
458.7979 342.041 L
S
458.8525 305.3887 m
458.8525 300.0313 L
S
459.249 305.3887 m
459.249 300.0313 L
S
472.8271 343.1172 m
472.8271 289.9688 L
S
472.8438 316.5566 m
472.8105 316.5566 L
S
473.0811 289.9688 m
472.5459 289.9688 L
S
473.0811 343.1172 m
472.5459 343.1172 L
S
472.6572 319.2227 m
472.6572 313.8652 L
S
472.9971 319.2227 m
472.9971 313.8652 L
S
472.8271 343.1172 m
472.8271 289.9688 L
S
472.8438 316.5566 m
472.8105 316.5566 L
S
473.0811 289.9688 m
472.5459 289.9688 L
S
473.0811 343.1172 m
472.5459 343.1172 L
S
472.6572 319.2227 m
472.6572 313.8652 L
S
472.9971 319.2227 m
472.9971 313.8652 L
S
474.8115 358.2559 m
474.8115 294.4746 L
S
474.8281 326.3652 m
474.7949 326.3652 L
S
475.0938 294.4746 m
474.5586 294.4746 L
S
475.0938 358.2559 m
474.5586 358.2559 L
S
474.6416 329.0293 m
474.6416 323.6719 L
S
474.9814 329.0293 m
474.9814 323.6719 L
S
474.8115 358.2559 m
474.8115 294.4746 L
S
474.8281 326.3652 m
474.7949 326.3652 L
S
475.0938 294.4746 m
474.5586 294.4746 L
S
475.0938 358.2559 m
474.5586 358.2559 L
S
474.6416 329.0293 m
474.6416 323.6719 L
S
474.9814 329.0293 m
474.9814 323.6719 L
S
480.0273 374.4688 m
480.0273 321.3203 L
S
480.041 347.8809 m
480.0137 347.8809 L
S
480.2813 321.3203 m
479.7451 321.3203 L
S
480.2813 374.4688 m
479.7451 374.4688 L
S
479.8857 350.5723 m
479.8857 345.2148 L
S
480.1689 350.5723 m
480.1689 345.2148 L
S
480.0273 374.4688 m
480.0273 321.3203 L
S
480.041 347.8809 m
480.0137 347.8809 L
S
480.2813 321.3203 m
479.7451 321.3203 L
S
480.2813 374.4688 m
479.7451 374.4688 L
S
479.8857 350.5723 m
479.8857 345.2148 L
S
480.1689 350.5723 m
480.1689 345.2148 L
S
500.8623 246.1172 m
500.8623 201.4707 L
S
500.874 223.8086 m
500.8506 223.8086 L
S
501.1436 201.4707 m
500.6084 201.4707 L
S
501.1436 246.1172 m
500.6084 246.1172 L
S
500.749 226.4727 m
500.749 221.1152 L
S
500.9756 226.4727 m
500.9756 221.1152 L
S
500.8623 246.1172 m
500.8623 201.4707 L
S
500.874 223.8086 m
500.8506 223.8086 L
S
501.1436 201.4707 m
500.6084 201.4707 L
S
501.1436 246.1172 m
500.6084 246.1172 L
S
500.749 226.4727 m
500.749 221.1152 L
S
500.9756 226.4727 m
500.9756 221.1152 L
S
463.3594 284.4121 m
463.3594 244.0195 L
S
463.3789 264.2012 m
463.3398 264.2012 L
S
463.6416 244.0195 m
463.1064 244.0195 L
S
463.6416 284.4121 m
463.1064 284.4121 L
S
463.1611 266.8945 m
463.1611 261.5371 L
S
463.5576 266.8945 m
463.5576 261.5371 L
S
463.3594 284.4121 m
463.3594 244.0195 L
S
463.3789 264.2012 m
463.3398 264.2012 L
S
463.6416 244.0195 m
463.1064 244.0195 L
S
463.6416 284.4121 m
463.1064 284.4121 L
S
463.1611 266.8945 m
463.1611 261.5371 L
S
463.5576 266.8945 m
463.5576 261.5371 L
S
496.0713 259.8926 m
496.0713 206.7422 L
S
496.0986 233.332 m
496.0723 233.332 L
S
496.3535 206.7422 m
495.8184 206.7422 L
S
496.3535 259.8926 m
495.8184 259.8926 L
S
495.958 235.9961 m
495.958 230.6387 L
S
496.2129 235.9961 m
496.2129 230.6387 L
S
496.0713 259.8926 m
496.0713 206.7422 L
S
496.0986 233.332 m
496.0723 233.332 L
S
496.3535 206.7422 m
495.8184 206.7422 L
S
496.3535 259.8926 m
495.8184 259.8926 L
S
495.958 235.9961 m
495.958 230.6387 L
S
496.2129 235.9961 m
496.2129 230.6387 L
S
477.2207 303.8008 m
477.2207 252.7773 L
S
477.251 278.2891 m
477.2197 278.2891 L
S
477.5029 252.7773 m
476.9678 252.7773 L
S
477.5029 303.8008 m
476.9678 303.8008 L
S
477.0791 280.9824 m
477.0791 275.625 L
S
477.3916 280.9824 m
477.3916 275.625 L
S
477.2207 303.8008 m
477.2207 252.7773 L
S
477.251 278.2891 m
477.2197 278.2891 L
S
477.5029 252.7773 m
476.9678 252.7773 L
S
477.5029 303.8008 m
476.9678 303.8008 L
S
477.0791 280.9824 m
477.0791 275.625 L
S
477.3916 280.9824 m
477.3916 275.625 L
S
472.3174 272.6484 m
472.3174 223.75 L
S
472.334 248.2148 m
472.3008 248.2148 L
S
472.5986 223.75 m
472.0635 223.75 L
S
472.5986 272.6484 m
472.0635 272.6484 L
S
472.1475 250.8789 m
472.1475 245.5215 L
S
472.4873 250.8789 m
472.4873 245.5215 L
S
472.3174 272.6484 m
472.3174 223.75 L
S
472.334 248.2148 m
472.3008 248.2148 L
S
472.5986 223.75 m
472.0635 223.75 L
S
472.5986 272.6484 m
472.0635 272.6484 L
S
472.1475 250.8789 m
472.1475 245.5215 L
S
472.4873 250.8789 m
472.4873 245.5215 L
S
461.0352 324.4375 m
461.0352 281.918 L
S
461.0547 303.1777 m
461.0156 303.1777 L
S
461.3174 281.918 m
460.7822 281.918 L
S
461.3174 324.4375 m
460.7822 324.4375 L
S
460.8369 305.8418 m
460.8369 300.4844 L
S
461.2334 305.8418 m
461.2334 300.4844 L
S
461.0352 324.4375 m
461.0352 281.918 L
S
461.0547 303.1777 m
461.0156 303.1777 L
S
461.3174 281.918 m
460.7822 281.918 L
S
461.3174 324.4375 m
460.7822 324.4375 L
S
460.8369 305.8418 m
460.8369 300.4844 L
S
461.2334 305.8418 m
461.2334 300.4844 L
S
490.2891 286.7363 m
490.2891 239.9648 L
S
490.3164 263.3516 m
490.29 263.3516 L
S
490.5703 239.9648 m
490.0352 239.9648 L
S
490.5703 286.7363 m
490.0352 286.7363 L
S
490.1758 266.0449 m
490.1758 260.6855 L
S
490.4307 266.0449 m
490.4307 260.6855 L
S
490.2891 286.7363 m
490.2891 239.9648 L
S
490.3164 263.3516 m
490.29 263.3516 L
S
490.5703 239.9648 m
490.0352 239.9648 L
S
490.5703 286.7363 m
490.0352 286.7363 L
S
490.1758 266.0449 m
490.1758 260.6855 L
S
490.4307 266.0449 m
490.4307 260.6855 L
S
478.8086 308.7617 m
478.8086 266.2422 L
S
478.8096 287.502 m
478.7793 287.502 L
S
479.0615 266.2422 m
478.5264 266.2422 L
S
479.0615 308.7617 m
478.5264 308.7617 L
S
478.6387 290.166 m
478.6387 284.8086 L
S
478.9502 290.166 m
478.9502 284.8086 L
S
478.8086 308.7617 m
478.8086 266.2422 L
S
478.8096 287.502 m
478.7793 287.502 L
S
479.0615 266.2422 m
478.5264 266.2422 L
S
479.0615 308.7617 m
478.5264 308.7617 L
S
478.6387 290.166 m
478.6387 284.8086 L
S
478.9502 290.166 m
478.9502 284.8086 L
S
479.5742 276.1914 m
479.5742 235.7988 L
S
479.5752 256.0098 m
479.5439 256.0098 L
S
479.8271 235.7988 m
479.292 235.7988 L
S
479.8271 276.1914 m
479.292 276.1914 L
S
479.4033 258.6738 m
479.4033 253.3164 L
S
479.7158 258.6738 m
479.7158 253.3164 L
S
479.5742 276.1914 m
479.5742 235.7988 L
S
479.5752 256.0098 m
479.5439 256.0098 L
S
479.8271 235.7988 m
479.292 235.7988 L
S
479.8271 276.1914 m
479.292 276.1914 L
S
479.4033 258.6738 m
479.4033 253.3164 L
S
479.7158 258.6738 m
479.7158 253.3164 L
S
500.9756 285.0078 m
500.9756 225.4805 L
S
500.9873 255.2441 m
500.9639 255.2441 L
S
501.2568 225.4805 m
500.7217 225.4805 L
S
501.2568 285.0078 m
500.7217 285.0078 L
S
500.8623 257.9082 m
500.8623 252.5508 L
S
501.0889 257.9082 m
501.0889 252.5508 L
S
500.9756 285.0078 m
500.9756 225.4805 L
S
500.9873 255.2441 m
500.9639 255.2441 L
S
501.2568 225.4805 m
500.7217 225.4805 L
S
501.2568 285.0078 m
500.7217 285.0078 L
S
500.8623 257.9082 m
500.8623 252.5508 L
S
501.0889 257.9082 m
501.0889 252.5508 L
S
518.6924 359.2188 m
518.6924 244.416 L
S
518.7012 301.8164 m
518.6836 301.8164 L
S
518.9736 244.416 m
518.4385 244.416 L
S
518.9736 359.2188 m
518.4385 359.2188 L
S
518.6074 304.4824 m
518.6074 299.125 L
S
518.7773 304.4824 m
518.7773 299.125 L
S
518.6924 359.2188 m
518.6924 244.416 L
S
518.7012 301.8164 m
518.6836 301.8164 L
S
518.9736 244.416 m
518.4385 244.416 L
S
518.9736 359.2188 m
518.4385 359.2188 L
S
518.6074 304.4824 m
518.6074 299.125 L
S
518.7773 304.4824 m
518.7773 299.125 L
S
472.3174 342.8066 m
472.3174 293.9082 L
S
472.334 318.3711 m
472.3008 318.3711 L
S
472.5986 293.9082 m
472.0635 293.9082 L
S
472.5986 342.8066 m
472.0635 342.8066 L
S
472.1475 321.0371 m
472.1475 315.6777 L
S
472.4873 321.0371 m
472.4873 315.6777 L
S
472.3174 342.8066 m
472.3174 293.9082 L
S
472.334 318.3711 m
472.3008 318.3711 L
S
472.5986 293.9082 m
472.0635 293.9082 L
S
472.5986 342.8066 m
472.0635 342.8066 L
S
472.1475 321.0371 m
472.1475 315.6777 L
S
472.4873 321.0371 m
472.4873 315.6777 L
S
468.8584 349.8359 m
468.8584 303.0645 L
S
468.876 326.4512 m
468.8418 326.4512 L
S
469.1406 303.0645 m
468.6055 303.0645 L
S
469.1406 349.8359 m
468.6055 349.8359 L
S
468.6885 329.1152 m
468.6885 323.7578 L
S
469.0293 329.1152 m
469.0293 323.7578 L
S
468.8584 349.8359 m
468.8584 303.0645 L
S
468.876 326.4512 m
468.8418 326.4512 L
S
469.1406 303.0645 m
468.6055 303.0645 L
S
469.1406 349.8359 m
468.6055 349.8359 L
S
468.6885 329.1152 m
468.6885 323.7578 L
S
469.0293 329.1152 m
469.0293 323.7578 L
S
491.6211 303.0938 m
491.6211 254.1953 L
S
491.6348 278.6582 m
491.6074 278.6582 L
S
491.874 254.1953 m
491.3389 254.1953 L
S
491.874 303.0938 m
491.3389 303.0938 L
S
491.4795 281.3223 m
491.4795 275.9648 L
S
491.7627 281.3223 m
491.7627 275.9648 L
S
491.6211 303.0938 m
491.6211 254.1953 L
S
491.6348 278.6582 m
491.6074 278.6582 L
S
491.874 254.1953 m
491.3389 254.1953 L
S
491.874 303.0938 m
491.3389 303.0938 L
S
491.4795 281.3223 m
491.4795 275.9648 L
S
491.7627 281.3223 m
491.7627 275.9648 L
S
512.4844 363.2441 m
512.4844 250.5664 L
S
512.4805 306.9199 m
512.46 306.9199 L
S
512.7373 250.5664 m
512.2021 250.5664 L
S
512.7373 363.2441 m
512.2021 363.2441 L
S
512.3711 309.584 m
512.3711 304.2266 L
S
512.5693 309.584 m
512.5693 304.2266 L
S
512.4844 363.2441 m
512.4844 250.5664 L
S
512.4805 306.9199 m
512.46 306.9199 L
S
512.7373 250.5664 m
512.2021 250.5664 L
S
512.7373 363.2441 m
512.2021 363.2441 L
S
512.3711 309.584 m
512.3711 304.2266 L
S
512.5693 309.584 m
512.5693 304.2266 L
S
484.1943 294.3906 m
484.1943 251.8711 L
S
484.209 273.1309 m
484.1797 273.1309 L
S
484.4482 251.8711 m
483.9121 251.8711 L
S
484.4482 294.3906 m
483.9121 294.3906 L
S
484.0527 275.7949 m
484.0527 270.4375 L
S
484.3359 275.7949 m
484.3359 270.4375 L
S
484.1943 294.3906 m
484.1943 251.8711 L
S
484.209 273.1309 m
484.1797 273.1309 L
S
484.4482 251.8711 m
483.9121 251.8711 L
S
484.4482 294.3906 m
483.9121 294.3906 L
S
484.0527 275.7949 m
484.0527 270.4375 L
S
484.3359 275.7949 m
484.3359 270.4375 L
S
399.1836 268.2266 m
399.1836 229.959 L
S
399.4365 229.959 m
398.9014 229.959 L
S
399.4365 268.2266 m
398.9014 268.2266 L
S
399.1836 268.2266 m
399.1836 229.959 L
S
399.4365 229.959 m
398.9014 229.959 L
S
399.4365 268.2266 m
398.9014 268.2266 L
S
496.582 326.082 m
496.582 266.5547 L
S
496.5811 296.3184 m
496.5547 296.3184 L
S
496.835 266.5547 m
496.2998 266.5547 L
S
496.835 326.082 m
496.2998 326.082 L
S
496.4404 298.9824 m
496.4404 293.625 L
S
496.6953 298.9824 m
496.6953 293.625 L
S
496.582 326.082 m
496.582 266.5547 L
S
496.5811 296.3184 m
496.5547 296.3184 L
S
496.835 266.5547 m
496.2998 266.5547 L
S
496.835 326.082 m
496.2998 326.082 L
S
496.4404 298.9824 m
496.4404 293.625 L
S
496.6953 298.9824 m
496.6953 293.625 L
S
493.1797 414.2397 m
493.1797 335.5781 L
S
493.1787 374.9238 m
493.1533 374.9238 L
S
493.4336 335.5781 m
492.8984 335.5781 L
S
493.4336 414.2397 m
492.8984 414.2397 L
S
493.0381 377.5879 m
493.0381 372.2305 L
S
493.2939 377.5879 m
493.2939 372.2305 L
S
493.1797 414.2397 m
493.1797 335.5781 L
S
493.1787 374.9238 m
493.1533 374.9238 L
S
493.4336 335.5781 m
492.8984 335.5781 L
S
493.4336 414.2397 m
492.8984 414.2397 L
S
493.0381 377.5879 m
493.0381 372.2305 L
S
493.2939 377.5879 m
493.2939 372.2305 L
S
487.5674 325.543 m
487.5674 272.3945 L
S
487.5947 298.9551 m
487.5684 298.9551 L
S
487.8496 272.3945 m
487.3145 272.3945 L
S
487.8496 325.543 m
487.3145 325.543 L
S
487.4541 301.6465 m
487.4541 296.2891 L
S
487.709 301.6465 m
487.709 296.2891 L
S
487.5674 325.543 m
487.5674 272.3945 L
S
487.5947 298.9551 m
487.5684 298.9551 L
S
487.8496 272.3945 m
487.3145 272.3945 L
S
487.8496 325.543 m
487.3145 325.543 L
S
487.4541 301.6465 m
487.4541 296.2891 L
S
487.709 301.6465 m
487.709 296.2891 L
S
402.6416 283.4766 m
402.6416 247.3359 L
S
402.668 265.3926 m
402.5859 265.3926 L
S
402.8945 247.3359 m
402.3594 247.3359 L
S
402.8945 283.4766 m
402.3594 283.4766 L
S
403.0381 262.7266 m
S
402.6416 283.4766 m
402.6416 247.3359 L
S
402.668 265.3926 m
402.5859 265.3926 L
S
402.8945 247.3359 m
402.3594 247.3359 L
S
402.8945 283.4766 m
402.3594 283.4766 L
S
403.0381 262.7266 m
S
475.9453 319.0527 m
475.9453 278.6582 L
S
475.9619 298.8691 m
475.9287 298.8691 L
S
476.2275 278.6582 m
475.6924 278.6582 L
S
476.2275 319.0527 m
475.6924 319.0527 L
S
475.7754 301.5332 m
475.7754 296.1758 L
S
476.1152 301.5332 m
476.1152 296.1758 L
S
475.9453 319.0527 m
475.9453 278.6582 L
S
475.9619 298.8691 m
475.9287 298.8691 L
S
476.2275 278.6582 m
475.6924 278.6582 L
S
476.2275 319.0527 m
475.6924 319.0527 L
S
475.7754 301.5332 m
475.7754 296.1758 L
S
476.1152 301.5332 m
476.1152 296.1758 L
S
468.8584 286.0566 m
468.8584 247.7891 L
S
468.876 266.9219 m
468.8418 266.9219 L
S
469.1406 247.7891 m
468.6055 247.7891 L
S
469.1406 286.0566 m
468.6055 286.0566 L
S
468.6885 269.5879 m
468.6885 264.2305 L
S
469.0293 269.5879 m
469.0293 264.2305 L
S
468.8584 286.0566 m
468.8584 247.7891 L
S
468.876 266.9219 m
468.8418 266.9219 L
S
469.1406 247.7891 m
468.6055 247.7891 L
S
469.1406 286.0566 m
468.6055 286.0566 L
S
468.6885 269.5879 m
468.6885 264.2305 L
S
469.0293 269.5879 m
469.0293 264.2305 L
S
501.0889 306.8906 m
501.0889 257.9941 L
S
501.1162 282.4277 m
501.0898 282.4277 L
S
501.3701 257.9941 m
500.835 257.9941 L
S
501.3701 306.8906 m
500.835 306.8906 L
S
500.9756 285.1211 m
500.9756 279.7637 L
S
501.2305 285.1211 m
501.2305 279.7637 L
S
501.0889 306.8906 m
501.0889 257.9941 L
S
501.1162 282.4277 m
501.0898 282.4277 L
S
501.3701 257.9941 m
500.835 257.9941 L
S
501.3701 306.8906 m
500.835 306.8906 L
S
500.9756 285.1211 m
500.9756 279.7637 L
S
501.2305 285.1211 m
501.2305 279.7637 L
S
495.7031 310.1797 m
495.7031 265.5332 L
S
495.7148 287.8711 m
495.6914 287.8711 L
S
495.9844 265.5332 m
495.4492 265.5332 L
S
495.9844 310.1797 m
495.4492 310.1797 L
S
495.5898 290.5352 m
495.5898 285.1777 L
S
495.8164 290.5352 m
495.8164 285.1777 L
S
495.7031 310.1797 m
495.7031 265.5332 L
S
495.7148 287.8711 m
495.6914 287.8711 L
S
495.9844 265.5332 m
495.4492 265.5332 L
S
495.9844 310.1797 m
495.4492 310.1797 L
S
495.5898 290.5352 m
495.5898 285.1777 L
S
495.8164 290.5352 m
495.8164 285.1777 L
S
446.3799 289.459 m
446.3799 251.1895 L
S
446.418 270.3242 m
446.3701 270.3242 L
S
446.6621 251.1895 m
446.127 251.1895 L
S
446.6621 289.459 m
446.127 289.459 L
S
446.1533 272.9883 m
446.1533 267.6309 L
S
446.6348 272.9883 m
446.6348 267.6309 L
S
446.3799 289.459 m
446.3799 251.1895 L
S
446.418 270.3242 m
446.3701 270.3242 L
S
446.6621 251.1895 m
446.127 251.1895 L
S
446.6621 289.459 m
446.127 289.459 L
S
446.1533 272.9883 m
446.1533 267.6309 L
S
446.6348 272.9883 m
446.6348 267.6309 L
S
491.4795 304.6523 m
491.4795 257.8809 L
S
491.5068 281.2656 m
491.4805 281.2656 L
S
491.7607 257.8809 m
491.2256 257.8809 L
S
491.7607 304.6523 m
491.2256 304.6523 L
S
491.3662 283.9297 m
491.3662 278.5723 L
S
491.6211 283.9297 m
491.6211 278.5723 L
S
491.4795 304.6523 m
491.4795 257.8809 L
S
491.5068 281.2656 m
491.4805 281.2656 L
S
491.7607 257.8809 m
491.2256 257.8809 L
S
491.7607 304.6523 m
491.2256 304.6523 L
S
491.3662 283.9297 m
491.3662 278.5723 L
S
491.6211 283.9297 m
491.6211 278.5723 L
S
472.3174 314.1191 m
472.3174 250.3398 L
S
472.334 282.2305 m
472.3008 282.2305 L
S
472.5986 250.3398 m
472.0635 250.3398 L
S
472.5986 314.1191 m
472.0635 314.1191 L
S
472.1475 284.8945 m
472.1475 279.5371 L
S
472.4873 284.8945 m
472.4873 279.5371 L
S
472.3174 314.1191 m
472.3174 250.3398 L
S
472.334 282.2305 m
472.3008 282.2305 L
S
472.5986 250.3398 m
472.0635 250.3398 L
S
472.5986 314.1191 m
472.0635 314.1191 L
S
472.1475 284.8945 m
472.1475 279.5371 L
S
472.4873 284.8945 m
472.4873 279.5371 L
S
491.7627 262.2168 m
491.7627 215.4453 L
S
491.7617 238.832 m
491.7354 238.832 L
S
492.0166 215.4453 m
491.4814 215.4453 L
S
492.0166 262.2168 m
491.4814 262.2168 L
S
491.6211 241.4961 m
491.6211 236.1387 L
S
491.876 241.4961 m
491.876 236.1387 L
S
491.7627 262.2168 m
491.7627 215.4453 L
S
491.7617 238.832 m
491.7354 238.832 L
S
492.0166 215.4453 m
491.4814 215.4453 L
S
492.0166 262.2168 m
491.4814 262.2168 L
S
491.6211 241.4961 m
491.6211 236.1387 L
S
491.876 241.4961 m
491.876 236.1387 L
S
466.3359 297.168 m
466.3359 254.6484 L
S
466.3682 275.9082 m
466.332 275.9082 L
S
466.6182 254.6484 m
466.083 254.6484 L
S
466.6182 297.168 m
466.083 297.168 L
S
466.166 278.5723 m
466.166 273.2148 L
S
466.5342 278.5723 m
466.5342 273.2148 L
S
466.3359 297.168 m
466.3359 254.6484 L
S
466.3682 275.9082 m
466.332 275.9082 L
S
466.6182 254.6484 m
466.083 254.6484 L
S
466.6182 297.168 m
466.083 297.168 L
S
466.166 278.5723 m
466.166 273.2148 L
S
466.5342 278.5723 m
466.5342 273.2148 L
S
518.8906 289.4023 m
518.8906 242.6289 L
S
518.8867 266.0156 m
518.8662 266.0156 L
S
519.1436 242.6289 m
518.6084 242.6289 L
S
519.1436 289.4023 m
518.6084 289.4023 L
S
518.7773 268.6797 m
518.7773 263.3223 L
S
518.9756 268.6797 m
518.9756 263.3223 L
S
518.8906 289.4023 m
518.8906 242.6289 L
S
518.8867 266.0156 m
518.8662 266.0156 L
S
519.1436 242.6289 m
518.6084 242.6289 L
S
519.1436 289.4023 m
518.6084 289.4023 L
S
518.7773 268.6797 m
518.7773 263.3223 L
S
518.9756 268.6797 m
518.9756 263.3223 L
S
227.8008 482.6396 m
227.8008 473.937 L
S
228.0244 478.3027 m
227.4629 478.3027 L
S
228.0542 473.937 m
227.5181 473.937 L
S
228.0542 482.6396 m
227.5181 482.6396 L
S
227.8008 482.6396 m
227.8008 473.937 L
S
228.0244 478.3027 m
227.4629 478.3027 L
S
228.0542 473.937 m
227.5181 473.937 L
S
228.0542 482.6396 m
227.5181 482.6396 L
S
235.6807 485.0205 m
235.6807 478.8413 L
S
235.8765 481.9307 m
235.3716 481.9307 L
S
235.9351 478.8413 m
235.3989 478.8413 L
S
235.9351 485.0205 m
235.3989 485.0205 L
S
235.6807 485.0205 m
235.6807 478.8413 L
S
235.8765 481.9307 m
235.3716 481.9307 L
S
235.9351 478.8413 m
235.3989 478.8413 L
S
235.9351 485.0205 m
235.3989 485.0205 L
S
358.5908 572.356 m
358.5908 565.0146 L
S
358.6553 568.6714 m
358.5557 568.6714 L
S
358.873 565.0146 m
358.3379 565.0146 L
S
358.873 572.356 m
358.3379 572.356 L
S
358.1094 571.3643 m
358.1094 566.0063 L
S
359.1016 571.3643 m
359.1016 566.0063 L
S
358.5908 572.356 m
358.5908 565.0146 L
S
358.6553 568.6714 m
358.5557 568.6714 L
S
358.873 565.0146 m
358.3379 565.0146 L
S
358.873 572.356 m
358.3379 572.356 L
S
358.1094 571.3643 m
358.1094 566.0063 L
S
359.1016 571.3643 m
359.1016 566.0063 L
S
335.6582 557.8145 m
335.6582 549.5659 L
S
335.7266 553.7041 m
335.5908 553.7041 L
S
335.9404 549.5654 m
335.4053 549.5654 L
S
335.9404 557.8145 m
335.4053 557.8145 L
S
334.9785 556.3687 m
334.9785 551.0112 L
S
336.3389 556.3687 m
336.3389 551.0112 L
S
335.6582 557.8145 m
335.6582 549.5659 L
S
335.7266 553.7041 m
335.5908 553.7041 L
S
335.9404 549.5654 m
335.4053 549.5654 L
S
335.9404 557.8145 m
335.4053 557.8145 L
S
334.9785 556.3687 m
334.9785 551.0112 L
S
336.3389 556.3687 m
336.3389 551.0112 L
S
256.1465 506.9609 m
256.1465 500.1011 L
S
256.3271 503.5308 m
255.9385 503.5308 L
S
256.4292 500.1011 m
255.8931 500.1011 L
S
256.4292 506.9609 m
255.8931 506.9609 L
S
256.1465 506.9609 m
256.1465 500.1011 L
S
256.3271 503.5308 m
255.9385 503.5308 L
S
256.4292 500.1011 m
255.8931 500.1011 L
S
256.4292 506.9609 m
255.8931 506.9609 L
S
0.25 w
305.5547 526.4351 m
305.5547 518.7529 L
S
305.6411 522.5796 m
305.4399 522.5796 L
S
305.8091 518.7529 m
305.2729 518.7529 L
S
305.8091 526.4351 m
305.2729 526.4351 L
S
304.5342 519.915 m
S
304.5342 525.2729 m
S
305.5547 526.4351 m
305.5547 518.7529 L
S
305.6411 522.5796 m
305.4399 522.5796 L
S
305.8091 518.7529 m
305.2729 518.7529 L
S
305.8091 526.4351 m
305.2729 526.4351 L
S
0.5 w
249.6836 499.0806 m
249.6836 490.0381 L
S
249.8525 494.5732 m
249.4297 494.5732 L
S
249.938 490.0381 m
249.4019 490.0381 L
S
249.938 499.0806 m
249.4019 499.0806 L
S
251.7529 497.2378 m
251.7529 491.8804 L
S
249.6836 499.0806 m
249.6836 490.0381 L
S
249.8525 494.5732 m
249.4297 494.5732 L
S
249.938 490.0381 m
249.4019 490.0381 L
S
249.938 499.0806 m
249.4019 499.0806 L
S
251.7529 497.2378 m
251.7529 491.8804 L
S
219.2119 470.6772 m
219.2119 463.6191 L
S
219.4531 467.1343 m
218.8271 467.1343 L
S
219.4653 463.6191 m
218.9292 463.6191 L
S
219.4653 470.6772 m
218.9292 470.6772 L
S
219.2119 470.6772 m
219.2119 463.6191 L
S
219.4531 467.1343 m
218.8271 467.1343 L
S
219.4653 463.6191 m
218.9292 463.6191 L
S
219.4653 470.6772 m
218.9292 470.6772 L
S
279.6182 517.5625 m
279.6182 507.1309 L
S
279.7593 512.3467 m
279.4761 512.3467 L
S
279.8999 507.1309 m
279.3638 507.1309 L
S
279.8999 517.5625 m
279.3638 517.5625 L
S
279.6182 517.5625 m
279.6182 507.1309 L
S
279.7593 512.3467 m
279.4761 512.3467 L
S
279.8999 507.1309 m
279.3638 507.1309 L
S
279.8999 517.5625 m
279.3638 517.5625 L
S
195.0322 455.7104 m
195.0322 445.4771 L
S
195.3364 450.5796 m
194.4722 450.5796 L
S
195.314 445.4771 m
194.7778 445.4771 L
S
195.314 455.7104 m
194.7778 455.7104 L
S
195.0322 455.7104 m
195.0322 445.4771 L
S
195.3364 450.5796 m
194.4722 450.5796 L
S
195.314 445.4771 m
194.7778 445.4771 L
S
195.314 455.7104 m
194.7778 455.7104 L
S
0.25 w
303.4287 533.7485 m
303.4287 527.1436 L
S
303.5464 530.46 m
303.3394 530.46 L
S
303.7114 527.1436 m
303.1753 527.1436 L
S
303.7114 533.7485 m
303.1753 533.7485 L
S
304.4775 527.7671 m
S
304.4775 533.1245 m
S
303.4287 533.7485 m
303.4287 527.1436 L
S
303.5464 530.46 m
303.3394 530.46 L
S
303.7114 527.1436 m
303.1753 527.1436 L
S
303.7114 533.7485 m
303.1753 533.7485 L
S
0.5 w
242.8525 492.8442 m
242.8525 484.397 L
S
243.041 488.6206 m
242.5791 488.6206 L
S
243.106 484.397 m
242.5698 484.397 L
S
243.106 492.8442 m
242.5698 492.8442 L
S
242.8525 492.8442 m
242.8525 484.397 L
S
243.041 488.6206 m
242.5791 488.6206 L
S
243.106 484.397 m
242.5698 484.397 L
S
243.106 492.8442 m
242.5698 492.8442 L
S
218.1631 468.9482 m
218.1631 458.6865 L
S
218.4102 463.8174 m
217.7725 463.8174 L
S
218.4165 458.687 m
217.8804 458.687 L
S
218.4165 468.9482 m
217.8804 468.9482 L
S
218.1631 468.9482 m
218.1631 458.6865 L
S
218.4102 463.8174 m
217.7725 463.8174 L
S
218.4165 458.687 m
217.8804 458.687 L
S
218.4165 468.9482 m
217.8804 468.9482 L
S
261.0508 514.3027 m
261.0508 504.041 L
S
261.2324 509.1719 m
260.8691 509.1719 L
S
261.3335 504.041 m
260.7974 504.041 L
S
261.3335 514.3027 m
260.7974 514.3027 L
S
261.0508 514.3027 m
261.0508 504.041 L
S
261.2324 509.1719 m
260.8691 509.1719 L
S
261.3335 504.041 m
260.7974 504.041 L
S
261.3335 514.3027 m
260.7974 514.3027 L
S
172.2695 439.7515 m
172.2695 424.5576 L
S
172.5522 424.5576 m
172.0161 424.5576 L
S
172.5522 439.7515 m
172.0161 439.7515 L
S
172.2695 439.7515 m
172.2695 424.5576 L
S
172.5522 424.5576 m
172.0161 424.5576 L
S
172.5522 439.7515 m
172.0161 439.7515 L
S
374.5498 586.3877 m
374.5498 580.1797 L
S
374.5771 583.2979 m
374.4951 583.2979 L
S
374.8037 580.1797 m
374.2686 580.1797 L
S
374.8037 586.3877 m
374.2686 586.3877 L
S
374.125 585.9624 m
374.125 580.605 L
S
374.9473 585.9624 m
374.9473 580.605 L
S
374.5498 586.3877 m
374.5498 580.1797 L
S
374.5771 583.2979 m
374.4951 583.2979 L
S
374.8037 580.1797 m
374.2686 580.1797 L
S
374.8037 586.3877 m
374.2686 586.3877 L
S
374.125 585.9624 m
374.125 580.605 L
S
374.9473 585.9624 m
374.9473 580.605 L
S
255.2686 500.186 m
255.2686 488.4507 L
S
255.4639 494.3184 m
255.0723 494.3184 L
S
255.5503 488.4507 m
255.0142 488.4507 L
S
255.5503 500.186 m
255.0142 500.186 L
S
255.2686 500.186 m
255.2686 488.4507 L
S
255.4639 494.3184 m
255.0723 494.3184 L
S
255.5503 488.4507 m
255.0142 488.4507 L
S
255.5503 500.186 m
255.0142 500.186 L
S
208.6953 462.2017 m
208.6953 455.0303 L
S
208.9697 458.6016 m
208.25 458.6016 L
S
208.9771 455.0303 m
208.4409 455.0303 L
S
208.9771 462.2017 m
208.4409 462.2017 L
S
208.6953 462.2017 m
208.6953 455.0303 L
S
208.9697 458.6016 m
208.25 458.6016 L
S
208.9771 455.0303 m
208.4409 455.0303 L
S
208.9771 462.2017 m
208.4409 462.2017 L
S
278.5693 521.1343 m
278.5693 510.5044 L
S
278.6978 515.8335 m
278.4116 515.8335 L
S
278.8511 510.5044 m
278.3149 510.5044 L
S
278.8511 521.1343 m
278.3149 521.1343 L
S
279.9863 513.1401 m
S
279.9863 518.498 m
S
278.5693 521.1343 m
278.5693 510.5044 L
S
278.6978 515.8335 m
278.4116 515.8335 L
S
278.8511 510.5044 m
278.3149 510.5044 L
S
278.8511 521.1343 m
278.3149 521.1343 L
S
297.1357 536.0444 m
297.1357 527.6821 L
S
297.249 531.8774 m
297.0225 531.8774 L
S
297.4185 527.6821 m
296.8823 527.6821 L
S
297.4185 536.0444 m
296.8823 536.0444 L
S
297.1357 536.0444 m
297.1357 527.6821 L
S
297.249 531.8774 m
297.0225 531.8774 L
S
297.4185 527.6821 m
296.8823 527.6821 L
S
297.4185 536.0444 m
296.8823 536.0444 L
S
293.8193 519.7451 m
293.8193 512.4316 L
S
293.9229 516.0884 m
293.6875 516.0884 L
S
294.0737 512.4316 m
293.5376 512.4316 L
S
294.0737 519.7451 m
293.5376 519.7451 L
S
293.8193 519.7451 m
293.8193 512.4316 L
S
293.9229 516.0884 m
293.6875 516.0884 L
S
294.0737 512.4316 m
293.5376 512.4316 L
S
294.0737 519.7451 m
293.5376 519.7451 L
S
340.7324 553.4775 m
340.7324 546.8159 L
S
340.8105 550.1606 m
340.6836 550.1606 L
S
341.0146 546.8159 m
340.4795 546.8159 L
S
341.0146 553.4775 m
340.4795 553.4775 L
S
340.1094 552.8257 m
340.1094 547.4683 L
S
341.3848 552.8257 m
341.3848 547.4683 L
S
340.7324 553.4775 m
340.7324 546.8159 L
S
340.8105 550.1606 m
340.6836 550.1606 L
S
341.0146 546.8159 m
340.4795 546.8159 L
S
341.0146 553.4775 m
340.4795 553.4775 L
S
340.1094 552.8257 m
340.1094 547.4683 L
S
341.3848 552.8257 m
341.3848 547.4683 L
S
347.5645 567.3389 m
347.5645 557.9277 L
S
347.6367 562.6333 m
347.5195 562.6333 L
S
347.8457 557.9277 m
347.3105 557.9277 L
S
347.8457 567.3389 m
347.3105 567.3389 L
S
346.9971 565.2979 m
346.9971 559.9404 L
S
348.1592 565.2979 m
348.1592 559.9404 L
S
347.5645 567.3389 m
347.5645 557.9277 L
S
347.6367 562.6333 m
347.5195 562.6333 L
S
347.8457 557.9277 m
347.3105 557.9277 L
S
347.8457 567.3389 m
347.3105 567.3389 L
S
346.9971 565.2979 m
346.9971 559.9404 L
S
348.1592 565.2979 m
348.1592 559.9404 L
S
323.9229 552.5986 m
323.9229 545.7388 L
S
324.0029 549.1689 m
323.8438 549.1689 L
S
324.2051 545.7388 m
323.6699 545.7388 L
S
324.2051 552.5986 m
323.6699 552.5986 L
S
323.1299 551.8618 m
323.1299 546.5044 L
S
324.7168 551.8618 m
324.7168 546.5044 L
S
323.9229 552.5986 m
323.9229 545.7388 L
S
324.0029 549.1689 m
323.8438 549.1689 L
S
324.2051 545.7388 m
323.6699 545.7388 L
S
324.2051 552.5986 m
323.6699 552.5986 L
S
323.1299 551.8618 m
323.1299 546.5044 L
S
324.7168 551.8618 m
324.7168 546.5044 L
S
251.7813 497.2661 m
251.7813 484.2554 L
S
251.957 490.7466 m
251.5488 490.7466 L
S
252.0356 484.2554 m
251.4995 484.2554 L
S
252.0356 497.2661 m
251.4995 497.2661 L
S
249.7119 493.4395 m
249.7119 488.082 L
S
251.7813 497.2661 m
251.7813 484.2554 L
S
251.957 490.7466 m
251.5488 490.7466 L
S
252.0356 484.2554 m
251.4995 484.2554 L
S
252.0356 497.2661 m
251.4995 497.2661 L
S
249.7119 493.4395 m
249.7119 488.082 L
S
0.25 w
307.4824 537.7168 m
307.4824 531.8491 L
S
307.5664 534.769 m
307.3706 534.769 L
S
307.7363 531.8491 m
307.2002 531.8491 L
S
307.7363 537.7168 m
307.2002 537.7168 L
S
308.4463 532.104 m
S
308.4463 537.4614 m
S
307.4824 537.7168 m
307.4824 531.8491 L
S
307.5664 534.769 m
307.3706 534.769 L
S
307.7363 531.8491 m
307.2002 531.8491 L
S
307.7363 537.7168 m
307.2002 537.7168 L
S
305.3564 533.4932 m
305.3564 525.0742 L
S
305.4585 529.2979 m
305.2544 529.2979 L
S
305.6387 525.0742 m
305.1025 525.0742 L
S
305.6387 533.4932 m
305.1025 533.4932 L
S
305.3564 533.4932 m
305.3564 525.0742 L
S
305.4585 529.2979 m
305.2544 529.2979 L
S
305.6387 525.0742 m
305.1025 525.0742 L
S
305.6387 533.4932 m
305.1025 533.4932 L
S
0.5 w
468.0654 657.2256 m
468.0654 643.3359 L
S
468.0771 650.2808 m
468.0537 650.2808 L
S
468.3184 643.3359 m
467.7832 643.3359 L
S
468.3184 657.2256 m
467.7832 657.2256 L
S
467.9521 652.9453 m
467.9521 647.5879 L
S
468.1787 652.9453 m
468.1787 647.5879 L
S
468.0654 657.2256 m
468.0654 643.3359 L
S
468.0771 650.2808 m
468.0537 650.2808 L
S
468.3184 643.3359 m
467.7832 643.3359 L
S
468.3184 657.2256 m
467.7832 657.2256 L
S
467.9521 652.9453 m
467.9521 647.5879 L
S
468.1787 652.9453 m
468.1787 647.5879 L
S
496.7803 684.9771 m
496.7803 676.416 L
S
496.7891 680.6968 m
496.7715 680.6968 L
S
497.0332 676.4165 m
496.498 676.4165 L
S
497.0332 684.9771 m
496.498 684.9771 L
S
496.6953 683.3608 m
496.6953 678.0034 L
S
496.8652 683.3608 m
496.8652 678.0034 L
S
496.7803 684.9771 m
496.7803 676.416 L
S
496.7891 680.6968 m
496.7715 680.6968 L
S
497.0332 676.4165 m
496.498 676.4165 L
S
497.0332 684.9771 m
496.498 684.9771 L
S
496.6953 683.3608 m
496.6953 678.0034 L
S
496.8652 683.3608 m
496.8652 678.0034 L
S
490.2891 679.8745 m
490.2891 670.7471 L
S
490.2979 675.3105 m
490.2803 675.3105 L
S
490.5703 670.7471 m
490.0352 670.7471 L
S
490.5703 679.8745 m
490.0352 679.8745 L
S
490.2041 677.9751 m
490.2041 672.6177 L
S
490.374 677.9751 m
490.374 672.6177 L
S
490.2891 679.8745 m
490.2891 670.7471 L
S
490.2979 675.3105 m
490.2803 675.3105 L
S
490.5703 670.7471 m
490.0352 670.7471 L
S
490.5703 679.8745 m
490.0352 679.8745 L
S
490.2041 677.9751 m
490.2041 672.6177 L
S
490.374 677.9751 m
490.374 672.6177 L
S
441.4482 647.3892 m
441.4482 635.5122 L
S
441.4648 641.4365 m
441.4307 641.4365 L
S
441.7012 635.5122 m
441.166 635.5122 L
S
441.7012 647.3892 m
441.166 647.3892 L
S
441.2773 644.1294 m
441.2773 638.772 L
S
441.6182 644.1294 m
441.6182 638.772 L
S
441.4482 647.3892 m
441.4482 635.5122 L
S
441.4648 641.4365 m
441.4307 641.4365 L
S
441.7012 635.5122 m
441.166 635.5122 L
S
441.7012 647.3892 m
441.166 647.3892 L
S
441.2773 644.1294 m
441.2773 638.772 L
S
441.6182 644.1294 m
441.6182 638.772 L
S
459.4766 652.4351 m
459.4766 642.7124 L
S
459.4902 647.5879 m
459.4619 647.5879 L
S
459.7578 642.7124 m
459.2227 642.7124 L
S
459.7578 652.4351 m
459.2227 652.4351 L
S
459.334 650.2524 m
459.334 644.895 L
S
459.6182 650.2524 m
459.6182 644.895 L
S
459.4766 652.4351 m
459.4766 642.7124 L
S
459.4902 647.5879 m
459.4619 647.5879 L
S
459.7578 642.7124 m
459.2227 642.7124 L
S
459.7578 652.4351 m
459.2227 652.4351 L
S
459.334 650.2524 m
459.334 644.895 L
S
459.6182 650.2524 m
459.6182 644.895 L
S
468.9443 676.2744 m
468.9443 664.0005 L
S
468.9424 670.1519 m
468.917 670.1519 L
S
469.1973 664.0005 m
468.6621 664.0005 L
S
469.1973 676.2744 m
468.6621 676.2744 L
S
468.8018 672.8164 m
468.8018 667.4585 L
S
469.0576 672.8164 m
469.0576 667.4585 L
S
468.9443 676.2744 m
468.9443 664.0005 L
S
468.9424 670.1519 m
468.917 670.1519 L
S
469.1973 664.0005 m
468.6621 664.0005 L
S
469.1973 676.2744 m
468.6621 676.2744 L
S
468.8018 672.8164 m
468.8018 667.4585 L
S
469.0576 672.8164 m
469.0576 667.4585 L
S
470.6162 659.7202 m
470.6162 651.1313 L
S
470.6279 655.4399 m
470.6045 655.4399 L
S
470.8701 651.1313 m
470.335 651.1313 L
S
470.8701 659.7202 m
470.335 659.7202 L
S
470.5029 658.1045 m
470.5029 652.7471 L
S
470.7295 658.1045 m
470.7295 652.7471 L
S
470.6162 659.7202 m
470.6162 651.1313 L
S
470.6279 655.4399 m
470.6045 655.4399 L
S
470.8701 651.1313 m
470.335 651.1313 L
S
470.8701 659.7202 m
470.335 659.7202 L
S
470.5029 658.1045 m
470.5029 652.7471 L
S
470.7295 658.1045 m
470.7295 652.7471 L
S
480.3105 670.52 m
480.3105 662.4131 L
S
480.335 666.4668 m
480.3145 666.4668 L
S
480.5928 662.4131 m
480.0576 662.4131 L
S
480.5928 670.52 m
480.0576 670.52 L
S
480.2256 669.1313 m
480.2256 663.7739 L
S
480.4238 669.1313 m
480.4238 663.7739 L
S
480.3105 670.52 m
480.3105 662.4131 L
S
480.335 666.4668 m
480.3145 666.4668 L
S
480.5928 662.4131 m
480.0576 662.4131 L
S
480.5928 670.52 m
480.0576 670.52 L
S
480.2256 669.1313 m
480.2256 663.7739 L
S
480.4238 669.1313 m
480.4238 663.7739 L
S
476.9941 671.7676 m
476.9941 663.6318 L
S
477.0059 667.6855 m
476.9824 667.6855 L
S
477.248 663.6318 m
476.7129 663.6318 L
S
477.248 671.7676 m
476.7129 671.7676 L
S
476.8809 670.3784 m
476.8809 665.021 L
S
477.1074 670.3784 m
477.1074 665.021 L
S
476.9941 671.7676 m
476.9941 663.6318 L
S
477.0059 667.6855 m
476.9824 667.6855 L
S
477.248 663.6318 m
476.7129 663.6318 L
S
477.248 671.7676 m
476.7129 671.7676 L
S
476.8809 670.3784 m
476.8809 665.021 L
S
477.1074 670.3784 m
477.1074 665.021 L
S
530.7393 722.7627 m
530.7393 708.0225 L
S
530.7578 715.3926 m
530.749 715.3926 L
S
531.0215 708.0225 m
530.4854 708.0225 L
S
531.0215 722.7627 m
530.4854 722.7627 L
S
530.7109 718.0854 m
530.7109 712.728 L
S
530.7959 718.0854 m
530.7959 712.728 L
S
530.7393 722.7627 m
530.7393 708.0225 L
S
530.7578 715.3926 m
530.749 715.3926 L
S
531.0215 708.0225 m
530.4854 708.0225 L
S
531.0215 722.7627 m
530.4854 722.7627 L
S
530.7109 718.0854 m
530.7109 712.728 L
S
227.8008 293.9375 m
227.8008 256.1504 L
S
228.0244 275.0586 m
227.4629 275.0586 L
S
228.0542 256.1504 m
227.5181 256.1504 L
S
228.0542 293.9375 m
227.5181 293.9375 L
S
227.8008 293.9375 m
227.8008 256.1504 L
S
228.0244 275.0586 m
227.4629 275.0586 L
S
228.0542 256.1504 m
227.5181 256.1504 L
S
228.0542 293.9375 m
227.5181 293.9375 L
S
235.6807 280.1602 m
235.6807 253.3438 L
S
235.8765 266.752 m
235.3716 266.752 L
S
235.9351 253.3457 m
235.3989 253.3457 L
S
235.9351 280.1602 m
235.3989 280.1602 L
S
235.6807 280.1602 m
235.6807 253.3438 L
S
235.8765 266.752 m
235.3716 266.752 L
S
235.9351 253.3457 m
235.3989 253.3457 L
S
235.9351 280.1602 m
235.3989 280.1602 L
S
358.5908 279.707 m
358.5908 247.9297 L
S
358.6553 263.8047 m
358.5557 263.8047 L
S
358.873 247.9297 m
358.3379 247.9297 L
S
358.873 279.707 m
358.3379 279.707 L
S
358.5908 279.707 m
358.5908 247.9297 L
S
358.6553 263.8047 m
358.5557 263.8047 L
S
358.873 247.9297 m
358.3379 247.9297 L
S
358.873 279.707 m
358.3379 279.707 L
S
335.6582 288.4375 m
335.6582 252.6074 L
S
335.7266 270.5234 m
335.5908 270.5234 L
S
335.9404 252.6074 m
335.4053 252.6074 L
S
335.9404 288.4375 m
335.4053 288.4375 L
S
335.6582 288.4375 m
335.6582 252.6074 L
S
335.7266 270.5234 m
335.5908 270.5234 L
S
335.9404 252.6074 m
335.4053 252.6074 L
S
335.9404 288.4375 m
335.4053 288.4375 L
S
256.1465 312.7305 m
256.1465 283.0527 L
S
256.3271 297.9063 m
255.9385 297.9063 L
S
256.4292 283.0527 m
255.8931 283.0527 L
S
256.4292 312.7305 m
255.8931 312.7305 L
S
256.1465 312.7305 m
256.1465 283.0527 L
S
256.3271 297.9063 m
255.9385 297.9063 L
S
256.4292 283.0527 m
255.8931 283.0527 L
S
256.4292 312.7305 m
255.8931 312.7305 L
S
305.5547 246.4004 m
305.5547 213.1484 L
S
305.6411 229.7891 m
305.4399 229.7891 L
S
305.8091 213.1484 m
305.2729 213.1484 L
S
305.8091 246.4004 m
305.2729 246.4004 L
S
305.5547 246.4004 m
305.5547 213.1484 L
S
305.6411 229.7891 m
305.4399 229.7891 L
S
305.8091 213.1484 m
305.2729 213.1484 L
S
305.8091 246.4004 m
305.2729 246.4004 L
S
249.6836 298.3301 m
249.6836 259.2129 L
S
249.8525 278.7715 m
249.4297 278.7715 L
S
249.938 259.2129 m
249.4019 259.2129 L
S
249.938 298.3301 m
249.4019 298.3301 L
S
251.7529 281.4648 m
251.7529 276.1074 L
S
249.6836 298.3301 m
249.6836 259.2129 L
S
249.8525 278.7715 m
249.4297 278.7715 L
S
249.938 259.2129 m
249.4019 259.2129 L
S
249.938 298.3301 m
249.4019 298.3301 L
S
251.7529 281.4648 m
251.7529 276.1074 L
S
219.2119 268.2559 m
219.2119 237.6406 L
S
219.4531 252.9473 m
218.8271 252.9473 L
S
219.4653 237.6406 m
218.9292 237.6406 L
S
219.4653 268.2559 m
218.9292 268.2559 L
S
219.2119 268.2559 m
219.2119 237.6406 L
S
219.4531 252.9473 m
218.8271 252.9473 L
S
219.4653 237.6406 m
218.9292 237.6406 L
S
219.4653 268.2559 m
218.9292 268.2559 L
S
279.6182 287.1055 m
279.6182 241.8652 L
S
279.7593 264.4844 m
279.4761 264.4844 L
S
279.8999 241.8652 m
279.3638 241.8652 L
S
279.8999 287.1055 m
279.3638 287.1055 L
S
279.6182 287.1055 m
279.6182 241.8652 L
S
279.7593 264.4844 m
279.4761 264.4844 L
S
279.8999 241.8652 m
279.3638 241.8652 L
S
279.8999 287.1055 m
279.3638 287.1055 L
S
278.2002 261.791 m
S
278.2002 267.1504 m
S
195.0322 277.0996 m
195.0322 232.793 L
S
195.3364 254.9316 m
194.4722 254.9316 L
S
195.314 232.793 m
194.7778 232.793 L
S
195.314 277.0996 m
194.7778 277.0996 L
S
195.0322 277.0996 m
195.0322 232.793 L
S
195.3364 254.9316 m
194.4722 254.9316 L
S
195.314 232.793 m
194.7778 232.793 L
S
195.314 277.0996 m
194.7778 277.0996 L
S
303.4287 284.5254 m
303.4287 255.9238 L
S
303.5464 270.2383 m
303.3394 270.2383 L
S
303.7114 255.9238 m
303.1753 255.9238 L
S
303.7114 284.5254 m
303.1753 284.5254 L
S
302.4082 267.5469 m
S
303.4287 284.5254 m
303.4287 255.9238 L
S
303.5464 270.2383 m
303.3394 270.2383 L
S
303.7114 255.9238 m
303.1753 255.9238 L
S
303.7114 284.5254 m
303.1753 284.5254 L
S
302.4082 267.5469 m
S
242.8525 292.207 m
242.8525 255.6133 L
S
243.041 273.8965 m
242.5791 273.8965 L
S
243.106 255.6133 m
242.5698 255.6133 L
S
243.106 292.207 m
242.5698 292.207 L
S
242.8525 292.207 m
242.8525 255.6133 L
S
243.041 273.8965 m
242.5791 273.8965 L
S
243.106 255.6133 m
242.5698 255.6133 L
S
243.106 292.207 m
242.5698 292.207 L
S
218.1631 263.918 m
218.1631 219.498 L
S
218.4102 241.6934 m
217.7725 241.6934 L
S
218.4165 219.498 m
217.8804 219.498 L
S
218.4165 263.918 m
217.8804 263.918 L
S
218.1631 263.918 m
218.1631 219.498 L
S
218.4102 241.6934 m
217.7725 241.6934 L
S
218.4165 219.498 m
217.8804 219.498 L
S
218.4165 263.918 m
217.8804 263.918 L
S
261.0508 329.5977 m
261.0508 285.1504 L
S
261.2324 307.373 m
260.8691 307.373 L
S
261.3335 285.1504 m
260.7974 285.1504 L
S
261.3335 329.5977 m
260.7974 329.5977 L
S
261.0508 329.5977 m
261.0508 285.1504 L
S
261.2324 307.373 m
260.8691 307.373 L
S
261.3335 285.1504 m
260.7974 285.1504 L
S
261.3335 329.5977 m
260.7974 329.5977 L
S
172.2695 277.4102 m
172.2695 211.5625 L
S
172.6265 244.4727 m
171.4585 244.4727 L
S
172.5522 211.5625 m
172.0161 211.5625 L
S
172.5522 277.4102 m
172.0161 277.4102 L
S
172.2695 277.4102 m
172.2695 211.5625 L
S
172.6265 244.4727 m
171.4585 244.4727 L
S
172.5522 211.5625 m
172.0161 211.5625 L
S
172.5522 277.4102 m
172.0161 277.4102 L
S
374.5498 289.8555 m
374.5498 262.9258 L
S
374.5771 276.3906 m
374.4951 276.3906 L
S
374.8037 262.9258 m
374.2686 262.9258 L
S
374.8037 289.8555 m
374.2686 289.8555 L
S
374.5498 289.8555 m
374.5498 262.9258 L
S
374.5771 276.3906 m
374.4951 276.3906 L
S
374.8037 262.9258 m
374.2686 262.9258 L
S
374.8037 289.8555 m
374.2686 289.8555 L
S
255.2686 286.0566 m
255.2686 235.1465 L
S
255.4639 260.6016 m
255.0723 260.6016 L
S
255.5503 235.1465 m
255.0142 235.1465 L
S
255.5503 286.0566 m
255.0142 286.0566 L
S
255.2686 286.0566 m
255.2686 235.1465 L
S
255.4639 260.6016 m
255.0723 260.6016 L
S
255.5503 235.1465 m
255.0142 235.1465 L
S
255.5503 286.0566 m
255.0142 286.0566 L
S
208.6953 263.5215 m
208.6953 232.5098 L
S
208.9697 248.0156 m
208.25 248.0156 L
S
208.9771 232.5098 m
208.4409 232.5098 L
S
208.9771 263.5215 m
208.4409 263.5215 L
S
208.6953 263.5215 m
208.6953 232.5098 L
S
208.9697 248.0156 m
208.25 248.0156 L
S
208.9771 232.5098 m
208.4409 232.5098 L
S
208.9771 263.5215 m
208.4409 263.5215 L
S
278.5693 305.8145 m
278.5693 259.6953 L
S
278.6978 282.7402 m
278.4116 282.7402 L
S
278.8511 259.6953 m
278.3149 259.6953 L
S
278.8511 305.8145 m
278.3149 305.8145 L
S
278.5693 305.8145 m
278.5693 259.6953 L
S
278.6978 282.7402 m
278.4116 282.7402 L
S
278.8511 259.6953 m
278.3149 259.6953 L
S
278.8511 305.8145 m
278.3149 305.8145 L
S
277.123 280.0762 m
S
277.123 285.4336 m
S
297.1357 313.7793 m
297.1357 277.5234 L
S
297.249 295.6387 m
297.0225 295.6387 L
S
297.4185 277.5234 m
296.8823 277.5234 L
S
297.4185 313.7793 m
296.8823 313.7793 L
S
297.1357 313.7793 m
297.1357 277.5234 L
S
297.249 295.6387 m
297.0225 295.6387 L
S
297.4185 277.5234 m
296.8823 277.5234 L
S
297.4185 313.7793 m
296.8823 313.7793 L
S
293.8193 253.2305 m
293.8193 221.5117 L
S
293.9229 237.3848 m
293.6875 237.3848 L
S
294.0737 221.5117 m
293.5376 221.5117 L
S
294.0737 253.2305 m
293.5376 253.2305 L
S
293.8193 253.2305 m
293.8193 221.5117 L
S
293.9229 237.3848 m
293.6875 237.3848 L
S
294.0737 221.5117 m
293.5376 221.5117 L
S
294.0737 253.2305 m
293.5376 253.2305 L
S
340.7324 253.7422 m
340.7324 224.8848 L
S
341.0146 224.8848 m
340.4795 224.8848 L
S
341.0146 253.7422 m
340.4795 253.7422 L
S
340.7324 253.7422 m
340.7324 224.8848 L
S
341.0146 224.8848 m
340.4795 224.8848 L
S
341.0146 253.7422 m
340.4795 253.7422 L
S
347.5645 292.5195 m
347.5645 251.6152 L
S
347.6367 272.0527 m
347.5195 272.0527 L
S
347.8457 251.6152 m
347.3105 251.6152 L
S
347.8457 292.5195 m
347.3105 292.5195 L
S
347.5645 292.5195 m
347.5645 251.6152 L
S
347.6367 272.0527 m
347.5195 272.0527 L
S
347.8457 251.6152 m
347.3105 251.6152 L
S
347.8457 292.5195 m
347.3105 292.5195 L
S
323.9229 302.4414 m
323.9229 272.7617 L
S
324.0029 287.6152 m
323.8438 287.6152 L
S
324.2051 272.7617 m
323.6699 272.7617 L
S
324.2051 302.4414 m
323.6699 302.4414 L
S
323.9229 302.4414 m
323.9229 272.7617 L
S
324.0029 287.6152 m
323.8438 287.6152 L
S
324.2051 272.7617 m
323.6699 272.7617 L
S
324.2051 302.4414 m
323.6699 302.4414 L
S
251.7813 284.0449 m
251.7813 227.6621 L
S
251.957 255.8672 m
251.5488 255.8672 L
S
252.0356 227.6621 m
251.4995 227.6621 L
S
252.0356 284.0449 m
251.4995 284.0449 L
S
251.7813 284.0449 m
251.7813 227.6621 L
S
251.957 255.8672 m
251.5488 255.8672 L
S
252.0356 227.6621 m
251.4995 227.6621 L
S
252.0356 284.0449 m
251.4995 284.0449 L
S
307.4824 289.373 m
307.4824 263.9746 L
S
307.5664 276.6738 m
307.3706 276.6738 L
S
307.7363 263.9746 m
307.2002 263.9746 L
S
307.7363 289.373 m
307.2002 289.373 L
S
307.4824 289.373 m
307.4824 263.9746 L
S
307.5664 276.6738 m
307.3706 276.6738 L
S
307.7363 263.9746 m
307.2002 263.9746 L
S
307.7363 289.373 m
307.2002 289.373 L
S
305.3564 277.5527 m
305.3564 241.0703 L
S
305.4585 259.3262 m
305.2544 259.3262 L
S
305.6387 241.0703 m
305.1025 241.0703 L
S
305.6387 277.5527 m
305.1025 277.5527 L
S
305.3564 277.5527 m
305.3564 241.0703 L
S
305.4585 259.3262 m
305.2544 259.3262 L
S
305.6387 241.0703 m
305.1025 241.0703 L
S
305.6387 277.5527 m
305.1025 277.5527 L
S
468.0654 288.5234 m
468.0654 228.3438 L
S
468.0771 258.4473 m
468.0537 258.4473 L
S
468.3184 228.3438 m
467.7832 228.3438 L
S
468.3184 288.5234 m
467.7832 288.5234 L
S
467.9521 261.1113 m
467.9521 255.7539 L
S
468.1787 261.1113 m
468.1787 255.7539 L
S
468.0654 288.5234 m
468.0654 228.3438 L
S
468.0771 258.4473 m
468.0537 258.4473 L
S
468.3184 228.3438 m
467.7832 228.3438 L
S
468.3184 288.5234 m
467.7832 288.5234 L
S
467.9521 261.1113 m
467.9521 255.7539 L
S
468.1787 261.1113 m
468.1787 255.7539 L
S
496.7803 307.9961 m
496.7803 270.8066 L
S
496.7891 289.4023 m
496.7715 289.4023 L
S
497.0332 270.8066 m
496.498 270.8066 L
S
497.0332 307.9961 m
496.498 307.9961 L
S
496.6953 292.0664 m
496.6953 286.709 L
S
496.8652 292.0664 m
496.8652 286.709 L
S
496.7803 307.9961 m
496.7803 270.8066 L
S
496.7891 289.4023 m
496.7715 289.4023 L
S
497.0332 270.8066 m
496.498 270.8066 L
S
497.0332 307.9961 m
496.498 307.9961 L
S
496.6953 292.0664 m
496.6953 286.709 L
S
496.8652 292.0664 m
496.8652 286.709 L
S
490.2891 308.8477 m
490.2891 269.3047 L
S
490.2979 289.0898 m
490.2803 289.0898 L
S
490.5703 269.3047 m
490.0352 269.3047 L
S
490.5703 308.8477 m
490.0352 308.8477 L
S
490.2041 291.7539 m
490.2041 286.3965 L
S
490.374 291.7539 m
490.374 286.3965 L
S
490.2891 308.8477 m
490.2891 269.3047 L
S
490.2979 289.0898 m
490.2803 289.0898 L
S
490.5703 269.3047 m
490.0352 269.3047 L
S
490.5703 308.8477 m
490.0352 308.8477 L
S
490.2041 291.7539 m
490.2041 286.3965 L
S
490.374 291.7539 m
490.374 286.3965 L
S
441.4482 336.4277 m
441.4482 284.9512 L
S
441.4648 310.6895 m
441.4307 310.6895 L
S
441.7012 284.9512 m
441.166 284.9512 L
S
441.7012 336.4277 m
441.166 336.4277 L
S
441.2773 313.3828 m
441.2773 308.0254 L
S
441.6182 313.3828 m
441.6182 308.0254 L
S
441.4482 336.4277 m
441.4482 284.9512 L
S
441.4648 310.6895 m
441.4307 310.6895 L
S
441.7012 284.9512 m
441.166 284.9512 L
S
441.7012 336.4277 m
441.166 336.4277 L
S
441.2773 313.3828 m
441.2773 308.0254 L
S
441.6182 313.3828 m
441.6182 308.0254 L
S
459.4766 297.3105 m
459.4766 255.1016 L
S
459.4902 276.1914 m
459.4619 276.1914 L
S
459.7578 255.1016 m
459.2227 255.1016 L
S
459.7578 297.3105 m
459.2227 297.3105 L
S
459.334 278.8848 m
459.334 273.5273 L
S
459.6182 278.8848 m
459.6182 273.5273 L
S
459.4766 297.3105 m
459.4766 255.1016 L
S
459.4902 276.1914 m
459.4619 276.1914 L
S
459.7578 255.1016 m
459.2227 255.1016 L
S
459.7578 297.3105 m
459.2227 297.3105 L
S
459.334 278.8848 m
459.334 273.5273 L
S
459.6182 278.8848 m
459.6182 273.5273 L
S
468.9443 368.0918 m
468.9443 314.9414 L
S
468.9424 341.5313 m
468.917 341.5313 L
S
469.1973 314.9414 m
468.6621 314.9414 L
S
469.1973 368.0918 m
468.6621 368.0918 L
S
468.8018 344.1953 m
468.8018 338.8379 L
S
469.0576 344.1953 m
469.0576 338.8379 L
S
468.9443 368.0918 m
468.9443 314.9414 L
S
468.9424 341.5313 m
468.917 341.5313 L
S
469.1973 314.9414 m
468.6621 314.9414 L
S
469.1973 368.0918 m
468.6621 368.0918 L
S
468.8018 344.1953 m
468.8018 338.8379 L
S
469.0576 344.1953 m
469.0576 338.8379 L
S
470.6162 290.5352 m
470.6162 253.3438 L
S
470.6279 271.9395 m
470.6045 271.9395 L
S
470.8701 253.3457 m
470.335 253.3457 L
S
470.8701 290.5352 m
470.335 290.5352 L
S
470.5029 274.6328 m
470.5029 269.2754 L
S
470.7295 274.6328 m
470.7295 269.2754 L
S
470.6162 290.5352 m
470.6162 253.3438 L
S
470.6279 271.9395 m
470.6045 271.9395 L
S
470.8701 253.3457 m
470.335 253.3457 L
S
470.8701 290.5352 m
470.335 290.5352 L
S
470.5029 274.6328 m
470.5029 269.2754 L
S
470.7295 274.6328 m
470.7295 269.2754 L
S
480.3105 303.6309 m
480.3105 268.4258 L
S
480.335 286.0273 m
480.3145 286.0273 L
S
480.5928 268.4258 m
480.0576 268.4258 L
S
480.5928 303.6309 m
480.0576 303.6309 L
S
480.2256 288.6934 m
480.2256 283.3359 L
S
480.4238 288.6934 m
480.4238 283.3359 L
S
480.3105 303.6309 m
480.3105 268.4258 L
S
480.335 286.0273 m
480.3145 286.0273 L
S
480.5928 268.4258 m
480.0576 268.4258 L
S
480.5928 303.6309 m
480.0576 303.6309 L
S
480.2256 288.6934 m
480.2256 283.3359 L
S
480.4238 288.6934 m
480.4238 283.3359 L
S
476.9941 320.5254 m
476.9941 285.3477 L
S
477.0059 302.9219 m
476.9824 302.9219 L
S
477.248 285.3477 m
476.7129 285.3477 L
S
477.248 320.5254 m
476.7129 320.5254 L
S
476.8809 305.6152 m
476.8809 300.2578 L
S
477.1074 305.6152 m
477.1074 300.2578 L
S
476.9941 320.5254 m
476.9941 285.3477 L
S
477.0059 302.9219 m
476.9824 302.9219 L
S
477.248 285.3477 m
476.7129 285.3477 L
S
477.248 320.5254 m
476.7129 320.5254 L
S
476.8809 305.6152 m
476.8809 300.2578 L
S
477.1074 305.6152 m
477.1074 300.2578 L
S
530.7393 347.3125 m
530.7393 283.5332 L
S
530.7578 315.4238 m
530.749 315.4238 L
S
531.0215 283.5332 m
530.4854 283.5332 L
S
531.0215 347.3125 m
530.4854 347.3125 L
S
530.7109 318.0879 m
530.7109 312.7305 L
S
530.7959 318.0879 m
530.7959 312.7305 L
S
530.7393 347.3125 m
530.7393 283.5332 L
S
530.7578 315.4238 m
530.749 315.4238 L
S
531.0215 283.5332 m
530.4854 283.5332 L
S
531.0215 347.3125 m
530.4854 347.3125 L
S
530.7109 318.0879 m
530.7109 312.7305 L
S
530.7959 318.0879 m
530.7959 312.7305 L
S
0 To
0 1 -1 0 78.5 478.5 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
1 w 4 M
%_ 0 50 XQ
/_ArialMT 19 19 -6.1694 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
0 Tc
0 Tw
(Distance Modulus \(m-M\) ) Tx 
(\r) TX 
TO
/BBAccumRotation (1.570796) XT
0 To
0 1 -1 0 78.5 147.9434 0 Tp
0 Tv
TP
0 Tr
(\(m-M\) - \(m-M\)) Tx 
(\r) TX 
TO
/BBAccumRotation (1.570796) XT
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 2 79 255 79 Lb
(Layer 3) Ln
0 A
*u
1 D
0 O
0 0 0 0 k
0 R
0 G
0 J 0 j 1 w 2.5 M []0 d
0 XR
269.498 500.0161 m
269.4697 500.4126 L
269.3848 500.8379 L
269.2715 501.2065 L
269.0732 501.5752 L
268.8457 501.9434 L
268.5908 502.2271 L
268.2793 502.5103 L
267.9395 502.7373 L
267.5703 502.9355 L
267.1738 503.0488 L
266.7773 503.1343 L
266.3516 503.1626 L
265.9551 503.1343 L
265.5293 503.0488 L
265.1611 502.9355 L
264.793 502.7373 L
264.4521 502.5103 L
264.1406 502.2271 L
263.8574 501.9434 L
263.6309 501.5752 L
263.46 501.2065 L
263.3184 500.8379 L
263.2334 500.4126 L
263.2051 500.0161 L
263.2334 499.5908 L
263.3184 499.1938 L
263.46 498.7969 L
263.6309 498.4287 L
263.8574 498.0884 L
264.1406 497.7769 L
264.4521 497.5215 L
264.793 497.2949 L
265.1611 497.0962 L
265.5293 496.9829 L
265.9551 496.8979 L
266.3516 496.8696 L
266.7773 496.8979 L
267.1738 496.9829 L
267.5703 497.0962 L
267.9395 497.2949 L
268.2793 497.5215 L
268.5908 497.7769 L
268.8457 498.0884 L
269.0732 498.4287 L
269.2715 498.7969 L
269.3848 499.1938 L
269.4697 499.5908 L
B
308.3613 533.6348 m
308.333 534.0317 L
308.248 534.4287 L
308.1064 534.8257 L
307.9355 535.1938 L
307.709 535.5342 L
307.4258 535.8462 L
307.1143 536.1294 L
306.7734 536.356 L
306.4053 536.5264 L
306.0371 536.668 L
305.6113 536.7529 L
305.2148 536.7813 L
304.7891 536.7529 L
304.3926 536.668 L
303.9961 536.5264 L
303.627 536.356 L
303.2871 536.1294 L
302.9756 535.8462 L
302.7207 535.5342 L
302.4932 535.1938 L
302.2949 534.8257 L
302.1816 534.4287 L
302.0967 534.0317 L
302.0684 533.6348 L
302.0967 533.2095 L
302.1816 532.813 L
302.2949 532.416 L
302.4932 532.0474 L
302.7207 531.7075 L
302.9756 531.3955 L
303.2871 531.1118 L
303.627 530.8853 L
303.9961 530.7153 L
304.3926 530.5737 L
304.7891 530.4883 L
305.2148 530.4883 L
305.6113 530.4883 L
306.0371 530.5737 L
306.4053 530.7153 L
306.7734 530.8853 L
307.1143 531.1118 L
307.4258 531.3955 L
307.709 531.7075 L
307.9355 532.0474 L
308.1064 532.416 L
308.248 532.813 L
308.333 533.2095 L
B
258.6133 495.5938 m
258.585 496.019 L
258.5 496.416 L
258.3867 496.813 L
258.1875 497.1812 L
257.9609 497.5215 L
257.7061 497.8335 L
257.3945 498.0884 L
257.0537 498.3149 L
256.6855 498.5137 L
256.2891 498.627 L
255.8916 498.7119 L
255.4668 498.7402 L
255.0693 498.7119 L
254.6729 498.627 L
254.2764 498.5137 L
253.9072 498.3149 L
253.5674 498.0884 L
253.2559 497.8335 L
252.9717 497.5215 L
252.7451 497.1812 L
252.5752 496.813 L
252.4336 496.416 L
252.3486 496.019 L
252.3203 495.5938 L
252.3486 495.1973 L
252.4336 494.772 L
252.5752 494.4033 L
252.7451 494.0347 L
252.9717 493.6948 L
253.2559 493.3828 L
253.5674 493.0996 L
253.9072 492.8726 L
254.2764 492.7026 L
254.6729 492.561 L
255.0693 492.4756 L
255.4668 492.4473 L
255.8916 492.4756 L
256.2891 492.561 L
256.6855 492.7026 L
257.0537 492.8726 L
257.3945 493.0996 L
257.7061 493.3828 L
257.9609 493.6948 L
258.1875 494.0347 L
258.3867 494.4033 L
258.5 494.772 L
258.585 495.1973 L
B
339.2021 553.2505 m
339.1738 553.6475 L
339.0889 554.0728 L
338.9473 554.4414 L
338.7764 554.8096 L
338.5498 555.1499 L
338.2666 555.4619 L
337.9551 555.7451 L
337.6143 555.9722 L
337.2461 556.1421 L
336.8496 556.2837 L
336.4521 556.3687 L
336.0557 556.397 L
335.6299 556.3687 L
335.2334 556.2837 L
334.8369 556.1421 L
334.4678 555.9722 L
334.1279 555.7451 L
333.8164 555.4619 L
333.5605 555.1499 L
333.334 554.8096 L
333.1357 554.4414 L
332.9941 554.0728 L
332.9375 553.6475 L
332.9092 553.2505 L
332.9375 552.8257 L
332.9941 552.4287 L
333.1357 552.0317 L
333.334 551.6631 L
333.5605 551.3232 L
333.8164 551.0112 L
334.1279 550.7563 L
334.4678 550.5293 L
334.8369 550.3311 L
335.2334 550.2178 L
335.6299 550.1323 L
336.0557 550.104 L
336.4521 550.1323 L
336.8496 550.2178 L
337.2461 550.3311 L
337.6143 550.5293 L
337.9551 550.7563 L
338.2666 551.0112 L
338.5498 551.3232 L
338.7764 551.6631 L
338.9473 552.0317 L
339.0889 552.4287 L
339.1738 552.8257 L
B
258.6133 500.498 m
258.585 500.9229 L
258.5 501.3198 L
258.3867 501.7168 L
258.1875 502.0854 L
257.9609 502.4253 L
257.7061 502.7373 L
257.3945 502.9922 L
257.0537 503.2192 L
256.6855 503.4175 L
256.2891 503.5308 L
255.8916 503.6157 L
255.4668 503.644 L
255.0693 503.6157 L
254.6729 503.5308 L
254.2764 503.4175 L
253.9072 503.2192 L
253.5674 502.9922 L
253.2559 502.7373 L
252.9717 502.4253 L
252.7451 502.0854 L
252.5752 501.7168 L
252.4336 501.3198 L
252.3486 500.9229 L
252.3203 500.498 L
252.3486 500.1011 L
252.4336 499.7041 L
252.5752 499.3071 L
252.7451 498.939 L
252.9717 498.5986 L
253.2559 498.2866 L
253.5674 498.0034 L
253.9072 497.7764 L
254.2764 497.6064 L
254.6729 497.4648 L
255.0693 497.3799 L
255.4668 497.3516 L
255.8916 497.3799 L
256.2891 497.4648 L
256.6855 497.6064 L
257.0537 497.7764 L
257.3945 498.0034 L
257.7061 498.2866 L
257.9609 498.5986 L
258.1875 498.939 L
258.3867 499.3071 L
258.5 499.7041 L
258.585 500.1011 L
B
211.5293 456.1074 m
211.501 456.5039 L
211.4443 456.9292 L
211.3027 457.2979 L
211.1045 457.6665 L
210.8779 458.0063 L
210.6221 458.3184 L
210.3105 458.6016 L
209.9707 458.8286 L
209.6016 458.9985 L
209.2051 459.1401 L
208.8086 459.2251 L
208.3828 459.2539 L
207.9863 459.2251 L
207.5898 459.1401 L
207.1924 458.9985 L
206.8242 458.8286 L
206.4844 458.6016 L
206.1719 458.3184 L
205.8887 458.0063 L
205.6621 457.6665 L
205.4922 457.2979 L
205.3496 456.9292 L
205.2646 456.5039 L
205.2363 456.1074 L
205.2646 455.6821 L
205.3496 455.2852 L
205.4922 454.8882 L
205.6621 454.52 L
205.8887 454.1797 L
206.1719 453.8677 L
206.4844 453.6128 L
206.8242 453.3862 L
207.1924 453.1875 L
207.5898 453.0742 L
207.9863 452.9893 L
208.3828 452.9609 L
208.8086 452.9893 L
209.2051 453.0742 L
209.6016 453.1875 L
209.9707 453.3862 L
210.3105 453.6128 L
210.6221 453.8677 L
210.8779 454.1797 L
211.1045 454.52 L
211.3027 454.8882 L
211.4443 455.2852 L
211.501 455.6821 L
B
361.8223 571.1655 m
361.7939 571.5625 L
361.709 571.9595 L
361.5957 572.3564 L
361.3975 572.7246 L
361.1709 573.0649 L
360.915 573.3765 L
360.6035 573.6602 L
360.2637 573.8872 L
359.8945 574.0571 L
359.498 574.1987 L
359.1016 574.2837 L
358.6758 574.312 L
358.2793 574.2837 L
357.8535 574.1987 L
357.4854 574.0571 L
357.1172 573.8872 L
356.7764 573.6602 L
356.4648 573.3765 L
356.1816 573.0649 L
355.9551 572.7246 L
355.7852 572.3564 L
355.6426 571.9595 L
355.5576 571.5625 L
355.5293 571.1655 L
355.5576 570.7407 L
355.6426 570.3438 L
355.7852 569.9468 L
355.9551 569.5781 L
356.1816 569.2383 L
356.4648 568.9263 L
356.7764 568.6714 L
357.1172 568.416 L
357.4854 568.2461 L
357.8535 568.104 L
358.2793 568.0474 L
358.6758 568.019 L
359.1016 568.0474 L
359.498 568.104 L
359.8945 568.2461 L
360.2637 568.416 L
360.6035 568.6714 L
360.915 568.9263 L
361.1709 569.2383 L
361.3975 569.5781 L
361.5957 569.9468 L
361.709 570.3438 L
361.7939 570.7407 L
B
238.6572 473.5122 m
238.6289 473.937 L
238.5723 474.334 L
238.4307 474.731 L
238.2324 475.0996 L
238.0049 475.4395 L
237.75 475.7515 L
237.4385 476.0063 L
237.0977 476.2334 L
236.7295 476.4316 L
236.333 476.5732 L
235.9355 476.6299 L
235.5107 476.6587 L
235.1143 476.6299 L
234.7168 476.5732 L
234.3203 476.4316 L
233.9512 476.2334 L
233.6113 476.0063 L
233.2998 475.7515 L
233.0166 475.4395 L
232.7891 475.0996 L
232.6191 474.731 L
232.4775 474.334 L
232.3926 473.937 L
232.3643 473.5122 L
232.3926 473.1152 L
232.4775 472.7183 L
232.6191 472.3213 L
232.7891 471.9531 L
233.0166 471.6128 L
233.2998 471.3008 L
233.6113 471.0176 L
233.9512 470.7905 L
234.3203 470.6206 L
234.7168 470.479 L
235.1143 470.394 L
235.5107 470.3657 L
235.9355 470.394 L
236.333 470.479 L
236.7295 470.6206 L
237.0977 470.7905 L
237.4385 471.0176 L
237.75 471.3008 L
238.0049 471.6128 L
238.2324 471.9531 L
238.4307 472.3213 L
238.5723 472.7183 L
238.6289 473.1152 L
B
283.3594 509.8237 m
283.3311 510.249 L
283.2744 510.646 L
283.1328 511.043 L
282.9629 511.4111 L
282.708 511.7515 L
282.4521 512.063 L
282.1406 512.3184 L
281.8008 512.5449 L
281.4316 512.7437 L
281.0352 512.8569 L
280.6387 512.9419 L
280.2129 512.9702 L
279.8164 512.9419 L
279.4189 512.8569 L
279.0225 512.7437 L
278.6543 512.5449 L
278.3135 512.3184 L
278.002 512.063 L
277.7188 511.7515 L
277.4922 511.4111 L
277.3213 511.043 L
277.1797 510.646 L
277.0947 510.249 L
277.0664 509.8237 L
277.0947 509.4272 L
277.1797 509.002 L
277.3213 508.6333 L
277.4922 508.2646 L
277.7188 507.9248 L
278.002 507.6128 L
278.3135 507.3296 L
278.6543 507.1025 L
279.0225 506.9326 L
279.4189 506.7905 L
279.8164 506.7056 L
280.2129 506.6772 L
280.6387 506.7056 L
281.0352 506.7905 L
281.4316 506.9326 L
281.8008 507.1025 L
282.1406 507.3296 L
282.4521 507.6128 L
282.708 507.9248 L
282.9629 508.2646 L
283.1328 508.6333 L
283.2744 509.002 L
283.3311 509.4272 L
B
300.3389 533.1245 m
300.3105 533.5498 L
300.2256 533.9468 L
300.1123 534.3438 L
299.9141 534.7119 L
299.6875 535.0522 L
299.4316 535.3638 L
299.1201 535.6191 L
298.7803 535.8462 L
298.4111 536.0444 L
298.0146 536.1577 L
297.6182 536.2427 L
297.1924 536.271 L
296.7959 536.2427 L
296.3711 536.1577 L
296.002 536.0444 L
295.6338 535.8462 L
295.293 535.6191 L
294.9814 535.3638 L
294.6982 535.0522 L
294.4717 534.7119 L
294.3018 534.3438 L
294.1592 533.9468 L
294.0742 533.5498 L
294.0459 533.1245 L
294.0742 532.728 L
294.1592 532.3027 L
294.3018 531.9341 L
294.4717 531.5654 L
294.6982 531.2256 L
294.9814 530.9136 L
295.293 530.6304 L
295.6338 530.4033 L
296.002 530.2334 L
296.3711 530.0918 L
296.7959 530.0063 L
297.1924 529.978 L
297.6182 530.0063 L
298.0146 530.0918 L
298.4111 530.2334 L
298.7803 530.4033 L
299.1201 530.6304 L
299.4316 530.9136 L
299.6875 531.2256 L
299.9141 531.5654 L
300.1123 531.9341 L
300.2256 532.3027 L
300.3105 532.728 L
B
296.8809 522.835 m
296.8525 523.2319 L
296.7676 523.6284 L
296.6543 524.0254 L
296.4561 524.394 L
296.2285 524.7339 L
295.9736 525.0459 L
295.6621 525.3296 L
295.3223 525.5562 L
294.9531 525.7261 L
294.5566 525.8682 L
294.1592 525.9531 L
293.7344 525.9814 L
293.3379 525.9531 L
292.9121 525.8682 L
292.5439 525.7261 L
292.1758 525.5562 L
291.835 525.3296 L
291.5234 525.0459 L
291.2402 524.7339 L
291.0127 524.394 L
290.8428 524.0254 L
290.7012 523.6284 L
290.6162 523.2319 L
290.5879 522.835 L
290.6162 522.4097 L
290.7012 522.0127 L
290.8428 521.6162 L
291.0127 521.2476 L
291.2402 520.9072 L
291.5234 520.5957 L
291.835 520.3403 L
292.1758 520.1138 L
292.5439 519.915 L
292.9121 519.8018 L
293.3379 519.7168 L
293.7344 519.6885 L
294.1592 519.7168 L
294.5566 519.8018 L
294.9531 519.915 L
295.3223 520.1138 L
295.6621 520.3403 L
295.9736 520.5957 L
296.2285 520.9072 L
296.4561 521.2476 L
296.6543 521.6162 L
296.7676 522.0127 L
296.8525 522.4097 L
B
230.6631 484.0571 m
230.6348 484.4819 L
230.5498 484.8789 L
230.4082 485.2759 L
230.2383 485.644 L
230.0117 485.9844 L
229.7275 486.2964 L
229.416 486.5796 L
229.0762 486.8066 L
228.708 486.9766 L
228.3105 487.1182 L
227.9141 487.2031 L
227.5166 487.2031 L
227.0918 487.2031 L
226.6953 487.1182 L
226.2979 486.9766 L
225.9297 486.8066 L
225.5898 486.5796 L
225.2773 486.2964 L
225.0225 485.9844 L
224.7676 485.644 L
224.5977 485.2759 L
224.4561 484.8789 L
224.3984 484.4819 L
224.3701 484.0571 L
224.3984 483.6602 L
224.4561 483.2632 L
224.5977 482.8662 L
224.7676 482.498 L
225.0225 482.1577 L
225.2773 481.8457 L
225.5898 481.5625 L
225.9297 481.3354 L
226.2979 481.1655 L
226.6953 481.0239 L
227.0918 480.939 L
227.5166 480.9106 L
227.9141 480.939 L
228.3105 481.0239 L
228.708 481.1655 L
229.0762 481.3354 L
229.416 481.5625 L
229.7275 481.8457 L
230.0117 482.1577 L
230.2383 482.498 L
230.4082 482.8662 L
230.5498 483.2632 L
230.6348 483.6602 L
B
343.1426 549.3105 m
343.1133 549.7358 L
343.0283 550.1323 L
342.915 550.5293 L
342.7168 550.8979 L
342.4902 551.2383 L
342.2354 551.5498 L
341.9229 551.8052 L
341.583 552.0601 L
341.2148 552.23 L
340.8174 552.3721 L
340.4209 552.4287 L
339.9961 552.457 L
339.5986 552.4287 L
339.1738 552.3721 L
338.8047 552.23 L
338.4365 552.0601 L
338.0967 551.8052 L
337.7842 551.5498 L
337.501 551.2383 L
337.2744 550.8979 L
337.1045 550.5293 L
336.9629 550.1323 L
336.8779 549.7358 L
336.8496 549.3105 L
336.8779 548.9136 L
336.9629 548.5166 L
337.1045 548.1201 L
337.2744 547.7515 L
337.501 547.4111 L
337.7842 547.0996 L
338.0967 546.8159 L
338.4365 546.5894 L
338.8047 546.4194 L
339.1738 546.2773 L
339.5986 546.1924 L
339.9961 546.1641 L
340.4209 546.1924 L
340.8174 546.2773 L
341.2148 546.4194 L
341.583 546.5894 L
341.9229 546.8159 L
342.2354 547.0996 L
342.4902 547.4111 L
342.7168 547.7515 L
342.915 548.1201 L
343.0283 548.5166 L
343.1133 548.9136 L
B
351.3623 574.0854 m
351.334 574.5107 L
351.249 574.9072 L
351.1074 575.3042 L
350.9375 575.6729 L
350.7109 576.0132 L
350.4268 576.3247 L
350.1152 576.5796 L
349.7754 576.835 L
349.4063 577.0049 L
349.0098 577.147 L
348.6133 577.2036 L
348.2158 577.2319 L
347.791 577.2036 L
347.3945 577.147 L
346.9971 577.0049 L
346.6289 576.835 L
346.2891 576.5796 L
345.9766 576.3247 L
345.6934 576.0132 L
345.4668 575.6729 L
345.2969 575.3042 L
345.1543 574.9072 L
345.0693 574.5107 L
345.0693 574.0854 L
345.0693 573.6885 L
345.1543 573.2915 L
345.2969 572.895 L
345.4668 572.5264 L
345.6934 572.186 L
345.9766 571.8745 L
346.2891 571.5908 L
346.6289 571.3643 L
346.9971 571.1938 L
347.3945 571.0522 L
347.791 570.9673 L
348.2158 570.939 L
348.6133 570.9673 L
349.0098 571.0522 L
349.4063 571.1938 L
349.7754 571.3643 L
350.1152 571.5908 L
350.4268 571.8745 L
350.7109 572.186 L
350.9375 572.5264 L
351.1074 572.895 L
351.249 573.2915 L
351.334 573.6885 L
B
325.9355 548.5737 m
325.9072 548.9985 L
325.8223 549.3955 L
325.6807 549.7925 L
325.5107 550.1611 L
325.2842 550.501 L
325 550.813 L
324.6885 551.0679 L
324.3486 551.3232 L
323.9795 551.4932 L
323.6113 551.6348 L
323.1865 551.6919 L
322.7891 551.7202 L
322.3643 551.6919 L
321.9668 551.6348 L
321.5703 551.4932 L
321.2021 551.3232 L
320.8613 551.0679 L
320.5498 550.813 L
320.2949 550.501 L
320.0684 550.1611 L
319.8691 549.7925 L
319.7559 549.3955 L
319.6709 548.9985 L
319.6426 548.5737 L
319.6709 548.1768 L
319.7559 547.7798 L
319.8691 547.3828 L
320.0684 547.0142 L
320.2949 546.6743 L
320.5498 546.3623 L
320.8613 546.0791 L
321.2021 545.8521 L
321.5703 545.6821 L
321.9668 545.5405 L
322.3643 545.4556 L
322.7891 545.4272 L
323.1865 545.4556 L
323.6113 545.5405 L
323.9795 545.6821 L
324.3486 545.8521 L
324.6885 546.0791 L
325 546.3623 L
325.2842 546.6743 L
325.5107 547.0142 L
325.6807 547.3828 L
325.8223 547.7798 L
325.9072 548.1768 L
B
335.0352 550.7847 m
335.0068 551.2095 L
334.9219 551.6064 L
334.7803 552.0034 L
334.6094 552.3721 L
334.3828 552.7124 L
334.0996 553.0239 L
333.7881 553.2788 L
333.4473 553.5059 L
333.0791 553.7041 L
332.6826 553.8462 L
332.2852 553.9028 L
331.8887 553.9312 L
331.4629 553.9028 L
331.0664 553.8462 L
330.6699 553.7041 L
330.3008 553.5059 L
329.9609 553.2788 L
329.6494 553.0239 L
329.3945 552.7124 L
329.1387 552.3721 L
328.9688 552.0034 L
328.8271 551.6064 L
328.7705 551.2095 L
328.7422 550.7847 L
328.7705 550.3877 L
328.8271 549.9907 L
328.9688 549.5942 L
329.1387 549.2256 L
329.3945 548.8853 L
329.6494 548.5737 L
329.9609 548.29 L
330.3008 548.0635 L
330.6699 547.8931 L
331.0664 547.7515 L
331.4629 547.6665 L
331.8887 547.6382 L
332.2852 547.6665 L
332.6826 547.7515 L
333.0791 547.8931 L
333.4473 548.0635 L
333.7881 548.29 L
334.0996 548.5737 L
334.3828 548.8853 L
334.6094 549.2256 L
334.7803 549.5942 L
334.9219 549.9907 L
335.0068 550.3877 L
B
311.3379 531.4238 m
311.3096 531.8208 L
311.2246 532.2178 L
311.1104 532.6143 L
310.9121 532.9829 L
310.6855 533.3232 L
310.4023 533.6348 L
310.1191 533.9185 L
309.7783 534.145 L
309.3818 534.3149 L
309.0127 534.457 L
308.5879 534.542 L
308.1914 534.5703 L
307.7939 534.542 L
307.3691 534.457 L
307.001 534.3149 L
306.6318 534.145 L
306.2637 533.9185 L
305.9805 533.6348 L
305.6963 533.3232 L
305.4697 532.9829 L
305.2715 532.6143 L
305.1582 532.2178 L
305.0732 531.8208 L
305.0449 531.4238 L
305.0732 530.9985 L
305.1582 530.6021 L
305.2715 530.2051 L
305.4697 529.8364 L
305.6963 529.4966 L
305.9805 529.1846 L
306.2637 528.9292 L
306.6318 528.7026 L
307.001 528.5044 L
307.3691 528.3623 L
307.7939 528.3057 L
308.1914 528.2773 L
308.5879 528.3057 L
309.0127 528.3623 L
309.3818 528.5044 L
309.7783 528.7026 L
310.1191 528.9292 L
310.4023 529.1846 L
310.6855 529.4966 L
310.9121 529.8364 L
311.1104 530.2051 L
311.2246 530.6021 L
311.3096 530.9985 L
B
308.3613 535.0806 m
308.333 535.5059 L
308.248 535.9028 L
308.1064 536.2993 L
307.9355 536.668 L
307.709 537.0083 L
307.4258 537.3198 L
307.1143 537.6035 L
306.7734 537.8301 L
306.4053 538.0005 L
306.0371 538.1421 L
305.6113 538.2271 L
305.2148 538.2271 L
304.7891 538.2271 L
304.3926 538.1421 L
303.9961 538.0005 L
303.627 537.8301 L
303.2871 537.6035 L
302.9756 537.3198 L
302.7207 537.0083 L
302.4932 536.668 L
302.2949 536.2993 L
302.1816 535.9028 L
302.0967 535.5059 L
302.0684 535.0806 L
302.0967 534.6836 L
302.1816 534.2866 L
302.2949 533.8901 L
302.4932 533.5215 L
302.7207 533.1812 L
302.9756 532.8696 L
303.2871 532.5859 L
303.627 532.3594 L
303.9961 532.1895 L
304.3926 532.0474 L
304.7891 531.9624 L
305.2148 531.9341 L
305.6113 531.9624 L
306.0371 532.0474 L
306.4053 532.1895 L
306.7734 532.3594 L
307.1143 532.5859 L
307.4258 532.8696 L
307.709 533.1812 L
307.9355 533.5215 L
308.1064 533.8901 L
308.248 534.2866 L
308.333 534.6836 L
B
476.7959 668.0542 m
476.7676 668.4507 L
476.7109 668.876 L
476.5693 669.2446 L
476.3711 669.6128 L
476.1436 669.9531 L
475.8887 670.2651 L
475.5771 670.5483 L
475.2363 670.7754 L
474.8682 670.9453 L
474.4717 671.0869 L
474.0742 671.1724 L
473.6494 671.2007 L
473.2529 671.1724 L
472.8555 671.0869 L
472.459 670.9453 L
472.0898 670.7754 L
471.75 670.5483 L
471.4385 670.2651 L
471.1553 669.9531 L
470.9277 669.6128 L
470.7578 669.2446 L
470.6162 668.876 L
470.5313 668.4507 L
470.5029 668.0542 L
470.5313 667.6289 L
470.6162 667.2319 L
470.7578 666.835 L
470.9277 666.4668 L
471.1553 666.1265 L
471.4385 665.8149 L
471.75 665.5596 L
472.0898 665.3325 L
472.459 665.1343 L
472.8555 665.021 L
473.2529 664.936 L
473.6494 664.9077 L
474.0742 664.936 L
474.4717 665.021 L
474.8682 665.1343 L
475.2363 665.3325 L
475.5771 665.5596 L
475.8887 665.8149 L
476.1436 666.1265 L
476.3711 666.4668 L
476.5693 666.835 L
476.7109 667.2319 L
476.7676 667.6289 L
B
457.208 650.1392 m
457.1797 650.5645 L
457.0947 650.9609 L
456.9814 651.3579 L
456.7832 651.7266 L
456.5566 652.0669 L
456.3018 652.3784 L
455.9893 652.6333 L
455.6494 652.8604 L
455.2813 653.0586 L
454.8838 653.1724 L
454.4873 653.2573 L
454.0615 653.2856 L
453.665 653.2573 L
453.2686 653.1724 L
452.8711 653.0586 L
452.5029 652.8604 L
452.1631 652.6333 L
451.8506 652.3784 L
451.5674 652.0669 L
451.3408 651.7266 L
451.1709 651.3579 L
451.0293 650.9609 L
450.9443 650.5645 L
450.916 650.1392 L
450.9443 649.7422 L
451.0293 649.3169 L
451.1709 648.9487 L
451.3408 648.5801 L
451.5674 648.2397 L
451.8506 647.9282 L
452.1631 647.6445 L
452.5029 647.418 L
452.8711 647.2476 L
453.2686 647.106 L
453.665 647.021 L
454.0615 646.9927 L
454.4873 647.021 L
454.8838 647.106 L
455.2813 647.2476 L
455.6494 647.418 L
455.9893 647.6445 L
456.3018 647.9282 L
456.5566 648.2397 L
456.7832 648.5801 L
456.9814 648.9487 L
457.0947 649.3169 L
457.1797 649.7422 L
B
471.127 644.0161 m
471.0986 644.4131 L
471.0137 644.8101 L
470.8711 645.2065 L
470.7012 645.5752 L
470.4746 645.9155 L
470.1914 646.2271 L
469.8789 646.5107 L
469.5391 646.7373 L
469.1709 646.9077 L
468.7734 647.0493 L
468.377 647.1343 L
467.9805 647.1626 L
467.5547 647.1343 L
467.1582 647.0493 L
466.7607 646.9077 L
466.3926 646.7373 L
466.0527 646.5107 L
465.7402 646.2271 L
465.4854 645.9155 L
465.2588 645.5752 L
465.0605 645.2065 L
464.9189 644.8101 L
464.8623 644.4131 L
464.834 644.0161 L
464.8623 643.5908 L
464.9189 643.1938 L
465.0605 642.7974 L
465.2588 642.4287 L
465.4854 642.0884 L
465.7402 641.7769 L
466.0527 641.5215 L
466.3926 641.2949 L
466.7607 641.0967 L
467.1582 640.9829 L
467.5547 640.8979 L
467.9805 640.8696 L
468.377 640.8979 L
468.7734 640.9829 L
469.1709 641.0967 L
469.5391 641.2949 L
469.8789 641.5215 L
470.1914 641.7769 L
470.4746 642.0884 L
470.7012 642.4287 L
470.8711 642.7974 L
471.0137 643.1938 L
471.0986 643.5908 L
B
470.2197 654.3062 m
470.1914 654.731 L
470.1064 655.1279 L
469.9932 655.5249 L
469.7939 655.8936 L
469.5674 656.2334 L
469.2842 656.5454 L
469.001 656.8003 L
468.6318 657.0273 L
468.2637 657.2256 L
467.8955 657.3389 L
467.4697 657.4243 L
467.0732 657.4526 L
466.6475 657.4243 L
466.251 657.3389 L
465.8545 657.2256 L
465.4854 657.0273 L
465.1455 656.8003 L
464.834 656.5454 L
464.5781 656.2334 L
464.3516 655.8936 L
464.1533 655.5249 L
464.04 655.1279 L
463.9551 654.731 L
463.9268 654.3062 L
463.9551 653.9092 L
464.04 653.5122 L
464.1533 653.1152 L
464.3516 652.7471 L
464.5781 652.4067 L
464.834 652.0947 L
465.1455 651.8115 L
465.4854 651.5845 L
465.8545 651.4146 L
466.251 651.2729 L
466.6475 651.188 L
467.0732 651.1597 L
467.4697 651.188 L
467.8955 651.2729 L
468.2637 651.4146 L
468.6318 651.5845 L
469.001 651.8115 L
469.2842 652.0947 L
469.5674 652.4067 L
469.7939 652.7471 L
469.9932 653.1152 L
470.1064 653.5122 L
470.1914 653.9092 L
B
460.9785 647.1909 m
460.9502 647.6162 L
460.8936 648.0132 L
460.752 648.4097 L
460.5537 648.7783 L
460.3262 649.1187 L
460.0713 649.4302 L
459.7598 649.6855 L
459.4199 649.9121 L
459.0508 650.1108 L
458.6543 650.2241 L
458.2568 650.3091 L
457.832 650.3374 L
457.4355 650.3091 L
457.0381 650.2241 L
456.6416 650.1108 L
456.2734 649.9121 L
455.9326 649.6855 L
455.6211 649.4302 L
455.3379 649.1187 L
455.1104 648.7783 L
454.9404 648.4097 L
454.7988 648.0132 L
454.7139 647.6162 L
454.6855 647.1909 L
454.7139 646.7939 L
454.7988 646.397 L
454.9404 646.0005 L
455.1104 645.6318 L
455.3379 645.2915 L
455.6211 644.98 L
455.9326 644.6963 L
456.2734 644.4697 L
456.6416 644.2998 L
457.0381 644.1577 L
457.4355 644.0728 L
457.832 644.0444 L
458.2568 644.0728 L
458.6543 644.1577 L
459.0508 644.2998 L
459.4199 644.4697 L
459.7598 644.6963 L
460.0713 644.98 L
460.3262 645.2915 L
460.5537 645.6318 L
460.752 646.0005 L
460.8936 646.397 L
460.9502 646.7939 L
B
462.1973 655.043 m
462.1689 655.4683 L
462.084 655.8652 L
461.9707 656.2617 L
461.7725 656.6304 L
461.5459 656.9707 L
461.29 657.2822 L
460.9785 657.5376 L
460.6387 657.7642 L
460.2695 657.9629 L
459.873 658.0762 L
459.4766 658.1611 L
459.0508 658.1895 L
458.6543 658.1611 L
458.2568 658.0762 L
457.8604 657.9629 L
457.4922 657.7642 L
457.1514 657.5376 L
456.8398 657.2822 L
456.5566 656.9707 L
456.3301 656.6304 L
456.1592 656.2617 L
456.0176 655.8652 L
455.9326 655.4683 L
455.9043 655.043 L
455.9326 654.646 L
456.0176 654.2212 L
456.1592 653.8525 L
456.3301 653.4839 L
456.5566 653.144 L
456.8398 652.832 L
457.1514 652.5483 L
457.4922 652.3218 L
457.8604 652.1519 L
458.2568 652.0098 L
458.6543 651.9248 L
459.0508 651.8965 L
459.4766 651.9248 L
459.873 652.0098 L
460.2695 652.1519 L
460.6387 652.3218 L
460.9785 652.5483 L
461.29 652.832 L
461.5459 653.144 L
461.7725 653.4839 L
461.9707 653.8525 L
462.084 654.2212 L
462.1689 654.646 L
B
475.9736 669.5278 m
475.9453 669.9248 L
475.8604 670.3218 L
475.7188 670.7188 L
475.5488 671.0869 L
475.3223 671.4272 L
475.0381 671.7388 L
474.7266 672.0225 L
474.3867 672.2495 L
474.0176 672.4194 L
473.6494 672.561 L
473.2246 672.646 L
472.8271 672.6743 L
472.4023 672.646 L
472.0049 672.561 L
471.6084 672.4194 L
471.2402 672.2495 L
470.8994 672.0225 L
470.5879 671.7388 L
470.333 671.4272 L
470.1064 671.0869 L
469.9072 670.7188 L
469.7939 670.3218 L
469.709 669.9248 L
469.6807 669.5278 L
469.709 669.103 L
469.7939 668.7061 L
469.9072 668.3091 L
470.1064 667.9404 L
470.333 667.6006 L
470.5879 667.2886 L
470.8994 667.0337 L
471.2402 666.8066 L
471.6084 666.6084 L
472.0049 666.4951 L
472.4023 666.4097 L
472.8271 666.3813 L
473.2246 666.4097 L
473.6494 666.4951 L
474.0176 666.6084 L
474.3867 666.8066 L
474.7266 667.0337 L
475.0381 667.2886 L
475.3223 667.6006 L
475.5488 667.9404 L
475.7188 668.3091 L
475.8604 668.7061 L
475.9453 669.103 L
B
477.958 673.4399 m
477.9297 673.8647 L
477.8447 674.2617 L
477.7314 674.6587 L
477.5332 675.0273 L
477.3057 675.3677 L
477.0508 675.6792 L
476.7393 675.9341 L
476.3994 676.1611 L
476.0303 676.3594 L
475.6338 676.4731 L
475.2363 676.5581 L
474.8115 676.5864 L
474.415 676.5581 L
473.9893 676.4731 L
473.6211 676.3594 L
473.2529 676.1611 L
472.8838 675.9341 L
472.6006 675.6792 L
472.3174 675.3677 L
472.0898 675.0273 L
471.8916 674.6587 L
471.7783 674.2617 L
471.6934 673.8647 L
471.665 673.4399 L
471.6934 673.043 L
471.7783 672.646 L
471.8916 672.2495 L
472.0898 671.8809 L
472.3174 671.5405 L
472.6006 671.229 L
472.8838 670.9453 L
473.2529 670.7188 L
473.6211 670.5483 L
473.9893 670.4067 L
474.415 670.3218 L
474.8115 670.2935 L
475.2363 670.3218 L
475.6338 670.4067 L
476.0303 670.5483 L
476.3994 670.7188 L
476.7393 670.9453 L
477.0508 671.229 L
477.3057 671.5405 L
477.5332 671.8809 L
477.7314 672.2495 L
477.8447 672.646 L
477.9297 673.043 L
B
483.1738 682.7661 m
483.1455 683.1909 L
483.0605 683.5879 L
482.9473 683.9849 L
482.749 684.353 L
482.5215 684.6934 L
482.2383 685.0054 L
481.9551 685.2603 L
481.5859 685.4873 L
481.2178 685.6855 L
480.8496 685.7988 L
480.4238 685.8838 L
480.0273 685.9126 L
479.6309 685.8838 L
479.2051 685.7988 L
478.8369 685.6855 L
478.4395 685.4873 L
478.0996 685.2603 L
477.8164 685.0054 L
477.5332 684.6934 L
477.3057 684.353 L
477.1074 683.9849 L
476.9941 683.5879 L
476.9092 683.1909 L
476.8809 682.7661 L
476.9092 682.3691 L
476.9941 681.9438 L
477.1074 681.5752 L
477.3057 681.207 L
477.5332 680.8667 L
477.8164 680.5547 L
478.0996 680.2715 L
478.4395 680.0444 L
478.8369 679.8745 L
479.2051 679.7329 L
479.6309 679.6479 L
480.0273 679.6196 L
480.4238 679.6479 L
480.8496 679.7329 L
481.2178 679.8745 L
481.5859 680.0444 L
481.9551 680.2715 L
482.2383 680.5547 L
482.5215 680.8667 L
482.749 681.207 L
482.9473 681.5752 L
483.0605 681.9438 L
483.1455 682.3691 L
B
504.0088 671.9658 m
503.9805 672.3911 L
503.8955 672.7876 L
503.7813 673.1846 L
503.583 673.5532 L
503.3564 673.8936 L
503.1016 674.2051 L
502.79 674.4604 L
502.4492 674.687 L
502.0811 674.8853 L
501.6836 675.0273 L
501.2871 675.084 L
500.8623 675.1123 L
500.4648 675.084 L
500.0684 675.0273 L
499.6719 674.8853 L
499.3027 674.687 L
498.9629 674.4604 L
498.6514 674.2051 L
498.3672 673.8936 L
498.1406 673.5532 L
497.9707 673.1846 L
497.8291 672.7876 L
497.7441 672.3911 L
497.7158 671.9658 L
497.7441 671.5688 L
497.8291 671.1724 L
497.9707 670.7754 L
498.1406 670.4067 L
498.3672 670.0664 L
498.6514 669.7549 L
498.9629 669.4712 L
499.3027 669.2446 L
499.6719 669.0747 L
500.0684 668.9326 L
500.4648 668.8477 L
500.8623 668.8193 L
501.2871 668.8477 L
501.6836 668.9326 L
502.0811 669.0747 L
502.4492 669.2446 L
502.79 669.4712 L
503.1016 669.7549 L
503.3564 670.0664 L
503.583 670.4067 L
503.7813 670.7754 L
503.8955 671.1724 L
503.9805 671.5688 L
B
466.5059 649.6572 m
466.4775 650.0542 L
466.3926 650.479 L
466.2793 650.8477 L
466.0811 651.2163 L
465.8545 651.5562 L
465.5986 651.8682 L
465.2871 652.1519 L
464.9473 652.3784 L
464.5781 652.5483 L
464.1816 652.6899 L
463.7852 652.7754 L
463.3594 652.8037 L
462.9629 652.7754 L
462.5371 652.6899 L
462.1689 652.5483 L
461.8008 652.3784 L
461.4316 652.1519 L
461.1484 651.8682 L
460.8652 651.5562 L
460.6387 651.2163 L
460.4395 650.8477 L
460.3262 650.479 L
460.2412 650.0542 L
460.2129 649.6572 L
460.2412 649.2319 L
460.3262 648.835 L
460.4395 648.438 L
460.6387 648.0698 L
460.8652 647.7295 L
461.1484 647.4175 L
461.4316 647.1626 L
461.8008 646.936 L
462.1689 646.7373 L
462.5371 646.624 L
462.9629 646.5391 L
463.3594 646.5107 L
463.7852 646.5391 L
464.1816 646.624 L
464.5781 646.7373 L
464.9473 646.936 L
465.2871 647.1626 L
465.5986 647.4175 L
465.8545 647.7295 L
466.0811 648.0698 L
466.2793 648.438 L
466.3926 648.835 L
466.4775 649.2319 L
B
499.2178 670.0098 m
499.1895 670.4351 L
499.1045 670.832 L
498.9912 671.229 L
498.793 671.5972 L
498.5664 671.9375 L
498.3105 672.2495 L
497.999 672.5044 L
497.6592 672.731 L
497.29 672.9297 L
496.8936 673.043 L
496.4971 673.1279 L
496.0713 673.1563 L
495.6748 673.1279 L
495.249 673.043 L
494.8809 672.9297 L
494.5127 672.731 L
494.1719 672.5044 L
493.8604 672.2495 L
493.5771 671.9375 L
493.3506 671.5972 L
493.1797 671.229 L
493.0381 670.832 L
492.9531 670.4351 L
492.9248 670.0098 L
492.9531 669.6128 L
493.0381 669.188 L
493.1797 668.8193 L
493.3506 668.4507 L
493.5771 668.1108 L
493.8604 667.7988 L
494.1719 667.5151 L
494.5127 667.2886 L
494.8809 667.1187 L
495.249 666.9771 L
495.6748 666.8916 L
496.0713 666.8633 L
496.4971 666.8916 L
496.8936 666.9771 L
497.29 667.1187 L
497.6592 667.2886 L
497.999 667.5151 L
498.3105 667.7988 L
498.5664 668.1108 L
498.793 668.4507 L
498.9912 668.8193 L
499.1045 669.188 L
499.1895 669.6128 L
B
480.3672 664.3691 m
480.3389 664.7939 L
480.2539 665.1909 L
480.1406 665.5879 L
479.9424 665.9565 L
479.7158 666.2964 L
479.4609 666.6084 L
479.1484 666.8633 L
478.8086 667.0903 L
478.4404 667.2886 L
478.043 667.4019 L
477.6465 667.4868 L
477.2207 667.5151 L
476.8242 667.4868 L
476.3994 667.4019 L
476.0303 667.2886 L
475.6621 667.0903 L
475.3223 666.8633 L
475.0098 666.6084 L
474.7266 666.2964 L
474.5 665.9565 L
474.3301 665.5879 L
474.1875 665.1909 L
474.1025 664.7939 L
474.0742 664.3691 L
474.1025 663.9722 L
474.1875 663.5469 L
474.3301 663.1782 L
474.5 662.8101 L
474.7266 662.4414 L
475.0098 662.1577 L
475.3223 661.8745 L
475.6621 661.6479 L
476.0303 661.4492 L
476.3994 661.3359 L
476.8242 661.251 L
477.2207 661.2227 L
477.6465 661.251 L
478.043 661.3359 L
478.4404 661.4492 L
478.8086 661.6479 L
479.1484 661.8745 L
479.4609 662.1577 L
479.7158 662.4414 L
479.9424 662.8101 L
480.1406 663.1782 L
480.2539 663.5469 L
480.3389 663.9722 L
B
475.4639 653.3423 m
475.4355 653.7388 L
475.3506 654.1357 L
475.2363 654.5327 L
475.0381 654.9014 L
474.8115 655.2417 L
474.5566 655.5532 L
474.2451 655.8364 L
473.9043 656.0635 L
473.5361 656.2334 L
473.1396 656.3755 L
472.7422 656.4604 L
472.3174 656.4888 L
471.9199 656.4604 L
471.4951 656.3755 L
471.127 656.2334 L
470.7578 656.0635 L
470.3896 655.8364 L
470.1064 655.5532 L
469.8223 655.2417 L
469.5957 654.9014 L
469.4258 654.5327 L
469.2842 654.1357 L
469.1992 653.7388 L
469.1709 653.3423 L
469.1992 652.917 L
469.2842 652.52 L
469.4258 652.1235 L
469.5957 651.7549 L
469.8223 651.4146 L
470.1064 651.103 L
470.3896 650.8477 L
470.7578 650.5928 L
471.127 650.4224 L
471.4951 650.2808 L
471.9199 650.2241 L
472.3174 650.1958 L
472.7422 650.2241 L
473.1396 650.2808 L
473.5361 650.4224 L
473.9043 650.5928 L
474.2451 650.8477 L
474.5566 651.103 L
474.8115 651.4146 L
475.0381 651.7549 L
475.2363 652.1235 L
475.3506 652.52 L
475.4355 652.917 L
B
464.1816 656.772 m
464.1533 657.1689 L
464.0967 657.5659 L
463.9551 657.9624 L
463.7568 658.3311 L
463.5293 658.6714 L
463.2744 658.9829 L
462.9629 659.2666 L
462.623 659.4932 L
462.2539 659.6636 L
461.8574 659.8052 L
461.46 659.8901 L
461.0352 659.9185 L
460.6387 659.8901 L
460.2412 659.8052 L
459.8447 659.6636 L
459.4766 659.4932 L
459.1357 659.2666 L
458.8242 658.9829 L
458.541 658.6714 L
458.3145 658.3311 L
458.1436 657.9624 L
458.002 657.5659 L
457.917 657.1689 L
457.8887 656.772 L
457.917 656.3472 L
458.002 655.9502 L
458.1436 655.5532 L
458.3145 655.1846 L
458.541 654.8447 L
458.8242 654.5327 L
459.1357 654.2778 L
459.4766 654.0508 L
459.8447 653.8525 L
460.2412 653.7388 L
460.6387 653.6538 L
461.0352 653.6255 L
461.46 653.6538 L
461.8574 653.7388 L
462.2539 653.8525 L
462.623 654.0508 L
462.9629 654.2778 L
463.2744 654.5327 L
463.5293 654.8447 L
463.7568 655.1846 L
463.9551 655.5532 L
464.0967 655.9502 L
464.1533 656.3472 L
B
493.4355 671.9658 m
493.4072 672.3911 L
493.3506 672.7876 L
493.209 673.1846 L
493.0098 673.5532 L
492.7832 673.8936 L
492.5283 674.2051 L
492.2168 674.4604 L
491.876 674.687 L
491.5078 674.8853 L
491.1113 675.0273 L
490.7139 675.084 L
490.2891 675.1123 L
489.8916 675.084 L
489.4951 675.0273 L
489.0986 674.8853 L
488.7295 674.687 L
488.3896 674.4604 L
488.0781 674.2051 L
487.7939 673.8936 L
487.5674 673.5532 L
487.3975 673.1846 L
487.2559 672.7876 L
487.1709 672.3911 L
487.1426 671.9658 L
487.1709 671.5688 L
487.2559 671.1724 L
487.3975 670.7754 L
487.5674 670.4067 L
487.7939 670.0664 L
488.0781 669.7549 L
488.3896 669.4712 L
488.7295 669.2446 L
489.0986 669.0747 L
489.4951 668.9326 L
489.8916 668.8477 L
490.2891 668.8193 L
490.7139 668.8477 L
491.1113 668.9326 L
491.5078 669.0747 L
491.876 669.2446 L
492.2168 669.4712 L
492.5283 669.7549 L
492.7832 670.0664 L
493.0098 670.4067 L
493.209 670.7754 L
493.3506 671.1724 L
493.4072 671.5688 L
B
481.9551 667.7988 m
481.9268 668.2241 L
481.8418 668.6211 L
481.7002 669.0181 L
481.5293 669.3862 L
481.3027 669.7266 L
481.0195 670.0381 L
480.708 670.2935 L
480.3672 670.52 L
479.999 670.7188 L
479.6025 670.832 L
479.2051 670.917 L
478.8086 670.9453 L
478.3828 670.917 L
477.9863 670.832 L
477.5898 670.7188 L
477.2207 670.52 L
476.8809 670.2935 L
476.5693 670.0381 L
476.2852 669.7266 L
476.0586 669.3862 L
475.8887 669.0181 L
475.7471 668.6211 L
475.6621 668.2241 L
475.6621 667.7988 L
475.6621 667.4019 L
475.7471 666.9771 L
475.8887 666.6084 L
476.0586 666.2397 L
476.2852 665.8999 L
476.5693 665.5879 L
476.8809 665.3042 L
477.2207 665.0776 L
477.5898 664.9077 L
477.9863 664.7661 L
478.3828 664.6807 L
478.8086 664.6523 L
479.2051 664.6807 L
479.6025 664.7661 L
479.999 664.9077 L
480.3672 665.0776 L
480.708 665.3042 L
481.0195 665.5879 L
481.3027 665.8999 L
481.5293 666.2397 L
481.7002 666.6084 L
481.8418 666.9771 L
481.9268 667.4019 L
B
482.7207 661.1943 m
482.6924 661.5908 L
482.6064 661.9878 L
482.4648 662.3848 L
482.2949 662.7534 L
482.0684 663.0933 L
481.7852 663.4053 L
481.4727 663.6885 L
481.1328 663.9155 L
480.7646 664.0854 L
480.3955 664.2271 L
479.9707 664.312 L
479.5742 664.3408 L
479.1484 664.312 L
478.752 664.2271 L
478.3545 664.0854 L
477.9863 663.9155 L
477.6465 663.6885 L
477.334 663.4053 L
477.0791 663.0933 L
476.8525 662.7534 L
476.6543 662.3848 L
476.541 661.9878 L
476.4561 661.5908 L
476.4277 661.1943 L
476.4561 660.769 L
476.541 660.3721 L
476.6543 659.9751 L
476.8525 659.6069 L
477.0791 659.2666 L
477.334 658.9546 L
477.6465 658.6714 L
477.9863 658.4448 L
478.3545 658.2744 L
478.752 658.1328 L
479.1484 658.0479 L
479.5742 658.0479 L
479.9707 658.0479 L
480.3955 658.1328 L
480.7646 658.2744 L
481.1328 658.4448 L
481.4727 658.6714 L
481.7852 658.9546 L
482.0684 659.2666 L
482.2949 659.6069 L
482.4648 659.9751 L
482.6064 660.3721 L
482.6924 660.769 L
B
504.1221 679.3359 m
504.0938 679.7329 L
504.0371 680.1577 L
503.8955 680.5264 L
503.6963 680.895 L
503.4697 681.2349 L
503.2148 681.5469 L
502.9033 681.8306 L
502.5625 682.0571 L
502.1943 682.2271 L
501.7979 682.3691 L
501.4004 682.4541 L
500.9756 682.4824 L
500.5781 682.4541 L
500.1816 682.3691 L
499.7852 682.2271 L
499.416 682.0571 L
499.0762 681.8306 L
498.7646 681.5469 L
498.4805 681.2349 L
498.2539 680.895 L
498.084 680.5264 L
497.9424 680.1577 L
497.8574 679.7329 L
497.8291 679.3359 L
497.8574 678.9106 L
497.9424 678.5137 L
498.084 678.1172 L
498.2539 677.7485 L
498.4805 677.4082 L
498.7646 677.0967 L
499.0762 676.8413 L
499.416 676.6147 L
499.7852 676.4165 L
500.1816 676.3027 L
500.5781 676.2178 L
500.9756 676.1895 L
501.4004 676.2178 L
501.7979 676.3027 L
502.1943 676.4165 L
502.5625 676.6147 L
502.9033 676.8413 L
503.2148 677.0967 L
503.4697 677.4082 L
503.6963 677.7485 L
503.8955 678.1172 L
504.0371 678.5137 L
504.0938 678.9106 L
B
521.8389 705.8398 m
521.8105 706.2368 L
521.7246 706.6338 L
521.6113 707.0308 L
521.4131 707.3989 L
521.1865 707.7393 L
520.9316 708.0508 L
520.6191 708.3345 L
520.2793 708.561 L
519.9111 708.7314 L
519.5137 708.873 L
519.1172 708.958 L
518.6924 708.9863 L
518.2949 708.958 L
517.8701 708.873 L
517.502 708.7314 L
517.1328 708.561 L
516.793 708.3345 L
516.4805 708.0508 L
516.1973 707.7393 L
515.9707 707.3989 L
515.8008 707.0308 L
515.6592 706.6338 L
515.5742 706.2368 L
515.5459 705.8398 L
515.5742 705.4146 L
515.6592 705.0181 L
515.8008 704.6211 L
515.9707 704.2524 L
516.1973 703.9126 L
516.4805 703.6006 L
516.793 703.3169 L
517.1328 703.0903 L
517.502 702.9204 L
517.8701 702.7783 L
518.2949 702.6934 L
518.6924 702.6934 L
519.1172 702.6934 L
519.5137 702.7783 L
519.9111 702.9204 L
520.2793 703.0903 L
520.6191 703.3169 L
520.9316 703.6006 L
521.1865 703.9126 L
521.4131 704.2524 L
521.6113 704.6211 L
521.7246 705.0181 L
521.8105 705.4146 L
B
475.4639 669.5278 m
475.4355 669.9248 L
475.3506 670.3218 L
475.2363 670.7188 L
475.0381 671.0869 L
474.8115 671.4272 L
474.5566 671.7388 L
474.2451 672.0225 L
473.9043 672.2495 L
473.5361 672.4194 L
473.1396 672.561 L
472.7422 672.646 L
472.3174 672.6743 L
471.9199 672.646 L
471.4951 672.561 L
471.127 672.4194 L
470.7578 672.2495 L
470.3896 672.0225 L
470.1064 671.7388 L
469.8223 671.4272 L
469.5957 671.0869 L
469.4258 670.7188 L
469.2842 670.3218 L
469.1992 669.9248 L
469.1709 669.5278 L
469.1992 669.103 L
469.2842 668.7061 L
469.4258 668.3091 L
469.5957 667.9404 L
469.8223 667.6006 L
470.1064 667.2886 L
470.3896 667.0337 L
470.7578 666.8066 L
471.127 666.6084 L
471.4951 666.4951 L
471.9199 666.4097 L
472.3174 666.3813 L
472.7422 666.4097 L
473.1396 666.4951 L
473.5361 666.6084 L
473.9043 666.8066 L
474.2451 667.0337 L
474.5566 667.2886 L
474.8115 667.6006 L
475.0381 667.9404 L
475.2363 668.3091 L
475.3506 668.7061 L
475.4355 669.103 L
B
472.0049 668.5356 m
471.9766 668.9609 L
471.8916 669.3579 L
471.7783 669.7549 L
471.5801 670.1235 L
471.3535 670.4634 L
471.0986 670.7754 L
470.7861 671.0303 L
470.4463 671.2573 L
470.0781 671.4556 L
469.6807 671.5688 L
469.2842 671.6538 L
468.8584 671.6821 L
468.4619 671.6538 L
468.0371 671.5688 L
467.668 671.4556 L
467.2998 671.2573 L
466.96 671.0303 L
466.6475 670.7754 L
466.3643 670.4634 L
466.1377 670.1235 L
465.9678 669.7549 L
465.8262 669.3579 L
465.7402 668.9609 L
465.7119 668.5356 L
465.7402 668.1392 L
465.8262 667.7139 L
465.9678 667.3452 L
466.1377 666.9771 L
466.3643 666.6367 L
466.6475 666.3247 L
466.96 666.0415 L
467.2998 665.8149 L
467.668 665.6445 L
468.0371 665.5029 L
468.4619 665.418 L
468.8584 665.3896 L
469.2842 665.418 L
469.6807 665.5029 L
470.0781 665.6445 L
470.4463 665.8149 L
470.7861 666.0415 L
471.0986 666.3247 L
471.3535 666.6367 L
471.5801 666.9771 L
471.7783 667.3452 L
471.8916 667.7139 L
471.9766 668.1392 L
B
494.7676 676.6431 m
494.7393 677.04 L
494.6543 677.4365 L
494.541 677.8335 L
494.3428 678.2021 L
494.1152 678.5425 L
493.832 678.854 L
493.5488 679.1377 L
493.1797 679.3643 L
492.8115 679.5342 L
492.4434 679.6763 L
492.0176 679.7612 L
491.6211 679.7896 L
491.1963 679.7612 L
490.7988 679.6763 L
490.4023 679.5342 L
490.0332 679.3643 L
489.6934 679.1377 L
489.3818 678.854 L
489.127 678.5425 L
488.8994 678.2021 L
488.7012 677.8335 L
488.5879 677.4365 L
488.5029 677.04 L
488.4746 676.6431 L
488.5029 676.2178 L
488.5879 675.8208 L
488.7012 675.4243 L
488.8994 675.0557 L
489.127 674.7153 L
489.3818 674.4038 L
489.6934 674.1484 L
490.0332 673.9219 L
490.4023 673.7231 L
490.7988 673.6099 L
491.1963 673.5249 L
491.6211 673.4966 L
492.0176 673.5249 L
492.4434 673.6099 L
492.8115 673.7231 L
493.1797 673.9219 L
493.5488 674.1484 L
493.832 674.4038 L
494.1152 674.7153 L
494.3428 675.0557 L
494.541 675.4243 L
494.6543 675.8208 L
494.7393 676.2178 L
B
515.6309 701.418 m
515.6025 701.8149 L
515.5176 702.2114 L
515.375 702.6084 L
515.2051 702.9771 L
514.9785 703.3169 L
514.6953 703.6289 L
514.3838 703.9126 L
514.043 704.1392 L
513.6748 704.3091 L
513.2773 704.4507 L
512.8809 704.5361 L
512.4844 704.5645 L
512.0586 704.5361 L
511.6621 704.4507 L
511.2656 704.3091 L
510.8965 704.1392 L
510.5566 703.9126 L
510.2451 703.6289 L
509.9893 703.3169 L
509.7627 702.9771 L
509.5645 702.6084 L
509.4512 702.2114 L
509.3662 701.8149 L
509.3379 701.418 L
509.3662 700.9927 L
509.4512 700.5957 L
509.5645 700.1987 L
509.7627 699.8306 L
509.9893 699.4902 L
510.2451 699.1782 L
510.5566 698.9233 L
510.8965 698.6968 L
511.2656 698.498 L
511.6621 698.3848 L
512.0586 698.2998 L
512.4844 698.2715 L
512.8809 698.2998 L
513.2773 698.3848 L
513.6748 698.498 L
514.043 698.6968 L
514.3838 698.9233 L
514.6953 699.1782 L
514.9785 699.4902 L
515.2051 699.8306 L
515.375 700.1987 L
515.5176 700.5957 L
515.6025 700.9927 L
B
487.3408 669.0176 m
487.3125 669.4429 L
487.2275 669.8398 L
487.0859 670.2368 L
486.916 670.605 L
486.6885 670.9453 L
486.4053 671.2573 L
486.0938 671.5405 L
485.7529 671.7676 L
485.3848 671.9375 L
484.9883 672.0791 L
484.5908 672.1641 L
484.1943 672.1641 L
483.7695 672.1641 L
483.3721 672.0791 L
482.9756 671.9375 L
482.6064 671.7676 L
482.2666 671.5405 L
481.9551 671.2573 L
481.7002 670.9453 L
481.4727 670.605 L
481.2744 670.2368 L
481.1611 669.8398 L
481.0762 669.4429 L
481.0479 669.0176 L
481.0762 668.6211 L
481.1611 668.2241 L
481.2744 667.8271 L
481.4727 667.4585 L
481.7002 667.1187 L
481.9551 666.8066 L
482.2666 666.5234 L
482.6064 666.2964 L
482.9756 666.1265 L
483.3721 665.9849 L
483.7695 665.8999 L
484.1943 665.8711 L
484.5908 665.8999 L
484.9883 665.9849 L
485.3848 666.1265 L
485.7529 666.2964 L
486.0938 666.5234 L
486.4053 666.8066 L
486.6885 667.1187 L
486.916 667.4585 L
487.0859 667.8271 L
487.2275 668.2241 L
487.3125 668.6211 L
B
402.3301 595.9404 m
402.3008 596.3374 L
402.2158 596.7344 L
402.0742 597.1313 L
401.9043 597.4995 L
401.6777 597.8398 L
401.3945 598.1514 L
401.082 598.4351 L
400.7422 598.6616 L
400.374 598.832 L
399.9766 598.9736 L
399.5801 599.0586 L
399.1836 599.0869 L
398.7578 599.0586 L
398.3613 598.9736 L
397.9639 598.832 L
397.5957 598.6616 L
397.2559 598.4351 L
396.9434 598.1514 L
396.6885 597.8398 L
396.4336 597.4995 L
396.2637 597.1313 L
396.1221 596.7344 L
396.0654 596.3374 L
396.0371 595.9404 L
396.0654 595.5151 L
396.1221 595.1187 L
396.2637 594.7217 L
396.4336 594.353 L
396.6885 594.0132 L
396.9434 593.7012 L
397.2559 593.4458 L
397.5957 593.1909 L
397.9639 593.021 L
398.3613 592.8789 L
398.7578 592.8223 L
399.1836 592.7939 L
399.5801 592.8223 L
399.9766 592.8789 L
400.374 593.021 L
400.7422 593.1909 L
401.082 593.4458 L
401.3945 593.7012 L
401.6777 594.0132 L
401.9043 594.353 L
402.0742 594.7217 L
402.2158 595.1187 L
402.3008 595.5151 L
B
499.7285 684.9771 m
499.7002 685.3735 L
499.6152 685.7988 L
499.4727 686.1675 L
499.3027 686.5356 L
499.0762 686.9043 L
498.793 687.188 L
498.4805 687.4712 L
498.1406 687.6982 L
497.7725 687.8965 L
497.375 688.0098 L
496.9785 688.0952 L
496.582 688.1235 L
496.1563 688.0952 L
495.7598 688.0098 L
495.3633 687.8965 L
494.9941 687.6982 L
494.6543 687.4712 L
494.3428 687.188 L
494.0869 686.9043 L
493.832 686.5356 L
493.6621 686.1675 L
493.5205 685.7988 L
493.4639 685.3735 L
493.4355 684.9771 L
493.4639 684.5518 L
493.5205 684.1548 L
493.6621 683.7578 L
493.832 683.3896 L
494.0869 683.0493 L
494.3428 682.7373 L
494.6543 682.4824 L
494.9941 682.2554 L
495.3633 682.0571 L
495.7598 681.9438 L
496.1563 681.8589 L
496.582 681.8306 L
496.9785 681.8589 L
497.375 681.9438 L
497.7725 682.0571 L
498.1406 682.2554 L
498.4805 682.4824 L
498.793 682.7373 L
499.0762 683.0493 L
499.3027 683.3896 L
499.4727 683.7578 L
499.6152 684.1548 L
499.7002 684.5518 L
B
496.3262 700.1987 m
496.2979 700.5957 L
496.2129 700.9927 L
496.0713 701.3896 L
495.9014 701.7578 L
495.6748 702.0981 L
495.3916 702.4097 L
495.0791 702.6934 L
494.7393 702.9204 L
494.3711 703.0903 L
494.002 703.2319 L
493.5771 703.3169 L
493.1797 703.3452 L
492.7549 703.3169 L
492.3584 703.2319 L
491.9609 703.0903 L
491.5928 702.9204 L
491.2529 702.6934 L
490.9404 702.4097 L
490.6855 702.0981 L
490.459 701.7578 L
490.2607 701.3896 L
490.1475 700.9927 L
490.0625 700.5957 L
490.0332 700.1987 L
490.0625 699.7739 L
490.1475 699.377 L
490.2607 698.98 L
490.459 698.6113 L
490.6855 698.2715 L
490.9404 697.9595 L
491.2529 697.6763 L
491.5928 697.4492 L
491.9609 697.2793 L
492.3584 697.1377 L
492.7549 697.0522 L
493.1797 697.0522 L
493.5771 697.0522 L
494.002 697.1377 L
494.3711 697.2793 L
494.7393 697.4492 L
495.0791 697.6763 L
495.3916 697.9595 L
495.6748 698.2715 L
495.9014 698.6113 L
496.0713 698.98 L
496.2129 699.377 L
496.2979 699.7739 L
B
490.7139 677.8618 m
490.7139 678.2588 L
490.6289 678.6841 L
490.4873 679.0522 L
490.3174 679.4209 L
490.0908 679.7896 L
489.8066 680.0728 L
489.4951 680.3564 L
489.1553 680.583 L
488.7861 680.7817 L
488.3896 680.895 L
487.9932 680.98 L
487.5674 681.0083 L
487.1709 680.98 L
486.7734 680.895 L
486.377 680.7817 L
486.0088 680.583 L
485.668 680.3564 L
485.3564 680.0728 L
485.0732 679.7896 L
484.8467 679.4209 L
484.6758 679.0522 L
484.5342 678.6841 L
484.4492 678.2588 L
484.4209 677.8618 L
484.4492 677.4653 L
484.5342 677.04 L
484.6758 676.6714 L
484.8467 676.2744 L
485.0732 675.9341 L
485.3564 675.6509 L
485.668 675.3677 L
486.0088 675.1406 L
486.377 674.9424 L
486.7734 674.8286 L
487.1709 674.7437 L
487.5674 674.7153 L
487.9932 674.7437 L
488.3896 674.8286 L
488.7861 674.9424 L
489.1553 675.1406 L
489.4951 675.3677 L
489.8066 675.6509 L
490.0908 675.9341 L
490.3174 676.2744 L
490.4873 676.6714 L
490.6289 677.04 L
490.7139 677.4653 L
B
405.7881 602.3184 m
405.7598 602.7153 L
405.6748 603.1123 L
405.5332 603.5093 L
405.3623 603.8774 L
405.1357 604.2178 L
404.8525 604.5293 L
404.541 604.813 L
404.2002 605.0396 L
403.832 605.21 L
403.4355 605.3516 L
403.0381 605.4365 L
402.6416 605.4648 L
402.2158 605.4365 L
401.8193 605.3516 L
401.4229 605.21 L
401.0537 605.0396 L
400.7139 604.813 L
400.4023 604.5293 L
400.1465 604.2178 L
399.8916 603.8774 L
399.7217 603.5093 L
399.5801 603.1123 L
399.5234 602.7153 L
399.4951 602.3184 L
399.5234 601.8931 L
399.5801 601.4966 L
399.7217 601.0996 L
399.8916 600.731 L
400.1465 600.3911 L
400.4023 600.0791 L
400.7139 599.8237 L
401.0537 599.5688 L
401.4229 599.3989 L
401.8193 599.2568 L
402.2158 599.2002 L
402.6416 599.1719 L
403.0381 599.2002 L
403.4355 599.2568 L
403.832 599.3989 L
404.2002 599.5688 L
404.541 599.8237 L
404.8525 600.0791 L
405.1357 600.3911 L
405.3623 600.731 L
405.5332 601.0996 L
405.6748 601.4966 L
405.7598 601.8931 L
B
479.0918 668.0542 m
479.0635 668.4507 L
478.9785 668.876 L
478.8652 669.2446 L
478.667 669.6128 L
478.4395 669.9531 L
478.1846 670.2651 L
477.873 670.5483 L
477.5332 670.7754 L
477.1641 670.9453 L
476.7676 671.0869 L
476.3711 671.1724 L
475.9453 671.2007 L
475.5488 671.1724 L
475.123 671.0869 L
474.7549 670.9453 L
474.3867 670.7754 L
474.0459 670.5483 L
473.7344 670.2651 L
473.4512 669.9531 L
473.2246 669.6128 L
473.0537 669.2446 L
472.9121 668.876 L
472.8271 668.4507 L
472.7988 668.0542 L
472.8271 667.6289 L
472.9121 667.2319 L
473.0537 666.835 L
473.2246 666.4668 L
473.4512 666.1265 L
473.7344 665.8149 L
474.0459 665.5596 L
474.3867 665.3325 L
474.7549 665.1343 L
475.123 665.021 L
475.5488 664.936 L
475.9453 664.9077 L
476.3711 664.936 L
476.7676 665.021 L
477.1641 665.1343 L
477.5332 665.3325 L
477.873 665.5596 L
478.1846 665.8149 L
478.4395 666.1265 L
478.667 666.4668 L
478.8652 666.835 L
478.9785 667.2319 L
479.0635 667.6289 L
B
472.0049 654.8159 m
471.9766 655.2129 L
471.8916 655.6099 L
471.7783 656.0068 L
471.5801 656.3755 L
471.3535 656.7153 L
471.0986 657.0273 L
470.7861 657.3105 L
470.4463 657.5376 L
470.0781 657.7075 L
469.6807 657.8491 L
469.2842 657.9341 L
468.8584 657.9624 L
468.4619 657.9341 L
468.0371 657.8491 L
467.668 657.7075 L
467.2998 657.5376 L
466.96 657.3105 L
466.6475 657.0273 L
466.3643 656.7153 L
466.1377 656.3755 L
465.9678 656.0068 L
465.8262 655.6099 L
465.7402 655.2129 L
465.7119 654.8159 L
465.7402 654.3911 L
465.8262 653.9941 L
465.9678 653.5972 L
466.1377 653.229 L
466.3643 652.8887 L
466.6475 652.5767 L
466.96 652.2935 L
467.2998 652.0664 L
467.668 651.8965 L
468.0371 651.7549 L
468.4619 651.6694 L
468.8584 651.6694 L
469.2842 651.6694 L
469.6807 651.7549 L
470.0781 651.8965 L
470.4463 652.0664 L
470.7861 652.2935 L
471.0986 652.5767 L
471.3535 652.8887 L
471.5801 653.229 L
471.7783 653.5972 L
471.8916 653.9941 L
471.9766 654.3911 L
B
504.2354 685.7139 m
504.207 686.1108 L
504.1504 686.5361 L
504.0088 686.9043 L
503.8389 687.2729 L
503.583 687.6133 L
503.3281 687.9248 L
503.0166 688.2085 L
502.6758 688.4351 L
502.3076 688.605 L
501.9111 688.7471 L
501.5137 688.832 L
501.0889 688.8604 L
500.6924 688.832 L
500.2949 688.7471 L
499.8984 688.605 L
499.5293 688.4351 L
499.1895 688.2085 L
498.8779 687.9248 L
498.5947 687.6133 L
498.3672 687.2729 L
498.1973 686.9043 L
498.0557 686.5361 L
497.9707 686.1108 L
497.9424 685.7139 L
497.9707 685.2886 L
498.0557 684.8921 L
498.1973 684.4951 L
498.3672 684.1265 L
498.5947 683.7866 L
498.8779 683.4746 L
499.1895 683.2192 L
499.5293 682.9927 L
499.8984 682.7944 L
500.2949 682.6807 L
500.6924 682.5957 L
501.0889 682.5674 L
501.5137 682.5957 L
501.9111 682.6807 L
502.3076 682.7944 L
502.6758 682.9927 L
503.0166 683.2192 L
503.3281 683.4746 L
503.583 683.7866 L
503.8389 684.1265 L
504.0088 684.4951 L
504.1504 684.8921 L
504.207 685.2886 L
B
498.8496 682.2837 m
498.8213 682.6807 L
498.7363 683.0776 L
498.623 683.4746 L
498.4238 683.8433 L
498.1973 684.1831 L
497.9424 684.4951 L
497.6309 684.7783 L
497.29 685.0054 L
496.9219 685.1753 L
496.5254 685.3169 L
496.1279 685.4019 L
495.7031 685.4302 L
495.3066 685.4019 L
494.8809 685.3169 L
494.5127 685.1753 L
494.1436 685.0054 L
493.7754 684.7783 L
493.4922 684.4951 L
493.209 684.1831 L
492.9814 683.8433 L
492.8115 683.4746 L
492.6699 683.0776 L
492.585 682.6807 L
492.5566 682.2837 L
492.585 681.8589 L
492.6699 681.4619 L
492.8115 681.0649 L
492.9814 680.6968 L
493.209 680.3564 L
493.4922 680.0444 L
493.7754 679.7896 L
494.1436 679.5625 L
494.5127 679.3643 L
494.8809 679.251 L
495.3066 679.166 L
495.7031 679.1372 L
496.1279 679.166 L
496.5254 679.251 L
496.9219 679.3643 L
497.29 679.5625 L
497.6309 679.7896 L
497.9424 680.0444 L
498.1973 680.3564 L
498.4238 680.6968 L
498.623 681.0649 L
498.7363 681.4619 L
498.8213 681.8589 L
B
449.5264 637.3833 m
449.498 637.8081 L
449.4414 638.2051 L
449.2998 638.6021 L
449.1016 638.9702 L
448.875 639.3105 L
448.6191 639.6226 L
448.3076 639.8774 L
447.9678 640.1045 L
447.5986 640.3027 L
447.2021 640.416 L
446.8057 640.501 L
446.3799 640.5298 L
445.9834 640.501 L
445.5859 640.416 L
445.1895 640.3027 L
444.8213 640.1045 L
444.4805 639.8774 L
444.1689 639.6226 L
443.8857 639.3105 L
443.6592 638.9702 L
443.4883 638.6021 L
443.3467 638.2051 L
443.2617 637.8081 L
443.2334 637.3833 L
443.2617 636.9863 L
443.3467 636.561 L
443.4883 636.1924 L
443.6592 635.8237 L
443.8857 635.4839 L
444.1689 635.1719 L
444.4805 634.8887 L
444.8213 634.6616 L
445.1895 634.4917 L
445.5859 634.3501 L
445.9834 634.2651 L
446.3799 634.2368 L
446.8057 634.2651 L
447.2021 634.3501 L
447.5986 634.4917 L
447.9678 634.6616 L
448.3076 634.8887 L
448.6191 635.1719 L
448.875 635.4839 L
449.1016 635.8237 L
449.2998 636.1924 L
449.4414 636.561 L
449.498 636.9863 L
B
494.626 677.125 m
494.5977 677.5503 L
494.541 677.9468 L
494.3994 678.3438 L
494.2002 678.7124 L
493.9736 679.0522 L
493.7188 679.3643 L
493.4072 679.6196 L
493.0664 679.8462 L
492.6982 680.0444 L
492.3018 680.1577 L
491.9043 680.2432 L
491.4795 680.2715 L
491.082 680.2432 L
490.6855 680.1577 L
490.2891 680.0444 L
489.9199 679.8462 L
489.5801 679.6196 L
489.2686 679.3643 L
488.9844 679.0522 L
488.7578 678.7124 L
488.5879 678.3438 L
488.4463 677.9468 L
488.3613 677.5503 L
488.333 677.125 L
488.3613 676.728 L
488.4463 676.3027 L
488.5879 675.9341 L
488.7578 675.5659 L
488.9844 675.1973 L
489.2686 674.9136 L
489.5801 674.6304 L
489.9199 674.4038 L
490.2891 674.2051 L
490.6855 674.0918 L
491.082 674.0068 L
491.4795 673.9785 L
491.9043 674.0068 L
492.3018 674.0918 L
492.6982 674.2051 L
493.0664 674.4038 L
493.4072 674.6304 L
493.7188 674.9136 L
493.9736 675.1973 L
494.2002 675.5659 L
494.3994 675.9341 L
494.541 676.3027 L
494.5977 676.728 L
B
475.4639 661.1943 m
475.4355 661.5908 L
475.3506 661.9878 L
475.2363 662.3848 L
475.0381 662.7534 L
474.8115 663.0933 L
474.5566 663.4053 L
474.2451 663.6885 L
473.9043 663.9155 L
473.5361 664.0854 L
473.1396 664.2271 L
472.7422 664.312 L
472.3174 664.3408 L
471.9199 664.312 L
471.4951 664.2271 L
471.127 664.0854 L
470.7578 663.9155 L
470.3896 663.6885 L
470.1064 663.4053 L
469.8223 663.0933 L
469.5957 662.7534 L
469.4258 662.3848 L
469.2842 661.9878 L
469.1992 661.5908 L
469.1709 661.1943 L
469.1992 660.769 L
469.2842 660.3721 L
469.4258 659.9751 L
469.5957 659.6069 L
469.8223 659.2666 L
470.1064 658.9546 L
470.3896 658.6714 L
470.7578 658.4448 L
471.127 658.2744 L
471.4951 658.1328 L
471.9199 658.0479 L
472.3174 658.0479 L
472.7422 658.0479 L
473.1396 658.1328 L
473.5361 658.2744 L
473.9043 658.4448 L
474.2451 658.6714 L
474.5566 658.9546 L
474.8115 659.2666 L
475.0381 659.6069 L
475.2363 659.9751 L
475.3506 660.3721 L
475.4355 660.769 L
B
494.9092 667.5723 m
494.8809 667.9688 L
494.7959 668.3657 L
494.6543 668.7627 L
494.4844 669.1313 L
494.2578 669.4712 L
493.9736 669.7832 L
493.6621 670.0664 L
493.3223 670.2935 L
492.9531 670.4634 L
492.5566 670.605 L
492.1602 670.6899 L
491.7627 670.7188 L
491.3379 670.6899 L
490.9404 670.605 L
490.5439 670.4634 L
490.1758 670.2935 L
489.835 670.0664 L
489.5234 669.7832 L
489.2686 669.4712 L
489.0137 669.1313 L
488.8428 668.7627 L
488.7012 668.3657 L
488.6445 667.9688 L
488.6162 667.5723 L
488.6445 667.147 L
488.7012 666.75 L
488.8428 666.353 L
489.0137 665.9849 L
489.2686 665.6445 L
489.5234 665.3325 L
489.835 665.0493 L
490.1758 664.8228 L
490.5439 664.6523 L
490.9404 664.5107 L
491.3379 664.4258 L
491.7627 664.4258 L
492.1602 664.4258 L
492.5566 664.5107 L
492.9531 664.6523 L
493.3223 664.8228 L
493.6621 665.0493 L
493.9736 665.3325 L
494.2578 665.6445 L
494.4844 665.9849 L
494.6543 666.353 L
494.7959 666.75 L
494.8809 667.147 L
B
469.4824 654.8159 m
469.4541 655.2129 L
469.3691 655.6099 L
469.2559 656.0068 L
469.0576 656.3755 L
468.8301 656.7153 L
468.5752 657.0273 L
468.2637 657.3105 L
467.9238 657.5376 L
467.5547 657.7075 L
467.1582 657.8491 L
466.7607 657.9341 L
466.3359 657.9624 L
465.9395 657.9341 L
465.542 657.8491 L
465.1455 657.7075 L
464.7773 657.5376 L
464.4365 657.3105 L
464.125 657.0273 L
463.8418 656.7153 L
463.6152 656.3755 L
463.4443 656.0068 L
463.3027 655.6099 L
463.2178 655.2129 L
463.1895 654.8159 L
463.2178 654.3911 L
463.3027 653.9941 L
463.4443 653.5972 L
463.6152 653.229 L
463.8418 652.8887 L
464.125 652.5767 L
464.4365 652.2935 L
464.7773 652.0664 L
465.1455 651.8965 L
465.542 651.7549 L
465.9395 651.6694 L
466.3359 651.6694 L
466.7607 651.6694 L
467.1582 651.7549 L
467.5547 651.8965 L
467.9238 652.0664 L
468.2637 652.2935 L
468.5752 652.5767 L
468.8301 652.8887 L
469.0576 653.229 L
469.2559 653.5972 L
469.3691 653.9941 L
469.4541 654.3911 L
B
522.0371 697.7329 m
522.0088 698.1294 L
521.9238 698.5547 L
521.7822 698.9233 L
521.6113 699.292 L
521.3848 699.6602 L
521.1016 699.9438 L
520.79 700.2271 L
520.4492 700.4541 L
520.0811 700.6523 L
519.6846 700.7661 L
519.2871 700.8511 L
518.8906 700.8794 L
518.4648 700.8511 L
518.0684 700.7661 L
517.6719 700.6523 L
517.3027 700.4541 L
516.9629 700.2271 L
516.6514 699.9438 L
516.3955 699.6602 L
516.1406 699.292 L
515.9707 698.9233 L
515.8291 698.5547 L
515.7725 698.1294 L
515.7441 697.7329 L
515.7725 697.3076 L
515.8291 696.9106 L
515.9707 696.5142 L
516.1406 696.1455 L
516.3955 695.8052 L
516.6514 695.4937 L
516.9629 695.2383 L
517.3027 695.0117 L
517.6719 694.813 L
518.0684 694.6997 L
518.4648 694.6147 L
518.8906 694.5864 L
519.2871 694.6147 L
519.6846 694.6997 L
520.0811 694.813 L
520.4492 695.0117 L
520.79 695.2383 L
521.1016 695.4937 L
521.3848 695.8052 L
521.6113 696.1455 L
521.7822 696.5142 L
521.9238 696.9106 L
522.0088 697.3076 L
B
*U
*u
269.498 250.7363 m
269.4697 251.1328 L
269.3848 251.5313 L
269.2715 251.9277 L
269.0732 252.2969 L
268.8457 252.6367 L
268.5908 252.9473 L
268.2793 253.2305 L
267.9395 253.459 L
267.5703 253.6289 L
267.1738 253.7695 L
266.7773 253.8555 L
266.3516 253.8828 L
265.9551 253.8555 L
265.5293 253.7695 L
265.1611 253.6289 L
264.793 253.459 L
264.4521 253.2305 L
264.1406 252.9473 L
263.8574 252.6367 L
263.6309 252.2969 L
263.46 251.9277 L
263.3184 251.5313 L
263.2334 251.1328 L
263.2051 250.7363 L
263.2334 250.3125 L
263.3184 249.9141 L
263.46 249.5176 L
263.6309 249.1504 L
263.8574 248.8086 L
264.1406 248.498 L
264.4521 248.2422 L
264.793 248.0156 L
265.1611 247.8164 L
265.5293 247.6758 L
265.9551 247.6191 L
266.3516 247.5898 L
266.7773 247.6191 L
267.1738 247.6758 L
267.5703 247.8164 L
267.9395 248.0156 L
268.2793 248.2422 L
268.5908 248.498 L
268.8457 248.8086 L
269.0732 249.1504 L
269.2715 249.5176 L
269.3848 249.9141 L
269.4697 250.3125 L
B
308.3613 277.6953 m
308.333 278.1191 L
308.248 278.5156 L
308.1064 278.9141 L
307.9355 279.2813 L
307.709 279.6211 L
307.4258 279.9336 L
307.1143 280.1895 L
306.7734 280.4434 L
306.4053 280.6133 L
306.0371 280.7559 L
305.6113 280.8125 L
305.2148 280.8418 L
304.7891 280.8125 L
304.3926 280.7559 L
303.9961 280.6133 L
303.627 280.4434 L
303.2871 280.1895 L
302.9756 279.9336 L
302.7207 279.6211 L
302.4932 279.2813 L
302.2949 278.9141 L
302.1816 278.5156 L
302.0967 278.1191 L
302.0684 277.6953 L
302.0967 277.2969 L
302.1816 276.9004 L
302.2949 276.5039 L
302.4932 276.1348 L
302.7207 275.7949 L
302.9756 275.4824 L
303.2871 275.1992 L
303.627 274.9727 L
303.9961 274.8027 L
304.3926 274.6621 L
304.7891 274.5762 L
305.2148 274.5488 L
305.6113 274.5762 L
306.0371 274.6621 L
306.4053 274.8027 L
306.7734 274.9727 L
307.1143 275.1992 L
307.4258 275.4824 L
307.709 275.7949 L
307.9355 276.1348 L
308.1064 276.5039 L
308.248 276.9004 L
308.333 277.2969 L
B
258.6133 264.8242 m
258.585 265.25 L
258.5 265.6465 L
258.3867 266.0449 L
258.1875 266.4121 L
257.9609 266.752 L
257.7061 267.0645 L
257.3945 267.3203 L
257.0537 267.5469 L
256.6855 267.7441 L
256.2891 267.8574 L
255.8916 267.9434 L
255.4668 267.9707 L
255.0693 267.9434 L
254.6729 267.8574 L
254.2764 267.7441 L
253.9072 267.5469 L
253.5674 267.3203 L
253.2559 267.0645 L
252.9717 266.752 L
252.7451 266.4121 L
252.5752 266.0449 L
252.4336 265.6465 L
252.3486 265.25 L
252.3203 264.8242 L
252.3486 264.4277 L
252.4336 264.0313 L
252.5752 263.6348 L
252.7451 263.2656 L
252.9717 262.9258 L
253.2559 262.6133 L
253.5674 262.3301 L
253.9072 262.1035 L
254.2764 261.9336 L
254.6729 261.791 L
255.0693 261.707 L
255.4668 261.6777 L
255.8916 261.707 L
256.2891 261.791 L
256.6855 261.9336 L
257.0537 262.1035 L
257.3945 262.3301 L
257.7061 262.6133 L
257.9609 262.9258 L
258.1875 263.2656 L
258.3867 263.6348 L
258.5 264.0313 L
258.585 264.4277 L
B
339.2021 265.9863 m
339.1738 266.3848 L
339.0889 266.8086 L
338.9473 267.1777 L
338.7764 267.5469 L
338.5498 267.9141 L
338.2666 268.1992 L
337.9551 268.4824 L
337.6143 268.709 L
337.2461 268.9063 L
336.8496 269.0195 L
336.4521 269.1055 L
336.0557 269.1328 L
335.6299 269.1055 L
335.2334 269.0195 L
334.8369 268.9063 L
334.4678 268.709 L
334.1279 268.4824 L
333.8164 268.1992 L
333.5605 267.9141 L
333.334 267.5469 L
333.1357 267.1777 L
332.9941 266.8086 L
332.9375 266.3848 L
332.9092 265.9863 L
332.9375 265.5625 L
332.9941 265.166 L
333.1357 264.7969 L
333.334 264.4004 L
333.5605 264.0605 L
333.8164 263.748 L
334.1279 263.4922 L
334.4678 263.2656 L
334.8369 263.0684 L
335.2334 262.9551 L
335.6299 262.8691 L
336.0557 262.8398 L
336.4521 262.8691 L
336.8496 262.9551 L
337.2461 263.0684 L
337.6143 263.2656 L
337.9551 263.4922 L
338.2666 263.748 L
338.5498 264.0605 L
338.7764 264.4004 L
338.9473 264.7969 L
339.0889 265.166 L
339.1738 265.5625 L
B
211.5293 237.4707 m
211.501 237.8965 L
211.4443 238.293 L
211.3027 238.6895 L
211.1045 239.0586 L
210.8779 239.3984 L
210.6221 239.7109 L
210.3105 239.9648 L
209.9707 240.1914 L
209.6016 240.3906 L
209.2051 240.5039 L
208.8086 240.5879 L
208.3828 240.6172 L
207.9863 240.5879 L
207.5898 240.5039 L
207.1924 240.3906 L
206.8242 240.1914 L
206.4844 239.9648 L
206.1719 239.7109 L
205.8887 239.3984 L
205.6621 239.0586 L
205.4922 238.6895 L
205.3496 238.293 L
205.2646 237.8965 L
205.2363 237.4707 L
205.2646 237.0742 L
205.3496 236.6777 L
205.4922 236.2793 L
205.6621 235.9121 L
205.8887 235.5723 L
206.1719 235.2598 L
206.4844 234.9766 L
206.8242 234.75 L
207.1924 234.5801 L
207.5898 234.4375 L
207.9863 234.3535 L
208.3828 234.3242 L
208.8086 234.3535 L
209.2051 234.4375 L
209.6016 234.5801 L
209.9707 234.75 L
210.3105 234.9766 L
210.6221 235.2598 L
210.8779 235.5723 L
211.1045 235.9121 L
211.3027 236.2793 L
211.4443 236.6777 L
211.501 237.0742 L
B
361.8223 272.4512 m
361.7939 272.875 L
361.709 273.2715 L
361.5957 273.6699 L
361.3975 274.0371 L
361.1709 274.377 L
360.915 274.6895 L
360.6035 274.9727 L
360.2637 275.1992 L
359.8945 275.3691 L
359.498 275.5117 L
359.1016 275.5684 L
358.6758 275.5977 L
358.2793 275.5684 L
357.8535 275.5117 L
357.4854 275.3691 L
357.1172 275.1992 L
356.7764 274.9727 L
356.4648 274.6895 L
356.1816 274.377 L
355.9551 274.0371 L
355.7852 273.6699 L
355.6426 273.2715 L
355.5576 272.875 L
355.5293 272.4512 L
355.5576 272.0527 L
355.6426 271.6563 L
355.7852 271.2598 L
355.9551 270.8906 L
356.1816 270.5508 L
356.4648 270.2383 L
356.7764 269.9551 L
357.1172 269.7285 L
357.4854 269.5586 L
357.8535 269.418 L
358.2793 269.332 L
358.6758 269.3047 L
359.1016 269.332 L
359.498 269.418 L
359.8945 269.5586 L
360.2637 269.7285 L
360.6035 269.9551 L
360.915 270.2383 L
361.1709 270.5508 L
361.3975 270.8906 L
361.5957 271.2598 L
361.709 271.6563 L
361.7939 272.0527 L
B
238.6572 230.1016 m
238.6289 230.5254 L
238.5723 230.9219 L
238.4307 231.3203 L
238.2324 231.6875 L
238.0049 232.0273 L
237.75 232.3398 L
237.4385 232.5957 L
237.0977 232.8223 L
236.7295 233.0195 L
236.333 233.1328 L
235.9355 233.2188 L
235.5107 233.2461 L
235.1143 233.2188 L
234.7168 233.1328 L
234.3203 233.0195 L
233.9512 232.8223 L
233.6113 232.5957 L
233.2998 232.3398 L
233.0166 232.0273 L
232.7891 231.6875 L
232.6191 231.3203 L
232.4775 230.9219 L
232.3926 230.5254 L
232.3643 230.1016 L
232.3926 229.7031 L
232.4775 229.2793 L
232.6191 228.9102 L
232.7891 228.541 L
233.0166 228.2012 L
233.2998 227.8887 L
233.6113 227.6055 L
233.9512 227.3789 L
234.3203 227.209 L
234.7168 227.0684 L
235.1143 226.9824 L
235.5107 226.9551 L
235.9355 226.9824 L
236.333 227.0684 L
236.7295 227.209 L
237.0977 227.3789 L
237.4385 227.6055 L
237.75 227.8887 L
238.0049 228.2012 L
238.2324 228.541 L
238.4307 228.9102 L
238.5723 229.2793 L
238.6289 229.7031 L
B
283.3594 250.9063 m
283.3311 251.3047 L
283.2744 251.7012 L
283.1328 252.0977 L
282.9629 252.4668 L
282.708 252.8066 L
282.4521 253.1172 L
282.1406 253.4023 L
281.8008 253.6289 L
281.4316 253.7988 L
281.0352 253.9395 L
280.6387 254.0254 L
280.2129 254.0527 L
279.8164 254.0254 L
279.4189 253.9395 L
279.0225 253.7988 L
278.6543 253.6289 L
278.3135 253.4023 L
278.002 253.1172 L
277.7188 252.8066 L
277.4922 252.4668 L
277.3213 252.0977 L
277.1797 251.7012 L
277.0947 251.3047 L
277.0664 250.9063 L
277.0947 250.4824 L
277.1797 250.084 L
277.3213 249.6875 L
277.4922 249.3203 L
277.7188 248.9785 L
278.002 248.668 L
278.3135 248.4121 L
278.6543 248.1855 L
279.0225 247.9863 L
279.4189 247.8457 L
279.8164 247.7891 L
280.2129 247.7598 L
280.6387 247.7891 L
281.0352 247.8457 L
281.4316 247.9863 L
281.8008 248.1855 L
282.1406 248.4121 L
282.4521 248.668 L
282.708 248.9785 L
282.9629 249.3203 L
283.1328 249.6875 L
283.2744 250.084 L
283.3311 250.4824 L
B
300.3389 300.0605 m
300.3105 300.457 L
300.2256 300.8535 L
300.1123 301.25 L
299.9141 301.6191 L
299.6875 301.959 L
299.4316 302.2715 L
299.1201 302.5547 L
298.7803 302.7813 L
298.4111 302.9512 L
298.0146 303.0938 L
297.6182 303.1777 L
297.1924 303.207 L
296.7959 303.1777 L
296.3711 303.0938 L
296.002 302.9512 L
295.6338 302.7813 L
295.293 302.5547 L
294.9814 302.2715 L
294.6982 301.959 L
294.4717 301.6191 L
294.3018 301.25 L
294.1592 300.8535 L
294.0742 300.457 L
294.0459 300.0605 L
294.0742 299.6348 L
294.1592 299.2383 L
294.3018 298.8418 L
294.4717 298.4727 L
294.6982 298.1328 L
294.9814 297.8203 L
295.293 297.5645 L
295.6338 297.3379 L
296.002 297.1406 L
296.3711 297.0273 L
296.7959 296.9414 L
297.1924 296.9141 L
297.6182 296.9414 L
298.0146 297.0273 L
298.4111 297.1406 L
298.7803 297.3379 L
299.1201 297.5645 L
299.4316 297.8203 L
299.6875 298.1328 L
299.9141 298.4727 L
300.1123 298.8418 L
300.2256 299.2383 L
300.3105 299.6348 L
B
296.8809 265.959 m
296.8525 266.3848 L
296.7676 266.7813 L
296.6543 267.1777 L
296.4561 267.5469 L
296.2285 267.8867 L
295.9736 268.1992 L
295.6621 268.4531 L
295.3223 268.6797 L
294.9531 268.8789 L
294.5566 268.9922 L
294.1592 269.0762 L
293.7344 269.1055 L
293.3379 269.0762 L
292.9121 268.9922 L
292.5439 268.8789 L
292.1758 268.6797 L
291.835 268.4531 L
291.5234 268.1992 L
291.2402 267.8867 L
291.0127 267.5469 L
290.8428 267.1777 L
290.7012 266.7813 L
290.6162 266.3848 L
290.5879 265.959 L
290.6162 265.5625 L
290.7012 265.166 L
290.8428 264.7676 L
291.0127 264.4004 L
291.2402 264.0605 L
291.5234 263.748 L
291.835 263.4648 L
292.1758 263.2383 L
292.5439 263.0684 L
292.9121 262.9258 L
293.3379 262.8398 L
293.7344 262.8125 L
294.1592 262.8398 L
294.5566 262.9258 L
294.9531 263.0684 L
295.3223 263.2383 L
295.6621 263.4648 L
295.9736 263.748 L
296.2285 264.0605 L
296.4561 264.4004 L
296.6543 264.7676 L
296.7676 265.166 L
296.8525 265.5625 L
B
230.6631 300.2871 m
230.6348 300.6836 L
230.5498 301.1094 L
230.4082 301.4766 L
230.2383 301.8457 L
230.0117 302.2148 L
229.7275 302.498 L
229.416 302.7813 L
229.0762 303.0078 L
228.708 303.207 L
228.3105 303.3203 L
227.9141 303.4043 L
227.5166 303.4336 L
227.0918 303.4043 L
226.6953 303.3203 L
226.2979 303.207 L
225.9297 303.0078 L
225.5898 302.7813 L
225.2773 302.498 L
225.0225 302.2148 L
224.7676 301.8457 L
224.5977 301.4766 L
224.4561 301.1094 L
224.3984 300.6836 L
224.3701 300.2871 L
224.3984 299.8613 L
224.4561 299.4648 L
224.5977 299.0684 L
224.7676 298.6992 L
225.0225 298.3594 L
225.2773 298.0469 L
225.5898 297.793 L
225.9297 297.5645 L
226.2979 297.3672 L
226.6953 297.2539 L
227.0918 297.168 L
227.5166 297.1406 L
227.9141 297.168 L
228.3105 297.2539 L
228.708 297.3672 L
229.0762 297.5645 L
229.416 297.793 L
229.7275 298.0469 L
230.0117 298.3594 L
230.2383 298.6992 L
230.4082 299.0684 L
230.5498 299.4648 L
230.6348 299.8613 L
B
343.1426 236.5645 m
343.1133 236.9609 L
343.0283 237.3848 L
342.915 237.7539 L
342.7168 238.123 L
342.4902 238.4902 L
342.2354 238.7754 L
341.9229 239.0586 L
341.583 239.2852 L
341.2148 239.4824 L
340.8174 239.5977 L
340.4209 239.6816 L
339.9961 239.7109 L
339.5986 239.6816 L
339.1738 239.5977 L
338.8047 239.4824 L
338.4365 239.2852 L
338.0967 239.0586 L
337.7842 238.7754 L
337.501 238.4902 L
337.2744 238.123 L
337.1045 237.7539 L
336.9629 237.3848 L
336.8779 236.9609 L
336.8496 236.5645 L
336.8779 236.1387 L
336.9629 235.7422 L
337.1045 235.3438 L
337.2744 234.9766 L
337.501 234.6367 L
337.7842 234.3242 L
338.0967 234.0684 L
338.4365 233.8418 L
338.8047 233.6445 L
339.1738 233.5313 L
339.5986 233.4453 L
339.9961 233.418 L
340.4209 233.4453 L
340.8174 233.5313 L
341.2148 233.6445 L
341.583 233.8418 L
341.9229 234.0684 L
342.2354 234.3242 L
342.4902 234.6367 L
342.7168 234.9766 L
342.915 235.3438 L
343.0283 235.7422 L
343.1133 236.1387 L
B
351.3623 318.1445 m
351.334 318.541 L
351.249 318.9668 L
351.1074 319.3359 L
350.9375 319.7031 L
350.7109 320.0723 L
350.4268 320.3555 L
350.1152 320.6387 L
349.7754 320.8652 L
349.4063 321.0645 L
349.0098 321.1777 L
348.6133 321.2637 L
348.2158 321.291 L
347.791 321.2637 L
347.3945 321.1777 L
346.9971 321.0645 L
346.6289 320.8652 L
346.2891 320.6387 L
345.9766 320.3555 L
345.6934 320.0723 L
345.4668 319.7031 L
345.2969 319.3359 L
345.1543 318.9668 L
345.0693 318.541 L
345.0693 318.1445 L
345.0693 317.7188 L
345.1543 317.3223 L
345.2969 316.9258 L
345.4668 316.5566 L
345.6934 316.2168 L
345.9766 315.9063 L
346.2891 315.6504 L
346.6289 315.4238 L
346.9971 315.2246 L
347.3945 315.1113 L
347.791 315.0273 L
348.2158 314.998 L
348.6133 315.0273 L
349.0098 315.1113 L
349.4063 315.2246 L
349.7754 315.4238 L
350.1152 315.6504 L
350.4268 315.9063 L
350.7109 316.2168 L
350.9375 316.5566 L
351.1074 316.9258 L
351.249 317.3223 L
351.334 317.7188 L
B
325.9355 287.4453 m
325.9072 287.8711 L
325.8223 288.2676 L
325.6807 288.6641 L
325.5107 289.0332 L
325.2842 289.373 L
325 289.6855 L
324.6885 289.9395 L
324.3486 290.166 L
323.9795 290.3652 L
323.6113 290.5078 L
323.1865 290.5645 L
322.7891 290.5918 L
322.3643 290.5645 L
321.9668 290.5078 L
321.5703 290.3652 L
321.2021 290.166 L
320.8613 289.9395 L
320.5498 289.6855 L
320.2949 289.373 L
320.0684 289.0332 L
319.8691 288.6641 L
319.7559 288.2676 L
319.6709 287.8711 L
319.6426 287.4453 L
319.6709 287.0488 L
319.7559 286.6523 L
319.8691 286.2559 L
320.0684 285.8867 L
320.2949 285.5469 L
320.5498 285.2344 L
320.8613 284.9512 L
321.2021 284.7246 L
321.5703 284.5547 L
321.9668 284.4121 L
322.3643 284.3281 L
322.7891 284.2988 L
323.1865 284.3281 L
323.6113 284.4121 L
323.9795 284.5547 L
324.3486 284.7246 L
324.6885 284.9512 L
325 285.2344 L
325.2842 285.5469 L
325.5107 285.8867 L
325.6807 286.2559 L
325.8223 286.6523 L
325.9072 287.0488 L
B
335.0352 268.4531 m
335.0068 268.8789 L
334.9219 269.2754 L
334.7803 269.6719 L
334.6094 270.041 L
334.3828 270.3809 L
334.0996 270.6934 L
333.7881 270.9473 L
333.4473 271.1738 L
333.0791 271.373 L
332.6826 271.4863 L
332.2852 271.5723 L
331.8887 271.5996 L
331.4629 271.5723 L
331.0664 271.4863 L
330.6699 271.373 L
330.3008 271.1738 L
329.9609 270.9473 L
329.6494 270.6934 L
329.3945 270.3809 L
329.1387 270.041 L
328.9688 269.6719 L
328.8271 269.2754 L
328.7705 268.8789 L
328.7422 268.4531 L
328.7705 268.0566 L
328.8271 267.6309 L
328.9688 267.2637 L
329.1387 266.8945 L
329.3945 266.5254 L
329.6494 266.2422 L
329.9609 265.959 L
330.3008 265.7324 L
330.6699 265.5332 L
331.0664 265.4199 L
331.4629 265.3359 L
331.8887 265.3066 L
332.2852 265.3359 L
332.6826 265.4199 L
333.0791 265.5332 L
333.4473 265.7324 L
333.7881 265.959 L
334.0996 266.2422 L
334.3828 266.5254 L
334.6094 266.8945 L
334.7803 267.2637 L
334.9219 267.6309 L
335.0068 268.0566 L
B
311.3379 258.9004 m
311.3096 259.2969 L
311.2246 259.7227 L
311.1104 260.0918 L
310.9121 260.459 L
310.6855 260.8281 L
310.4023 261.1113 L
310.1191 261.3945 L
309.7783 261.6211 L
309.3818 261.793 L
309.0127 261.9336 L
308.5879 262.0195 L
308.1914 262.0469 L
307.7939 262.0195 L
307.3691 261.9336 L
307.001 261.793 L
306.6318 261.6211 L
306.2637 261.3945 L
305.9805 261.1113 L
305.6963 260.8281 L
305.4697 260.459 L
305.2715 260.0918 L
305.1582 259.7227 L
305.0732 259.2969 L
305.0449 258.9004 L
305.0732 258.4746 L
305.1582 258.0781 L
305.2715 257.6816 L
305.4697 257.3125 L
305.6963 256.9727 L
305.9805 256.6621 L
306.2637 256.4063 L
306.6318 256.1797 L
307.001 255.9805 L
307.3691 255.8672 L
307.7939 255.7832 L
308.1914 255.7539 L
308.5879 255.7832 L
309.0127 255.8672 L
309.3818 255.9805 L
309.7783 256.1797 L
310.1191 256.4063 L
310.4023 256.6621 L
310.6855 256.9727 L
310.9121 257.3125 L
311.1104 257.6816 L
311.2246 258.0781 L
311.3096 258.4746 L
B
308.3613 284.0723 m
308.333 284.498 L
308.248 284.8945 L
308.1064 285.291 L
307.9355 285.6602 L
307.709 286 L
307.4258 286.3125 L
307.1143 286.5664 L
306.7734 286.8223 L
306.4053 286.9922 L
306.0371 287.1328 L
305.6113 287.1914 L
305.2148 287.2188 L
304.7891 287.1914 L
304.3926 287.1328 L
303.9961 286.9922 L
303.627 286.8223 L
303.2871 286.5664 L
302.9756 286.3125 L
302.7207 286 L
302.4932 285.6602 L
302.2949 285.291 L
302.1816 284.8945 L
302.0967 284.498 L
302.0684 284.0723 L
302.0967 283.6758 L
302.1816 283.2793 L
302.2949 282.8809 L
302.4932 282.5137 L
302.7207 282.1738 L
302.9756 281.8613 L
303.2871 281.5781 L
303.627 281.3516 L
303.9961 281.1816 L
304.3926 281.0391 L
304.7891 280.9551 L
305.2148 280.9258 L
305.6113 280.9551 L
306.0371 281.0391 L
306.4053 281.1816 L
306.7734 281.3516 L
307.1143 281.5781 L
307.4258 281.8613 L
307.709 282.1738 L
307.9355 282.5137 L
308.1064 282.8809 L
308.248 283.2793 L
308.333 283.6758 L
B
476.7959 307.1465 m
476.7676 307.5723 L
476.7109 307.9688 L
476.5693 308.3652 L
476.3711 308.7344 L
476.1436 309.0742 L
475.8887 309.3867 L
475.5771 309.6406 L
475.2363 309.8672 L
474.8682 310.0664 L
474.4717 310.1797 L
474.0742 310.2637 L
473.6494 310.293 L
473.2529 310.2637 L
472.8555 310.1797 L
472.459 310.0664 L
472.0898 309.8672 L
471.75 309.6406 L
471.4385 309.3867 L
471.1553 309.0742 L
470.9277 308.7344 L
470.7578 308.3652 L
470.6162 307.9688 L
470.5313 307.5723 L
470.5029 307.1465 L
470.5313 306.75 L
470.6162 306.3242 L
470.7578 305.9551 L
470.9277 305.5879 L
471.1553 305.2188 L
471.4385 304.9355 L
471.75 304.6523 L
472.0898 304.4258 L
472.459 304.2266 L
472.8555 304.1133 L
473.2529 304.0273 L
473.6494 304 L
474.0742 304.0273 L
474.4717 304.1133 L
474.8682 304.2266 L
475.2363 304.4258 L
475.5771 304.6523 L
475.8887 304.9355 L
476.1436 305.2188 L
476.3711 305.5879 L
476.5693 305.9551 L
476.7109 306.3242 L
476.7676 306.75 L
B
457.208 298.9824 m
457.1797 299.4082 L
457.0947 299.8047 L
456.9814 300.2012 L
456.7832 300.5703 L
456.5566 300.9102 L
456.3018 301.2227 L
455.9893 301.4766 L
455.6494 301.7031 L
455.2813 301.9023 L
454.8838 302.0156 L
454.4873 302.1016 L
454.0615 302.1289 L
453.665 302.1016 L
453.2686 302.0156 L
452.8711 301.9023 L
452.5029 301.7031 L
452.1631 301.4766 L
451.8506 301.2227 L
451.5674 300.9102 L
451.3408 300.5703 L
451.1709 300.2012 L
451.0293 299.8047 L
450.9443 299.4082 L
450.916 298.9824 L
450.9443 298.5859 L
451.0293 298.1895 L
451.1709 297.793 L
451.3408 297.4238 L
451.5674 297.084 L
451.8506 296.7715 L
452.1631 296.4883 L
452.5029 296.2617 L
452.8711 296.0918 L
453.2686 295.9492 L
453.665 295.8652 L
454.0615 295.8359 L
454.4873 295.8652 L
454.8838 295.9492 L
455.2813 296.0918 L
455.6494 296.2617 L
455.9893 296.4883 L
456.3018 296.7715 L
456.5566 297.084 L
456.7832 297.4238 L
456.9814 297.793 L
457.0947 298.1895 L
457.1797 298.5859 L
B
471.127 223.3262 m
471.0986 223.7227 L
471.0137 224.1484 L
470.8711 224.5156 L
470.7012 224.8848 L
470.4746 225.2246 L
470.1914 225.5371 L
469.8789 225.8203 L
469.5391 226.0469 L
469.1709 226.2168 L
468.7734 226.3594 L
468.377 226.4434 L
467.9805 226.4727 L
467.5547 226.4434 L
467.1582 226.3594 L
466.7607 226.2168 L
466.3926 226.0469 L
466.0527 225.8203 L
465.7402 225.5371 L
465.4854 225.2246 L
465.2588 224.8848 L
465.0605 224.5156 L
464.9189 224.1484 L
464.8623 223.7227 L
464.834 223.3262 L
464.8623 222.9004 L
464.9189 222.5039 L
465.0605 222.1074 L
465.2588 221.7383 L
465.4854 221.3984 L
465.7402 221.0859 L
466.0527 220.832 L
466.3926 220.6055 L
466.7607 220.4063 L
467.1582 220.293 L
467.5547 220.207 L
467.9805 220.1797 L
468.377 220.207 L
468.7734 220.293 L
469.1709 220.4063 L
469.5391 220.6055 L
469.8789 220.832 L
470.1914 221.0859 L
470.4746 221.3984 L
470.7012 221.7383 L
470.8711 222.1074 L
471.0137 222.5039 L
471.0986 222.9004 L
B
470.2197 271.1738 m
470.1914 271.5996 L
470.1064 271.9961 L
469.9932 272.3945 L
469.7939 272.7617 L
469.5674 273.1016 L
469.2842 273.4141 L
469.001 273.6699 L
468.6318 273.8965 L
468.2637 274.0938 L
467.8955 274.207 L
467.4697 274.293 L
467.0732 274.3203 L
466.6475 274.293 L
466.251 274.207 L
465.8545 274.0938 L
465.4854 273.8965 L
465.1455 273.6699 L
464.834 273.4141 L
464.5781 273.1016 L
464.3516 272.7617 L
464.1533 272.3945 L
464.04 271.9961 L
463.9551 271.5996 L
463.9268 271.1738 L
463.9551 270.7773 L
464.04 270.3535 L
464.1533 269.9844 L
464.3516 269.6152 L
464.5781 269.2754 L
464.834 268.9629 L
465.1455 268.6797 L
465.4854 268.4531 L
465.8545 268.2832 L
466.251 268.1406 L
466.6475 268.0566 L
467.0732 268.0273 L
467.4697 268.0566 L
467.8955 268.1406 L
468.2637 268.2832 L
468.6318 268.4531 L
469.001 268.6797 L
469.2842 268.9629 L
469.5674 269.2754 L
469.7939 269.6152 L
469.9932 269.9844 L
470.1064 270.3535 L
470.1914 270.7773 L
B
460.9785 272.9883 m
460.9502 273.3848 L
460.8936 273.7832 L
460.752 274.1797 L
460.5537 274.5488 L
460.3262 274.8887 L
460.0713 275.1992 L
459.7598 275.4824 L
459.4199 275.7109 L
459.0508 275.8809 L
458.6543 276.0215 L
458.2568 276.1074 L
457.832 276.1348 L
457.4355 276.1074 L
457.0381 276.0215 L
456.6416 275.8809 L
456.2734 275.7109 L
455.9326 275.4824 L
455.6211 275.1992 L
455.3379 274.8887 L
455.1104 274.5488 L
454.9404 274.1797 L
454.7988 273.7832 L
454.7139 273.3848 L
454.6855 272.9883 L
454.7139 272.5645 L
454.7988 272.166 L
454.9404 271.7695 L
455.1104 271.4023 L
455.3379 271.0605 L
455.6211 270.75 L
455.9326 270.4941 L
456.2734 270.2383 L
456.6416 270.0684 L
457.0381 269.9277 L
457.4355 269.8711 L
457.832 269.8418 L
458.2568 269.8711 L
458.6543 269.9277 L
459.0508 270.0684 L
459.4199 270.2383 L
459.7598 270.4941 L
460.0713 270.75 L
460.3262 271.0605 L
460.5537 271.4023 L
460.752 271.7695 L
460.8936 272.166 L
460.9502 272.5645 L
B
462.1973 302.7246 m
462.1689 303.1211 L
462.084 303.5176 L
461.9707 303.9141 L
461.7725 304.2832 L
461.5459 304.623 L
461.29 304.9355 L
460.9785 305.2188 L
460.6387 305.4453 L
460.2695 305.6152 L
459.873 305.7578 L
459.4766 305.8418 L
459.0508 305.8711 L
458.6543 305.8418 L
458.2568 305.7578 L
457.8604 305.6152 L
457.4922 305.4453 L
457.1514 305.2188 L
456.8398 304.9355 L
456.5566 304.623 L
456.3301 304.2832 L
456.1592 303.9141 L
456.0176 303.5176 L
455.9326 303.1211 L
455.9043 302.7246 L
455.9326 302.2988 L
456.0176 301.9023 L
456.1592 301.5059 L
456.3301 301.1367 L
456.5566 300.7969 L
456.8398 300.4844 L
457.1514 300.2305 L
457.4922 300.0039 L
457.8604 299.8047 L
458.2568 299.6621 L
458.6543 299.6055 L
459.0508 299.5781 L
459.4766 299.6055 L
459.873 299.6621 L
460.2695 299.8047 L
460.6387 300.0039 L
460.9785 300.2305 L
461.29 300.4844 L
461.5459 300.7969 L
461.7725 301.1367 L
461.9707 301.5059 L
462.084 301.9023 L
462.1689 302.2988 L
B
475.9736 316.5566 m
475.9453 316.9551 L
475.8604 317.3516 L
475.7188 317.748 L
475.5488 318.1172 L
475.3223 318.457 L
475.0381 318.7676 L
474.7266 319.0527 L
474.3867 319.2793 L
474.0176 319.4492 L
473.6494 319.5898 L
473.2246 319.6758 L
472.8271 319.7031 L
472.4023 319.6758 L
472.0049 319.5898 L
471.6084 319.4492 L
471.2402 319.2793 L
470.8994 319.0527 L
470.5879 318.7676 L
470.333 318.457 L
470.1064 318.1172 L
469.9072 317.748 L
469.7939 317.3516 L
469.709 316.9551 L
469.6807 316.5566 L
469.709 316.1328 L
469.7939 315.7363 L
469.9072 315.3379 L
470.1064 314.9707 L
470.333 314.6289 L
470.5879 314.3184 L
470.8994 314.0625 L
471.2402 313.8086 L
471.6084 313.6387 L
472.0049 313.4961 L
472.4023 313.4395 L
472.8271 313.4102 L
473.2246 313.4395 L
473.6494 313.4961 L
474.0176 313.6387 L
474.3867 313.8086 L
474.7266 314.0625 L
475.0381 314.3184 L
475.3223 314.6289 L
475.5488 314.9707 L
475.7188 315.3379 L
475.8604 315.7363 L
475.9453 316.1328 L
B
477.958 326.3652 m
477.9297 326.7617 L
477.8447 327.1875 L
477.7314 327.5566 L
477.5332 327.9238 L
477.3057 328.2637 L
477.0508 328.5762 L
476.7393 328.8594 L
476.3994 329.0859 L
476.0303 329.2559 L
475.6338 329.3984 L
475.2363 329.4844 L
474.8115 329.5117 L
474.415 329.4844 L
473.9893 329.3984 L
473.6211 329.2559 L
473.2529 329.0859 L
472.8838 328.8594 L
472.6006 328.5762 L
472.3174 328.2637 L
472.0898 327.9238 L
471.8916 327.5566 L
471.7783 327.1875 L
471.6934 326.7617 L
471.665 326.3652 L
471.6934 325.9395 L
471.7783 325.543 L
471.8916 325.1465 L
472.0898 324.7773 L
472.3174 324.4375 L
472.6006 324.125 L
472.8838 323.8711 L
473.2529 323.6445 L
473.6211 323.4453 L
473.9893 323.332 L
474.415 323.248 L
474.8115 323.2188 L
475.2363 323.248 L
475.6338 323.332 L
476.0303 323.4453 L
476.3994 323.6445 L
476.7393 323.8711 L
477.0508 324.125 L
477.3057 324.4375 L
477.5332 324.7773 L
477.7314 325.1465 L
477.8447 325.543 L
477.9297 325.9395 L
B
483.1738 347.8809 m
483.1455 348.3047 L
483.0605 348.7031 L
482.9473 349.0996 L
482.749 349.4668 L
482.5215 349.8086 L
482.2383 350.1191 L
481.9551 350.375 L
481.5859 350.6016 L
481.2178 350.8008 L
480.8496 350.9141 L
480.4238 350.998 L
480.0273 351.0273 L
479.6309 350.998 L
479.2051 350.9141 L
478.8369 350.8008 L
478.4395 350.6016 L
478.0996 350.375 L
477.8164 350.1191 L
477.5332 349.8086 L
477.3057 349.4668 L
477.1074 349.0996 L
476.9941 348.7031 L
476.9092 348.3047 L
476.8809 347.8809 L
476.9092 347.4844 L
476.9941 347.0859 L
477.1074 346.6895 L
477.3057 346.3203 L
477.5332 345.9805 L
477.8164 345.6699 L
478.0996 345.3867 L
478.4395 345.1582 L
478.8369 344.9883 L
479.2051 344.8477 L
479.6309 344.7617 L
480.0273 344.7344 L
480.4238 344.7617 L
480.8496 344.8477 L
481.2178 344.9883 L
481.5859 345.1582 L
481.9551 345.3867 L
482.2383 345.6699 L
482.5215 345.9805 L
482.749 346.3203 L
482.9473 346.6895 L
483.0605 347.0859 L
483.1455 347.4844 L
B
504.0088 223.8086 m
503.9805 224.2051 L
503.8955 224.6016 L
503.7813 224.998 L
503.583 225.3672 L
503.3564 225.707 L
503.1016 226.0195 L
502.79 226.3027 L
502.4492 226.5293 L
502.0811 226.6992 L
501.6836 226.8398 L
501.2871 226.9258 L
500.8623 226.9551 L
500.4648 226.9258 L
500.0684 226.8398 L
499.6719 226.6992 L
499.3027 226.5293 L
498.9629 226.3027 L
498.6514 226.0195 L
498.3672 225.707 L
498.1406 225.3672 L
497.9707 224.998 L
497.8291 224.6016 L
497.7441 224.2051 L
497.7158 223.8086 L
497.7441 223.3828 L
497.8291 222.9863 L
497.9707 222.5879 L
498.1406 222.2207 L
498.3672 221.8809 L
498.6514 221.5684 L
498.9629 221.2852 L
499.3027 221.0586 L
499.6719 220.8887 L
500.0684 220.7461 L
500.4648 220.6621 L
500.8623 220.6621 L
501.2871 220.6621 L
501.6836 220.7461 L
502.0811 220.8887 L
502.4492 221.0586 L
502.79 221.2852 L
503.1016 221.5684 L
503.3564 221.8809 L
503.583 222.2207 L
503.7813 222.5879 L
503.8955 222.9863 L
503.9805 223.3828 L
B
466.5059 264.2012 m
466.4775 264.627 L
466.3926 265.0234 L
466.2793 265.4199 L
466.0811 265.7891 L
465.8545 266.1289 L
465.5986 266.4414 L
465.2871 266.6953 L
464.9473 266.9219 L
464.5781 267.1211 L
464.1816 267.2344 L
463.7852 267.3203 L
463.3594 267.3477 L
462.9629 267.3203 L
462.5371 267.2344 L
462.1689 267.1211 L
461.8008 266.9219 L
461.4316 266.6953 L
461.1484 266.4414 L
460.8652 266.1289 L
460.6387 265.7891 L
460.4395 265.4199 L
460.3262 265.0234 L
460.2412 264.627 L
460.2129 264.2012 L
460.2412 263.8047 L
460.3262 263.4082 L
460.4395 263.0117 L
460.6387 262.6426 L
460.8652 262.3027 L
461.1484 261.9902 L
461.4316 261.707 L
461.8008 261.4805 L
462.1689 261.3105 L
462.5371 261.168 L
462.9629 261.084 L
463.3594 261.0547 L
463.7852 261.084 L
464.1816 261.168 L
464.5781 261.3105 L
464.9473 261.4805 L
465.2871 261.707 L
465.5986 261.9902 L
465.8545 262.3027 L
466.0811 262.6426 L
466.2793 263.0117 L
466.3926 263.4082 L
466.4775 263.8047 L
B
499.2178 233.332 m
499.1895 233.7285 L
499.1045 234.125 L
498.9912 234.5234 L
498.793 234.8906 L
498.5664 235.2305 L
498.3105 235.543 L
497.999 235.8262 L
497.6592 236.0527 L
497.29 236.2227 L
496.8936 236.3652 L
496.4971 236.4512 L
496.0713 236.4785 L
495.6748 236.4512 L
495.249 236.3652 L
494.8809 236.2227 L
494.5127 236.0527 L
494.1719 235.8262 L
493.8604 235.543 L
493.5771 235.2305 L
493.3506 234.8906 L
493.1797 234.5234 L
493.0381 234.125 L
492.9531 233.7285 L
492.9248 233.332 L
492.9531 232.9063 L
493.0381 232.5098 L
493.1797 232.1133 L
493.3506 231.7441 L
493.5771 231.4043 L
493.8604 231.0918 L
494.1719 230.8379 L
494.5127 230.582 L
494.8809 230.4121 L
495.249 230.2715 L
495.6748 230.2148 L
496.0713 230.1855 L
496.4971 230.2148 L
496.8936 230.2715 L
497.29 230.4121 L
497.6592 230.582 L
497.999 230.8379 L
498.3105 231.0918 L
498.5664 231.4043 L
498.793 231.7441 L
498.9912 232.1133 L
499.1045 232.5098 L
499.1895 232.9063 L
B
480.3672 278.2891 m
480.3389 278.7148 L
480.2539 279.1113 L
480.1406 279.5078 L
479.9424 279.877 L
479.7158 280.2168 L
479.4609 280.5293 L
479.1484 280.7832 L
478.8086 281.0117 L
478.4404 281.209 L
478.043 281.3223 L
477.6465 281.4082 L
477.2207 281.4355 L
476.8242 281.4082 L
476.3994 281.3223 L
476.0303 281.209 L
475.6621 281.0117 L
475.3223 280.7832 L
475.0098 280.5293 L
474.7266 280.2168 L
474.5 279.877 L
474.3301 279.5078 L
474.1875 279.1113 L
474.1025 278.7148 L
474.0742 278.2891 L
474.1025 277.8926 L
474.1875 277.4668 L
474.3301 277.0996 L
474.5 276.7305 L
474.7266 276.3906 L
475.0098 276.0781 L
475.3223 275.7949 L
475.6621 275.5684 L
476.0303 275.3984 L
476.3994 275.2559 L
476.8242 275.1719 L
477.2207 275.1426 L
477.6465 275.1719 L
478.043 275.2559 L
478.4404 275.3984 L
478.8086 275.5684 L
479.1484 275.7949 L
479.4609 276.0781 L
479.7158 276.3906 L
479.9424 276.7305 L
480.1406 277.0996 L
480.2539 277.4668 L
480.3389 277.8926 L
B
475.4639 248.2148 m
475.4355 248.6113 L
475.3506 249.0352 L
475.2363 249.4043 L
475.0381 249.7734 L
474.8115 250.1133 L
474.5566 250.4258 L
474.2451 250.709 L
473.9043 250.9355 L
473.5361 251.1055 L
473.1396 251.248 L
472.7422 251.332 L
472.3174 251.3613 L
471.9199 251.332 L
471.4951 251.248 L
471.127 251.1055 L
470.7578 250.9355 L
470.3896 250.709 L
470.1064 250.4258 L
469.8223 250.1133 L
469.5957 249.7734 L
469.4258 249.4043 L
469.2842 249.0352 L
469.1992 248.6113 L
469.1709 248.2148 L
469.1992 247.7891 L
469.2842 247.3926 L
469.4258 246.9941 L
469.5957 246.627 L
469.8223 246.2871 L
470.1064 245.9746 L
470.3896 245.7188 L
470.7578 245.4922 L
471.127 245.2949 L
471.4951 245.1816 L
471.9199 245.0957 L
472.3174 245.0684 L
472.7422 245.0957 L
473.1396 245.1816 L
473.5361 245.2949 L
473.9043 245.4922 L
474.2451 245.7188 L
474.5566 245.9746 L
474.8115 246.2871 L
475.0381 246.627 L
475.2363 246.9941 L
475.3506 247.3926 L
475.4355 247.7891 L
B
464.1816 303.1777 m
464.1533 303.5742 L
464.0967 304 L
463.9551 304.3691 L
463.7568 304.7363 L
463.5293 305.1055 L
463.2744 305.3887 L
462.9629 305.6719 L
462.623 305.8984 L
462.2539 306.0977 L
461.8574 306.2109 L
461.46 306.2969 L
461.0352 306.3242 L
460.6387 306.2969 L
460.2412 306.2109 L
459.8447 306.0977 L
459.4766 305.8984 L
459.1357 305.6719 L
458.8242 305.3887 L
458.541 305.1055 L
458.3145 304.7363 L
458.1436 304.3691 L
458.002 304 L
457.917 303.5742 L
457.8887 303.1777 L
457.917 302.752 L
458.002 302.3555 L
458.1436 301.959 L
458.3145 301.5898 L
458.541 301.25 L
458.8242 300.9395 L
459.1357 300.6836 L
459.4766 300.457 L
459.8447 300.2578 L
460.2412 300.1445 L
460.6387 300.0605 L
461.0352 300.0313 L
461.46 300.0605 L
461.8574 300.1445 L
462.2539 300.2578 L
462.623 300.457 L
462.9629 300.6836 L
463.2744 300.9395 L
463.5293 301.25 L
463.7568 301.5898 L
463.9551 301.959 L
464.0967 302.3555 L
464.1533 302.752 L
B
493.4355 263.3516 m
493.4072 263.7754 L
493.3506 264.1738 L
493.209 264.5703 L
493.0098 264.9375 L
492.7832 265.2793 L
492.5283 265.5898 L
492.2168 265.8457 L
491.876 266.1016 L
491.5078 266.2715 L
491.1113 266.4121 L
490.7139 266.4688 L
490.2891 266.498 L
489.8916 266.4688 L
489.4951 266.4121 L
489.0986 266.2715 L
488.7295 266.1016 L
488.3896 265.8457 L
488.0781 265.5898 L
487.7939 265.2793 L
487.5674 264.9375 L
487.3975 264.5703 L
487.2559 264.1738 L
487.1709 263.7754 L
487.1426 263.3516 L
487.1709 262.9551 L
487.2559 262.5566 L
487.3975 262.1602 L
487.5674 261.791 L
487.7939 261.4512 L
488.0781 261.1406 L
488.3896 260.8574 L
488.7295 260.6289 L
489.0986 260.459 L
489.4951 260.3184 L
489.8916 260.2324 L
490.2891 260.2051 L
490.7139 260.2324 L
491.1113 260.3184 L
491.5078 260.459 L
491.876 260.6289 L
492.2168 260.8574 L
492.5283 261.1406 L
492.7832 261.4512 L
493.0098 261.791 L
493.209 262.1602 L
493.3506 262.5566 L
493.4072 262.9551 L
B
481.9551 287.502 m
481.9268 287.8984 L
481.8418 288.3242 L
481.7002 288.6934 L
481.5293 289.0605 L
481.3027 289.4297 L
481.0195 289.7129 L
480.708 289.9961 L
480.3672 290.2227 L
479.999 290.4219 L
479.6025 290.5352 L
479.2051 290.6211 L
478.8086 290.6484 L
478.3828 290.6211 L
477.9863 290.5352 L
477.5898 290.4219 L
477.2207 290.2227 L
476.8809 289.9961 L
476.5693 289.7129 L
476.2852 289.4297 L
476.0586 289.0605 L
475.8887 288.6934 L
475.7471 288.3242 L
475.6621 287.8984 L
475.6621 287.502 L
475.6621 287.0762 L
475.7471 286.6797 L
475.8887 286.2832 L
476.0586 285.9141 L
476.2852 285.5742 L
476.5693 285.2637 L
476.8809 285.0078 L
477.2207 284.7813 L
477.5898 284.582 L
477.9863 284.4688 L
478.3828 284.3848 L
478.8086 284.3555 L
479.2051 284.3848 L
479.6025 284.4688 L
479.999 284.582 L
480.3672 284.7813 L
480.708 285.0078 L
481.0195 285.2637 L
481.3027 285.5742 L
481.5293 285.9141 L
481.7002 286.2832 L
481.8418 286.6797 L
481.9268 287.0762 L
B
482.7207 256.0098 m
482.6924 256.4063 L
482.6064 256.832 L
482.4648 257.1992 L
482.2949 257.5684 L
482.0684 257.9082 L
481.7852 258.2207 L
481.4727 258.5039 L
481.1328 258.7305 L
480.7646 258.9004 L
480.3955 259.043 L
479.9707 259.127 L
479.5742 259.1563 L
479.1484 259.127 L
478.752 259.043 L
478.3545 258.9004 L
477.9863 258.7305 L
477.6465 258.5039 L
477.334 258.2207 L
477.0791 257.9082 L
476.8525 257.5684 L
476.6543 257.1992 L
476.541 256.832 L
476.4561 256.4063 L
476.4277 256.0098 L
476.4561 255.584 L
476.541 255.1875 L
476.6543 254.791 L
476.8525 254.4219 L
477.0791 254.082 L
477.334 253.7695 L
477.6465 253.5156 L
477.9863 253.2871 L
478.3545 253.0898 L
478.752 252.9766 L
479.1484 252.8906 L
479.5742 252.8633 L
479.9707 252.8906 L
480.3955 252.9766 L
480.7646 253.0898 L
481.1328 253.2871 L
481.4727 253.5156 L
481.7852 253.7695 L
482.0684 254.082 L
482.2949 254.4219 L
482.4648 254.791 L
482.6064 255.1875 L
482.6924 255.584 L
B
504.1221 255.2441 m
504.0938 255.6406 L
504.0371 256.0664 L
503.8955 256.4336 L
503.6963 256.8027 L
503.4697 257.1719 L
503.2148 257.4551 L
502.9033 257.7383 L
502.5625 257.9648 L
502.1943 258.1641 L
501.7979 258.2773 L
501.4004 258.3613 L
500.9756 258.3906 L
500.5781 258.3613 L
500.1816 258.2773 L
499.7852 258.1641 L
499.416 257.9648 L
499.0762 257.7383 L
498.7646 257.4551 L
498.4805 257.1719 L
498.2539 256.8027 L
498.084 256.4336 L
497.9424 256.0664 L
497.8574 255.6406 L
497.8291 255.2441 L
497.8574 254.8184 L
497.9424 254.4219 L
498.084 254.0254 L
498.2539 253.6563 L
498.4805 253.3164 L
498.7646 253.0039 L
499.0762 252.75 L
499.416 252.5234 L
499.7852 252.3242 L
500.1816 252.2109 L
500.5781 252.125 L
500.9756 252.0977 L
501.4004 252.125 L
501.7979 252.2109 L
502.1943 252.3242 L
502.5625 252.5234 L
502.9033 252.75 L
503.2148 253.0039 L
503.4697 253.3164 L
503.6963 253.6563 L
503.8955 254.0254 L
504.0371 254.4219 L
504.0938 254.8184 L
B
521.8389 301.8164 m
521.8105 302.2148 L
521.7246 302.6113 L
521.6113 303.0078 L
521.4131 303.377 L
521.1865 303.7168 L
520.9316 304.0273 L
520.6191 304.3125 L
520.2793 304.5391 L
519.9111 304.709 L
519.5137 304.8496 L
519.1172 304.9355 L
518.6924 304.9629 L
518.2949 304.9355 L
517.8701 304.8496 L
517.502 304.709 L
517.1328 304.5391 L
516.793 304.3125 L
516.4805 304.0273 L
516.1973 303.7168 L
515.9707 303.377 L
515.8008 303.0078 L
515.6592 302.6113 L
515.5742 302.2148 L
515.5459 301.8164 L
515.5742 301.3926 L
515.6592 300.9961 L
515.8008 300.5977 L
515.9707 300.2305 L
516.1973 299.8906 L
516.4805 299.5781 L
516.793 299.3223 L
517.1328 299.0684 L
517.502 298.8984 L
517.8701 298.7559 L
518.2949 298.6992 L
518.6924 298.6699 L
519.1172 298.6992 L
519.5137 298.7559 L
519.9111 298.8984 L
520.2793 299.0684 L
520.6191 299.3223 L
520.9316 299.5781 L
521.1865 299.8906 L
521.4131 300.2305 L
521.6113 300.5977 L
521.7246 300.9961 L
521.8105 301.3926 L
B
475.4639 318.3711 m
475.4355 318.7676 L
475.3506 319.1934 L
475.2363 319.5625 L
475.0381 319.9297 L
474.8115 320.2715 L
474.5566 320.582 L
474.2451 320.8652 L
473.9043 321.0938 L
473.5361 321.2637 L
473.1396 321.4043 L
472.7422 321.4902 L
472.3174 321.5176 L
471.9199 321.4902 L
471.4951 321.4043 L
471.127 321.2637 L
470.7578 321.0938 L
470.3896 320.8652 L
470.1064 320.582 L
469.8223 320.2715 L
469.5957 319.9297 L
469.4258 319.5625 L
469.2842 319.1934 L
469.1992 318.7676 L
469.1709 318.3711 L
469.1992 317.9473 L
469.2842 317.5488 L
469.4258 317.1523 L
469.5957 316.7852 L
469.8223 316.4434 L
470.1064 316.1328 L
470.3896 315.877 L
470.7578 315.6504 L
471.127 315.4512 L
471.4951 315.3379 L
471.9199 315.2539 L
472.3174 315.2246 L
472.7422 315.2539 L
473.1396 315.3379 L
473.5361 315.4512 L
473.9043 315.6504 L
474.2451 315.877 L
474.5566 316.1328 L
474.8115 316.4434 L
475.0381 316.7852 L
475.2363 317.1523 L
475.3506 317.5488 L
475.4355 317.9473 L
B
472.0049 326.4512 m
471.9766 326.8477 L
471.8916 327.2715 L
471.7783 327.6406 L
471.5801 328.0098 L
471.3535 328.3496 L
471.0986 328.6621 L
470.7861 328.9453 L
470.4463 329.1719 L
470.0781 329.3418 L
469.6807 329.4844 L
469.2842 329.5684 L
468.8584 329.5977 L
468.4619 329.5684 L
468.0371 329.4844 L
467.668 329.3418 L
467.2998 329.1719 L
466.96 328.9453 L
466.6475 328.6621 L
466.3643 328.3496 L
466.1377 328.0098 L
465.9678 327.6406 L
465.8262 327.2715 L
465.7402 326.8477 L
465.7119 326.4512 L
465.7402 326.0254 L
465.8262 325.6289 L
465.9678 325.2324 L
466.1377 324.8633 L
466.3643 324.5234 L
466.6475 324.2109 L
466.96 323.9551 L
467.2998 323.7285 L
467.668 323.5313 L
468.0371 323.418 L
468.4619 323.332 L
468.8584 323.3047 L
469.2842 323.332 L
469.6807 323.418 L
470.0781 323.5313 L
470.4463 323.7285 L
470.7861 323.9551 L
471.0986 324.2109 L
471.3535 324.5234 L
471.5801 324.8633 L
471.7783 325.2324 L
471.8916 325.6289 L
471.9766 326.0254 L
B
494.7676 278.6582 m
494.7393 279.0547 L
494.6543 279.4512 L
494.541 279.8496 L
494.3428 280.2168 L
494.1152 280.5566 L
493.832 280.8691 L
493.5488 281.1523 L
493.1797 281.3789 L
492.8115 281.5488 L
492.4434 281.6914 L
492.0176 281.7754 L
491.6211 281.8047 L
491.1963 281.7754 L
490.7988 281.6914 L
490.4023 281.5488 L
490.0332 281.3789 L
489.6934 281.1523 L
489.3818 280.8691 L
489.127 280.5566 L
488.8994 280.2168 L
488.7012 279.8496 L
488.5879 279.4512 L
488.5029 279.0547 L
488.4746 278.6582 L
488.5029 278.2324 L
488.5879 277.8359 L
488.7012 277.4395 L
488.8994 277.0703 L
489.127 276.7305 L
489.3818 276.418 L
489.6934 276.1641 L
490.0332 275.9082 L
490.4023 275.7383 L
490.7988 275.5977 L
491.1963 275.5391 L
491.6211 275.5117 L
492.0176 275.5391 L
492.4434 275.5977 L
492.8115 275.7383 L
493.1797 275.9082 L
493.5488 276.1641 L
493.832 276.418 L
494.1152 276.7305 L
494.3428 277.0703 L
494.541 277.4395 L
494.6543 277.8359 L
494.7393 278.2324 L
B
515.6309 306.9199 m
515.6025 307.3164 L
515.5176 307.7129 L
515.375 308.1094 L
515.2051 308.4785 L
514.9785 308.8184 L
514.6953 309.1309 L
514.3838 309.4141 L
514.043 309.6406 L
513.6748 309.8105 L
513.2773 309.9531 L
512.8809 310.0371 L
512.4844 310.0664 L
512.0586 310.0371 L
511.6621 309.9531 L
511.2656 309.8105 L
510.8965 309.6406 L
510.5566 309.4141 L
510.2451 309.1309 L
509.9893 308.8184 L
509.7627 308.4785 L
509.5645 308.1094 L
509.4512 307.7129 L
509.3662 307.3164 L
509.3379 306.9199 L
509.3662 306.4941 L
509.4512 306.0977 L
509.5645 305.7012 L
509.7627 305.332 L
509.9893 304.9922 L
510.2451 304.6797 L
510.5566 304.4258 L
510.8965 304.1992 L
511.2656 304 L
511.6621 303.8867 L
512.0586 303.8008 L
512.4844 303.7734 L
512.8809 303.8008 L
513.2773 303.8867 L
513.6748 304 L
514.043 304.1992 L
514.3838 304.4258 L
514.6953 304.6797 L
514.9785 304.9922 L
515.2051 305.332 L
515.375 305.7012 L
515.5176 306.0977 L
515.6025 306.4941 L
B
487.3408 273.1309 m
487.3125 273.5273 L
487.2275 273.9531 L
487.0859 274.3203 L
486.916 274.6895 L
486.6885 275.0586 L
486.4053 275.3418 L
486.0938 275.625 L
485.7529 275.8516 L
485.3848 276.0215 L
484.9883 276.1641 L
484.5908 276.248 L
484.1943 276.2773 L
483.7695 276.248 L
483.3721 276.1641 L
482.9756 276.0215 L
482.6064 275.8516 L
482.2666 275.625 L
481.9551 275.3418 L
481.7002 275.0586 L
481.4727 274.6895 L
481.2744 274.3203 L
481.1611 273.9531 L
481.0762 273.5273 L
481.0479 273.1309 L
481.0762 272.7051 L
481.1611 272.3086 L
481.2744 271.9121 L
481.4727 271.543 L
481.7002 271.2031 L
481.9551 270.8906 L
482.2666 270.6367 L
482.6064 270.4102 L
482.9756 270.2109 L
483.3721 270.0977 L
483.7695 270.0117 L
484.1943 269.9844 L
484.5908 270.0117 L
484.9883 270.0977 L
485.3848 270.2109 L
485.7529 270.4102 L
486.0938 270.6367 L
486.4053 270.8906 L
486.6885 271.2031 L
486.916 271.543 L
487.0859 271.9121 L
487.2275 272.3086 L
487.3125 272.7051 L
B
402.3301 249.0918 m
402.3008 249.5176 L
402.2158 249.9141 L
402.0742 250.3125 L
401.9043 250.6797 L
401.6777 251.0195 L
401.3945 251.332 L
401.082 251.5879 L
400.7422 251.8145 L
400.374 252.0117 L
399.9766 252.125 L
399.5801 252.2109 L
399.1836 252.2383 L
398.7578 252.2109 L
398.3613 252.125 L
397.9639 252.0117 L
397.5957 251.8145 L
397.2559 251.5879 L
396.9434 251.332 L
396.6885 251.0195 L
396.4336 250.6797 L
396.2637 250.3125 L
396.1221 249.9141 L
396.0654 249.5176 L
396.0371 249.0918 L
396.0654 248.6953 L
396.1221 248.2715 L
396.2637 247.9023 L
396.4336 247.5332 L
396.6885 247.1934 L
396.9434 246.8809 L
397.2559 246.5977 L
397.5957 246.3711 L
397.9639 246.2012 L
398.3613 246.0605 L
398.7578 245.9746 L
399.1836 245.9453 L
399.5801 245.9746 L
399.9766 246.0605 L
400.374 246.2012 L
400.7422 246.3711 L
401.082 246.5977 L
401.3945 246.8809 L
401.6777 247.1934 L
401.9043 247.5332 L
402.0742 247.9023 L
402.2158 248.2715 L
402.3008 248.6953 L
B
499.7285 296.3184 m
499.7002 296.7148 L
499.6152 297.1113 L
499.4727 297.5078 L
499.3027 297.877 L
499.0762 298.2168 L
498.793 298.5293 L
498.4805 298.8125 L
498.1406 299.0391 L
497.7725 299.209 L
497.375 299.3516 L
496.9785 299.4355 L
496.582 299.4648 L
496.1563 299.4355 L
495.7598 299.3516 L
495.3633 299.209 L
494.9941 299.0391 L
494.6543 298.8125 L
494.3428 298.5293 L
494.0869 298.2168 L
493.832 297.877 L
493.6621 297.5078 L
493.5205 297.1113 L
493.4639 296.7148 L
493.4355 296.3184 L
493.4639 295.8926 L
493.5205 295.4961 L
493.6621 295.0996 L
493.832 294.7305 L
494.0869 294.3906 L
494.3428 294.0781 L
494.6543 293.8242 L
494.9941 293.5977 L
495.3633 293.3984 L
495.7598 293.2852 L
496.1563 293.1992 L
496.582 293.1719 L
496.9785 293.1992 L
497.375 293.2852 L
497.7725 293.3984 L
498.1406 293.5977 L
498.4805 293.8242 L
498.793 294.0781 L
499.0762 294.3906 L
499.3027 294.7305 L
499.4727 295.0996 L
499.6152 295.4961 L
499.7002 295.8926 L
B
496.3262 374.9238 m
496.2979 375.3203 L
496.2129 375.7168 L
496.0713 376.1133 L
495.9014 376.4824 L
495.6748 376.8223 L
495.3916 377.1348 L
495.0791 377.418 L
494.7393 377.6445 L
494.3711 377.8145 L
494.002 377.9551 L
493.5771 378.041 L
493.1797 378.0684 L
492.7549 378.041 L
492.3584 377.9551 L
491.9609 377.8145 L
491.5928 377.6445 L
491.2529 377.418 L
490.9404 377.1348 L
490.6855 376.8223 L
490.459 376.4824 L
490.2607 376.1133 L
490.1475 375.7168 L
490.0625 375.3203 L
490.0332 374.9238 L
490.0625 374.498 L
490.1475 374.1016 L
490.2607 373.7031 L
490.459 373.3359 L
490.6855 372.9961 L
490.9404 372.6836 L
491.2529 372.4277 L
491.5928 372.1738 L
491.9609 372.0039 L
492.3584 371.8613 L
492.7549 371.8047 L
493.1797 371.7773 L
493.5771 371.8047 L
494.002 371.8613 L
494.3711 372.0039 L
494.7393 372.1738 L
495.0791 372.4277 L
495.3916 372.6836 L
495.6748 372.9961 L
495.9014 373.3359 L
496.0713 373.7031 L
496.2129 374.1016 L
496.2979 374.498 L
B
490.7139 298.9551 m
490.7139 299.3789 L
490.6289 299.7754 L
490.4873 300.1445 L
490.3174 300.541 L
490.0908 300.8809 L
489.8066 301.1934 L
489.4951 301.4492 L
489.1553 301.6758 L
488.7861 301.873 L
488.3896 301.9883 L
487.9932 302.0723 L
487.5674 302.1016 L
487.1709 302.0723 L
486.7734 301.9883 L
486.377 301.873 L
486.0088 301.6758 L
485.668 301.4492 L
485.3564 301.1934 L
485.0732 300.8809 L
484.8467 300.541 L
484.6758 300.1445 L
484.5342 299.7754 L
484.4492 299.3789 L
484.4209 298.9551 L
484.4492 298.5566 L
484.5342 298.1328 L
484.6758 297.7637 L
484.8467 297.3945 L
485.0732 297.0273 L
485.3564 296.7441 L
485.668 296.459 L
486.0088 296.2324 L
486.377 296.0352 L
486.7734 295.9219 L
487.1709 295.8359 L
487.5674 295.8086 L
487.9932 295.8359 L
488.3896 295.9219 L
488.7861 296.0352 L
489.1553 296.2324 L
489.4951 296.459 L
489.8066 296.7441 L
490.0908 297.0273 L
490.3174 297.3945 L
490.4873 297.7637 L
490.6289 298.1328 L
490.7139 298.5566 L
B
479.0918 298.8691 m
479.0635 299.2656 L
478.9785 299.6621 L
478.8652 300.0605 L
478.667 300.4277 L
478.4395 300.7676 L
478.1846 301.0801 L
477.873 301.3633 L
477.5332 301.5898 L
477.1641 301.7598 L
476.7676 301.9023 L
476.3711 301.9883 L
475.9453 302.0156 L
475.5488 301.9883 L
475.123 301.9023 L
474.7549 301.7598 L
474.3867 301.5898 L
474.0459 301.3633 L
473.7344 301.0801 L
473.4512 300.7676 L
473.2246 300.4277 L
473.0537 300.0605 L
472.9121 299.6621 L
472.8271 299.2656 L
472.7988 298.8691 L
472.8271 298.4434 L
472.9121 298.0469 L
473.0537 297.6504 L
473.2246 297.2813 L
473.4512 296.9414 L
473.7344 296.6289 L
474.0459 296.375 L
474.3867 296.1484 L
474.7549 295.9492 L
475.123 295.8359 L
475.5488 295.752 L
475.9453 295.7227 L
476.3711 295.752 L
476.7676 295.8359 L
477.1641 295.9492 L
477.5332 296.1484 L
477.873 296.375 L
478.1846 296.6289 L
478.4395 296.9414 L
478.667 297.2813 L
478.8652 297.6504 L
478.9785 298.0469 L
479.0635 298.4434 L
B
472.0049 266.9219 m
471.9766 267.3203 L
471.8916 267.7441 L
471.7783 268.1133 L
471.5801 268.4824 L
471.3535 268.8223 L
471.0986 269.1328 L
470.7861 269.418 L
470.4463 269.6445 L
470.0781 269.8145 L
469.6807 269.9551 L
469.2842 270.041 L
468.8584 270.0684 L
468.4619 270.041 L
468.0371 269.9551 L
467.668 269.8145 L
467.2998 269.6445 L
466.96 269.418 L
466.6475 269.1328 L
466.3643 268.8223 L
466.1377 268.4824 L
465.9678 268.1133 L
465.8262 267.7441 L
465.7402 267.3203 L
465.7119 266.9219 L
465.7402 266.498 L
465.8262 266.1016 L
465.9678 265.7031 L
466.1377 265.3359 L
466.3643 264.9961 L
466.6475 264.6836 L
466.96 264.4277 L
467.2998 264.2012 L
467.668 264.0039 L
468.0371 263.8887 L
468.4619 263.8047 L
468.8584 263.7754 L
469.2842 263.8047 L
469.6807 263.8887 L
470.0781 264.0039 L
470.4463 264.2012 L
470.7861 264.4277 L
471.0986 264.6836 L
471.3535 264.9961 L
471.5801 265.3359 L
471.7783 265.7031 L
471.8916 266.1016 L
471.9766 266.498 L
B
504.2354 282.4277 m
504.207 282.8535 L
504.1504 283.25 L
504.0088 283.6465 L
503.8389 284.0156 L
503.583 284.3555 L
503.3281 284.668 L
503.0166 284.9512 L
502.6758 285.1777 L
502.3076 285.3477 L
501.9111 285.4902 L
501.5137 285.5469 L
501.0889 285.5742 L
500.6924 285.5469 L
500.2949 285.4902 L
499.8984 285.3477 L
499.5293 285.1777 L
499.1895 284.9512 L
498.8779 284.668 L
498.5947 284.3555 L
498.3672 284.0156 L
498.1973 283.6465 L
498.0557 283.25 L
497.9707 282.8535 L
497.9424 282.4277 L
497.9707 282.0313 L
498.0557 281.6348 L
498.1973 281.2383 L
498.3672 280.8691 L
498.5947 280.5293 L
498.8779 280.2168 L
499.1895 279.9336 L
499.5293 279.707 L
499.8984 279.5371 L
500.2949 279.3945 L
500.6924 279.3105 L
501.0889 279.2813 L
501.5137 279.3105 L
501.9111 279.3945 L
502.3076 279.5371 L
502.6758 279.707 L
503.0166 279.9336 L
503.3281 280.2168 L
503.583 280.5293 L
503.8389 280.8691 L
504.0088 281.2383 L
504.1504 281.6348 L
504.207 282.0313 L
B
498.8496 287.8711 m
498.8213 288.2676 L
498.7363 288.6934 L
498.623 289.0605 L
498.4238 289.4297 L
498.1973 289.7695 L
497.9424 290.082 L
497.6309 290.3652 L
497.29 290.5918 L
496.9219 290.7617 L
496.5254 290.9043 L
496.1279 290.9883 L
495.7031 291.0176 L
495.3066 290.9883 L
494.8809 290.9043 L
494.5127 290.7617 L
494.1436 290.5918 L
493.7754 290.3652 L
493.4922 290.082 L
493.209 289.7695 L
492.9814 289.4297 L
492.8115 289.0605 L
492.6699 288.6934 L
492.585 288.2676 L
492.5566 287.8711 L
492.585 287.4453 L
492.6699 287.0488 L
492.8115 286.6523 L
492.9814 286.2832 L
493.209 285.9434 L
493.4922 285.6309 L
493.7754 285.377 L
494.1436 285.1504 L
494.5127 284.9512 L
494.8809 284.8379 L
495.3066 284.752 L
495.7031 284.7246 L
496.1279 284.752 L
496.5254 284.8379 L
496.9219 284.9512 L
497.29 285.1504 L
497.6309 285.377 L
497.9424 285.6309 L
498.1973 285.9434 L
498.4238 286.2832 L
498.623 286.6523 L
498.7363 287.0488 L
498.8213 287.4453 L
B
449.5264 270.3242 m
449.498 270.7207 L
449.4414 271.1465 L
449.2998 271.5156 L
449.1016 271.8828 L
448.875 272.2227 L
448.6191 272.5352 L
448.3076 272.8184 L
447.9678 273.0449 L
447.5986 273.2148 L
447.2021 273.3574 L
446.8057 273.4434 L
446.3799 273.4707 L
445.9834 273.4434 L
445.5859 273.3574 L
445.1895 273.2148 L
444.8213 273.0449 L
444.4805 272.8184 L
444.1689 272.5352 L
443.8857 272.2227 L
443.6592 271.8828 L
443.4883 271.5156 L
443.3467 271.1465 L
443.2617 270.7207 L
443.2334 270.3242 L
443.2617 269.8984 L
443.3467 269.502 L
443.4883 269.1055 L
443.6592 268.7363 L
443.8857 268.3965 L
444.1689 268.084 L
444.4805 267.8301 L
444.8213 267.6035 L
445.1895 267.4043 L
445.5859 267.291 L
445.9834 267.207 L
446.3799 267.1777 L
446.8057 267.207 L
447.2021 267.291 L
447.5986 267.4043 L
447.9678 267.6035 L
448.3076 267.8301 L
448.6191 268.084 L
448.875 268.3965 L
449.1016 268.7363 L
449.2998 269.1055 L
449.4414 269.502 L
449.498 269.8984 L
B
494.626 281.2656 m
494.5977 281.6621 L
494.541 282.0879 L
494.3994 282.457 L
494.2002 282.8242 L
493.9736 283.166 L
493.7188 283.4766 L
493.4072 283.7598 L
493.0664 283.9883 L
492.6982 284.1582 L
492.3018 284.2988 L
491.9043 284.3848 L
491.4795 284.4121 L
491.082 284.3848 L
490.6855 284.2988 L
490.2891 284.1582 L
489.9199 283.9883 L
489.5801 283.7598 L
489.2686 283.4766 L
488.9844 283.166 L
488.7578 282.8242 L
488.5879 282.457 L
488.4463 282.0879 L
488.3613 281.6621 L
488.333 281.2656 L
488.3613 280.8418 L
488.4463 280.4434 L
488.5879 280.0469 L
488.7578 279.6777 L
488.9844 279.3379 L
489.2686 279.0273 L
489.5801 278.7715 L
489.9199 278.5449 L
490.2891 278.3457 L
490.6855 278.2324 L
491.082 278.1484 L
491.4795 278.1191 L
491.9043 278.1484 L
492.3018 278.2324 L
492.6982 278.3457 L
493.0664 278.5449 L
493.4072 278.7715 L
493.7188 279.0273 L
493.9736 279.3379 L
494.2002 279.6777 L
494.3994 280.0469 L
494.541 280.4434 L
494.5977 280.8418 L
B
475.4639 282.2305 m
475.4355 282.627 L
475.3506 283.0527 L
475.2363 283.4199 L
475.0381 283.7891 L
474.8115 284.1289 L
474.5566 284.4414 L
474.2451 284.7246 L
473.9043 284.9512 L
473.5361 285.1211 L
473.1396 285.2637 L
472.7422 285.3477 L
472.3174 285.377 L
471.9199 285.3477 L
471.4951 285.2637 L
471.127 285.1211 L
470.7578 284.9512 L
470.3896 284.7246 L
470.1064 284.4414 L
469.8223 284.1289 L
469.5957 283.7891 L
469.4258 283.4199 L
469.2842 283.0527 L
469.1992 282.627 L
469.1709 282.2305 L
469.1992 281.8047 L
469.2842 281.4082 L
469.4258 281.0117 L
469.5957 280.6426 L
469.8223 280.3027 L
470.1064 279.9902 L
470.3896 279.7344 L
470.7578 279.5078 L
471.127 279.3105 L
471.4951 279.1973 L
471.9199 279.1113 L
472.3174 279.084 L
472.7422 279.1113 L
473.1396 279.1973 L
473.5361 279.3105 L
473.9043 279.5078 L
474.2451 279.7344 L
474.5566 279.9902 L
474.8115 280.3027 L
475.0381 280.6426 L
475.2363 281.0117 L
475.3506 281.4082 L
475.4355 281.8047 L
B
494.9092 238.832 m
494.8809 239.2285 L
494.7959 239.6543 L
494.6543 240.0215 L
494.4844 240.3906 L
494.2578 240.7598 L
493.9736 241.043 L
493.6621 241.3262 L
493.3223 241.5527 L
492.9531 241.752 L
492.5566 241.8652 L
492.1602 241.9492 L
491.7627 241.9785 L
491.3379 241.9492 L
490.9404 241.8652 L
490.5439 241.752 L
490.1758 241.5527 L
489.835 241.3262 L
489.5234 241.043 L
489.2686 240.7598 L
489.0137 240.3906 L
488.8428 240.0215 L
488.7012 239.6543 L
488.6445 239.2285 L
488.6162 238.832 L
488.6445 238.4063 L
488.7012 238.0098 L
488.8428 237.6406 L
489.0137 237.2441 L
489.2686 236.9043 L
489.5234 236.5918 L
489.835 236.3359 L
490.1758 236.1094 L
490.5439 235.9121 L
490.9404 235.7988 L
491.3379 235.7129 L
491.7627 235.6855 L
492.1602 235.7129 L
492.5566 235.7988 L
492.9531 235.9121 L
493.3223 236.1094 L
493.6621 236.3359 L
493.9736 236.5918 L
494.2578 236.9043 L
494.4844 237.2441 L
494.6543 237.6406 L
494.7959 238.0098 L
494.8809 238.4063 L
B
469.4824 275.9082 m
469.4541 276.3047 L
469.3691 276.7031 L
469.2559 277.0996 L
469.0576 277.4668 L
468.8301 277.8086 L
468.5752 278.1191 L
468.2637 278.4023 L
467.9238 278.6289 L
467.5547 278.8008 L
467.1582 278.9414 L
466.7607 279.0273 L
466.3359 279.0547 L
465.9395 279.0273 L
465.542 278.9414 L
465.1455 278.8008 L
464.7773 278.6289 L
464.4365 278.4023 L
464.125 278.1191 L
463.8418 277.8086 L
463.6152 277.4668 L
463.4443 277.0996 L
463.3027 276.7031 L
463.2178 276.3047 L
463.1895 275.9082 L
463.2178 275.4824 L
463.3027 275.0859 L
463.4443 274.6895 L
463.6152 274.3203 L
463.8418 273.9805 L
464.125 273.6699 L
464.4365 273.4141 L
464.7773 273.1875 L
465.1455 272.9883 L
465.542 272.8477 L
465.9395 272.791 L
466.3359 272.7617 L
466.7607 272.791 L
467.1582 272.8477 L
467.5547 272.9883 L
467.9238 273.1875 L
468.2637 273.4141 L
468.5752 273.6699 L
468.8301 273.9805 L
469.0576 274.3203 L
469.2559 274.6895 L
469.3691 275.0859 L
469.4541 275.4824 L
B
522.0371 266.0156 m
522.0088 266.4121 L
521.9238 266.8086 L
521.7822 267.207 L
521.6113 267.5742 L
521.3848 267.9141 L
521.1016 268.2266 L
520.79 268.5098 L
520.4492 268.7363 L
520.0811 268.9063 L
519.6846 269.0488 L
519.2871 269.1328 L
518.8906 269.1621 L
518.4648 269.1328 L
518.0684 269.0488 L
517.6719 268.9063 L
517.3027 268.7363 L
516.9629 268.5098 L
516.6514 268.2266 L
516.3955 267.9141 L
516.1406 267.5742 L
515.9707 267.207 L
515.8291 266.8086 L
515.7725 266.4121 L
515.7441 266.0156 L
515.7725 265.5898 L
515.8291 265.1934 L
515.9707 264.7969 L
516.1406 264.4277 L
516.3955 264.0879 L
516.6514 263.7754 L
516.9629 263.5215 L
517.3027 263.2949 L
517.6719 263.0957 L
518.0684 262.9551 L
518.4648 262.8984 L
518.8906 262.8691 L
519.2871 262.8984 L
519.6846 262.9551 L
520.0811 263.0957 L
520.4492 263.2949 L
520.79 263.5215 L
521.1016 263.7754 L
521.3848 264.0879 L
521.6113 264.4277 L
521.7822 264.7969 L
521.9238 265.1934 L
522.0088 265.5898 L
B
258.6133 286.084 m
258.585 286.5098 L
258.5 286.9063 L
258.3867 287.3047 L
258.1875 287.6719 L
257.9609 288.0117 L
257.7061 288.3242 L
257.3945 288.5801 L
257.0537 288.8066 L
256.6855 289.0039 L
256.2891 289.1172 L
255.8916 289.2031 L
255.4668 289.2305 L
255.0693 289.2031 L
254.6729 289.1172 L
254.2764 289.0039 L
253.9072 288.8066 L
253.5674 288.5801 L
253.2559 288.3242 L
252.9717 288.0117 L
252.7451 287.6719 L
252.5752 287.3047 L
252.4336 286.9063 L
252.3486 286.5098 L
252.3203 286.084 L
252.3486 285.6875 L
252.4336 285.291 L
252.5752 284.8945 L
252.7451 284.5254 L
252.9717 284.1855 L
253.2559 283.873 L
253.5674 283.5898 L
253.9072 283.3633 L
254.2764 283.1934 L
254.6729 283.0527 L
255.0693 282.9668 L
255.4668 282.9375 L
255.8916 282.9668 L
256.2891 283.0527 L
256.6855 283.1934 L
257.0537 283.3633 L
257.3945 283.5898 L
257.7061 283.873 L
257.9609 284.1855 L
258.1875 284.5254 L
258.3867 284.8945 L
258.5 285.291 L
258.585 285.6875 L
B
405.7881 265.3926 m
405.7598 265.8164 L
405.6748 266.2148 L
405.5332 266.6113 L
405.3623 266.9785 L
405.1357 267.3203 L
404.8525 267.6309 L
404.541 267.8867 L
404.2002 268.1133 L
403.832 268.3125 L
403.4355 268.4258 L
403.0381 268.5098 L
402.6416 268.5391 L
402.2158 268.5098 L
401.8193 268.4258 L
401.4229 268.3125 L
401.0537 268.1133 L
400.7139 267.8867 L
400.4023 267.6309 L
400.1465 267.3203 L
399.8916 266.9785 L
399.7217 266.6113 L
399.5801 266.2148 L
399.5234 265.8164 L
399.4951 265.3926 L
399.5234 264.9961 L
399.5801 264.5703 L
399.7217 264.2012 L
399.8916 263.832 L
400.1465 263.4922 L
400.4023 263.1816 L
400.7139 262.8984 L
401.0537 262.6699 L
401.4229 262.5 L
401.8193 262.3594 L
402.2158 262.2734 L
402.6416 262.2461 L
403.0381 262.2734 L
403.4355 262.3594 L
403.832 262.5 L
404.2002 262.6699 L
404.541 262.8984 L
404.8525 263.1816 L
405.1357 263.4922 L
405.3623 263.832 L
405.5332 264.2012 L
405.6748 264.5703 L
405.7598 264.9961 L
B
*U
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 255 79 79 Lb
(Layer 2) Ln
0 A
0 D
0 O
0 0 0 0.8 k
0 J 0 j 1 w 4 M []0 d
0 XR
230.1606 478.3027 m
230.1396 478.5996 L
230.0757 478.8975 L
229.9688 479.1953 L
229.8413 479.4717 L
229.6714 479.7266 L
229.459 479.9609 L
229.2246 480.1729 L
228.9697 480.3438 L
228.6934 480.4707 L
228.3955 480.5771 L
228.0981 480.6406 L
227.8008 480.6621 L
227.4814 480.6406 L
227.1841 480.5771 L
226.8867 480.4707 L
226.6099 480.3438 L
226.355 480.1729 L
226.1211 479.9609 L
225.9082 479.7266 L
225.7383 479.4717 L
225.6108 479.1953 L
225.5049 478.8975 L
225.4409 478.5996 L
225.4409 478.3027 L
225.4409 477.9834 L
225.5049 477.6855 L
225.6108 477.3877 L
225.7383 477.1123 L
225.9082 476.8564 L
226.1211 476.623 L
226.355 476.4102 L
226.6099 476.2402 L
226.8867 476.1123 L
227.1841 476.0063 L
227.4814 475.9424 L
227.8008 475.9424 L
228.0981 475.9424 L
228.3955 476.0063 L
228.6934 476.1123 L
228.9697 476.2402 L
229.2246 476.4102 L
229.459 476.623 L
229.6714 476.8564 L
229.8413 477.1123 L
229.9688 477.3877 L
230.0757 477.6855 L
230.1396 477.9834 L
230.1606 478.3027 L
f
238.0405 481.9307 m
238.0195 482.2285 L
237.9556 482.5474 L
237.8496 482.8237 L
237.7217 483.1001 L
237.5513 483.3555 L
237.3389 483.5894 L
237.1055 483.8018 L
236.8506 483.9722 L
236.5732 484.0996 L
236.2764 484.2056 L
235.978 484.2695 L
235.6807 484.2905 L
235.3623 484.2695 L
235.064 484.2056 L
234.7666 484.0996 L
234.4902 483.9722 L
234.2349 483.8018 L
234.001 483.5894 L
233.7891 483.3555 L
233.6191 483.1001 L
233.4907 482.8237 L
233.3848 482.5474 L
233.3418 482.2285 L
233.3208 481.9307 L
233.3418 481.6123 L
233.3848 481.3145 L
233.4907 481.0166 L
233.6191 480.7402 L
233.7891 480.4854 L
234.001 480.2515 L
234.2349 480.0601 L
234.4902 479.8896 L
234.7666 479.7412 L
235.064 479.6563 L
235.3623 479.5923 L
235.6807 479.5713 L
235.978 479.5923 L
236.2764 479.6563 L
236.5732 479.7412 L
236.8506 479.8896 L
237.1055 480.0601 L
237.3389 480.2515 L
237.5513 480.4854 L
237.7217 480.7402 L
237.8496 481.0166 L
237.9556 481.3145 L
238.0195 481.6123 L
238.0405 481.9307 L
f
360.9512 568.6714 m
360.9512 568.9902 L
360.8867 569.2881 L
360.7813 569.5854 L
360.6533 569.8623 L
360.4834 570.1172 L
360.2695 570.3506 L
360.0371 570.5635 L
359.7813 570.7334 L
359.5049 570.8613 L
359.207 570.9673 L
358.9102 571.0313 L
358.5908 571.0313 L
358.293 571.0313 L
357.9961 570.9673 L
357.6973 570.8613 L
357.4219 570.7334 L
357.166 570.5635 L
356.9326 570.3506 L
356.7207 570.1172 L
356.5508 569.8623 L
356.4219 569.5854 L
356.3164 569.2881 L
356.252 568.9902 L
356.2305 568.6714 L
356.252 568.374 L
356.3164 568.0762 L
356.4219 567.7783 L
356.5508 567.502 L
356.7207 567.2471 L
356.9326 567.0127 L
357.166 566.8008 L
357.4219 566.6299 L
357.6973 566.5029 L
357.9961 566.3965 L
358.293 566.333 L
358.5908 566.3115 L
358.9102 566.333 L
359.207 566.3965 L
359.5049 566.5029 L
359.7813 566.6299 L
360.0371 566.8008 L
360.2695 567.0127 L
360.4834 567.2471 L
360.6533 567.502 L
360.7813 567.7783 L
360.8867 568.0762 L
360.9512 568.374 L
360.9512 568.6714 L
f
338.0176 553.7041 m
337.9971 554.002 L
337.9336 554.2998 L
337.8477 554.5972 L
337.6992 554.8735 L
337.5293 555.1289 L
337.3379 555.3628 L
337.1035 555.5752 L
336.8496 555.7451 L
336.5732 555.873 L
336.2754 555.979 L
335.9775 556.043 L
335.6582 556.064 L
335.3613 556.043 L
335.043 555.979 L
334.7656 555.873 L
334.4893 555.7451 L
334.2344 555.5752 L
334 555.3628 L
333.7871 555.1289 L
333.6172 554.8735 L
333.4902 554.5972 L
333.3848 554.2998 L
333.3203 554.002 L
333.2988 553.7041 L
333.3203 553.3853 L
333.3848 553.0879 L
333.4902 552.79 L
333.6172 552.5137 L
333.7871 552.2588 L
334 552.0244 L
334.2344 551.833 L
334.4893 551.6421 L
334.7656 551.5146 L
335.043 551.4082 L
335.3613 551.3652 L
335.6582 551.3442 L
335.9775 551.3652 L
336.2754 551.4082 L
336.5732 551.5146 L
336.8496 551.6421 L
337.1035 551.833 L
337.3379 552.0244 L
337.5293 552.2588 L
337.6992 552.5137 L
337.8477 552.79 L
337.9336 553.0879 L
337.9971 553.3853 L
338.0176 553.7041 L
f
258.5068 503.5308 m
258.4854 503.8496 L
258.4424 504.1475 L
258.3369 504.4453 L
258.209 504.7217 L
258.0176 504.9766 L
257.8271 505.2109 L
257.5928 505.4014 L
257.3379 505.5723 L
257.0615 505.7207 L
256.7637 505.8271 L
256.4658 505.8691 L
256.1465 505.8906 L
255.8496 505.8691 L
255.5518 505.8271 L
255.2539 505.7207 L
254.9775 505.5723 L
254.7227 505.4014 L
254.4883 505.2109 L
254.2764 504.9766 L
254.1064 504.7217 L
253.9785 504.4453 L
253.8721 504.1475 L
253.8086 503.8496 L
253.7871 503.5308 L
253.8086 503.2334 L
253.8721 502.9355 L
253.9785 502.6377 L
254.1064 502.3613 L
254.2764 502.1064 L
254.4883 501.8726 L
254.7227 501.6602 L
254.9775 501.4902 L
255.2539 501.3623 L
255.5518 501.2559 L
255.8496 501.1924 L
256.1465 501.1709 L
256.4658 501.1924 L
256.7637 501.2559 L
257.0615 501.3623 L
257.3379 501.4902 L
257.5928 501.6602 L
257.8271 501.8726 L
258.0176 502.1064 L
258.209 502.3613 L
258.3369 502.6377 L
258.4424 502.9355 L
258.4854 503.2334 L
258.5068 503.5308 L
f
307.9141 522.5796 m
307.8936 522.8984 L
307.8301 523.1963 L
307.7236 523.4941 L
307.5957 523.7705 L
307.4263 524.0254 L
307.2129 524.2598 L
306.9795 524.4502 L
306.7246 524.6421 L
306.4478 524.7695 L
306.1504 524.876 L
305.8525 524.918 L
305.5547 524.9395 L
305.2363 524.918 L
304.938 524.876 L
304.6406 524.7695 L
304.3643 524.6421 L
304.1089 524.4502 L
303.875 524.2598 L
303.6841 524.0254 L
303.4932 523.7705 L
303.3647 523.4941 L
303.2588 523.1963 L
303.2158 522.8984 L
303.1948 522.5796 L
303.2158 522.2822 L
303.2588 521.9844 L
303.3647 521.6865 L
303.4932 521.4102 L
303.6841 521.1553 L
303.875 520.9214 L
304.1089 520.709 L
304.3643 520.5391 L
304.6406 520.4111 L
304.938 520.3047 L
305.2363 520.2412 L
305.5547 520.2197 L
305.8525 520.2412 L
306.1504 520.3047 L
306.4478 520.4111 L
306.7246 520.5391 L
306.9795 520.709 L
307.2129 520.9214 L
307.4263 521.1553 L
307.5957 521.4102 L
307.7236 521.6865 L
307.8301 521.9844 L
307.8936 522.2822 L
307.9141 522.5796 L
f
252.0435 494.5732 m
252.0225 494.8711 L
251.9585 495.1689 L
251.8525 495.4663 L
251.7246 495.7427 L
251.5547 495.998 L
251.3418 496.2319 L
251.1084 496.4443 L
250.8535 496.6143 L
250.5762 496.7422 L
250.3003 496.8481 L
249.9814 496.9121 L
249.6836 496.9331 L
249.3652 496.9121 L
249.0674 496.8481 L
248.7695 496.7422 L
248.4932 496.6143 L
248.2383 496.4443 L
248.0039 496.2319 L
247.813 495.998 L
247.6431 495.7427 L
247.4941 495.4663 L
247.4087 495.1689 L
247.3447 494.8711 L
247.3237 494.5732 L
247.3447 494.2549 L
247.4087 493.957 L
247.4941 493.6592 L
247.6431 493.3828 L
247.813 493.1279 L
248.0039 492.8936 L
248.2383 492.7026 L
248.4932 492.5322 L
248.7695 492.3838 L
249.0674 492.2773 L
249.3652 492.2349 L
249.6836 492.2134 L
249.9814 492.2349 L
250.3003 492.2773 L
250.5762 492.3838 L
250.8535 492.5322 L
251.1084 492.7026 L
251.3418 492.8936 L
251.5547 493.1279 L
251.7246 493.3828 L
251.8525 493.6592 L
251.9585 493.957 L
252.0225 494.2549 L
252.0435 494.5732 L
f
221.5718 467.1348 m
221.5498 467.4531 L
221.4863 467.751 L
221.3799 468.0488 L
221.2524 468.3242 L
221.0825 468.5801 L
220.8701 468.8135 L
220.6357 469.0264 L
220.3809 469.1963 L
220.1045 469.3242 L
219.8281 469.4302 L
219.5093 469.4941 L
219.2119 469.4941 L
218.8926 469.4941 L
218.5952 469.4302 L
218.2969 469.3242 L
218.021 469.1963 L
217.7661 469.0264 L
217.5317 468.8135 L
217.3408 468.5801 L
217.1709 468.3242 L
217.022 468.0488 L
216.937 467.751 L
216.873 467.4531 L
216.8521 467.1348 L
216.873 466.8369 L
216.937 466.5391 L
217.022 466.2412 L
217.1709 465.9648 L
217.3408 465.71 L
217.5317 465.4756 L
217.7661 465.2637 L
218.021 465.0928 L
218.2969 464.9658 L
218.5952 464.8594 L
218.8926 464.7959 L
219.2119 464.7744 L
219.5093 464.7959 L
219.8281 464.8594 L
220.1045 464.9658 L
220.3809 465.0928 L
220.6357 465.2637 L
220.8701 465.4756 L
221.0825 465.71 L
221.2524 465.9648 L
221.3799 466.2412 L
221.4863 466.5391 L
221.5498 466.8369 L
221.5718 467.1348 L
f
281.978 512.3467 m
281.957 512.6655 L
281.8931 512.9634 L
281.8076 513.2607 L
281.6587 513.5371 L
281.4888 513.7925 L
281.2979 514.0264 L
281.0635 514.2178 L
280.8086 514.3877 L
280.5322 514.5366 L
280.2344 514.6216 L
279.9365 514.6855 L
279.6182 514.7065 L
279.3203 514.6855 L
279.0015 514.6216 L
278.7256 514.5366 L
278.4482 514.3877 L
278.1934 514.2178 L
277.96 514.0264 L
277.7471 513.7925 L
277.5771 513.5371 L
277.4492 513.2607 L
277.3433 512.9634 L
277.2793 512.6655 L
277.2583 512.3467 L
277.2793 512.0488 L
277.3433 511.7305 L
277.4492 511.4541 L
277.5771 511.1772 L
277.7471 510.9219 L
277.96 510.6885 L
278.1934 510.4756 L
278.4482 510.3057 L
278.7256 510.1782 L
279.0015 510.0718 L
279.3203 510.0078 L
279.6182 509.9868 L
279.9365 510.0078 L
280.2344 510.0718 L
280.5322 510.1782 L
280.8086 510.3057 L
281.0635 510.4756 L
281.2979 510.6885 L
281.4888 510.9219 L
281.6587 511.1772 L
281.8076 511.4541 L
281.8931 511.7305 L
281.957 512.0488 L
281.978 512.3467 L
f
197.3921 450.5796 m
197.3711 450.8984 L
197.3071 451.1963 L
197.2217 451.4937 L
197.0728 451.7705 L
196.9028 452.0254 L
196.7119 452.2588 L
196.478 452.4717 L
196.2227 452.6416 L
195.9463 452.7695 L
195.6484 452.876 L
195.3506 452.918 L
195.0322 452.9395 L
194.7344 452.918 L
194.4365 452.876 L
194.1396 452.7695 L
193.8623 452.6416 L
193.6074 452.4717 L
193.374 452.2588 L
193.1611 452.0254 L
192.9912 451.7705 L
192.8633 451.4937 L
192.7573 451.1963 L
192.6934 450.8984 L
192.6724 450.5796 L
192.6934 450.2822 L
192.7573 449.9844 L
192.8633 449.6865 L
192.9912 449.4102 L
193.1611 449.1553 L
193.374 448.9214 L
193.6074 448.709 L
193.8623 448.5391 L
194.1396 448.4111 L
194.4365 448.3047 L
194.7344 448.2412 L
195.0322 448.2197 L
195.3506 448.2412 L
195.6484 448.3047 L
195.9463 448.4111 L
196.2227 448.5391 L
196.478 448.709 L
196.7119 448.9214 L
196.9028 449.1553 L
197.0728 449.4102 L
197.2217 449.6865 L
197.3071 449.9844 L
197.3711 450.2822 L
197.3921 450.5796 L
f
305.7886 530.46 m
305.7671 530.7578 L
305.7251 531.0557 L
305.6187 531.353 L
305.4912 531.6289 L
305.3003 531.8848 L
305.1084 532.1182 L
304.8745 532.3311 L
304.6196 532.501 L
304.3428 532.6289 L
304.0454 532.7349 L
303.748 532.7988 L
303.4287 532.8198 L
303.1313 532.7988 L
302.833 532.7349 L
302.5361 532.6289 L
302.2598 532.501 L
302.0039 532.3311 L
301.7705 532.1182 L
301.5581 531.8848 L
301.3882 531.6289 L
301.2598 531.353 L
301.1538 531.0557 L
301.0898 530.7578 L
301.0688 530.46 L
301.0898 530.1406 L
301.1538 529.8438 L
301.2598 529.5459 L
301.3882 529.2695 L
301.5581 529.0146 L
301.7705 528.7803 L
302.0039 528.5674 L
302.2598 528.3975 L
302.5361 528.2705 L
302.833 528.1641 L
303.1313 528.1001 L
303.4287 528.1001 L
303.748 528.1001 L
304.0454 528.1641 L
304.3428 528.2705 L
304.6196 528.3975 L
304.8745 528.5674 L
305.1084 528.7803 L
305.3003 529.0146 L
305.4912 529.2695 L
305.6187 529.5459 L
305.7251 529.8438 L
305.7671 530.1406 L
305.7886 530.46 L
f
245.2124 488.6206 m
245.1914 488.9395 L
245.1274 489.2373 L
245.0215 489.5347 L
244.8931 489.8115 L
244.7231 490.0664 L
244.5107 490.2998 L
244.2773 490.4912 L
244.0215 490.6826 L
243.7451 490.8105 L
243.4692 490.917 L
243.1499 490.959 L
242.8525 490.9805 L
242.5332 490.959 L
242.2358 490.917 L
241.9385 490.8105 L
241.6616 490.6826 L
241.4067 490.4912 L
241.1729 490.2998 L
240.9819 490.0664 L
240.8115 489.8115 L
240.6626 489.5347 L
240.5776 489.2373 L
240.5137 488.9395 L
240.4927 488.6206 L
240.5137 488.3232 L
240.5776 488.0254 L
240.6626 487.7275 L
240.8115 487.4512 L
240.9819 487.1963 L
241.1729 486.9624 L
241.4067 486.75 L
241.6616 486.5801 L
241.9385 486.4521 L
242.2358 486.3457 L
242.5332 486.2822 L
242.8525 486.2607 L
243.1499 486.2822 L
243.4692 486.3457 L
243.7451 486.4521 L
244.0215 486.5801 L
244.2773 486.75 L
244.5107 486.9624 L
244.7231 487.1963 L
244.8931 487.4512 L
245.0215 487.7275 L
245.1274 488.0254 L
245.1914 488.3232 L
245.2124 488.6206 L
f
220.5229 463.8174 m
220.501 464.1152 L
220.4375 464.4341 L
220.3311 464.71 L
220.2036 464.9868 L
220.0337 465.2422 L
219.8213 465.4756 L
219.5869 465.6885 L
219.332 465.8584 L
219.0557 465.9863 L
218.7578 466.0923 L
218.4604 466.1563 L
218.1631 466.1772 L
217.8438 466.1563 L
217.5464 466.0923 L
217.248 465.9863 L
216.9722 465.8584 L
216.7173 465.6885 L
216.4829 465.4756 L
216.292 465.2422 L
216.1221 464.9868 L
215.9731 464.71 L
215.8882 464.4341 L
215.8242 464.1152 L
215.8032 463.8174 L
215.8242 463.4985 L
215.8882 463.2012 L
215.9731 462.9033 L
216.1221 462.627 L
216.292 462.3721 L
216.4829 462.1377 L
216.7173 461.9463 L
216.9722 461.7764 L
217.248 461.6279 L
217.5464 461.5425 L
217.8438 461.4785 L
218.1631 461.4575 L
218.4604 461.4785 L
218.7578 461.5425 L
219.0557 461.6279 L
219.332 461.7764 L
219.5869 461.9463 L
219.8213 462.1377 L
220.0337 462.3721 L
220.2036 462.627 L
220.3311 462.9033 L
220.4375 463.2012 L
220.501 463.4985 L
220.5229 463.8174 L
f
263.4106 509.1719 m
263.3896 509.4907 L
263.3467 509.7886 L
263.2407 510.0859 L
263.0918 510.3623 L
262.9214 510.6177 L
262.7305 510.8516 L
262.4966 511.043 L
262.2417 511.2129 L
261.9648 511.3618 L
261.6675 511.4468 L
261.3701 511.5107 L
261.0508 511.5317 L
260.7534 511.5107 L
260.4551 511.4468 L
260.1582 511.3618 L
259.8818 511.2129 L
259.626 511.043 L
259.3926 510.8516 L
259.1802 510.6177 L
259.0103 510.3623 L
258.8818 510.0859 L
258.7759 509.7886 L
258.7119 509.4907 L
258.6909 509.1719 L
258.7119 508.874 L
258.7759 508.5557 L
258.8818 508.2793 L
259.0103 508.0024 L
259.1802 507.7471 L
259.3926 507.5137 L
259.626 507.3008 L
259.8818 507.1309 L
260.1582 507.0034 L
260.4551 506.897 L
260.7534 506.833 L
261.0508 506.812 L
261.3701 506.833 L
261.6675 506.897 L
261.9648 507.0034 L
262.2417 507.1309 L
262.4966 507.3008 L
262.7305 507.5137 L
262.9214 507.7471 L
263.0918 508.0024 L
263.2407 508.2793 L
263.3467 508.5557 L
263.3896 508.874 L
263.4106 509.1719 L
f
174.6294 432.1543 m
174.6084 432.4521 L
174.5444 432.771 L
174.4595 433.0474 L
174.3105 433.3237 L
174.1406 433.5791 L
173.9492 433.813 L
173.7153 434.0254 L
173.4604 434.1953 L
173.1836 434.3232 L
172.8862 434.4292 L
172.5889 434.4932 L
172.2695 434.5142 L
171.9722 434.4932 L
171.6528 434.4292 L
171.377 434.3232 L
171.1006 434.1953 L
170.8447 434.0254 L
170.6113 433.813 L
170.3989 433.5791 L
170.229 433.3237 L
170.1006 433.0474 L
169.9946 432.771 L
169.9307 432.4521 L
169.9097 432.1543 L
169.9307 431.8354 L
169.9946 431.5381 L
170.1006 431.2402 L
170.229 430.9639 L
170.3989 430.709 L
170.6113 430.4746 L
170.8447 430.2837 L
171.1006 430.1133 L
171.377 429.9648 L
171.6528 429.8799 L
171.9722 429.8154 L
172.2695 429.7944 L
172.5889 429.8154 L
172.8862 429.8799 L
173.1836 429.9648 L
173.4604 430.1133 L
173.7153 430.2837 L
173.9492 430.4746 L
174.1406 430.709 L
174.3105 430.9639 L
174.4595 431.2402 L
174.5444 431.5381 L
174.6084 431.8354 L
174.6294 432.1543 L
f
376.9102 583.2979 m
376.8887 583.5957 L
376.8242 583.8936 L
376.7188 584.1909 L
376.5918 584.4673 L
376.4219 584.7227 L
376.208 584.9565 L
375.9746 585.1689 L
375.7188 585.3389 L
375.4434 585.4668 L
375.1445 585.5728 L
374.8477 585.6367 L
374.5498 585.6577 L
374.2305 585.6367 L
373.9336 585.5728 L
373.6357 585.4668 L
373.3594 585.3389 L
373.1035 585.1689 L
372.8711 584.9565 L
372.6797 584.7227 L
372.5098 584.4673 L
372.3613 584.1909 L
372.2539 583.8936 L
372.2109 583.5957 L
372.1895 583.2979 L
372.2109 582.979 L
372.2539 582.6816 L
372.3613 582.3838 L
372.5098 582.1074 L
372.6797 581.8525 L
372.8711 581.6182 L
373.1035 581.4268 L
373.3594 581.2358 L
373.6357 581.1084 L
373.9336 581.002 L
374.2305 580.959 L
374.5498 580.938 L
374.8477 580.959 L
375.1445 581.002 L
375.4434 581.1084 L
375.7188 581.2358 L
375.9746 581.4268 L
376.208 581.6182 L
376.4219 581.8525 L
376.5918 582.1074 L
376.7188 582.3838 L
376.8242 582.6816 L
376.8887 582.979 L
376.9102 583.2979 L
f
257.6284 494.3184 m
257.6284 494.6162 L
257.5645 494.9346 L
257.458 495.2109 L
257.3301 495.4878 L
257.1602 495.7427 L
256.9482 495.9766 L
256.7139 496.1895 L
256.459 496.3594 L
256.1826 496.4868 L
255.8848 496.5933 L
255.5869 496.6572 L
255.2686 496.6782 L
254.9707 496.6572 L
254.6729 496.5933 L
254.376 496.4868 L
254.0986 496.3594 L
253.8438 496.1895 L
253.6104 495.9766 L
253.3975 495.7427 L
253.2275 495.4878 L
253.0996 495.2109 L
252.9937 494.9346 L
252.9297 494.6162 L
252.9087 494.3184 L
252.9297 493.9995 L
252.9937 493.7017 L
253.0996 493.4043 L
253.2275 493.1279 L
253.3975 492.8726 L
253.6104 492.6387 L
253.8438 492.4473 L
254.0986 492.2773 L
254.376 492.1284 L
254.6729 492.0435 L
254.9707 491.9795 L
255.2686 491.9585 L
255.5869 491.9795 L
255.8848 492.0435 L
256.1826 492.1284 L
256.459 492.2773 L
256.7139 492.4473 L
256.9482 492.6387 L
257.1602 492.8726 L
257.3301 493.1279 L
257.458 493.4043 L
257.5645 493.7017 L
257.6284 493.9995 L
257.6284 494.3184 L
f
211.0552 458.6016 m
211.0342 458.9204 L
210.9697 459.2183 L
210.8848 459.5161 L
210.7358 459.792 L
210.5659 460.0474 L
210.375 460.2813 L
210.1406 460.4727 L
209.8857 460.6426 L
209.6094 460.7915 L
209.3115 460.8975 L
209.0137 460.9404 L
208.6953 460.9614 L
208.3975 460.9404 L
208.0786 460.8975 L
207.8018 460.7915 L
207.5254 460.6426 L
207.2705 460.4727 L
207.0361 460.2813 L
206.8242 460.0474 L
206.6543 459.792 L
206.5264 459.5161 L
206.4204 459.2183 L
206.3564 458.9204 L
206.3354 458.6016 L
206.3564 458.3042 L
206.4204 458.0063 L
206.5264 457.709 L
206.6543 457.4321 L
206.8242 457.1772 L
207.0361 456.9434 L
207.2705 456.731 L
207.5254 456.5605 L
207.8018 456.4331 L
208.0786 456.3271 L
208.3975 456.2627 L
208.6953 456.2417 L
209.0137 456.2627 L
209.3115 456.3271 L
209.6094 456.4331 L
209.8857 456.5605 L
210.1406 456.731 L
210.375 456.9434 L
210.5659 457.1772 L
210.7358 457.4321 L
210.8848 457.709 L
210.9697 458.0063 L
211.0342 458.3042 L
211.0552 458.6016 L
f
280.9292 515.8335 m
280.9082 516.1309 L
280.8442 516.4287 L
280.7588 516.7266 L
280.6099 517.0024 L
280.4399 517.2578 L
280.249 517.4917 L
280.0146 517.7041 L
279.7598 517.874 L
279.4834 518.002 L
279.1855 518.1084 L
278.8877 518.1719 L
278.5693 518.1934 L
278.2715 518.1719 L
277.9526 518.1084 L
277.6768 518.002 L
277.3994 517.874 L
277.1445 517.7041 L
276.9111 517.4917 L
276.6982 517.2578 L
276.5283 517.0024 L
276.4004 516.7266 L
276.2944 516.4287 L
276.2305 516.1309 L
276.2095 515.8335 L
276.2305 515.5146 L
276.2944 515.2168 L
276.4004 514.9189 L
276.5283 514.6426 L
276.6982 514.3877 L
276.9111 514.1533 L
277.1445 513.9629 L
277.3994 513.792 L
277.6768 513.6436 L
277.9526 513.5586 L
278.2715 513.4951 L
278.5693 513.4736 L
278.8877 513.4951 L
279.1855 513.5586 L
279.4834 513.6436 L
279.7598 513.792 L
280.0146 513.9629 L
280.249 514.1533 L
280.4399 514.3877 L
280.6099 514.6426 L
280.7588 514.9189 L
280.8442 515.2168 L
280.9082 515.5146 L
280.9292 515.8335 L
f
299.4956 531.8774 m
299.4746 532.1748 L
299.4106 532.4941 L
299.3257 532.7705 L
299.1768 533.0469 L
299.0068 533.3018 L
298.8154 533.5356 L
298.5815 533.748 L
298.3267 533.918 L
298.0498 534.0459 L
297.7524 534.1523 L
297.4551 534.2158 L
297.1357 534.2373 L
296.8384 534.2158 L
296.519 534.1523 L
296.2432 534.0459 L
295.9668 533.918 L
295.6899 533.748 L
295.4775 533.5356 L
295.2651 533.3018 L
295.0952 533.0469 L
294.9458 532.7705 L
294.8608 532.4941 L
294.7969 532.1748 L
294.7759 531.8774 L
294.7969 531.5586 L
294.8608 531.2607 L
294.9458 530.9634 L
295.0952 530.6865 L
295.2651 530.4316 L
295.4775 530.1982 L
295.6899 530.0068 L
295.9668 529.8369 L
296.2432 529.6875 L
296.519 529.6025 L
296.8384 529.5391 L
297.1357 529.5176 L
297.4551 529.5391 L
297.7524 529.6025 L
298.0498 529.6875 L
298.3267 529.8369 L
298.5815 530.0068 L
298.8154 530.1982 L
299.0068 530.4316 L
299.1768 530.6865 L
299.3257 530.9634 L
299.4106 531.2607 L
299.4746 531.5586 L
299.4956 531.8774 L
f
296.1792 516.0884 m
296.1582 516.3857 L
296.0942 516.6836 L
295.9883 516.9814 L
295.8604 517.2578 L
295.6899 517.5127 L
295.4775 517.7466 L
295.2441 517.959 L
294.9893 518.1289 L
294.7119 518.2568 L
294.415 518.3633 L
294.1167 518.4268 L
293.8193 518.4482 L
293.501 518.4268 L
293.2026 518.3633 L
292.9053 518.2568 L
292.6289 518.1289 L
292.3735 517.959 L
292.1396 517.7466 L
291.9487 517.5127 L
291.7788 517.2578 L
291.6294 516.9814 L
291.5234 516.6836 L
291.4805 516.3857 L
291.4595 516.0884 L
291.4805 515.7695 L
291.5234 515.4717 L
291.6294 515.1743 L
291.7788 514.8975 L
291.9487 514.6426 L
292.1396 514.4092 L
292.3735 514.2178 L
292.6289 514.0479 L
292.9053 513.8984 L
293.2026 513.8135 L
293.501 513.75 L
293.8193 513.7285 L
294.1167 513.75 L
294.415 513.8135 L
294.7119 513.8984 L
294.9893 514.0479 L
295.2441 514.2178 L
295.4775 514.4092 L
295.6899 514.6426 L
295.8604 514.8975 L
295.9883 515.1743 L
296.0942 515.4717 L
296.1582 515.7695 L
296.1792 516.0884 L
f
343.0918 550.1606 m
343.0713 550.458 L
343.0283 550.7559 L
342.9219 551.0537 L
342.7734 551.3301 L
342.6035 551.585 L
342.4121 551.8193 L
342.1777 552.0313 L
341.9238 552.2021 L
341.6465 552.3291 L
341.3496 552.4355 L
341.0518 552.499 L
340.7324 552.5205 L
340.4355 552.499 L
340.1377 552.4355 L
339.8398 552.3291 L
339.5635 552.2021 L
339.3076 552.0313 L
339.0742 551.8193 L
338.8613 551.585 L
338.6914 551.3301 L
338.5645 551.0537 L
338.457 550.7559 L
338.3936 550.458 L
338.373 550.1606 L
338.3936 549.8418 L
338.457 549.5439 L
338.5645 549.2466 L
338.6914 548.9707 L
338.8613 548.7148 L
339.0742 548.4814 L
339.3076 548.29 L
339.5635 548.0986 L
339.8398 547.9707 L
340.1377 547.8652 L
340.4355 547.8223 L
340.7324 547.8008 L
341.0518 547.8223 L
341.3496 547.8652 L
341.6465 547.9707 L
341.9238 548.0986 L
342.1777 548.29 L
342.4121 548.4814 L
342.6035 548.7148 L
342.7734 548.9707 L
342.9219 549.2466 L
343.0283 549.5439 L
343.0713 549.8418 L
343.0918 550.1606 L
f
349.9238 562.6333 m
349.9033 562.9307 L
349.8398 563.25 L
349.7539 563.5264 L
349.6055 563.8027 L
349.4355 564.0791 L
349.2441 564.2915 L
349.0098 564.5039 L
348.7549 564.6738 L
348.4785 564.8232 L
348.1816 564.9082 L
347.8828 564.9717 L
347.5645 564.9932 L
347.2666 564.9717 L
346.9688 564.9082 L
346.6719 564.8232 L
346.3945 564.6738 L
346.1396 564.5039 L
345.9063 564.2915 L
345.6934 564.0791 L
345.5234 563.8027 L
345.3955 563.5264 L
345.2891 563.25 L
345.2256 562.9307 L
345.2051 562.6333 L
345.2256 562.3359 L
345.2891 562.0166 L
345.3955 561.7402 L
345.5234 561.4424 L
345.6934 561.1875 L
345.9063 560.9751 L
346.1396 560.7627 L
346.3945 560.5928 L
346.6719 560.4434 L
346.9688 560.3584 L
347.2666 560.2949 L
347.5645 560.2734 L
347.8828 560.2949 L
348.1816 560.3584 L
348.4785 560.4434 L
348.7549 560.5928 L
349.0098 560.7627 L
349.2441 560.9751 L
349.4355 561.1875 L
349.6055 561.4424 L
349.7539 561.7402 L
349.8398 562.0166 L
349.9033 562.3359 L
349.9238 562.6333 L
f
326.2832 549.1689 m
326.2617 549.4878 L
326.1973 549.7852 L
326.1133 550.083 L
325.9648 550.3594 L
325.7949 550.6143 L
325.6016 550.8486 L
325.3691 551.04 L
325.1133 551.21 L
324.8379 551.3584 L
324.5391 551.4434 L
324.2422 551.5078 L
323.9229 551.5288 L
323.625 551.5078 L
323.3281 551.4434 L
323.0293 551.3584 L
322.7539 551.21 L
322.499 551.04 L
322.2646 550.8486 L
322.0527 550.6143 L
321.8828 550.3594 L
321.7549 550.083 L
321.6484 549.7852 L
321.584 549.4878 L
321.5625 549.1689 L
321.584 548.8711 L
321.6484 548.5522 L
321.7549 548.2759 L
321.8828 547.9995 L
322.0527 547.7441 L
322.2646 547.5103 L
322.499 547.2979 L
322.7539 547.1279 L
323.0293 547 L
323.3281 546.894 L
323.625 546.8301 L
323.9229 546.8091 L
324.2422 546.8301 L
324.5391 546.894 L
324.8379 547 L
325.1133 547.1279 L
325.3691 547.2979 L
325.6016 547.5103 L
325.7949 547.7441 L
325.9648 547.9995 L
326.1133 548.2759 L
326.1973 548.5522 L
326.2617 548.8711 L
326.2832 549.1689 L
f
254.1411 490.7466 m
254.1201 491.0654 L
254.0562 491.3633 L
253.9502 491.6606 L
253.8223 491.9375 L
253.6523 492.1924 L
253.4395 492.4258 L
253.2061 492.6172 L
252.9512 492.7871 L
252.6738 492.9365 L
252.3979 493.043 L
252.0791 493.085 L
251.7813 493.1064 L
251.4629 493.085 L
251.165 493.043 L
250.8672 492.9365 L
250.5908 492.7871 L
250.3359 492.6172 L
250.1016 492.4258 L
249.9106 492.1924 L
249.7407 491.9375 L
249.5918 491.6606 L
249.5063 491.3633 L
249.4424 491.0654 L
249.4214 490.7466 L
249.4424 490.4492 L
249.5063 490.1514 L
249.5918 489.8535 L
249.7407 489.5771 L
249.9106 489.3223 L
250.1016 489.0884 L
250.3359 488.876 L
250.5908 488.7061 L
250.8672 488.5781 L
251.165 488.4717 L
251.4629 488.4082 L
251.7813 488.3867 L
252.0791 488.4082 L
252.3979 488.4717 L
252.6738 488.5781 L
252.9512 488.7061 L
253.2061 488.876 L
253.4395 489.0884 L
253.6523 489.3223 L
253.8223 489.5771 L
253.9502 489.8535 L
254.0562 490.1514 L
254.1201 490.4492 L
254.1411 490.7466 L
f
309.8418 534.769 m
309.8213 535.0874 L
309.7578 535.3853 L
309.6514 535.6831 L
309.5234 535.959 L
309.3535 536.2144 L
309.1406 536.4482 L
308.9072 536.6606 L
308.6514 536.8311 L
308.375 536.9585 L
308.0781 537.0649 L
307.7793 537.1074 L
307.4824 537.1284 L
307.1641 537.1074 L
306.8657 537.0649 L
306.5684 536.9585 L
306.292 536.8311 L
306.0366 536.6606 L
305.8027 536.4482 L
305.5908 536.2144 L
305.4199 535.959 L
305.2925 535.6831 L
305.1865 535.3853 L
305.1226 535.0874 L
305.1226 534.769 L
305.1226 534.4712 L
305.1865 534.1733 L
305.2925 533.876 L
305.4199 533.5991 L
305.5908 533.3442 L
305.8027 533.1104 L
306.0366 532.8979 L
306.292 532.7275 L
306.5684 532.6001 L
306.8657 532.4941 L
307.1641 532.4302 L
307.4824 532.4092 L
307.7793 532.4302 L
308.0781 532.4941 L
308.375 532.6001 L
308.6514 532.7275 L
308.9072 532.8979 L
309.1406 533.1104 L
309.3535 533.3442 L
309.5234 533.5991 L
309.6514 533.876 L
309.7578 534.1733 L
309.8213 534.4712 L
309.8418 534.769 L
f
307.7168 529.2979 m
307.6953 529.5957 L
307.6523 529.8936 L
307.5469 530.1904 L
307.4189 530.4668 L
307.2271 530.7227 L
307.0361 530.9561 L
306.8022 531.1689 L
306.5474 531.3389 L
306.2705 531.4658 L
305.9731 531.5728 L
305.6748 531.6367 L
305.3564 531.6577 L
305.0591 531.6367 L
304.7607 531.5728 L
304.4639 531.4658 L
304.1875 531.3389 L
303.9316 531.1689 L
303.6982 530.9561 L
303.4858 530.7227 L
303.3154 530.4668 L
303.1875 530.1904 L
303.0815 529.8936 L
303.0176 529.5957 L
302.9966 529.2979 L
303.0176 528.9785 L
303.0815 528.6816 L
303.1875 528.3838 L
303.3154 528.1074 L
303.4858 527.8525 L
303.6982 527.6182 L
303.9316 527.4053 L
304.1875 527.2354 L
304.4639 527.1084 L
304.7607 527.002 L
305.0591 526.938 L
305.3564 526.938 L
305.6748 526.938 L
305.9731 527.002 L
306.2705 527.1084 L
306.5474 527.2354 L
306.8022 527.4053 L
307.0361 527.6182 L
307.2271 527.8525 L
307.4189 528.1074 L
307.5469 528.3838 L
307.6523 528.6816 L
307.6953 528.9785 L
307.7168 529.2979 L
f
470.4258 650.2808 m
470.4043 650.5781 L
470.3398 650.8975 L
470.2334 651.1738 L
470.1055 651.4502 L
469.9355 651.7051 L
469.7236 651.939 L
469.4902 652.1514 L
469.2344 652.3213 L
468.959 652.4492 L
468.6602 652.5557 L
468.3633 652.6191 L
468.0654 652.6406 L
467.7461 652.6191 L
467.4492 652.5557 L
467.1514 652.4492 L
466.875 652.3213 L
466.6191 652.1514 L
466.3867 651.939 L
466.1934 651.7051 L
466.0234 651.4502 L
465.875 651.1738 L
465.791 650.8975 L
465.7266 650.5781 L
465.7051 650.2808 L
465.7266 649.9619 L
465.791 649.6641 L
465.875 649.3667 L
466.0234 649.0898 L
466.1934 648.835 L
466.3867 648.6016 L
466.6191 648.4102 L
466.875 648.2402 L
467.1514 648.0908 L
467.4492 648.0059 L
467.7461 647.9424 L
468.0654 647.9209 L
468.3633 647.9424 L
468.6602 648.0059 L
468.959 648.0908 L
469.2344 648.2402 L
469.4902 648.4102 L
469.7236 648.6016 L
469.9355 648.835 L
470.1055 649.0898 L
470.2334 649.3667 L
470.3398 649.6641 L
470.4043 649.9619 L
470.4258 650.2808 L
f
499.1406 680.6968 m
499.1191 680.9941 L
499.0547 681.3135 L
498.9492 681.5898 L
498.8203 681.8657 L
498.6504 682.1211 L
498.4385 682.355 L
498.2051 682.5674 L
497.9492 682.7373 L
497.6738 682.8652 L
497.3965 682.9717 L
497.0781 683.0352 L
496.7803 683.0566 L
496.4609 683.0352 L
496.1641 682.9717 L
495.8662 682.8652 L
495.5898 682.7373 L
495.334 682.5674 L
495.1016 682.355 L
494.9082 682.1211 L
494.7383 681.8657 L
494.5898 681.5898 L
494.5059 681.3135 L
494.4414 680.9941 L
494.4199 680.6968 L
494.4414 680.3779 L
494.5059 680.0801 L
494.5898 679.7822 L
494.7383 679.5059 L
494.9082 679.251 L
495.1016 679.0166 L
495.334 678.8262 L
495.5898 678.6553 L
495.8662 678.5068 L
496.1641 678.4219 L
496.4609 678.3584 L
496.7803 678.3369 L
497.0781 678.3584 L
497.3965 678.4219 L
497.6738 678.5068 L
497.9492 678.6553 L
498.2051 678.8262 L
498.4385 679.0166 L
498.6504 679.251 L
498.8203 679.5059 L
498.9492 679.7822 L
499.0547 680.0801 L
499.1191 680.3779 L
499.1406 680.6968 L
f
492.6484 675.3105 m
492.6279 675.6084 L
492.585 675.9063 L
492.4785 676.2036 L
492.3301 676.4795 L
492.1602 676.7354 L
491.9688 676.9688 L
491.7344 677.1816 L
491.4795 677.3516 L
491.2031 677.4795 L
490.9063 677.5854 L
490.6074 677.6494 L
490.2891 677.6704 L
489.9912 677.6494 L
489.6934 677.5854 L
489.3965 677.4795 L
489.1191 677.3516 L
488.8643 677.1816 L
488.6309 676.9688 L
488.418 676.7354 L
488.248 676.4795 L
488.1201 676.2036 L
488.0137 675.9063 L
487.9502 675.6084 L
487.9297 675.3105 L
487.9502 674.9912 L
488.0137 674.6943 L
488.1201 674.3965 L
488.248 674.1201 L
488.418 673.8652 L
488.6309 673.6309 L
488.8643 673.418 L
489.1191 673.248 L
489.3965 673.1211 L
489.6934 673.0146 L
489.9912 672.9507 L
490.2891 672.9507 L
490.6074 672.9507 L
490.9063 673.0146 L
491.2031 673.1211 L
491.4795 673.248 L
491.7344 673.418 L
491.9688 673.6309 L
492.1602 673.8652 L
492.3301 674.1201 L
492.4785 674.3965 L
492.585 674.6943 L
492.6279 674.9912 L
492.6484 675.3105 L
f
443.8076 641.4365 m
443.7861 641.7554 L
443.7227 642.0532 L
443.6162 642.3511 L
443.4883 642.627 L
443.3184 642.8823 L
443.1064 643.1162 L
442.8721 643.3076 L
442.6172 643.4775 L
442.3408 643.6265 L
442.043 643.7324 L
441.7451 643.7754 L
441.4482 643.7964 L
441.1289 643.7754 L
440.8311 643.7324 L
440.5332 643.6265 L
440.2568 643.4775 L
440.002 643.3076 L
439.7676 643.1162 L
439.5771 642.8823 L
439.4072 642.627 L
439.2578 642.3511 L
439.1523 642.0532 L
439.1094 641.7554 L
439.0879 641.4365 L
439.1094 641.1387 L
439.1523 640.8413 L
439.2578 640.5439 L
439.4072 640.2671 L
439.5771 640.0122 L
439.7676 639.7783 L
440.002 639.5654 L
440.2568 639.3955 L
440.5332 639.2681 L
440.8311 639.1621 L
441.1289 639.0977 L
441.4482 639.0767 L
441.7451 639.0977 L
442.043 639.1621 L
442.3408 639.2681 L
442.6172 639.3955 L
442.8721 639.5654 L
443.1064 639.7783 L
443.3184 640.0122 L
443.4883 640.2671 L
443.6162 640.5439 L
443.7227 640.8413 L
443.7861 641.1387 L
443.8076 641.4365 L
f
461.8359 647.5879 m
461.8154 647.8857 L
461.751 648.1831 L
461.666 648.4805 L
461.5176 648.7573 L
461.3477 649.0122 L
461.1348 649.2461 L
460.9219 649.459 L
460.667 649.6289 L
460.3691 649.7563 L
460.0928 649.8628 L
459.7734 649.9268 L
459.4766 649.9478 L
459.1787 649.9268 L
458.8594 649.8628 L
458.583 649.7563 L
458.3066 649.6289 L
458.0313 649.459 L
457.8184 649.2461 L
457.6055 649.0122 L
457.4355 648.7573 L
457.2871 648.4805 L
457.2012 648.1831 L
457.1377 647.8857 L
457.1172 647.5879 L
457.1377 647.269 L
457.2012 646.9712 L
457.2871 646.6733 L
457.4355 646.3975 L
457.6055 646.1421 L
457.8184 645.9082 L
458.0313 645.7168 L
458.3066 645.5469 L
458.583 645.3979 L
458.8594 645.292 L
459.1787 645.249 L
459.4766 645.228 L
459.7734 645.249 L
460.0928 645.292 L
460.3691 645.3979 L
460.667 645.5469 L
460.9219 645.7168 L
461.1348 645.9082 L
461.3477 646.1421 L
461.5176 646.3975 L
461.666 646.6733 L
461.751 646.9712 L
461.8154 647.269 L
461.8359 647.5879 L
f
471.3037 670.1519 m
471.2832 670.4492 L
471.2188 670.7686 L
471.1123 671.0449 L
470.9844 671.3208 L
470.8145 671.5762 L
470.6025 671.8101 L
470.3682 672.0225 L
470.1133 672.1924 L
469.8369 672.3203 L
469.5391 672.4268 L
469.2412 672.4902 L
468.9443 672.5117 L
468.625 672.4902 L
468.3271 672.4268 L
468.0293 672.3203 L
467.7529 672.1924 L
467.498 672.0225 L
467.2637 671.8101 L
467.0732 671.5762 L
466.8818 671.3208 L
466.7539 671.0449 L
466.6484 670.7686 L
466.6055 670.4492 L
466.584 670.1519 L
466.6055 669.833 L
466.6484 669.5352 L
466.7539 669.2373 L
466.8818 668.9609 L
467.0732 668.7061 L
467.2637 668.4717 L
467.498 668.2813 L
467.7529 668.1104 L
468.0293 667.9619 L
468.3271 667.877 L
468.625 667.8135 L
468.9443 667.792 L
469.2412 667.8135 L
469.5391 667.877 L
469.8369 667.9619 L
470.1133 668.1104 L
470.3682 668.2813 L
470.6025 668.4717 L
470.8145 668.7061 L
470.9844 668.9609 L
471.1123 669.2373 L
471.2188 669.5352 L
471.2832 669.833 L
471.3037 670.1519 L
f
472.9766 655.4399 m
472.9551 655.7373 L
472.8906 656.0352 L
472.7852 656.333 L
472.6582 656.6094 L
472.4863 656.8643 L
472.2744 657.0981 L
472.0625 657.3105 L
471.7852 657.4805 L
471.5098 657.6084 L
471.2324 657.7148 L
470.9141 657.7783 L
470.6162 657.7998 L
470.2969 657.7783 L
470 657.7148 L
469.7021 657.6084 L
469.4258 657.4805 L
469.1699 657.3105 L
468.9375 657.0981 L
468.7461 656.8643 L
468.5742 656.6094 L
468.4258 656.333 L
468.3418 656.0352 L
468.2773 655.7373 L
468.2559 655.4399 L
468.2773 655.1211 L
468.3418 654.8232 L
468.4258 654.5254 L
468.5742 654.249 L
468.7461 653.9941 L
468.9375 653.7607 L
469.1699 653.5693 L
469.4258 653.3774 L
469.7021 653.25 L
470 653.1436 L
470.2969 653.1016 L
470.6162 653.0801 L
470.9141 653.1016 L
471.2324 653.1436 L
471.5098 653.25 L
471.7852 653.3774 L
472.0625 653.5693 L
472.2744 653.7607 L
472.4863 653.9941 L
472.6582 654.249 L
472.7852 654.5254 L
472.8906 654.8232 L
472.9551 655.1211 L
472.9766 655.4399 L
f
482.6699 666.4668 m
482.6494 666.7642 L
482.5859 667.083 L
482.5 667.3594 L
482.3516 667.6362 L
482.1816 667.9121 L
481.9902 668.125 L
481.7559 668.3374 L
481.502 668.5078 L
481.2246 668.6563 L
480.9277 668.7412 L
480.6299 668.8052 L
480.3105 668.8262 L
480.0137 668.8052 L
479.6934 668.7412 L
479.418 668.6563 L
479.1416 668.5078 L
478.8867 668.3374 L
478.6523 668.125 L
478.4395 667.9121 L
478.2695 667.6362 L
478.1426 667.3594 L
478.0352 667.083 L
477.9717 666.7642 L
477.9512 666.4668 L
477.9717 666.1689 L
478.0352 665.8501 L
478.1426 665.5737 L
478.2695 665.2764 L
478.4395 665.021 L
478.6523 664.8081 L
478.8867 664.5957 L
479.1416 664.4258 L
479.418 664.2769 L
479.6934 664.1919 L
480.0137 664.1279 L
480.3105 664.1069 L
480.6299 664.1279 L
480.9277 664.1919 L
481.2246 664.2769 L
481.502 664.4258 L
481.7559 664.5957 L
481.9902 664.8081 L
482.1816 665.021 L
482.3516 665.2764 L
482.5 665.5737 L
482.5859 665.8501 L
482.6494 666.1689 L
482.6699 666.4668 L
f
479.3535 667.6855 m
479.333 668.0044 L
479.2695 668.3018 L
479.1631 668.5996 L
479.0352 668.876 L
478.8652 669.1313 L
478.6523 669.3652 L
478.4189 669.5566 L
478.1641 669.7266 L
477.8867 669.875 L
477.6113 669.9604 L
477.291 670.0244 L
476.9941 670.0454 L
476.6758 670.0244 L
476.377 669.9604 L
476.0801 669.875 L
475.8037 669.7266 L
475.5488 669.5566 L
475.3145 669.3652 L
475.123 669.1313 L
474.9531 668.876 L
474.8047 668.5996 L
474.7188 668.3018 L
474.6553 668.0044 L
474.6348 667.6855 L
474.6553 667.3877 L
474.7188 667.0903 L
474.8047 666.793 L
474.9531 666.5161 L
475.123 666.2607 L
475.3145 666.0273 L
475.5488 665.8145 L
475.8037 665.6445 L
476.0801 665.5171 L
476.377 665.4106 L
476.6758 665.3467 L
476.9941 665.3257 L
477.291 665.3467 L
477.6113 665.4106 L
477.8867 665.5171 L
478.1641 665.6445 L
478.4189 665.8145 L
478.6523 666.0273 L
478.8652 666.2607 L
479.0352 666.5161 L
479.1631 666.793 L
479.2695 667.0903 L
479.333 667.3877 L
479.3535 667.6855 L
f
533.0996 715.3926 m
533.0781 715.7114 L
533.0352 716.0093 L
532.9297 716.3071 L
532.8018 716.583 L
532.6309 716.8384 L
532.418 717.0723 L
532.1855 717.2637 L
531.9297 717.4336 L
531.6533 717.5825 L
531.3555 717.6675 L
531.0586 717.7314 L
530.7393 717.7524 L
530.4414 717.7314 L
530.1445 717.6675 L
529.8457 717.5825 L
529.5703 717.4336 L
529.3145 717.2637 L
529.0811 717.0723 L
528.8691 716.8384 L
528.6973 716.583 L
528.5703 716.3071 L
528.4648 716.0093 L
528.4004 715.7114 L
528.3789 715.3926 L
528.4004 715.0947 L
528.4648 714.7764 L
528.5703 714.5 L
528.6973 714.2231 L
528.8691 713.9473 L
529.0811 713.7344 L
529.3145 713.5215 L
529.5703 713.3516 L
529.8457 713.2031 L
530.1445 713.1182 L
530.4414 713.0537 L
530.7393 713.0327 L
531.0586 713.0537 L
531.3555 713.1182 L
531.6533 713.2031 L
531.9297 713.3516 L
532.1855 713.5215 L
532.418 713.7344 L
532.6309 713.9473 L
532.8018 714.2231 L
532.9297 714.5 L
533.0352 714.7764 L
533.0781 715.0947 L
533.0996 715.3926 L
f
230.1606 478.3027 m
230.1396 478.5996 L
230.0757 478.8975 L
229.9688 479.1953 L
229.8413 479.4717 L
229.6714 479.7266 L
229.459 479.9609 L
229.2246 480.1729 L
228.9697 480.3438 L
228.6934 480.4707 L
228.3955 480.5771 L
228.0981 480.6406 L
227.8008 480.6621 L
227.4814 480.6406 L
227.1841 480.5771 L
226.8867 480.4707 L
226.6099 480.3438 L
226.355 480.1729 L
226.1211 479.9609 L
225.9082 479.7266 L
225.7383 479.4717 L
225.6108 479.1953 L
225.5049 478.8975 L
225.4409 478.5996 L
225.4409 478.3027 L
225.4409 477.9834 L
225.5049 477.6855 L
225.6108 477.3877 L
225.7383 477.1123 L
225.9082 476.8564 L
226.1211 476.623 L
226.355 476.4102 L
226.6099 476.2402 L
226.8867 476.1123 L
227.1841 476.0063 L
227.4814 475.9424 L
227.8008 475.9424 L
228.0981 475.9424 L
228.3955 476.0063 L
228.6934 476.1123 L
228.9697 476.2402 L
229.2246 476.4102 L
229.459 476.623 L
229.6714 476.8564 L
229.8413 477.1123 L
229.9688 477.3877 L
230.0757 477.6855 L
230.1396 477.9834 L
230.1606 478.3027 L
f
238.0405 481.9307 m
238.0195 482.2285 L
237.9556 482.5474 L
237.8496 482.8237 L
237.7217 483.1001 L
237.5513 483.3555 L
237.3389 483.5894 L
237.1055 483.8018 L
236.8506 483.9722 L
236.5732 484.0996 L
236.2764 484.2056 L
235.978 484.2695 L
235.6807 484.2905 L
235.3623 484.2695 L
235.064 484.2056 L
234.7666 484.0996 L
234.4902 483.9722 L
234.2349 483.8018 L
234.001 483.5894 L
233.7891 483.3555 L
233.6191 483.1001 L
233.4907 482.8237 L
233.3848 482.5474 L
233.3418 482.2285 L
233.3208 481.9307 L
233.3418 481.6123 L
233.3848 481.3145 L
233.4907 481.0166 L
233.6191 480.7402 L
233.7891 480.4854 L
234.001 480.2515 L
234.2349 480.0601 L
234.4902 479.8896 L
234.7666 479.7412 L
235.064 479.6563 L
235.3623 479.5923 L
235.6807 479.5713 L
235.978 479.5923 L
236.2764 479.6563 L
236.5732 479.7412 L
236.8506 479.8896 L
237.1055 480.0601 L
237.3389 480.2515 L
237.5513 480.4854 L
237.7217 480.7402 L
237.8496 481.0166 L
237.9556 481.3145 L
238.0195 481.6123 L
238.0405 481.9307 L
f
360.9512 568.6714 m
360.9512 568.9902 L
360.8867 569.2881 L
360.7813 569.5854 L
360.6533 569.8623 L
360.4834 570.1172 L
360.2695 570.3506 L
360.0371 570.5635 L
359.7813 570.7334 L
359.5049 570.8613 L
359.207 570.9673 L
358.9102 571.0313 L
358.5908 571.0313 L
358.293 571.0313 L
357.9961 570.9673 L
357.6973 570.8613 L
357.4219 570.7334 L
357.166 570.5635 L
356.9326 570.3506 L
356.7207 570.1172 L
356.5508 569.8623 L
356.4219 569.5854 L
356.3164 569.2881 L
356.252 568.9902 L
356.2305 568.6714 L
356.252 568.374 L
356.3164 568.0762 L
356.4219 567.7783 L
356.5508 567.502 L
356.7207 567.2471 L
356.9326 567.0127 L
357.166 566.8008 L
357.4219 566.6299 L
357.6973 566.5029 L
357.9961 566.3965 L
358.293 566.333 L
358.5908 566.3115 L
358.9102 566.333 L
359.207 566.3965 L
359.5049 566.5029 L
359.7813 566.6299 L
360.0371 566.8008 L
360.2695 567.0127 L
360.4834 567.2471 L
360.6533 567.502 L
360.7813 567.7783 L
360.8867 568.0762 L
360.9512 568.374 L
360.9512 568.6714 L
f
338.0176 553.7041 m
337.9971 554.002 L
337.9336 554.2998 L
337.8477 554.5972 L
337.6992 554.8735 L
337.5293 555.1289 L
337.3379 555.3628 L
337.1035 555.5752 L
336.8496 555.7451 L
336.5732 555.873 L
336.2754 555.979 L
335.9775 556.043 L
335.6582 556.064 L
335.3613 556.043 L
335.043 555.979 L
334.7656 555.873 L
334.4893 555.7451 L
334.2344 555.5752 L
334 555.3628 L
333.7871 555.1289 L
333.6172 554.8735 L
333.4902 554.5972 L
333.3848 554.2998 L
333.3203 554.002 L
333.2988 553.7041 L
333.3203 553.3853 L
333.3848 553.0879 L
333.4902 552.79 L
333.6172 552.5137 L
333.7871 552.2588 L
334 552.0244 L
334.2344 551.833 L
334.4893 551.6421 L
334.7656 551.5146 L
335.043 551.4082 L
335.3613 551.3652 L
335.6582 551.3442 L
335.9775 551.3652 L
336.2754 551.4082 L
336.5732 551.5146 L
336.8496 551.6421 L
337.1035 551.833 L
337.3379 552.0244 L
337.5293 552.2588 L
337.6992 552.5137 L
337.8477 552.79 L
337.9336 553.0879 L
337.9971 553.3853 L
338.0176 553.7041 L
f
258.5068 503.5308 m
258.4854 503.8496 L
258.4424 504.1475 L
258.3369 504.4453 L
258.209 504.7217 L
258.0176 504.9766 L
257.8271 505.2109 L
257.5928 505.4014 L
257.3379 505.5723 L
257.0615 505.7207 L
256.7637 505.8271 L
256.4658 505.8691 L
256.1465 505.8906 L
255.8496 505.8691 L
255.5518 505.8271 L
255.2539 505.7207 L
254.9775 505.5723 L
254.7227 505.4014 L
254.4883 505.2109 L
254.2764 504.9766 L
254.1064 504.7217 L
253.9785 504.4453 L
253.8721 504.1475 L
253.8086 503.8496 L
253.7871 503.5308 L
253.8086 503.2334 L
253.8721 502.9355 L
253.9785 502.6377 L
254.1064 502.3613 L
254.2764 502.1064 L
254.4883 501.8726 L
254.7227 501.6602 L
254.9775 501.4902 L
255.2539 501.3623 L
255.5518 501.2559 L
255.8496 501.1924 L
256.1465 501.1709 L
256.4658 501.1924 L
256.7637 501.2559 L
257.0615 501.3623 L
257.3379 501.4902 L
257.5928 501.6602 L
257.8271 501.8726 L
258.0176 502.1064 L
258.209 502.3613 L
258.3369 502.6377 L
258.4424 502.9355 L
258.4854 503.2334 L
258.5068 503.5308 L
f
307.9141 522.5796 m
307.8936 522.8984 L
307.8301 523.1963 L
307.7236 523.4941 L
307.5957 523.7705 L
307.4263 524.0254 L
307.2129 524.2598 L
306.9795 524.4502 L
306.7246 524.6421 L
306.4478 524.7695 L
306.1504 524.876 L
305.8525 524.918 L
305.5547 524.9395 L
305.2363 524.918 L
304.938 524.876 L
304.6406 524.7695 L
304.3643 524.6421 L
304.1089 524.4502 L
303.875 524.2598 L
303.6841 524.0254 L
303.4932 523.7705 L
303.3647 523.4941 L
303.2588 523.1963 L
303.2158 522.8984 L
303.1948 522.5796 L
303.2158 522.2822 L
303.2588 521.9844 L
303.3647 521.6865 L
303.4932 521.4102 L
303.6841 521.1553 L
303.875 520.9214 L
304.1089 520.709 L
304.3643 520.5391 L
304.6406 520.4111 L
304.938 520.3047 L
305.2363 520.2412 L
305.5547 520.2197 L
305.8525 520.2412 L
306.1504 520.3047 L
306.4478 520.4111 L
306.7246 520.5391 L
306.9795 520.709 L
307.2129 520.9214 L
307.4263 521.1553 L
307.5957 521.4102 L
307.7236 521.6865 L
307.8301 521.9844 L
307.8936 522.2822 L
307.9141 522.5796 L
f
252.0435 494.5732 m
252.0225 494.8711 L
251.9585 495.1689 L
251.8525 495.4663 L
251.7246 495.7427 L
251.5547 495.998 L
251.3418 496.2319 L
251.1084 496.4443 L
250.8535 496.6143 L
250.5762 496.7422 L
250.3003 496.8481 L
249.9814 496.9121 L
249.6836 496.9331 L
249.3652 496.9121 L
249.0674 496.8481 L
248.7695 496.7422 L
248.4932 496.6143 L
248.2383 496.4443 L
248.0039 496.2319 L
247.813 495.998 L
247.6431 495.7427 L
247.4941 495.4663 L
247.4087 495.1689 L
247.3447 494.8711 L
247.3237 494.5732 L
247.3447 494.2549 L
247.4087 493.957 L
247.4941 493.6592 L
247.6431 493.3828 L
247.813 493.1279 L
248.0039 492.8936 L
248.2383 492.7026 L
248.4932 492.5322 L
248.7695 492.3838 L
249.0674 492.2773 L
249.3652 492.2349 L
249.6836 492.2134 L
249.9814 492.2349 L
250.3003 492.2773 L
250.5762 492.3838 L
250.8535 492.5322 L
251.1084 492.7026 L
251.3418 492.8936 L
251.5547 493.1279 L
251.7246 493.3828 L
251.8525 493.6592 L
251.9585 493.957 L
252.0225 494.2549 L
252.0435 494.5732 L
f
221.5718 467.1348 m
221.5498 467.4531 L
221.4863 467.751 L
221.3799 468.0488 L
221.2524 468.3242 L
221.0825 468.5801 L
220.8701 468.8135 L
220.6357 469.0264 L
220.3809 469.1963 L
220.1045 469.3242 L
219.8281 469.4302 L
219.5093 469.4941 L
219.2119 469.4941 L
218.8926 469.4941 L
218.5952 469.4302 L
218.2969 469.3242 L
218.021 469.1963 L
217.7661 469.0264 L
217.5317 468.8135 L
217.3408 468.5801 L
217.1709 468.3242 L
217.022 468.0488 L
216.937 467.751 L
216.873 467.4531 L
216.8521 467.1348 L
216.873 466.8369 L
216.937 466.5391 L
217.022 466.2412 L
217.1709 465.9648 L
217.3408 465.71 L
217.5317 465.4756 L
217.7661 465.2637 L
218.021 465.0928 L
218.2969 464.9658 L
218.5952 464.8594 L
218.8926 464.7959 L
219.2119 464.7744 L
219.5093 464.7959 L
219.8281 464.8594 L
220.1045 464.9658 L
220.3809 465.0928 L
220.6357 465.2637 L
220.8701 465.4756 L
221.0825 465.71 L
221.2524 465.9648 L
221.3799 466.2412 L
221.4863 466.5391 L
221.5498 466.8369 L
221.5718 467.1348 L
f
281.978 512.3467 m
281.957 512.6655 L
281.8931 512.9634 L
281.8076 513.2607 L
281.6587 513.5371 L
281.4888 513.7925 L
281.2979 514.0264 L
281.0635 514.2178 L
280.8086 514.3877 L
280.5322 514.5366 L
280.2344 514.6216 L
279.9365 514.6855 L
279.6182 514.7065 L
279.3203 514.6855 L
279.0015 514.6216 L
278.7256 514.5366 L
278.4482 514.3877 L
278.1934 514.2178 L
277.96 514.0264 L
277.7471 513.7925 L
277.5771 513.5371 L
277.4492 513.2607 L
277.3433 512.9634 L
277.2793 512.6655 L
277.2583 512.3467 L
277.2793 512.0488 L
277.3433 511.7305 L
277.4492 511.4541 L
277.5771 511.1772 L
277.7471 510.9219 L
277.96 510.6885 L
278.1934 510.4756 L
278.4482 510.3057 L
278.7256 510.1782 L
279.0015 510.0718 L
279.3203 510.0078 L
279.6182 509.9868 L
279.9365 510.0078 L
280.2344 510.0718 L
280.5322 510.1782 L
280.8086 510.3057 L
281.0635 510.4756 L
281.2979 510.6885 L
281.4888 510.9219 L
281.6587 511.1772 L
281.8076 511.4541 L
281.8931 511.7305 L
281.957 512.0488 L
281.978 512.3467 L
f
197.3921 450.5796 m
197.3711 450.8984 L
197.3071 451.1963 L
197.2217 451.4937 L
197.0728 451.7705 L
196.9028 452.0254 L
196.7119 452.2588 L
196.478 452.4717 L
196.2227 452.6416 L
195.9463 452.7695 L
195.6484 452.876 L
195.3506 452.918 L
195.0322 452.9395 L
194.7344 452.918 L
194.4365 452.876 L
194.1396 452.7695 L
193.8623 452.6416 L
193.6074 452.4717 L
193.374 452.2588 L
193.1611 452.0254 L
192.9912 451.7705 L
192.8633 451.4937 L
192.7573 451.1963 L
192.6934 450.8984 L
192.6724 450.5796 L
192.6934 450.2822 L
192.7573 449.9844 L
192.8633 449.6865 L
192.9912 449.4102 L
193.1611 449.1553 L
193.374 448.9214 L
193.6074 448.709 L
193.8623 448.5391 L
194.1396 448.4111 L
194.4365 448.3047 L
194.7344 448.2412 L
195.0322 448.2197 L
195.3506 448.2412 L
195.6484 448.3047 L
195.9463 448.4111 L
196.2227 448.5391 L
196.478 448.709 L
196.7119 448.9214 L
196.9028 449.1553 L
197.0728 449.4102 L
197.2217 449.6865 L
197.3071 449.9844 L
197.3711 450.2822 L
197.3921 450.5796 L
f
305.7886 530.46 m
305.7671 530.7578 L
305.7251 531.0557 L
305.6187 531.353 L
305.4912 531.6289 L
305.3003 531.8848 L
305.1084 532.1182 L
304.8745 532.3311 L
304.6196 532.501 L
304.3428 532.6289 L
304.0454 532.7349 L
303.748 532.7988 L
303.4287 532.8198 L
303.1313 532.7988 L
302.833 532.7349 L
302.5361 532.6289 L
302.2598 532.501 L
302.0039 532.3311 L
301.7705 532.1182 L
301.5581 531.8848 L
301.3882 531.6289 L
301.2598 531.353 L
301.1538 531.0557 L
301.0898 530.7578 L
301.0688 530.46 L
301.0898 530.1406 L
301.1538 529.8438 L
301.2598 529.5459 L
301.3882 529.2695 L
301.5581 529.0146 L
301.7705 528.7803 L
302.0039 528.5674 L
302.2598 528.3975 L
302.5361 528.2705 L
302.833 528.1641 L
303.1313 528.1001 L
303.4287 528.1001 L
303.748 528.1001 L
304.0454 528.1641 L
304.3428 528.2705 L
304.6196 528.3975 L
304.8745 528.5674 L
305.1084 528.7803 L
305.3003 529.0146 L
305.4912 529.2695 L
305.6187 529.5459 L
305.7251 529.8438 L
305.7671 530.1406 L
305.7886 530.46 L
f
245.2124 488.6206 m
245.1914 488.9395 L
245.1274 489.2373 L
245.0215 489.5347 L
244.8931 489.8115 L
244.7231 490.0664 L
244.5107 490.2998 L
244.2773 490.4912 L
244.0215 490.6826 L
243.7451 490.8105 L
243.4692 490.917 L
243.1499 490.959 L
242.8525 490.9805 L
242.5332 490.959 L
242.2358 490.917 L
241.9385 490.8105 L
241.6616 490.6826 L
241.4067 490.4912 L
241.1729 490.2998 L
240.9819 490.0664 L
240.8115 489.8115 L
240.6626 489.5347 L
240.5776 489.2373 L
240.5137 488.9395 L
240.4927 488.6206 L
240.5137 488.3232 L
240.5776 488.0254 L
240.6626 487.7275 L
240.8115 487.4512 L
240.9819 487.1963 L
241.1729 486.9624 L
241.4067 486.75 L
241.6616 486.5801 L
241.9385 486.4521 L
242.2358 486.3457 L
242.5332 486.2822 L
242.8525 486.2607 L
243.1499 486.2822 L
243.4692 486.3457 L
243.7451 486.4521 L
244.0215 486.5801 L
244.2773 486.75 L
244.5107 486.9624 L
244.7231 487.1963 L
244.8931 487.4512 L
245.0215 487.7275 L
245.1274 488.0254 L
245.1914 488.3232 L
245.2124 488.6206 L
f
220.5229 463.8174 m
220.501 464.1152 L
220.4375 464.4341 L
220.3311 464.71 L
220.2036 464.9868 L
220.0337 465.2422 L
219.8213 465.4756 L
219.5869 465.6885 L
219.332 465.8584 L
219.0557 465.9863 L
218.7578 466.0923 L
218.4604 466.1563 L
218.1631 466.1772 L
217.8438 466.1563 L
217.5464 466.0923 L
217.248 465.9863 L
216.9722 465.8584 L
216.7173 465.6885 L
216.4829 465.4756 L
216.292 465.2422 L
216.1221 464.9868 L
215.9731 464.71 L
215.8882 464.4341 L
215.8242 464.1152 L
215.8032 463.8174 L
215.8242 463.4985 L
215.8882 463.2012 L
215.9731 462.9033 L
216.1221 462.627 L
216.292 462.3721 L
216.4829 462.1377 L
216.7173 461.9463 L
216.9722 461.7764 L
217.248 461.6279 L
217.5464 461.5425 L
217.8438 461.4785 L
218.1631 461.4575 L
218.4604 461.4785 L
218.7578 461.5425 L
219.0557 461.6279 L
219.332 461.7764 L
219.5869 461.9463 L
219.8213 462.1377 L
220.0337 462.3721 L
220.2036 462.627 L
220.3311 462.9033 L
220.4375 463.2012 L
220.501 463.4985 L
220.5229 463.8174 L
f
263.4106 509.1719 m
263.3896 509.4907 L
263.3467 509.7886 L
263.2407 510.0859 L
263.0918 510.3623 L
262.9214 510.6177 L
262.7305 510.8516 L
262.4966 511.043 L
262.2417 511.2129 L
261.9648 511.3618 L
261.6675 511.4468 L
261.3701 511.5107 L
261.0508 511.5317 L
260.7534 511.5107 L
260.4551 511.4468 L
260.1582 511.3618 L
259.8818 511.2129 L
259.626 511.043 L
259.3926 510.8516 L
259.1802 510.6177 L
259.0103 510.3623 L
258.8818 510.0859 L
258.7759 509.7886 L
258.7119 509.4907 L
258.6909 509.1719 L
258.7119 508.874 L
258.7759 508.5557 L
258.8818 508.2793 L
259.0103 508.0024 L
259.1802 507.7471 L
259.3926 507.5137 L
259.626 507.3008 L
259.8818 507.1309 L
260.1582 507.0034 L
260.4551 506.897 L
260.7534 506.833 L
261.0508 506.812 L
261.3701 506.833 L
261.6675 506.897 L
261.9648 507.0034 L
262.2417 507.1309 L
262.4966 507.3008 L
262.7305 507.5137 L
262.9214 507.7471 L
263.0918 508.0024 L
263.2407 508.2793 L
263.3467 508.5557 L
263.3896 508.874 L
263.4106 509.1719 L
f
174.6294 432.1543 m
174.6084 432.4521 L
174.5444 432.771 L
174.4595 433.0474 L
174.3105 433.3237 L
174.1406 433.5791 L
173.9492 433.813 L
173.7153 434.0254 L
173.4604 434.1953 L
173.1836 434.3232 L
172.8862 434.4292 L
172.5889 434.4932 L
172.2695 434.5142 L
171.9722 434.4932 L
171.6528 434.4292 L
171.377 434.3232 L
171.1006 434.1953 L
170.8447 434.0254 L
170.6113 433.813 L
170.3989 433.5791 L
170.229 433.3237 L
170.1006 433.0474 L
169.9946 432.771 L
169.9307 432.4521 L
169.9097 432.1543 L
169.9307 431.8354 L
169.9946 431.5381 L
170.1006 431.2402 L
170.229 430.9639 L
170.3989 430.709 L
170.6113 430.4746 L
170.8447 430.2837 L
171.1006 430.1133 L
171.377 429.9648 L
171.6528 429.8799 L
171.9722 429.8154 L
172.2695 429.7944 L
172.5889 429.8154 L
172.8862 429.8799 L
173.1836 429.9648 L
173.4604 430.1133 L
173.7153 430.2837 L
173.9492 430.4746 L
174.1406 430.709 L
174.3105 430.9639 L
174.4595 431.2402 L
174.5444 431.5381 L
174.6084 431.8354 L
174.6294 432.1543 L
f
376.9102 583.2979 m
376.8887 583.5957 L
376.8242 583.8936 L
376.7188 584.1909 L
376.5918 584.4673 L
376.4219 584.7227 L
376.208 584.9565 L
375.9746 585.1689 L
375.7188 585.3389 L
375.4434 585.4668 L
375.1445 585.5728 L
374.8477 585.6367 L
374.5498 585.6577 L
374.2305 585.6367 L
373.9336 585.5728 L
373.6357 585.4668 L
373.3594 585.3389 L
373.1035 585.1689 L
372.8711 584.9565 L
372.6797 584.7227 L
372.5098 584.4673 L
372.3613 584.1909 L
372.2539 583.8936 L
372.2109 583.5957 L
372.1895 583.2979 L
372.2109 582.979 L
372.2539 582.6816 L
372.3613 582.3838 L
372.5098 582.1074 L
372.6797 581.8525 L
372.8711 581.6182 L
373.1035 581.4268 L
373.3594 581.2358 L
373.6357 581.1084 L
373.9336 581.002 L
374.2305 580.959 L
374.5498 580.938 L
374.8477 580.959 L
375.1445 581.002 L
375.4434 581.1084 L
375.7188 581.2358 L
375.9746 581.4268 L
376.208 581.6182 L
376.4219 581.8525 L
376.5918 582.1074 L
376.7188 582.3838 L
376.8242 582.6816 L
376.8887 582.979 L
376.9102 583.2979 L
f
257.6284 494.3184 m
257.6284 494.6162 L
257.5645 494.9346 L
257.458 495.2109 L
257.3301 495.4878 L
257.1602 495.7427 L
256.9482 495.9766 L
256.7139 496.1895 L
256.459 496.3594 L
256.1826 496.4868 L
255.8848 496.5933 L
255.5869 496.6572 L
255.2686 496.6782 L
254.9707 496.6572 L
254.6729 496.5933 L
254.376 496.4868 L
254.0986 496.3594 L
253.8438 496.1895 L
253.6104 495.9766 L
253.3975 495.7427 L
253.2275 495.4878 L
253.0996 495.2109 L
252.9937 494.9346 L
252.9297 494.6162 L
252.9087 494.3184 L
252.9297 493.9995 L
252.9937 493.7017 L
253.0996 493.4043 L
253.2275 493.1279 L
253.3975 492.8726 L
253.6104 492.6387 L
253.8438 492.4473 L
254.0986 492.2773 L
254.376 492.1284 L
254.6729 492.0435 L
254.9707 491.9795 L
255.2686 491.9585 L
255.5869 491.9795 L
255.8848 492.0435 L
256.1826 492.1284 L
256.459 492.2773 L
256.7139 492.4473 L
256.9482 492.6387 L
257.1602 492.8726 L
257.3301 493.1279 L
257.458 493.4043 L
257.5645 493.7017 L
257.6284 493.9995 L
257.6284 494.3184 L
f
211.0552 458.6016 m
211.0342 458.9204 L
210.9697 459.2183 L
210.8848 459.5161 L
210.7358 459.792 L
210.5659 460.0474 L
210.375 460.2813 L
210.1406 460.4727 L
209.8857 460.6426 L
209.6094 460.7915 L
209.3115 460.8975 L
209.0137 460.9404 L
208.6953 460.9614 L
208.3975 460.9404 L
208.0786 460.8975 L
207.8018 460.7915 L
207.5254 460.6426 L
207.2705 460.4727 L
207.0361 460.2813 L
206.8242 460.0474 L
206.6543 459.792 L
206.5264 459.5161 L
206.4204 459.2183 L
206.3564 458.9204 L
206.3354 458.6016 L
206.3564 458.3042 L
206.4204 458.0063 L
206.5264 457.709 L
206.6543 457.4321 L
206.8242 457.1772 L
207.0361 456.9434 L
207.2705 456.731 L
207.5254 456.5605 L
207.8018 456.4331 L
208.0786 456.3271 L
208.3975 456.2627 L
208.6953 456.2417 L
209.0137 456.2627 L
209.3115 456.3271 L
209.6094 456.4331 L
209.8857 456.5605 L
210.1406 456.731 L
210.375 456.9434 L
210.5659 457.1772 L
210.7358 457.4321 L
210.8848 457.709 L
210.9697 458.0063 L
211.0342 458.3042 L
211.0552 458.6016 L
f
280.9292 515.8335 m
280.9082 516.1309 L
280.8442 516.4287 L
280.7588 516.7266 L
280.6099 517.0024 L
280.4399 517.2578 L
280.249 517.4917 L
280.0146 517.7041 L
279.7598 517.874 L
279.4834 518.002 L
279.1855 518.1084 L
278.8877 518.1719 L
278.5693 518.1934 L
278.2715 518.1719 L
277.9526 518.1084 L
277.6768 518.002 L
277.3994 517.874 L
277.1445 517.7041 L
276.9111 517.4917 L
276.6982 517.2578 L
276.5283 517.0024 L
276.4004 516.7266 L
276.2944 516.4287 L
276.2305 516.1309 L
276.2095 515.8335 L
276.2305 515.5146 L
276.2944 515.2168 L
276.4004 514.9189 L
276.5283 514.6426 L
276.6982 514.3877 L
276.9111 514.1533 L
277.1445 513.9629 L
277.3994 513.792 L
277.6768 513.6436 L
277.9526 513.5586 L
278.2715 513.4951 L
278.5693 513.4736 L
278.8877 513.4951 L
279.1855 513.5586 L
279.4834 513.6436 L
279.7598 513.792 L
280.0146 513.9629 L
280.249 514.1533 L
280.4399 514.3877 L
280.6099 514.6426 L
280.7588 514.9189 L
280.8442 515.2168 L
280.9082 515.5146 L
280.9292 515.8335 L
f
299.4956 531.8774 m
299.4746 532.1748 L
299.4106 532.4941 L
299.3257 532.7705 L
299.1768 533.0469 L
299.0068 533.3018 L
298.8154 533.5356 L
298.5815 533.748 L
298.3267 533.918 L
298.0498 534.0459 L
297.7524 534.1523 L
297.4551 534.2158 L
297.1357 534.2373 L
296.8384 534.2158 L
296.519 534.1523 L
296.2432 534.0459 L
295.9668 533.918 L
295.6899 533.748 L
295.4775 533.5356 L
295.2651 533.3018 L
295.0952 533.0469 L
294.9458 532.7705 L
294.8608 532.4941 L
294.7969 532.1748 L
294.7759 531.8774 L
294.7969 531.5586 L
294.8608 531.2607 L
294.9458 530.9634 L
295.0952 530.6865 L
295.2651 530.4316 L
295.4775 530.1982 L
295.6899 530.0068 L
295.9668 529.8369 L
296.2432 529.6875 L
296.519 529.6025 L
296.8384 529.5391 L
297.1357 529.5176 L
297.4551 529.5391 L
297.7524 529.6025 L
298.0498 529.6875 L
298.3267 529.8369 L
298.5815 530.0068 L
298.8154 530.1982 L
299.0068 530.4316 L
299.1768 530.6865 L
299.3257 530.9634 L
299.4106 531.2607 L
299.4746 531.5586 L
299.4956 531.8774 L
f
296.1792 516.0884 m
296.1582 516.3857 L
296.0942 516.6836 L
295.9883 516.9814 L
295.8604 517.2578 L
295.6899 517.5127 L
295.4775 517.7466 L
295.2441 517.959 L
294.9893 518.1289 L
294.7119 518.2568 L
294.415 518.3633 L
294.1167 518.4268 L
293.8193 518.4482 L
293.501 518.4268 L
293.2026 518.3633 L
292.9053 518.2568 L
292.6289 518.1289 L
292.3735 517.959 L
292.1396 517.7466 L
291.9487 517.5127 L
291.7788 517.2578 L
291.6294 516.9814 L
291.5234 516.6836 L
291.4805 516.3857 L
291.4595 516.0884 L
291.4805 515.7695 L
291.5234 515.4717 L
291.6294 515.1743 L
291.7788 514.8975 L
291.9487 514.6426 L
292.1396 514.4092 L
292.3735 514.2178 L
292.6289 514.0479 L
292.9053 513.8984 L
293.2026 513.8135 L
293.501 513.75 L
293.8193 513.7285 L
294.1167 513.75 L
294.415 513.8135 L
294.7119 513.8984 L
294.9893 514.0479 L
295.2441 514.2178 L
295.4775 514.4092 L
295.6899 514.6426 L
295.8604 514.8975 L
295.9883 515.1743 L
296.0942 515.4717 L
296.1582 515.7695 L
296.1792 516.0884 L
f
343.0918 550.1606 m
343.0713 550.458 L
343.0283 550.7559 L
342.9219 551.0537 L
342.7734 551.3301 L
342.6035 551.585 L
342.4121 551.8193 L
342.1777 552.0313 L
341.9238 552.2021 L
341.6465 552.3291 L
341.3496 552.4355 L
341.0518 552.499 L
340.7324 552.5205 L
340.4355 552.499 L
340.1377 552.4355 L
339.8398 552.3291 L
339.5635 552.2021 L
339.3076 552.0313 L
339.0742 551.8193 L
338.8613 551.585 L
338.6914 551.3301 L
338.5645 551.0537 L
338.457 550.7559 L
338.3936 550.458 L
338.373 550.1606 L
338.3936 549.8418 L
338.457 549.5439 L
338.5645 549.2466 L
338.6914 548.9707 L
338.8613 548.7148 L
339.0742 548.4814 L
339.3076 548.29 L
339.5635 548.0986 L
339.8398 547.9707 L
340.1377 547.8652 L
340.4355 547.8223 L
340.7324 547.8008 L
341.0518 547.8223 L
341.3496 547.8652 L
341.6465 547.9707 L
341.9238 548.0986 L
342.1777 548.29 L
342.4121 548.4814 L
342.6035 548.7148 L
342.7734 548.9707 L
342.9219 549.2466 L
343.0283 549.5439 L
343.0713 549.8418 L
343.0918 550.1606 L
f
349.9238 562.6333 m
349.9033 562.9307 L
349.8398 563.25 L
349.7539 563.5264 L
349.6055 563.8027 L
349.4355 564.0791 L
349.2441 564.2915 L
349.0098 564.5039 L
348.7549 564.6738 L
348.4785 564.8232 L
348.1816 564.9082 L
347.8828 564.9717 L
347.5645 564.9932 L
347.2666 564.9717 L
346.9688 564.9082 L
346.6719 564.8232 L
346.3945 564.6738 L
346.1396 564.5039 L
345.9063 564.2915 L
345.6934 564.0791 L
345.5234 563.8027 L
345.3955 563.5264 L
345.2891 563.25 L
345.2256 562.9307 L
345.2051 562.6333 L
345.2256 562.3359 L
345.2891 562.0166 L
345.3955 561.7402 L
345.5234 561.4424 L
345.6934 561.1875 L
345.9063 560.9751 L
346.1396 560.7627 L
346.3945 560.5928 L
346.6719 560.4434 L
346.9688 560.3584 L
347.2666 560.2949 L
347.5645 560.2734 L
347.8828 560.2949 L
348.1816 560.3584 L
348.4785 560.4434 L
348.7549 560.5928 L
349.0098 560.7627 L
349.2441 560.9751 L
349.4355 561.1875 L
349.6055 561.4424 L
349.7539 561.7402 L
349.8398 562.0166 L
349.9033 562.3359 L
349.9238 562.6333 L
f
326.2832 549.1689 m
326.2617 549.4878 L
326.1973 549.7852 L
326.1133 550.083 L
325.9648 550.3594 L
325.7949 550.6143 L
325.6016 550.8486 L
325.3691 551.04 L
325.1133 551.21 L
324.8379 551.3584 L
324.5391 551.4434 L
324.2422 551.5078 L
323.9229 551.5288 L
323.625 551.5078 L
323.3281 551.4434 L
323.0293 551.3584 L
322.7539 551.21 L
322.499 551.04 L
322.2646 550.8486 L
322.0527 550.6143 L
321.8828 550.3594 L
321.7549 550.083 L
321.6484 549.7852 L
321.584 549.4878 L
321.5625 549.1689 L
321.584 548.8711 L
321.6484 548.5522 L
321.7549 548.2759 L
321.8828 547.9995 L
322.0527 547.7441 L
322.2646 547.5103 L
322.499 547.2979 L
322.7539 547.1279 L
323.0293 547 L
323.3281 546.894 L
323.625 546.8301 L
323.9229 546.8091 L
324.2422 546.8301 L
324.5391 546.894 L
324.8379 547 L
325.1133 547.1279 L
325.3691 547.2979 L
325.6016 547.5103 L
325.7949 547.7441 L
325.9648 547.9995 L
326.1133 548.2759 L
326.1973 548.5522 L
326.2617 548.8711 L
326.2832 549.1689 L
f
254.1411 490.7466 m
254.1201 491.0654 L
254.0562 491.3633 L
253.9502 491.6606 L
253.8223 491.9375 L
253.6523 492.1924 L
253.4395 492.4258 L
253.2061 492.6172 L
252.9512 492.7871 L
252.6738 492.9365 L
252.3979 493.043 L
252.0791 493.085 L
251.7813 493.1064 L
251.4629 493.085 L
251.165 493.043 L
250.8672 492.9365 L
250.5908 492.7871 L
250.3359 492.6172 L
250.1016 492.4258 L
249.9106 492.1924 L
249.7407 491.9375 L
249.5918 491.6606 L
249.5063 491.3633 L
249.4424 491.0654 L
249.4214 490.7466 L
249.4424 490.4492 L
249.5063 490.1514 L
249.5918 489.8535 L
249.7407 489.5771 L
249.9106 489.3223 L
250.1016 489.0884 L
250.3359 488.876 L
250.5908 488.7061 L
250.8672 488.5781 L
251.165 488.4717 L
251.4629 488.4082 L
251.7813 488.3867 L
252.0791 488.4082 L
252.3979 488.4717 L
252.6738 488.5781 L
252.9512 488.7061 L
253.2061 488.876 L
253.4395 489.0884 L
253.6523 489.3223 L
253.8223 489.5771 L
253.9502 489.8535 L
254.0562 490.1514 L
254.1201 490.4492 L
254.1411 490.7466 L
f
309.8418 534.769 m
309.8213 535.0874 L
309.7578 535.3853 L
309.6514 535.6831 L
309.5234 535.959 L
309.3535 536.2144 L
309.1406 536.4482 L
308.9072 536.6606 L
308.6514 536.8311 L
308.375 536.9585 L
308.0781 537.0649 L
307.7793 537.1074 L
307.4824 537.1284 L
307.1641 537.1074 L
306.8657 537.0649 L
306.5684 536.9585 L
306.292 536.8311 L
306.0366 536.6606 L
305.8027 536.4482 L
305.5908 536.2144 L
305.4199 535.959 L
305.2925 535.6831 L
305.1865 535.3853 L
305.1226 535.0874 L
305.1226 534.769 L
305.1226 534.4712 L
305.1865 534.1733 L
305.2925 533.876 L
305.4199 533.5991 L
305.5908 533.3442 L
305.8027 533.1104 L
306.0366 532.8979 L
306.292 532.7275 L
306.5684 532.6001 L
306.8657 532.4941 L
307.1641 532.4302 L
307.4824 532.4092 L
307.7793 532.4302 L
308.0781 532.4941 L
308.375 532.6001 L
308.6514 532.7275 L
308.9072 532.8979 L
309.1406 533.1104 L
309.3535 533.3442 L
309.5234 533.5991 L
309.6514 533.876 L
309.7578 534.1733 L
309.8213 534.4712 L
309.8418 534.769 L
f
307.7168 529.2979 m
307.6953 529.5957 L
307.6523 529.8936 L
307.5469 530.1904 L
307.4189 530.4668 L
307.2271 530.7227 L
307.0361 530.9561 L
306.8022 531.1689 L
306.5474 531.3389 L
306.2705 531.4658 L
305.9731 531.5728 L
305.6748 531.6367 L
305.3564 531.6577 L
305.0591 531.6367 L
304.7607 531.5728 L
304.4639 531.4658 L
304.1875 531.3389 L
303.9316 531.1689 L
303.6982 530.9561 L
303.4858 530.7227 L
303.3154 530.4668 L
303.1875 530.1904 L
303.0815 529.8936 L
303.0176 529.5957 L
302.9966 529.2979 L
303.0176 528.9785 L
303.0815 528.6816 L
303.1875 528.3838 L
303.3154 528.1074 L
303.4858 527.8525 L
303.6982 527.6182 L
303.9316 527.4053 L
304.1875 527.2354 L
304.4639 527.1084 L
304.7607 527.002 L
305.0591 526.938 L
305.3564 526.938 L
305.6748 526.938 L
305.9731 527.002 L
306.2705 527.1084 L
306.5474 527.2354 L
306.8022 527.4053 L
307.0361 527.6182 L
307.2271 527.8525 L
307.4189 528.1074 L
307.5469 528.3838 L
307.6523 528.6816 L
307.6953 528.9785 L
307.7168 529.2979 L
f
470.4258 650.2808 m
470.4043 650.5781 L
470.3398 650.8975 L
470.2334 651.1738 L
470.1055 651.4502 L
469.9355 651.7051 L
469.7236 651.939 L
469.4902 652.1514 L
469.2344 652.3213 L
468.959 652.4492 L
468.6602 652.5557 L
468.3633 652.6191 L
468.0654 652.6406 L
467.7461 652.6191 L
467.4492 652.5557 L
467.1514 652.4492 L
466.875 652.3213 L
466.6191 652.1514 L
466.3867 651.939 L
466.1934 651.7051 L
466.0234 651.4502 L
465.875 651.1738 L
465.791 650.8975 L
465.7266 650.5781 L
465.7051 650.2808 L
465.7266 649.9619 L
465.791 649.6641 L
465.875 649.3667 L
466.0234 649.0898 L
466.1934 648.835 L
466.3867 648.6016 L
466.6191 648.4102 L
466.875 648.2402 L
467.1514 648.0908 L
467.4492 648.0059 L
467.7461 647.9424 L
468.0654 647.9209 L
468.3633 647.9424 L
468.6602 648.0059 L
468.959 648.0908 L
469.2344 648.2402 L
469.4902 648.4102 L
469.7236 648.6016 L
469.9355 648.835 L
470.1055 649.0898 L
470.2334 649.3667 L
470.3398 649.6641 L
470.4043 649.9619 L
470.4258 650.2808 L
f
499.1406 680.6968 m
499.1191 680.9941 L
499.0547 681.3135 L
498.9492 681.5898 L
498.8203 681.8657 L
498.6504 682.1211 L
498.4385 682.355 L
498.2051 682.5674 L
497.9492 682.7373 L
497.6738 682.8652 L
497.3965 682.9717 L
497.0781 683.0352 L
496.7803 683.0566 L
496.4609 683.0352 L
496.1641 682.9717 L
495.8662 682.8652 L
495.5898 682.7373 L
495.334 682.5674 L
495.1016 682.355 L
494.9082 682.1211 L
494.7383 681.8657 L
494.5898 681.5898 L
494.5059 681.3135 L
494.4414 680.9941 L
494.4199 680.6968 L
494.4414 680.3779 L
494.5059 680.0801 L
494.5898 679.7822 L
494.7383 679.5059 L
494.9082 679.251 L
495.1016 679.0166 L
495.334 678.8262 L
495.5898 678.6553 L
495.8662 678.5068 L
496.1641 678.4219 L
496.4609 678.3584 L
496.7803 678.3369 L
497.0781 678.3584 L
497.3965 678.4219 L
497.6738 678.5068 L
497.9492 678.6553 L
498.2051 678.8262 L
498.4385 679.0166 L
498.6504 679.251 L
498.8203 679.5059 L
498.9492 679.7822 L
499.0547 680.0801 L
499.1191 680.3779 L
499.1406 680.6968 L
f
492.6484 675.3105 m
492.6279 675.6084 L
492.585 675.9063 L
492.4785 676.2036 L
492.3301 676.4795 L
492.1602 676.7354 L
491.9688 676.9688 L
491.7344 677.1816 L
491.4795 677.3516 L
491.2031 677.4795 L
490.9063 677.5854 L
490.6074 677.6494 L
490.2891 677.6704 L
489.9912 677.6494 L
489.6934 677.5854 L
489.3965 677.4795 L
489.1191 677.3516 L
488.8643 677.1816 L
488.6309 676.9688 L
488.418 676.7354 L
488.248 676.4795 L
488.1201 676.2036 L
488.0137 675.9063 L
487.9502 675.6084 L
487.9297 675.3105 L
487.9502 674.9912 L
488.0137 674.6943 L
488.1201 674.3965 L
488.248 674.1201 L
488.418 673.8652 L
488.6309 673.6309 L
488.8643 673.418 L
489.1191 673.248 L
489.3965 673.1211 L
489.6934 673.0146 L
489.9912 672.9507 L
490.2891 672.9507 L
490.6074 672.9507 L
490.9063 673.0146 L
491.2031 673.1211 L
491.4795 673.248 L
491.7344 673.418 L
491.9688 673.6309 L
492.1602 673.8652 L
492.3301 674.1201 L
492.4785 674.3965 L
492.585 674.6943 L
492.6279 674.9912 L
492.6484 675.3105 L
f
443.8076 641.4365 m
443.7861 641.7554 L
443.7227 642.0532 L
443.6162 642.3511 L
443.4883 642.627 L
443.3184 642.8823 L
443.1064 643.1162 L
442.8721 643.3076 L
442.6172 643.4775 L
442.3408 643.6265 L
442.043 643.7324 L
441.7451 643.7754 L
441.4482 643.7964 L
441.1289 643.7754 L
440.8311 643.7324 L
440.5332 643.6265 L
440.2568 643.4775 L
440.002 643.3076 L
439.7676 643.1162 L
439.5771 642.8823 L
439.4072 642.627 L
439.2578 642.3511 L
439.1523 642.0532 L
439.1094 641.7554 L
439.0879 641.4365 L
439.1094 641.1387 L
439.1523 640.8413 L
439.2578 640.5439 L
439.4072 640.2671 L
439.5771 640.0122 L
439.7676 639.7783 L
440.002 639.5654 L
440.2568 639.3955 L
440.5332 639.2681 L
440.8311 639.1621 L
441.1289 639.0977 L
441.4482 639.0767 L
441.7451 639.0977 L
442.043 639.1621 L
442.3408 639.2681 L
442.6172 639.3955 L
442.8721 639.5654 L
443.1064 639.7783 L
443.3184 640.0122 L
443.4883 640.2671 L
443.6162 640.5439 L
443.7227 640.8413 L
443.7861 641.1387 L
443.8076 641.4365 L
f
461.8359 647.5879 m
461.8154 647.8857 L
461.751 648.1831 L
461.666 648.4805 L
461.5176 648.7573 L
461.3477 649.0122 L
461.1348 649.2461 L
460.9219 649.459 L
460.667 649.6289 L
460.3691 649.7563 L
460.0928 649.8628 L
459.7734 649.9268 L
459.4766 649.9478 L
459.1787 649.9268 L
458.8594 649.8628 L
458.583 649.7563 L
458.3066 649.6289 L
458.0313 649.459 L
457.8184 649.2461 L
457.6055 649.0122 L
457.4355 648.7573 L
457.2871 648.4805 L
457.2012 648.1831 L
457.1377 647.8857 L
457.1172 647.5879 L
457.1377 647.269 L
457.2012 646.9712 L
457.2871 646.6733 L
457.4355 646.3975 L
457.6055 646.1421 L
457.8184 645.9082 L
458.0313 645.7168 L
458.3066 645.5469 L
458.583 645.3979 L
458.8594 645.292 L
459.1787 645.249 L
459.4766 645.228 L
459.7734 645.249 L
460.0928 645.292 L
460.3691 645.3979 L
460.667 645.5469 L
460.9219 645.7168 L
461.1348 645.9082 L
461.3477 646.1421 L
461.5176 646.3975 L
461.666 646.6733 L
461.751 646.9712 L
461.8154 647.269 L
461.8359 647.5879 L
f
471.3037 670.1519 m
471.2832 670.4492 L
471.2188 670.7686 L
471.1123 671.0449 L
470.9844 671.3208 L
470.8145 671.5762 L
470.6025 671.8101 L
470.3682 672.0225 L
470.1133 672.1924 L
469.8369 672.3203 L
469.5391 672.4268 L
469.2412 672.4902 L
468.9443 672.5117 L
468.625 672.4902 L
468.3271 672.4268 L
468.0293 672.3203 L
467.7529 672.1924 L
467.498 672.0225 L
467.2637 671.8101 L
467.0732 671.5762 L
466.8818 671.3208 L
466.7539 671.0449 L
466.6484 670.7686 L
466.6055 670.4492 L
466.584 670.1519 L
466.6055 669.833 L
466.6484 669.5352 L
466.7539 669.2373 L
466.8818 668.9609 L
467.0732 668.7061 L
467.2637 668.4717 L
467.498 668.2813 L
467.7529 668.1104 L
468.0293 667.9619 L
468.3271 667.877 L
468.625 667.8135 L
468.9443 667.792 L
469.2412 667.8135 L
469.5391 667.877 L
469.8369 667.9619 L
470.1133 668.1104 L
470.3682 668.2813 L
470.6025 668.4717 L
470.8145 668.7061 L
470.9844 668.9609 L
471.1123 669.2373 L
471.2188 669.5352 L
471.2832 669.833 L
471.3037 670.1519 L
f
472.9766 655.4399 m
472.9551 655.7373 L
472.8906 656.0352 L
472.7852 656.333 L
472.6582 656.6094 L
472.4863 656.8643 L
472.2744 657.0981 L
472.0625 657.3105 L
471.7852 657.4805 L
471.5098 657.6084 L
471.2324 657.7148 L
470.9141 657.7783 L
470.6162 657.7998 L
470.2969 657.7783 L
470 657.7148 L
469.7021 657.6084 L
469.4258 657.4805 L
469.1699 657.3105 L
468.9375 657.0981 L
468.7461 656.8643 L
468.5742 656.6094 L
468.4258 656.333 L
468.3418 656.0352 L
468.2773 655.7373 L
468.2559 655.4399 L
468.2773 655.1211 L
468.3418 654.8232 L
468.4258 654.5254 L
468.5742 654.249 L
468.7461 653.9941 L
468.9375 653.7607 L
469.1699 653.5693 L
469.4258 653.3774 L
469.7021 653.25 L
470 653.1436 L
470.2969 653.1016 L
470.6162 653.0801 L
470.9141 653.1016 L
471.2324 653.1436 L
471.5098 653.25 L
471.7852 653.3774 L
472.0625 653.5693 L
472.2744 653.7607 L
472.4863 653.9941 L
472.6582 654.249 L
472.7852 654.5254 L
472.8906 654.8232 L
472.9551 655.1211 L
472.9766 655.4399 L
f
482.6699 666.4668 m
482.6494 666.7642 L
482.5859 667.083 L
482.5 667.3594 L
482.3516 667.6362 L
482.1816 667.9121 L
481.9902 668.125 L
481.7559 668.3374 L
481.502 668.5078 L
481.2246 668.6563 L
480.9277 668.7412 L
480.6299 668.8052 L
480.3105 668.8262 L
480.0137 668.8052 L
479.6934 668.7412 L
479.418 668.6563 L
479.1416 668.5078 L
478.8867 668.3374 L
478.6523 668.125 L
478.4395 667.9121 L
478.2695 667.6362 L
478.1426 667.3594 L
478.0352 667.083 L
477.9717 666.7642 L
477.9512 666.4668 L
477.9717 666.1689 L
478.0352 665.8501 L
478.1426 665.5737 L
478.2695 665.2764 L
478.4395 665.021 L
478.6523 664.8081 L
478.8867 664.5957 L
479.1416 664.4258 L
479.418 664.2769 L
479.6934 664.1919 L
480.0137 664.1279 L
480.3105 664.1069 L
480.6299 664.1279 L
480.9277 664.1919 L
481.2246 664.2769 L
481.502 664.4258 L
481.7559 664.5957 L
481.9902 664.8081 L
482.1816 665.021 L
482.3516 665.2764 L
482.5 665.5737 L
482.5859 665.8501 L
482.6494 666.1689 L
482.6699 666.4668 L
f
479.3535 667.6855 m
479.333 668.0044 L
479.2695 668.3018 L
479.1631 668.5996 L
479.0352 668.876 L
478.8652 669.1313 L
478.6523 669.3652 L
478.4189 669.5566 L
478.1641 669.7266 L
477.8867 669.875 L
477.6113 669.9604 L
477.291 670.0244 L
476.9941 670.0454 L
476.6758 670.0244 L
476.377 669.9604 L
476.0801 669.875 L
475.8037 669.7266 L
475.5488 669.5566 L
475.3145 669.3652 L
475.123 669.1313 L
474.9531 668.876 L
474.8047 668.5996 L
474.7188 668.3018 L
474.6553 668.0044 L
474.6348 667.6855 L
474.6553 667.3877 L
474.7188 667.0903 L
474.8047 666.793 L
474.9531 666.5161 L
475.123 666.2607 L
475.3145 666.0273 L
475.5488 665.8145 L
475.8037 665.6445 L
476.0801 665.5171 L
476.377 665.4106 L
476.6758 665.3467 L
476.9941 665.3257 L
477.291 665.3467 L
477.6113 665.4106 L
477.8867 665.5171 L
478.1641 665.6445 L
478.4189 665.8145 L
478.6523 666.0273 L
478.8652 666.2607 L
479.0352 666.5161 L
479.1631 666.793 L
479.2695 667.0903 L
479.333 667.3877 L
479.3535 667.6855 L
f
258.2607 684.8477 m
258.2407 685.1475 L
258.1812 685.4272 L
258.0811 685.7075 L
257.9609 685.9678 L
257.8008 686.207 L
257.6006 686.4277 L
257.3809 686.6074 L
257.1411 686.7676 L
256.8804 686.9072 L
256.6011 686.9873 L
256.3208 687.0479 L
256.0405 687.0674 L
255.7412 687.0479 L
255.4604 686.9873 L
255.1807 686.9072 L
254.9209 686.7676 L
254.6807 686.6074 L
254.4604 686.4277 L
254.2612 686.207 L
254.1001 685.9678 L
253.98 685.7075 L
253.8804 685.4272 L
253.8403 685.1475 L
253.8203 684.8477 L
253.8403 684.5669 L
253.8804 684.2671 L
253.98 684.0073 L
254.1001 683.7471 L
254.2612 683.5068 L
254.4604 683.2871 L
254.6807 683.0874 L
254.9209 682.9272 L
255.1807 682.8071 L
255.4604 682.707 L
255.7412 682.6475 L
256.0405 682.6274 L
256.3208 682.6475 L
256.6011 682.707 L
256.8804 682.8071 L
257.1411 682.9272 L
257.3809 683.0874 L
257.6006 683.2871 L
257.8008 683.5068 L
257.9609 683.7471 L
258.0811 684.0073 L
258.1812 684.2671 L
258.2407 684.5669 L
258.2607 684.8477 L
f
258.2607 684.8477 m
258.2407 685.1475 L
258.1812 685.4272 L
258.0811 685.7075 L
257.9609 685.9678 L
257.8008 686.207 L
257.6006 686.4277 L
257.3809 686.6074 L
257.1411 686.7676 L
256.8804 686.9072 L
256.6011 686.9873 L
256.3208 687.0479 L
256.0405 687.0674 L
255.7412 687.0479 L
255.4604 686.9873 L
255.1807 686.9072 L
254.9209 686.7676 L
254.6807 686.6074 L
254.4604 686.4277 L
254.2612 686.207 L
254.1001 685.9678 L
253.98 685.7075 L
253.8804 685.4272 L
253.8403 685.1475 L
253.8203 684.8477 L
253.8403 684.5669 L
253.8804 684.2671 L
253.98 684.0073 L
254.1001 683.7471 L
254.2612 683.5068 L
254.4604 683.2871 L
254.6807 683.0874 L
254.9209 682.9272 L
255.1807 682.8071 L
255.4604 682.707 L
255.7412 682.6475 L
256.0405 682.6274 L
256.3208 682.6475 L
256.6011 682.707 L
256.8804 682.8071 L
257.1411 682.9272 L
257.3809 683.0874 L
257.6006 683.2871 L
257.8008 683.5068 L
257.9609 683.7471 L
258.0811 684.0073 L
258.1812 684.2671 L
258.2407 684.5669 L
258.2607 684.8477 L
f
164.9375 577.9844 m
164.9175 578.2778 L
164.8589 578.5522 L
164.7612 578.8267 L
164.6436 579.0811 L
164.4863 579.3164 L
164.2905 579.5322 L
164.0752 579.7085 L
163.8403 579.8647 L
163.585 580.002 L
163.3115 580.0806 L
163.0366 580.1396 L
162.7622 580.1592 L
162.4688 580.1396 L
162.1943 580.0806 L
161.9199 580.002 L
161.6655 579.8647 L
161.4302 579.7085 L
161.2144 579.5322 L
161.019 579.3164 L
160.8618 579.0811 L
160.7441 578.8267 L
160.6465 578.5522 L
160.6069 578.2778 L
160.5874 577.9844 L
160.6069 577.7095 L
160.6465 577.416 L
160.7441 577.1611 L
160.8618 576.9063 L
161.019 576.6709 L
161.2144 576.4551 L
161.4302 576.2598 L
161.6655 576.103 L
161.9199 575.9854 L
162.1943 575.8877 L
162.4688 575.8291 L
162.7622 575.8096 L
163.0366 575.8291 L
163.3115 575.8877 L
163.585 575.9854 L
163.8403 576.103 L
164.0752 576.2598 L
164.2905 576.4551 L
164.4863 576.6709 L
164.6436 576.9063 L
164.7612 577.1611 L
164.8589 577.416 L
164.9175 577.7095 L
164.9375 577.9844 L
f
164.9375 577.9844 m
164.9175 578.2778 L
164.8589 578.5522 L
164.7612 578.8267 L
164.6436 579.0811 L
164.4863 579.3164 L
164.2905 579.5322 L
164.0752 579.7085 L
163.8403 579.8647 L
163.585 580.002 L
163.3115 580.0806 L
163.0366 580.1396 L
162.7622 580.1592 L
162.4688 580.1396 L
162.1943 580.0806 L
161.9199 580.002 L
161.6655 579.8647 L
161.4302 579.7085 L
161.2144 579.5322 L
161.019 579.3164 L
160.8618 579.0811 L
160.7441 578.8267 L
160.6465 578.5522 L
160.6069 578.2778 L
160.5874 577.9844 L
160.6069 577.7095 L
160.6465 577.416 L
160.7441 577.1611 L
160.8618 576.9063 L
161.019 576.6709 L
161.2144 576.4551 L
161.4302 576.2598 L
161.6655 576.103 L
161.9199 575.9854 L
162.1943 575.8877 L
162.4688 575.8291 L
162.7622 575.8096 L
163.0366 575.8291 L
163.3115 575.8877 L
163.585 575.9854 L
163.8403 576.103 L
164.0752 576.2598 L
164.2905 576.4551 L
164.4863 576.6709 L
164.6436 576.9063 L
164.7612 577.1611 L
164.8589 577.416 L
164.9175 577.7095 L
164.9375 577.9844 L
f
230.1606 275.0586 m
230.1396 275.3555 L
230.0757 275.6533 L
229.9688 275.9512 L
229.8413 276.2275 L
229.6714 276.4824 L
229.459 276.7168 L
229.2246 276.9297 L
228.9697 277.0996 L
228.6934 277.2266 L
228.3955 277.334 L
228.0981 277.3965 L
227.8008 277.418 L
227.4814 277.3965 L
227.1841 277.334 L
226.8867 277.2266 L
226.6099 277.0996 L
226.355 276.9297 L
226.1211 276.7168 L
225.9082 276.4824 L
225.7383 276.2275 L
225.6108 275.9512 L
225.5049 275.6533 L
225.4409 275.3555 L
225.4409 275.0586 L
225.4409 274.7393 L
225.5049 274.4414 L
225.6108 274.1445 L
225.7383 273.8672 L
225.9082 273.6133 L
226.1211 273.3789 L
226.355 273.166 L
226.6099 272.9961 L
226.8867 272.8691 L
227.1841 272.7617 L
227.4814 272.6992 L
227.8008 272.6992 L
228.0981 272.6992 L
228.3955 272.7617 L
228.6934 272.8691 L
228.9697 272.9961 L
229.2246 273.166 L
229.459 273.3789 L
229.6714 273.6133 L
229.8413 273.8672 L
229.9688 274.1445 L
230.0757 274.4414 L
230.1396 274.7393 L
230.1606 275.0586 L
f
238.0405 266.752 m
238.0195 267.0713 L
237.9556 267.3691 L
237.8496 267.666 L
237.7217 267.9434 L
237.5513 268.1973 L
237.3389 268.4316 L
237.1055 268.624 L
236.8506 268.7939 L
236.5732 268.9414 L
236.2764 269.0273 L
235.978 269.0918 L
235.6807 269.1113 L
235.3623 269.0918 L
235.064 269.0273 L
234.7666 268.9414 L
234.4902 268.7939 L
234.2349 268.624 L
234.001 268.4316 L
233.7891 268.1973 L
233.6191 267.9434 L
233.4907 267.666 L
233.3848 267.3691 L
233.3418 267.0713 L
233.3208 266.752 L
233.3418 266.4551 L
233.3848 266.1348 L
233.4907 265.8594 L
233.6191 265.583 L
233.7891 265.3066 L
234.001 265.0938 L
234.2349 264.8809 L
234.4902 264.7109 L
234.7666 264.584 L
235.064 264.4766 L
235.3623 264.4141 L
235.6807 264.3926 L
235.978 264.4141 L
236.2764 264.4766 L
236.5732 264.584 L
236.8506 264.7109 L
237.1055 264.8809 L
237.3389 265.0938 L
237.5513 265.3066 L
237.7217 265.583 L
237.8496 265.8594 L
237.9556 266.1348 L
238.0195 266.4551 L
238.0405 266.752 L
f
360.9512 263.8047 m
360.9512 264.124 L
360.8867 264.4219 L
360.7813 264.7188 L
360.6533 264.9961 L
360.4834 265.25 L
360.2695 265.4844 L
360.0371 265.6973 L
359.7813 265.8672 L
359.5049 265.9941 L
359.207 266.0996 L
358.9102 266.1641 L
358.5908 266.1641 L
358.293 266.1641 L
357.9961 266.0996 L
357.6973 265.9941 L
357.4219 265.8672 L
357.166 265.6973 L
356.9326 265.4844 L
356.7207 265.25 L
356.5508 264.9961 L
356.4219 264.7188 L
356.3164 264.4219 L
356.252 264.124 L
356.2305 263.8047 L
356.252 263.5078 L
356.3164 263.21 L
356.4219 262.9111 L
356.5508 262.6357 L
356.7207 262.3809 L
356.9326 262.1465 L
357.166 261.9336 L
357.4219 261.7637 L
357.6973 261.6367 L
357.9961 261.5293 L
358.293 261.4648 L
358.5908 261.4453 L
358.9102 261.4648 L
359.207 261.5293 L
359.5049 261.6367 L
359.7813 261.7637 L
360.0371 261.9336 L
360.2695 262.1465 L
360.4834 262.3809 L
360.6533 262.6357 L
360.7813 262.9111 L
360.8867 263.21 L
360.9512 263.5078 L
360.9512 263.8047 L
f
338.0176 270.5234 m
337.9971 270.8418 L
337.9336 271.1406 L
337.8477 271.4375 L
337.6992 271.7129 L
337.5293 271.9688 L
337.3379 272.2021 L
337.1035 272.3945 L
336.8496 272.5645 L
336.5732 272.7129 L
336.2754 272.7988 L
335.9775 272.8613 L
335.6582 272.8828 L
335.3613 272.8613 L
335.043 272.7988 L
334.7656 272.7129 L
334.4893 272.5645 L
334.2344 272.3945 L
334 272.2021 L
333.7871 271.9688 L
333.6172 271.7129 L
333.4902 271.4375 L
333.3848 271.1406 L
333.3203 270.8418 L
333.2988 270.5234 L
333.3203 270.2246 L
333.3848 269.9063 L
333.4902 269.6299 L
333.6172 269.3535 L
333.7871 269.0977 L
334 268.8652 L
334.2344 268.6514 L
334.4893 268.4814 L
334.7656 268.3535 L
335.043 268.248 L
335.3613 268.1836 L
335.6582 268.1641 L
335.9775 268.1836 L
336.2754 268.248 L
336.5732 268.3535 L
336.8496 268.4814 L
337.1035 268.6514 L
337.3379 268.8652 L
337.5293 269.0977 L
337.6992 269.3535 L
337.8477 269.6299 L
337.9336 269.9063 L
337.9971 270.2246 L
338.0176 270.5234 L
f
258.5068 297.9063 m
258.4854 298.2031 L
258.4424 298.5215 L
258.3369 298.7988 L
258.209 299.0752 L
258.0176 299.3301 L
257.8271 299.5645 L
257.5928 299.7773 L
257.3379 299.9473 L
257.0615 300.0742 L
256.7637 300.1816 L
256.4658 300.2441 L
256.1465 300.2656 L
255.8496 300.2441 L
255.5518 300.1816 L
255.2539 300.0742 L
254.9775 299.9473 L
254.7227 299.7773 L
254.4883 299.5645 L
254.2764 299.3301 L
254.1064 299.0752 L
253.9785 298.7988 L
253.8721 298.5215 L
253.8086 298.2031 L
253.7871 297.9063 L
253.8086 297.5869 L
253.8721 297.2891 L
253.9785 296.9922 L
254.1064 296.7148 L
254.2764 296.4609 L
254.4883 296.2266 L
254.7227 296.0342 L
254.9775 295.8643 L
255.2539 295.7168 L
255.5518 295.6309 L
255.8496 295.5664 L
256.1465 295.5469 L
256.4658 295.5664 L
256.7637 295.6309 L
257.0615 295.7168 L
257.3379 295.8643 L
257.5928 296.0342 L
257.8271 296.2266 L
258.0176 296.4609 L
258.209 296.7148 L
258.3369 296.9922 L
258.4424 297.2891 L
258.4854 297.5869 L
258.5068 297.9063 L
f
307.9141 229.7891 m
307.8936 230.0859 L
307.8301 230.4063 L
307.7236 230.6816 L
307.5957 230.958 L
307.4263 231.2129 L
307.2129 231.4473 L
306.9795 231.6602 L
306.7246 231.8301 L
306.4478 231.957 L
306.1504 232.0645 L
305.8525 232.127 L
305.5547 232.1484 L
305.2363 232.127 L
304.938 232.0645 L
304.6406 231.957 L
304.3643 231.8301 L
304.1089 231.6602 L
303.875 231.4473 L
303.6841 231.2129 L
303.4932 230.958 L
303.3647 230.6816 L
303.2588 230.4063 L
303.2158 230.0859 L
303.1948 229.7891 L
303.2158 229.4697 L
303.2588 229.1719 L
303.3647 228.875 L
303.4932 228.5977 L
303.6841 228.3438 L
303.875 228.1094 L
304.1089 227.918 L
304.3643 227.748 L
304.6406 227.5996 L
304.938 227.5137 L
305.2363 227.4492 L
305.5547 227.4297 L
305.8525 227.4492 L
306.1504 227.5137 L
306.4478 227.5996 L
306.7246 227.748 L
306.9795 227.918 L
307.2129 228.1094 L
307.4263 228.3438 L
307.5957 228.5977 L
307.7236 228.875 L
307.8301 229.1719 L
307.8936 229.4697 L
307.9141 229.7891 L
f
252.0435 278.7715 m
252.0225 279.0908 L
251.9585 279.3887 L
251.8525 279.6855 L
251.7246 279.9629 L
251.5547 280.2168 L
251.3418 280.4512 L
251.1084 280.6426 L
250.8535 280.8125 L
250.5762 280.9609 L
250.3003 281.0469 L
249.9814 281.1113 L
249.6836 281.1309 L
249.3652 281.1113 L
249.0674 281.0469 L
248.7695 280.9609 L
248.4932 280.8125 L
248.2383 280.6426 L
248.0039 280.4512 L
247.813 280.2168 L
247.6431 279.9629 L
247.4941 279.6855 L
247.4087 279.3887 L
247.3447 279.0908 L
247.3237 278.7715 L
247.3447 278.4746 L
247.4087 278.1543 L
247.4941 277.8779 L
247.6431 277.6025 L
247.813 277.3477 L
248.0039 277.1133 L
248.2383 276.9004 L
248.4932 276.7305 L
248.7695 276.6035 L
249.0674 276.4961 L
249.3652 276.4336 L
249.6836 276.4121 L
249.9814 276.4336 L
250.3003 276.4961 L
250.5762 276.6035 L
250.8535 276.7305 L
251.1084 276.9004 L
251.3418 277.1133 L
251.5547 277.3477 L
251.7246 277.6025 L
251.8525 277.8779 L
251.9585 278.1543 L
252.0225 278.4746 L
252.0435 278.7715 L
f
221.5718 252.9473 m
221.5498 253.2461 L
221.4863 253.5645 L
221.3799 253.8408 L
221.2524 254.1172 L
221.0825 254.373 L
220.8701 254.6055 L
220.6357 254.8184 L
220.3809 254.9893 L
220.1045 255.1172 L
219.8281 255.2227 L
219.5093 255.2871 L
219.2119 255.3066 L
218.8926 255.2871 L
218.5952 255.2227 L
218.2969 255.1172 L
218.021 254.9893 L
217.7661 254.8184 L
217.5317 254.6055 L
217.3408 254.373 L
217.1709 254.1172 L
217.022 253.8408 L
216.937 253.5645 L
216.873 253.2461 L
216.8521 252.9473 L
216.873 252.6289 L
216.937 252.3301 L
217.022 252.0332 L
217.1709 251.7578 L
217.3408 251.502 L
217.5317 251.2686 L
217.7661 251.0762 L
218.021 250.9063 L
218.2969 250.7578 L
218.5952 250.6719 L
218.8926 250.6094 L
219.2119 250.5879 L
219.5093 250.6094 L
219.8281 250.6719 L
220.1045 250.7578 L
220.3809 250.9063 L
220.6357 251.0762 L
220.8701 251.2686 L
221.0825 251.502 L
221.2524 251.7578 L
221.3799 252.0332 L
221.4863 252.3301 L
221.5498 252.6289 L
221.5718 252.9473 L
f
281.978 264.4844 m
281.957 264.7813 L
281.8931 265.1016 L
281.8076 265.3779 L
281.6587 265.6543 L
281.4888 265.9297 L
281.2979 266.1426 L
281.0635 266.3555 L
280.8086 266.5264 L
280.5322 266.6738 L
280.2344 266.7598 L
279.9365 266.8242 L
279.6182 266.8438 L
279.3203 266.8242 L
279.0015 266.7598 L
278.7256 266.6738 L
278.4482 266.5264 L
278.1934 266.3555 L
277.96 266.1426 L
277.7471 265.9297 L
277.5771 265.6543 L
277.4492 265.3779 L
277.3433 265.1016 L
277.2793 264.7813 L
277.2583 264.4844 L
277.2793 264.166 L
277.3433 263.8672 L
277.4492 263.5703 L
277.5771 263.2949 L
277.7471 263.0391 L
277.96 262.8057 L
278.1934 262.6133 L
278.4482 262.4434 L
278.7256 262.2949 L
279.0015 262.209 L
279.3203 262.1465 L
279.6182 262.125 L
279.9365 262.1465 L
280.2344 262.209 L
280.5322 262.2949 L
280.8086 262.4434 L
281.0635 262.6133 L
281.2979 262.8057 L
281.4888 263.0391 L
281.6587 263.2949 L
281.8076 263.5703 L
281.8931 263.8672 L
281.957 264.166 L
281.978 264.4844 L
f
197.3921 254.9316 m
197.3711 255.251 L
197.3071 255.5488 L
197.2217 255.8457 L
197.0728 256.123 L
196.9028 256.377 L
196.7119 256.6113 L
196.478 256.8027 L
196.2227 256.9736 L
195.9463 257.1211 L
195.6484 257.207 L
195.3506 257.2715 L
195.0322 257.291 L
194.7344 257.2715 L
194.4365 257.207 L
194.1396 257.1211 L
193.8623 256.9736 L
193.6074 256.8027 L
193.374 256.6113 L
193.1611 256.377 L
192.9912 256.123 L
192.8633 255.8457 L
192.7573 255.5488 L
192.6934 255.251 L
192.6724 254.9316 L
192.6934 254.6348 L
192.7573 254.3369 L
192.8633 254.0391 L
192.9912 253.7627 L
193.1611 253.5078 L
193.374 253.2734 L
193.6074 253.0605 L
193.8623 252.8906 L
194.1396 252.7637 L
194.4365 252.6563 L
194.7344 252.5938 L
195.0322 252.5723 L
195.3506 252.5938 L
195.6484 252.6563 L
195.9463 252.7637 L
196.2227 252.8906 L
196.478 253.0605 L
196.7119 253.2734 L
196.9028 253.5078 L
197.0728 253.7627 L
197.2217 254.0391 L
197.3071 254.3369 L
197.3711 254.6348 L
197.3921 254.9316 L
f
305.7886 270.2383 m
305.7671 270.5371 L
305.7251 270.8555 L
305.6187 271.1328 L
305.4912 271.4082 L
305.3003 271.6641 L
305.1084 271.8984 L
304.8745 272.1113 L
304.6196 272.2813 L
304.3428 272.4082 L
304.0454 272.5137 L
303.748 272.5781 L
303.4287 272.5977 L
303.1313 272.5781 L
302.833 272.5137 L
302.5361 272.4082 L
302.2598 272.2813 L
302.0039 272.1113 L
301.7705 271.8984 L
301.5581 271.6641 L
301.3882 271.4082 L
301.2598 271.1328 L
301.1538 270.8555 L
301.0898 270.5371 L
301.0688 270.2383 L
301.0898 269.9199 L
301.1538 269.623 L
301.2598 269.3242 L
301.3882 269.0488 L
301.5581 268.7949 L
301.7705 268.5605 L
302.0039 268.3672 L
302.2598 268.1973 L
302.5361 268.0508 L
302.833 267.9648 L
303.1313 267.9004 L
303.4287 267.8809 L
303.748 267.9004 L
304.0454 267.9648 L
304.3428 268.0508 L
304.6196 268.1973 L
304.8745 268.3672 L
305.1084 268.5605 L
305.3003 268.7949 L
305.4912 269.0488 L
305.6187 269.3242 L
305.7251 269.623 L
305.7671 269.9199 L
305.7886 270.2383 L
f
245.2124 273.8965 m
245.1914 274.2148 L
245.1274 274.5137 L
245.0215 274.8105 L
244.8931 275.0859 L
244.7231 275.3418 L
244.5107 275.5752 L
244.2773 275.7871 L
244.0215 275.959 L
243.7451 276.0859 L
243.4692 276.1914 L
243.1499 276.2559 L
242.8525 276.2559 L
242.5332 276.2559 L
242.2358 276.1914 L
241.9385 276.0859 L
241.6616 275.959 L
241.4067 275.7871 L
241.1729 275.5752 L
240.9819 275.3418 L
240.8115 275.0859 L
240.6626 274.8105 L
240.5776 274.5137 L
240.5137 274.2148 L
240.4927 273.8965 L
240.5137 273.5996 L
240.5776 273.3008 L
240.6626 273.0029 L
240.8115 272.7266 L
240.9819 272.4707 L
241.1729 272.2383 L
241.4067 272.0254 L
241.6616 271.8545 L
241.9385 271.7266 L
242.2358 271.6211 L
242.5332 271.5566 L
242.8525 271.5371 L
243.1499 271.5566 L
243.4692 271.6211 L
243.7451 271.7266 L
244.0215 271.8545 L
244.2773 272.0254 L
244.5107 272.2383 L
244.7231 272.4707 L
244.8931 272.7266 L
245.0215 273.0029 L
245.1274 273.3008 L
245.1914 273.5996 L
245.2124 273.8965 L
f
220.5229 241.6934 m
220.501 242.0127 L
220.4375 242.3105 L
220.3311 242.6094 L
220.2036 242.8848 L
220.0337 243.1387 L
219.8213 243.373 L
219.5869 243.5654 L
219.332 243.7559 L
219.0557 243.8828 L
218.7578 243.9902 L
218.4604 244.0332 L
218.1631 244.0527 L
217.8438 244.0332 L
217.5464 243.9902 L
217.248 243.8828 L
216.9722 243.7559 L
216.7173 243.5654 L
216.4829 243.373 L
216.292 243.1387 L
216.1221 242.8848 L
215.9731 242.6094 L
215.8882 242.3105 L
215.8242 242.0127 L
215.8032 241.6934 L
215.8242 241.3965 L
215.8882 241.0986 L
215.9731 240.8008 L
216.1221 240.5244 L
216.292 240.2695 L
216.4829 240.0352 L
216.7173 239.8223 L
216.9722 239.6523 L
217.248 239.5254 L
217.5464 239.4199 L
217.8438 239.3555 L
218.1631 239.334 L
218.4604 239.3555 L
218.7578 239.4199 L
219.0557 239.5254 L
219.332 239.6523 L
219.5869 239.8223 L
219.8213 240.0352 L
220.0337 240.2695 L
220.2036 240.5244 L
220.3311 240.8008 L
220.4375 241.0986 L
220.501 241.3965 L
220.5229 241.6934 L
f
263.4106 307.373 m
263.3896 307.6699 L
263.3467 307.9678 L
263.2407 308.2666 L
263.0918 308.542 L
262.9214 308.7969 L
262.7305 309.0313 L
262.4966 309.2441 L
262.2417 309.4141 L
261.9648 309.541 L
261.6675 309.6484 L
261.3701 309.7129 L
261.0508 309.7324 L
260.7534 309.7129 L
260.4551 309.6484 L
260.1582 309.541 L
259.8818 309.4141 L
259.626 309.2441 L
259.3926 309.0313 L
259.1802 308.7969 L
259.0103 308.542 L
258.8818 308.2666 L
258.7759 307.9678 L
258.7119 307.6699 L
258.6909 307.373 L
258.7119 307.0537 L
258.7759 306.7559 L
258.8818 306.459 L
259.0103 306.1816 L
259.1802 305.9277 L
259.3926 305.6934 L
259.626 305.502 L
259.8818 305.332 L
260.1582 305.1836 L
260.4551 305.0977 L
260.7534 305.0352 L
261.0508 305.0137 L
261.3701 305.0352 L
261.6675 305.0977 L
261.9648 305.1836 L
262.2417 305.332 L
262.4966 305.502 L
262.7305 305.6934 L
262.9214 305.9277 L
263.0918 306.1816 L
263.2407 306.459 L
263.3467 306.7559 L
263.3896 307.0537 L
263.4106 307.373 L
f
174.6294 244.4727 m
174.6084 244.792 L
174.5444 245.0898 L
174.4595 245.3867 L
174.3105 245.6641 L
174.1406 245.918 L
173.9492 246.1514 L
173.7153 246.3438 L
173.4604 246.5352 L
173.1836 246.6621 L
172.8862 246.7676 L
172.5889 246.8105 L
172.2695 246.832 L
171.9722 246.8105 L
171.6528 246.7676 L
171.377 246.6621 L
171.1006 246.5352 L
170.8447 246.3438 L
170.6113 246.1514 L
170.3989 245.918 L
170.229 245.6641 L
170.1006 245.3867 L
169.9946 245.0898 L
169.9307 244.792 L
169.9097 244.4727 L
169.9307 244.1758 L
169.9946 243.877 L
170.1006 243.5791 L
170.229 243.3037 L
170.3989 243.0469 L
170.6113 242.8145 L
170.8447 242.6016 L
171.1006 242.4316 L
171.377 242.3027 L
171.6528 242.1973 L
171.9722 242.1328 L
172.2695 242.1133 L
172.5889 242.1328 L
172.8862 242.1973 L
173.1836 242.3027 L
173.4604 242.4316 L
173.7153 242.6016 L
173.9492 242.8145 L
174.1406 243.0469 L
174.3105 243.3037 L
174.4595 243.5791 L
174.5444 243.877 L
174.6084 244.1758 L
174.6294 244.4727 L
f
376.9102 276.3906 m
376.8887 276.6875 L
376.8242 277.0078 L
376.7188 277.2832 L
376.5918 277.5596 L
376.4219 277.8145 L
376.208 278.0488 L
375.9746 278.2617 L
375.7188 278.4316 L
375.4434 278.5586 L
375.1445 278.666 L
374.8477 278.7285 L
374.5498 278.75 L
374.2305 278.7285 L
373.9336 278.666 L
373.6357 278.5586 L
373.3594 278.4316 L
373.1035 278.2617 L
372.8711 278.0488 L
372.6797 277.8145 L
372.5098 277.5596 L
372.3613 277.2832 L
372.2539 277.0078 L
372.2109 276.6875 L
372.1895 276.3906 L
372.2109 276.0713 L
372.2539 275.7734 L
372.3613 275.4766 L
372.5098 275.1992 L
372.6797 274.9453 L
372.8711 274.7109 L
373.1035 274.5195 L
373.3594 274.3496 L
373.6357 274.2012 L
373.9336 274.1152 L
374.2305 274.0508 L
374.5498 274.0313 L
374.8477 274.0508 L
375.1445 274.1152 L
375.4434 274.2012 L
375.7188 274.3496 L
375.9746 274.5195 L
376.208 274.7109 L
376.4219 274.9453 L
376.5918 275.1992 L
376.7188 275.4766 L
376.8242 275.7734 L
376.8887 276.0713 L
376.9102 276.3906 L
f
257.6284 260.6016 m
257.6284 260.9209 L
257.5645 261.2188 L
257.458 261.5156 L
257.3301 261.793 L
257.1602 262.0469 L
256.9482 262.2803 L
256.7139 262.4727 L
256.459 262.6426 L
256.1826 262.791 L
255.8848 262.877 L
255.5869 262.9395 L
255.2686 262.9609 L
254.9707 262.9395 L
254.6729 262.877 L
254.376 262.791 L
254.0986 262.6426 L
253.8438 262.4727 L
253.6104 262.2803 L
253.3975 262.0469 L
253.2275 261.793 L
253.0996 261.5156 L
252.9937 261.2188 L
252.9297 260.9209 L
252.9087 260.6016 L
252.9297 260.3047 L
252.9937 259.9844 L
253.0996 259.708 L
253.2275 259.4326 L
253.3975 259.1563 L
253.6104 258.9434 L
253.8438 258.7305 L
254.0986 258.5605 L
254.376 258.4121 L
254.6729 258.3262 L
254.9707 258.2617 L
255.2686 258.2422 L
255.5869 258.2617 L
255.8848 258.3262 L
256.1826 258.4121 L
256.459 258.5605 L
256.7139 258.7305 L
256.9482 258.9434 L
257.1602 259.1563 L
257.3301 259.4326 L
257.458 259.708 L
257.5645 259.9844 L
257.6284 260.3047 L
257.6284 260.6016 L
f
211.0552 248.0156 m
211.0342 248.3125 L
210.9697 248.6328 L
210.8848 248.9092 L
210.7358 249.1846 L
210.5659 249.4395 L
210.375 249.6738 L
210.1406 249.8867 L
209.8857 250.0566 L
209.6094 250.1836 L
209.3115 250.291 L
209.0137 250.3535 L
208.6953 250.375 L
208.3975 250.3535 L
208.0786 250.291 L
207.8018 250.1836 L
207.5254 250.0566 L
207.2705 249.8867 L
207.0361 249.6738 L
206.8242 249.4395 L
206.6543 249.1846 L
206.5264 248.9092 L
206.4204 248.6328 L
206.3564 248.3125 L
206.3354 248.0156 L
206.3564 247.6963 L
206.4204 247.3984 L
206.5264 247.1016 L
206.6543 246.8242 L
206.8242 246.5703 L
207.0361 246.3359 L
207.2705 246.1445 L
207.5254 245.9746 L
207.8018 245.8262 L
208.0786 245.7402 L
208.3975 245.6777 L
208.6953 245.6563 L
209.0137 245.6777 L
209.3115 245.7402 L
209.6094 245.8262 L
209.8857 245.9746 L
210.1406 246.1445 L
210.375 246.3359 L
210.5659 246.5703 L
210.7358 246.8242 L
210.8848 247.1016 L
210.9697 247.3984 L
211.0342 247.6963 L
211.0552 248.0156 L
f
280.9292 282.7402 m
280.9082 283.0596 L
280.8442 283.3574 L
280.7588 283.6543 L
280.6099 283.9316 L
280.4399 284.1855 L
280.249 284.4189 L
280.0146 284.6328 L
279.7598 284.8027 L
279.4834 284.9297 L
279.1855 285.0352 L
278.8877 285.0781 L
278.5693 285.0996 L
278.2715 285.0781 L
277.9526 285.0352 L
277.6768 284.9297 L
277.3994 284.8027 L
277.1445 284.6328 L
276.9111 284.4189 L
276.6982 284.1855 L
276.5283 283.9316 L
276.4004 283.6543 L
276.2944 283.3574 L
276.2305 283.0596 L
276.2095 282.7402 L
276.2305 282.4434 L
276.2944 282.1455 L
276.4004 281.8467 L
276.5283 281.5713 L
276.6982 281.3164 L
276.9111 281.082 L
277.1445 280.8691 L
277.3994 280.6992 L
277.6768 280.5723 L
277.9526 280.4648 L
278.2715 280.4004 L
278.5693 280.3809 L
278.8877 280.4004 L
279.1855 280.4648 L
279.4834 280.5723 L
279.7598 280.6992 L
280.0146 280.8691 L
280.249 281.082 L
280.4399 281.3164 L
280.6099 281.5713 L
280.7588 281.8467 L
280.8442 282.1455 L
280.9082 282.4434 L
280.9292 282.7402 L
f
299.4956 295.6387 m
299.4746 295.957 L
299.4106 296.2539 L
299.3257 296.5527 L
299.1768 296.8281 L
299.0068 297.082 L
298.8154 297.3164 L
298.5815 297.5098 L
298.3267 297.6797 L
298.0498 297.8262 L
297.7524 297.9121 L
297.4551 297.9766 L
297.1357 297.9961 L
296.8384 297.9766 L
296.519 297.9121 L
296.2432 297.8262 L
295.9668 297.6797 L
295.6899 297.5098 L
295.4775 297.3164 L
295.2651 297.082 L
295.0952 296.8281 L
294.9458 296.5527 L
294.8608 296.2539 L
294.7969 295.957 L
294.7759 295.6387 L
294.7969 295.3398 L
294.8608 295.043 L
294.9458 294.7441 L
295.0952 294.4688 L
295.2651 294.2129 L
295.4775 293.9785 L
295.6899 293.7656 L
295.9668 293.5957 L
296.2432 293.4688 L
296.519 293.3633 L
296.8384 293.2988 L
297.1357 293.2793 L
297.4551 293.2988 L
297.7524 293.3633 L
298.0498 293.4688 L
298.3267 293.5957 L
298.5815 293.7656 L
298.8154 293.9785 L
299.0068 294.2129 L
299.1768 294.4688 L
299.3257 294.7441 L
299.4106 295.043 L
299.4746 295.3398 L
299.4956 295.6387 L
f
296.1792 237.3848 m
296.1582 237.6836 L
296.0942 237.9805 L
295.9883 238.2783 L
295.8604 238.5547 L
295.6899 238.8105 L
295.4775 239.0449 L
295.2441 239.2568 L
294.9893 239.4268 L
294.7119 239.5547 L
294.415 239.6602 L
294.1167 239.7246 L
293.8193 239.7441 L
293.501 239.7246 L
293.2026 239.6602 L
292.9053 239.5547 L
292.6289 239.4268 L
292.3735 239.2568 L
292.1396 239.0449 L
291.9487 238.8105 L
291.7788 238.5547 L
291.6294 238.2783 L
291.5234 237.9805 L
291.4805 237.6836 L
291.4595 237.3848 L
291.4805 237.0664 L
291.5234 236.7695 L
291.6294 236.4707 L
291.7788 236.1953 L
291.9487 235.9404 L
292.1396 235.7061 L
292.3735 235.4941 L
292.6289 235.3242 L
292.9053 235.1963 L
293.2026 235.0898 L
293.501 235.0254 L
293.8193 235.0254 L
294.1167 235.0254 L
294.415 235.0898 L
294.7119 235.1963 L
294.9893 235.3242 L
295.2441 235.4941 L
295.4775 235.7061 L
295.6899 235.9404 L
295.8604 236.1953 L
295.9883 236.4707 L
296.0942 236.7695 L
296.1582 237.0664 L
296.1792 237.3848 L
f
343.0918 239.3125 m
343.0713 239.6113 L
343.0283 239.9297 L
342.9219 240.2061 L
342.7734 240.4824 L
342.6035 240.7383 L
342.4121 240.9707 L
342.1777 241.1846 L
341.9238 241.3545 L
341.6465 241.4824 L
341.3496 241.5879 L
341.0518 241.6523 L
340.7324 241.6719 L
340.4355 241.6523 L
340.1377 241.5879 L
339.8398 241.4824 L
339.5635 241.3545 L
339.3076 241.1846 L
339.0742 240.9707 L
338.8613 240.7383 L
338.6914 240.4824 L
338.5645 240.2061 L
338.457 239.9297 L
338.3936 239.6113 L
338.373 239.3125 L
338.3936 238.9941 L
338.457 238.6953 L
338.5645 238.3984 L
338.6914 238.123 L
338.8613 237.8672 L
339.0742 237.6338 L
339.3076 237.4414 L
339.5635 237.2715 L
339.8398 237.123 L
340.1377 237.0371 L
340.4355 236.9746 L
340.7324 236.9531 L
341.0518 236.9746 L
341.3496 237.0371 L
341.6465 237.123 L
341.9238 237.2715 L
342.1777 237.4414 L
342.4121 237.6338 L
342.6035 237.8672 L
342.7734 238.123 L
342.9219 238.3984 L
343.0283 238.6953 L
343.0713 238.9941 L
343.0918 239.3125 L
f
349.9238 272.0527 m
349.9033 272.3721 L
349.8398 272.6699 L
349.7539 272.9668 L
349.6055 273.2441 L
349.4355 273.498 L
349.2441 273.7324 L
349.0098 273.9248 L
348.7549 274.1152 L
348.4785 274.2422 L
348.1816 274.3496 L
347.8828 274.3926 L
347.5645 274.4121 L
347.2666 274.3926 L
346.9688 274.3496 L
346.6719 274.2422 L
346.3945 274.1152 L
346.1396 273.9248 L
345.9063 273.7324 L
345.6934 273.498 L
345.5234 273.2441 L
345.3955 272.9668 L
345.2891 272.6699 L
345.2256 272.3721 L
345.2051 272.0527 L
345.2256 271.7559 L
345.2891 271.458 L
345.3955 271.1602 L
345.5234 270.8838 L
345.6934 270.6289 L
345.9063 270.3945 L
346.1396 270.1816 L
346.3945 270.0117 L
346.6719 269.8848 L
346.9688 269.7773 L
347.2666 269.7148 L
347.5645 269.6934 L
347.8828 269.7148 L
348.1816 269.7773 L
348.4785 269.8848 L
348.7549 270.0117 L
349.0098 270.1816 L
349.2441 270.3945 L
349.4355 270.6289 L
349.6055 270.8838 L
349.7539 271.1602 L
349.8398 271.458 L
349.9033 271.7559 L
349.9238 272.0527 L
f
326.2832 287.6152 m
326.2617 287.9121 L
326.1973 288.2109 L
326.1133 288.5088 L
325.9648 288.7842 L
325.7949 289.041 L
325.6016 289.2734 L
325.3691 289.4863 L
325.1133 289.6572 L
324.8379 289.7852 L
324.5391 289.8906 L
324.2422 289.9551 L
323.9229 289.9746 L
323.625 289.9551 L
323.3281 289.8906 L
323.0293 289.7852 L
322.7539 289.6572 L
322.499 289.4863 L
322.2646 289.2734 L
322.0527 289.041 L
321.8828 288.7842 L
321.7549 288.5088 L
321.6484 288.2109 L
321.584 287.9121 L
321.5625 287.6152 L
321.584 287.2969 L
321.6484 286.998 L
321.7549 286.7012 L
321.8828 286.4238 L
322.0527 286.1699 L
322.2646 285.9365 L
322.499 285.7441 L
322.7539 285.5742 L
323.0293 285.4258 L
323.3281 285.3203 L
323.625 285.2773 L
323.9229 285.2559 L
324.2422 285.2773 L
324.5391 285.3203 L
324.8379 285.4258 L
325.1133 285.5742 L
325.3691 285.7441 L
325.6016 285.9365 L
325.7949 286.1699 L
325.9648 286.4238 L
326.1133 286.7012 L
326.1973 286.998 L
326.2617 287.2969 L
326.2832 287.6152 L
f
254.1411 255.8672 m
254.1201 256.1641 L
254.0562 256.4844 L
253.9502 256.7607 L
253.8223 257.0361 L
253.6523 257.293 L
253.4395 257.5254 L
253.2061 257.7383 L
252.9512 257.9082 L
252.6738 258.0371 L
252.3979 258.1426 L
252.0791 258.207 L
251.7813 258.2266 L
251.4629 258.207 L
251.165 258.1426 L
250.8672 258.0371 L
250.5908 257.9082 L
250.3359 257.7383 L
250.1016 257.5254 L
249.9106 257.293 L
249.7407 257.0361 L
249.5918 256.7607 L
249.5063 256.4844 L
249.4424 256.1641 L
249.4214 255.8672 L
249.4424 255.5479 L
249.5063 255.25 L
249.5918 254.9531 L
249.7407 254.6758 L
249.9106 254.4219 L
250.1016 254.1885 L
250.3359 253.9961 L
250.5908 253.8262 L
250.8672 253.6777 L
251.165 253.5918 L
251.4629 253.5293 L
251.7813 253.5078 L
252.0791 253.5293 L
252.3979 253.5918 L
252.6738 253.6777 L
252.9512 253.8262 L
253.2061 253.9961 L
253.4395 254.1885 L
253.6523 254.4219 L
253.8223 254.6758 L
253.9502 254.9531 L
254.0562 255.25 L
254.1201 255.5479 L
254.1411 255.8672 L
f
309.8418 276.6738 m
309.8213 276.9707 L
309.7578 277.291 L
309.6514 277.5674 L
309.5234 277.8428 L
309.3535 278.1191 L
309.1406 278.332 L
308.9072 278.5449 L
308.6514 278.7148 L
308.375 278.8418 L
308.0781 278.9492 L
307.7793 279.0137 L
307.4824 279.0332 L
307.1641 279.0137 L
306.8657 278.9492 L
306.5684 278.8418 L
306.292 278.7148 L
306.0366 278.5449 L
305.8027 278.332 L
305.5908 278.1191 L
305.4199 277.8428 L
305.2925 277.5674 L
305.1865 277.291 L
305.1226 276.9707 L
305.1226 276.6738 L
305.1226 276.3545 L
305.1865 276.0566 L
305.2925 275.7598 L
305.4199 275.4824 L
305.5908 275.2285 L
305.8027 274.9941 L
306.0366 274.8027 L
306.292 274.6328 L
306.5684 274.4844 L
306.8657 274.3984 L
307.1641 274.3359 L
307.4824 274.3145 L
307.7793 274.3359 L
308.0781 274.3984 L
308.375 274.4844 L
308.6514 274.6328 L
308.9072 274.8027 L
309.1406 274.9941 L
309.3535 275.2285 L
309.5234 275.4824 L
309.6514 275.7598 L
309.7578 276.0566 L
309.8213 276.3545 L
309.8418 276.6738 L
f
307.7168 259.3262 m
307.6953 259.623 L
307.6523 259.9209 L
307.5469 260.2188 L
307.4189 260.4951 L
307.2271 260.75 L
307.0361 260.9844 L
306.8022 261.1973 L
306.5474 261.3672 L
306.2705 261.4941 L
305.9731 261.6016 L
305.6748 261.6641 L
305.3564 261.6855 L
305.0591 261.6641 L
304.7607 261.6016 L
304.4639 261.4941 L
304.1875 261.3672 L
303.9316 261.1973 L
303.6982 260.9844 L
303.4858 260.75 L
303.3154 260.4951 L
303.1875 260.2188 L
303.0815 259.9209 L
303.0176 259.623 L
302.9966 259.3262 L
303.0176 259.0068 L
303.0815 258.709 L
303.1875 258.4121 L
303.3154 258.1348 L
303.4858 257.8809 L
303.6982 257.6465 L
303.9316 257.4551 L
304.1875 257.2852 L
304.4639 257.1367 L
304.7607 257.0508 L
305.0591 256.9863 L
305.3564 256.9668 L
305.6748 256.9863 L
305.9731 257.0508 L
306.2705 257.1367 L
306.5474 257.2852 L
306.8022 257.4551 L
307.0361 257.6465 L
307.2271 257.8809 L
307.4189 258.1348 L
307.5469 258.4121 L
307.6523 258.709 L
307.6953 259.0068 L
307.7168 259.3262 L
f
470.4258 258.4473 m
470.4043 258.7441 L
470.3398 259.0645 L
470.2334 259.3398 L
470.1055 259.6162 L
469.9355 259.8711 L
469.7236 260.1055 L
469.4902 260.3184 L
469.2344 260.4883 L
468.959 260.6152 L
468.6602 260.7227 L
468.3633 260.7852 L
468.0654 260.8066 L
467.7461 260.7852 L
467.4492 260.7227 L
467.1514 260.6152 L
466.875 260.4883 L
466.6191 260.3184 L
466.3867 260.1055 L
466.1934 259.8711 L
466.0234 259.6162 L
465.875 259.3398 L
465.791 259.0645 L
465.7266 258.7441 L
465.7051 258.4473 L
465.7266 258.1279 L
465.791 257.8301 L
465.875 257.5332 L
466.0234 257.2559 L
466.1934 257.002 L
466.3867 256.7676 L
466.6191 256.5762 L
466.875 256.4063 L
467.1514 256.2578 L
467.4492 256.1719 L
467.7461 256.1074 L
468.0654 256.0879 L
468.3633 256.1074 L
468.6602 256.1719 L
468.959 256.2578 L
469.2344 256.4063 L
469.4902 256.5762 L
469.7236 256.7676 L
469.9355 257.002 L
470.1055 257.2559 L
470.2334 257.5332 L
470.3398 257.8301 L
470.4043 258.1279 L
470.4258 258.4473 L
f
499.1406 289.4023 m
499.1191 289.6992 L
499.0547 289.9971 L
498.9492 290.2949 L
498.8203 290.5713 L
498.6504 290.8262 L
498.4385 291.0605 L
498.2051 291.2734 L
497.9492 291.4434 L
497.6738 291.5703 L
497.3965 291.6777 L
497.0781 291.7402 L
496.7803 291.7617 L
496.4609 291.7402 L
496.1641 291.6777 L
495.8662 291.5703 L
495.5898 291.4434 L
495.334 291.2734 L
495.1016 291.0605 L
494.9082 290.8262 L
494.7383 290.5713 L
494.5898 290.2949 L
494.5059 289.9971 L
494.4414 289.6992 L
494.4199 289.4023 L
494.4414 289.083 L
494.5059 288.7852 L
494.5898 288.4863 L
494.7383 288.2109 L
494.9082 287.957 L
495.1016 287.7227 L
495.334 287.5303 L
495.5898 287.3398 L
495.8662 287.2129 L
496.1641 287.1055 L
496.4609 287.0625 L
496.7803 287.043 L
497.0781 287.0625 L
497.3965 287.1055 L
497.6738 287.2129 L
497.9492 287.3398 L
498.2051 287.5303 L
498.4385 287.7227 L
498.6504 287.957 L
498.8203 288.2109 L
498.9492 288.4863 L
499.0547 288.7852 L
499.1191 289.083 L
499.1406 289.4023 L
f
492.6484 289.0898 m
492.6279 289.3867 L
492.585 289.707 L
492.4785 289.9824 L
492.3301 290.2588 L
492.1602 290.5137 L
491.9688 290.748 L
491.7344 290.9609 L
491.4795 291.1309 L
491.2031 291.2578 L
490.9063 291.3652 L
490.6074 291.4277 L
490.2891 291.4492 L
489.9912 291.4277 L
489.6934 291.3652 L
489.3965 291.2578 L
489.1191 291.1309 L
488.8643 290.9609 L
488.6309 290.748 L
488.418 290.5137 L
488.248 290.2588 L
488.1201 289.9824 L
488.0137 289.707 L
487.9502 289.3867 L
487.9297 289.0898 L
487.9502 288.7705 L
488.0137 288.4727 L
488.1201 288.1758 L
488.248 287.8984 L
488.418 287.6445 L
488.6309 287.4102 L
488.8643 287.2188 L
489.1191 287.0488 L
489.3965 286.9004 L
489.6934 286.8145 L
489.9912 286.75 L
490.2891 286.7305 L
490.6074 286.75 L
490.9063 286.8145 L
491.2031 286.9004 L
491.4795 287.0488 L
491.7344 287.2188 L
491.9688 287.4102 L
492.1602 287.6445 L
492.3301 287.8984 L
492.4785 288.1758 L
492.585 288.4727 L
492.6279 288.7705 L
492.6484 289.0898 L
f
443.8076 310.6895 m
443.7861 311.0088 L
443.7227 311.3066 L
443.6162 311.6035 L
443.4883 311.8809 L
443.3184 312.1348 L
443.1064 312.3691 L
442.8721 312.5605 L
442.6172 312.7305 L
442.3408 312.8789 L
442.043 312.9648 L
441.7451 313.0293 L
441.4482 313.0488 L
441.1289 313.0293 L
440.8311 312.9648 L
440.5332 312.8789 L
440.2568 312.7305 L
440.002 312.5605 L
439.7676 312.3691 L
439.5771 312.1348 L
439.4072 311.8809 L
439.2578 311.6035 L
439.1523 311.3066 L
439.1094 311.0088 L
439.0879 310.6895 L
439.1094 310.3926 L
439.1523 310.0723 L
439.2578 309.7969 L
439.4072 309.5205 L
439.5771 309.2441 L
439.7676 309.0313 L
440.002 308.8184 L
440.2568 308.6484 L
440.5332 308.5 L
440.8311 308.4141 L
441.1289 308.3516 L
441.4482 308.3301 L
441.7451 308.3516 L
442.043 308.4141 L
442.3408 308.5 L
442.6172 308.6484 L
442.8721 308.8184 L
443.1064 309.0313 L
443.3184 309.2441 L
443.4883 309.5205 L
443.6162 309.7969 L
443.7227 310.0723 L
443.7861 310.3926 L
443.8076 310.6895 L
f
461.8359 276.1914 m
461.8154 276.5107 L
461.751 276.8086 L
461.666 277.1055 L
461.5176 277.3828 L
461.3477 277.6367 L
461.1348 277.8711 L
460.9219 278.0625 L
460.667 278.2334 L
460.3691 278.3809 L
460.0928 278.4883 L
459.7734 278.5313 L
459.4766 278.5508 L
459.1787 278.5313 L
458.8594 278.4883 L
458.583 278.3809 L
458.3066 278.2334 L
458.0313 278.0625 L
457.8184 277.8711 L
457.6055 277.6367 L
457.4355 277.3828 L
457.2871 277.1055 L
457.2012 276.8086 L
457.1377 276.5107 L
457.1172 276.1914 L
457.1377 275.8945 L
457.2012 275.5967 L
457.2871 275.2988 L
457.4355 275.0225 L
457.6055 274.7676 L
457.8184 274.5332 L
458.0313 274.3203 L
458.3066 274.1504 L
458.583 274.0234 L
458.8594 273.916 L
459.1787 273.8535 L
459.4766 273.832 L
459.7734 273.8535 L
460.0928 273.916 L
460.3691 274.0234 L
460.667 274.1504 L
460.9219 274.3203 L
461.1348 274.5332 L
461.3477 274.7676 L
461.5176 275.0225 L
461.666 275.2988 L
461.751 275.5967 L
461.8154 275.8945 L
461.8359 276.1914 L
f
471.3037 341.5313 m
471.2832 341.8281 L
471.2188 342.126 L
471.1123 342.4238 L
470.9844 342.7002 L
470.8145 342.9551 L
470.6025 343.1895 L
470.3682 343.4023 L
470.1133 343.5723 L
469.8369 343.6992 L
469.5391 343.8066 L
469.2412 343.8691 L
468.9443 343.8906 L
468.625 343.8691 L
468.3271 343.8066 L
468.0293 343.6992 L
467.7529 343.5723 L
467.498 343.4023 L
467.2637 343.1895 L
467.0732 342.9551 L
466.8818 342.7002 L
466.7539 342.4238 L
466.6484 342.126 L
466.6055 341.8281 L
466.584 341.5313 L
466.6055 341.2119 L
466.6484 340.9141 L
466.7539 340.6172 L
466.8818 340.3398 L
467.0732 340.0859 L
467.2637 339.8516 L
467.498 339.6602 L
467.7529 339.4893 L
468.0293 339.3418 L
468.3271 339.2344 L
468.625 339.1914 L
468.9443 339.1719 L
469.2412 339.1914 L
469.5391 339.2344 L
469.8369 339.3418 L
470.1133 339.4893 L
470.3682 339.6602 L
470.6025 339.8516 L
470.8145 340.0859 L
470.9844 340.3398 L
471.1123 340.6172 L
471.2188 340.9141 L
471.2832 341.2119 L
471.3037 341.5313 L
f
472.9766 271.9395 m
472.9551 272.2588 L
472.8906 272.5566 L
472.7852 272.8535 L
472.6582 273.1309 L
472.4863 273.3848 L
472.2744 273.6191 L
472.0625 273.8105 L
471.7852 273.9814 L
471.5098 274.1289 L
471.2324 274.2148 L
470.9141 274.2793 L
470.6162 274.2988 L
470.2969 274.2793 L
470 274.2148 L
469.7021 274.1289 L
469.4258 273.9814 L
469.1699 273.8105 L
468.9375 273.6191 L
468.7461 273.3848 L
468.5742 273.1309 L
468.4258 272.8535 L
468.3418 272.5566 L
468.2773 272.2588 L
468.2559 271.9395 L
468.2773 271.6426 L
468.3418 271.3223 L
468.4258 271.0469 L
468.5742 270.7705 L
468.7461 270.4941 L
468.9375 270.2813 L
469.1699 270.0684 L
469.4258 269.8984 L
469.7021 269.7715 L
470 269.6641 L
470.2969 269.6016 L
470.6162 269.5801 L
470.9141 269.6016 L
471.2324 269.6641 L
471.5098 269.7715 L
471.7852 269.8984 L
472.0625 270.0684 L
472.2744 270.2813 L
472.4863 270.4941 L
472.6582 270.7705 L
472.7852 271.0469 L
472.8906 271.3223 L
472.9551 271.6426 L
472.9766 271.9395 L
f
482.6699 286.0273 m
482.6494 286.3262 L
482.5859 286.6445 L
482.5 286.9209 L
482.3516 287.1973 L
482.1816 287.4531 L
481.9902 287.6875 L
481.7559 287.8994 L
481.502 288.0693 L
481.2246 288.1973 L
480.9277 288.3027 L
480.6299 288.3672 L
480.3105 288.3867 L
480.0137 288.3672 L
479.6934 288.3027 L
479.418 288.1973 L
479.1416 288.0693 L
478.8867 287.8994 L
478.6523 287.6875 L
478.4395 287.4531 L
478.2695 287.1973 L
478.1426 286.9209 L
478.0352 286.6445 L
477.9717 286.3262 L
477.9512 286.0273 L
477.9717 285.709 L
478.0352 285.4121 L
478.1426 285.1133 L
478.2695 284.8379 L
478.4395 284.583 L
478.6523 284.3486 L
478.8867 284.1563 L
479.1416 283.9863 L
479.418 283.8389 L
479.6934 283.7539 L
480.0137 283.6895 L
480.3105 283.668 L
480.6299 283.6895 L
480.9277 283.7539 L
481.2246 283.8389 L
481.502 283.9863 L
481.7559 284.1563 L
481.9902 284.3486 L
482.1816 284.583 L
482.3516 284.8379 L
482.5 285.1133 L
482.5859 285.4121 L
482.6494 285.709 L
482.6699 286.0273 L
f
479.3535 302.9219 m
479.333 303.2412 L
479.2695 303.5391 L
479.1631 303.8379 L
479.0352 304.1133 L
478.8652 304.3672 L
478.6523 304.6016 L
478.4189 304.8145 L
478.1641 304.9844 L
477.8867 305.1113 L
477.6113 305.2188 L
477.291 305.2813 L
476.9941 305.2813 L
476.6758 305.2813 L
476.377 305.2188 L
476.0801 305.1113 L
475.8037 304.9844 L
475.5488 304.8145 L
475.3145 304.6016 L
475.123 304.3672 L
474.9531 304.1133 L
474.8047 303.8379 L
474.7188 303.5391 L
474.6553 303.2412 L
474.6348 302.9219 L
474.6553 302.625 L
474.7188 302.3271 L
474.8047 302.0293 L
474.9531 301.7529 L
475.123 301.498 L
475.3145 301.2637 L
475.5488 301.0508 L
475.8037 300.8809 L
476.0801 300.7539 L
476.377 300.6484 L
476.6758 300.584 L
476.9941 300.5625 L
477.291 300.584 L
477.6113 300.6484 L
477.8867 300.7539 L
478.1641 300.8809 L
478.4189 301.0508 L
478.6523 301.2637 L
478.8652 301.498 L
479.0352 301.7529 L
479.1631 302.0293 L
479.2695 302.3271 L
479.333 302.625 L
479.3535 302.9219 L
f
533.0996 315.4238 m
533.0781 315.7207 L
533.0352 316.041 L
532.9297 316.3164 L
532.8018 316.5928 L
532.6309 316.8477 L
532.418 317.082 L
532.1855 317.2949 L
531.9297 317.4648 L
531.6533 317.5918 L
531.3555 317.6992 L
531.0586 317.7617 L
530.7393 317.7832 L
530.4414 317.7617 L
530.1445 317.6992 L
529.8457 317.5918 L
529.5703 317.4648 L
529.3145 317.2949 L
529.0811 317.082 L
528.8691 316.8477 L
528.6973 316.5928 L
528.5703 316.3164 L
528.4648 316.041 L
528.4004 315.7207 L
528.3789 315.4238 L
528.4004 315.1045 L
528.4648 314.8066 L
528.5703 314.5098 L
528.6973 314.2324 L
528.8691 313.9785 L
529.0811 313.7441 L
529.3145 313.5527 L
529.5703 313.3828 L
529.8457 313.2344 L
530.1445 313.1484 L
530.4414 313.084 L
530.7393 313.0645 L
531.0586 313.084 L
531.3555 313.1484 L
531.6533 313.2344 L
531.9297 313.3828 L
532.1855 313.5527 L
532.418 313.7441 L
532.6309 313.9785 L
532.8018 314.2324 L
532.9297 314.5098 L
533.0352 314.8066 L
533.0781 315.1045 L
533.0996 315.4238 L
f
230.1606 275.0586 m
230.1396 275.3555 L
230.0757 275.6533 L
229.9688 275.9512 L
229.8413 276.2275 L
229.6714 276.4824 L
229.459 276.7168 L
229.2246 276.9297 L
228.9697 277.0996 L
228.6934 277.2266 L
228.3955 277.334 L
228.0981 277.3965 L
227.8008 277.418 L
227.4814 277.3965 L
227.1841 277.334 L
226.8867 277.2266 L
226.6099 277.0996 L
226.355 276.9297 L
226.1211 276.7168 L
225.9082 276.4824 L
225.7383 276.2275 L
225.6108 275.9512 L
225.5049 275.6533 L
225.4409 275.3555 L
225.4409 275.0586 L
225.4409 274.7393 L
225.5049 274.4414 L
225.6108 274.1445 L
225.7383 273.8672 L
225.9082 273.6133 L
226.1211 273.3789 L
226.355 273.166 L
226.6099 272.9961 L
226.8867 272.8691 L
227.1841 272.7617 L
227.4814 272.6992 L
227.8008 272.6992 L
228.0981 272.6992 L
228.3955 272.7617 L
228.6934 272.8691 L
228.9697 272.9961 L
229.2246 273.166 L
229.459 273.3789 L
229.6714 273.6133 L
229.8413 273.8672 L
229.9688 274.1445 L
230.0757 274.4414 L
230.1396 274.7393 L
230.1606 275.0586 L
f
238.0405 266.752 m
238.0195 267.0713 L
237.9556 267.3691 L
237.8496 267.666 L
237.7217 267.9434 L
237.5513 268.1973 L
237.3389 268.4316 L
237.1055 268.624 L
236.8506 268.7939 L
236.5732 268.9414 L
236.2764 269.0273 L
235.978 269.0918 L
235.6807 269.1113 L
235.3623 269.0918 L
235.064 269.0273 L
234.7666 268.9414 L
234.4902 268.7939 L
234.2349 268.624 L
234.001 268.4316 L
233.7891 268.1973 L
233.6191 267.9434 L
233.4907 267.666 L
233.3848 267.3691 L
233.3418 267.0713 L
233.3208 266.752 L
233.3418 266.4551 L
233.3848 266.1348 L
233.4907 265.8594 L
233.6191 265.583 L
233.7891 265.3066 L
234.001 265.0938 L
234.2349 264.8809 L
234.4902 264.7109 L
234.7666 264.584 L
235.064 264.4766 L
235.3623 264.4141 L
235.6807 264.3926 L
235.978 264.4141 L
236.2764 264.4766 L
236.5732 264.584 L
236.8506 264.7109 L
237.1055 264.8809 L
237.3389 265.0938 L
237.5513 265.3066 L
237.7217 265.583 L
237.8496 265.8594 L
237.9556 266.1348 L
238.0195 266.4551 L
238.0405 266.752 L
f
360.9512 263.8047 m
360.9512 264.124 L
360.8867 264.4219 L
360.7813 264.7188 L
360.6533 264.9961 L
360.4834 265.25 L
360.2695 265.4844 L
360.0371 265.6973 L
359.7813 265.8672 L
359.5049 265.9941 L
359.207 266.0996 L
358.9102 266.1641 L
358.5908 266.1641 L
358.293 266.1641 L
357.9961 266.0996 L
357.6973 265.9941 L
357.4219 265.8672 L
357.166 265.6973 L
356.9326 265.4844 L
356.7207 265.25 L
356.5508 264.9961 L
356.4219 264.7188 L
356.3164 264.4219 L
356.252 264.124 L
356.2305 263.8047 L
356.252 263.5078 L
356.3164 263.21 L
356.4219 262.9111 L
356.5508 262.6357 L
356.7207 262.3809 L
356.9326 262.1465 L
357.166 261.9336 L
357.4219 261.7637 L
357.6973 261.6367 L
357.9961 261.5293 L
358.293 261.4648 L
358.5908 261.4453 L
358.9102 261.4648 L
359.207 261.5293 L
359.5049 261.6367 L
359.7813 261.7637 L
360.0371 261.9336 L
360.2695 262.1465 L
360.4834 262.3809 L
360.6533 262.6357 L
360.7813 262.9111 L
360.8867 263.21 L
360.9512 263.5078 L
360.9512 263.8047 L
f
338.0176 270.5234 m
337.9971 270.8418 L
337.9336 271.1406 L
337.8477 271.4375 L
337.6992 271.7129 L
337.5293 271.9688 L
337.3379 272.2021 L
337.1035 272.3945 L
336.8496 272.5645 L
336.5732 272.7129 L
336.2754 272.7988 L
335.9775 272.8613 L
335.6582 272.8828 L
335.3613 272.8613 L
335.043 272.7988 L
334.7656 272.7129 L
334.4893 272.5645 L
334.2344 272.3945 L
334 272.2021 L
333.7871 271.9688 L
333.6172 271.7129 L
333.4902 271.4375 L
333.3848 271.1406 L
333.3203 270.8418 L
333.2988 270.5234 L
333.3203 270.2246 L
333.3848 269.9063 L
333.4902 269.6299 L
333.6172 269.3535 L
333.7871 269.0977 L
334 268.8652 L
334.2344 268.6514 L
334.4893 268.4814 L
334.7656 268.3535 L
335.043 268.248 L
335.3613 268.1836 L
335.6582 268.1641 L
335.9775 268.1836 L
336.2754 268.248 L
336.5732 268.3535 L
336.8496 268.4814 L
337.1035 268.6514 L
337.3379 268.8652 L
337.5293 269.0977 L
337.6992 269.3535 L
337.8477 269.6299 L
337.9336 269.9063 L
337.9971 270.2246 L
338.0176 270.5234 L
f
258.5068 297.9063 m
258.4854 298.2031 L
258.4424 298.5215 L
258.3369 298.7988 L
258.209 299.0752 L
258.0176 299.3301 L
257.8271 299.5645 L
257.5928 299.7773 L
257.3379 299.9473 L
257.0615 300.0742 L
256.7637 300.1816 L
256.4658 300.2441 L
256.1465 300.2656 L
255.8496 300.2441 L
255.5518 300.1816 L
255.2539 300.0742 L
254.9775 299.9473 L
254.7227 299.7773 L
254.4883 299.5645 L
254.2764 299.3301 L
254.1064 299.0752 L
253.9785 298.7988 L
253.8721 298.5215 L
253.8086 298.2031 L
253.7871 297.9063 L
253.8086 297.5869 L
253.8721 297.2891 L
253.9785 296.9922 L
254.1064 296.7148 L
254.2764 296.4609 L
254.4883 296.2266 L
254.7227 296.0342 L
254.9775 295.8643 L
255.2539 295.7168 L
255.5518 295.6309 L
255.8496 295.5664 L
256.1465 295.5469 L
256.4658 295.5664 L
256.7637 295.6309 L
257.0615 295.7168 L
257.3379 295.8643 L
257.5928 296.0342 L
257.8271 296.2266 L
258.0176 296.4609 L
258.209 296.7148 L
258.3369 296.9922 L
258.4424 297.2891 L
258.4854 297.5869 L
258.5068 297.9063 L
f
307.9141 229.7891 m
307.8936 230.0859 L
307.8301 230.4063 L
307.7236 230.6816 L
307.5957 230.958 L
307.4263 231.2129 L
307.2129 231.4473 L
306.9795 231.6602 L
306.7246 231.8301 L
306.4478 231.957 L
306.1504 232.0645 L
305.8525 232.127 L
305.5547 232.1484 L
305.2363 232.127 L
304.938 232.0645 L
304.6406 231.957 L
304.3643 231.8301 L
304.1089 231.6602 L
303.875 231.4473 L
303.6841 231.2129 L
303.4932 230.958 L
303.3647 230.6816 L
303.2588 230.4063 L
303.2158 230.0859 L
303.1948 229.7891 L
303.2158 229.4697 L
303.2588 229.1719 L
303.3647 228.875 L
303.4932 228.5977 L
303.6841 228.3438 L
303.875 228.1094 L
304.1089 227.918 L
304.3643 227.748 L
304.6406 227.5996 L
304.938 227.5137 L
305.2363 227.4492 L
305.5547 227.4297 L
305.8525 227.4492 L
306.1504 227.5137 L
306.4478 227.5996 L
306.7246 227.748 L
306.9795 227.918 L
307.2129 228.1094 L
307.4263 228.3438 L
307.5957 228.5977 L
307.7236 228.875 L
307.8301 229.1719 L
307.8936 229.4697 L
307.9141 229.7891 L
f
252.0435 278.7715 m
252.0225 279.0908 L
251.9585 279.3887 L
251.8525 279.6855 L
251.7246 279.9629 L
251.5547 280.2168 L
251.3418 280.4512 L
251.1084 280.6426 L
250.8535 280.8125 L
250.5762 280.9609 L
250.3003 281.0469 L
249.9814 281.1113 L
249.6836 281.1309 L
249.3652 281.1113 L
249.0674 281.0469 L
248.7695 280.9609 L
248.4932 280.8125 L
248.2383 280.6426 L
248.0039 280.4512 L
247.813 280.2168 L
247.6431 279.9629 L
247.4941 279.6855 L
247.4087 279.3887 L
247.3447 279.0908 L
247.3237 278.7715 L
247.3447 278.4746 L
247.4087 278.1543 L
247.4941 277.8779 L
247.6431 277.6025 L
247.813 277.3477 L
248.0039 277.1133 L
248.2383 276.9004 L
248.4932 276.7305 L
248.7695 276.6035 L
249.0674 276.4961 L
249.3652 276.4336 L
249.6836 276.4121 L
249.9814 276.4336 L
250.3003 276.4961 L
250.5762 276.6035 L
250.8535 276.7305 L
251.1084 276.9004 L
251.3418 277.1133 L
251.5547 277.3477 L
251.7246 277.6025 L
251.8525 277.8779 L
251.9585 278.1543 L
252.0225 278.4746 L
252.0435 278.7715 L
f
221.5718 252.9473 m
221.5498 253.2461 L
221.4863 253.5645 L
221.3799 253.8408 L
221.2524 254.1172 L
221.0825 254.373 L
220.8701 254.6055 L
220.6357 254.8184 L
220.3809 254.9893 L
220.1045 255.1172 L
219.8281 255.2227 L
219.5093 255.2871 L
219.2119 255.3066 L
218.8926 255.2871 L
218.5952 255.2227 L
218.2969 255.1172 L
218.021 254.9893 L
217.7661 254.8184 L
217.5317 254.6055 L
217.3408 254.373 L
217.1709 254.1172 L
217.022 253.8408 L
216.937 253.5645 L
216.873 253.2461 L
216.8521 252.9473 L
216.873 252.6289 L
216.937 252.3301 L
217.022 252.0332 L
217.1709 251.7578 L
217.3408 251.502 L
217.5317 251.2686 L
217.7661 251.0762 L
218.021 250.9063 L
218.2969 250.7578 L
218.5952 250.6719 L
218.8926 250.6094 L
219.2119 250.5879 L
219.5093 250.6094 L
219.8281 250.6719 L
220.1045 250.7578 L
220.3809 250.9063 L
220.6357 251.0762 L
220.8701 251.2686 L
221.0825 251.502 L
221.2524 251.7578 L
221.3799 252.0332 L
221.4863 252.3301 L
221.5498 252.6289 L
221.5718 252.9473 L
f
281.978 264.4844 m
281.957 264.7813 L
281.8931 265.1016 L
281.8076 265.3779 L
281.6587 265.6543 L
281.4888 265.9297 L
281.2979 266.1426 L
281.0635 266.3555 L
280.8086 266.5264 L
280.5322 266.6738 L
280.2344 266.7598 L
279.9365 266.8242 L
279.6182 266.8438 L
279.3203 266.8242 L
279.0015 266.7598 L
278.7256 266.6738 L
278.4482 266.5264 L
278.1934 266.3555 L
277.96 266.1426 L
277.7471 265.9297 L
277.5771 265.6543 L
277.4492 265.3779 L
277.3433 265.1016 L
277.2793 264.7813 L
277.2583 264.4844 L
277.2793 264.166 L
277.3433 263.8672 L
277.4492 263.5703 L
277.5771 263.2949 L
277.7471 263.0391 L
277.96 262.8057 L
278.1934 262.6133 L
278.4482 262.4434 L
278.7256 262.2949 L
279.0015 262.209 L
279.3203 262.1465 L
279.6182 262.125 L
279.9365 262.1465 L
280.2344 262.209 L
280.5322 262.2949 L
280.8086 262.4434 L
281.0635 262.6133 L
281.2979 262.8057 L
281.4888 263.0391 L
281.6587 263.2949 L
281.8076 263.5703 L
281.8931 263.8672 L
281.957 264.166 L
281.978 264.4844 L
f
197.3921 254.9316 m
197.3711 255.251 L
197.3071 255.5488 L
197.2217 255.8457 L
197.0728 256.123 L
196.9028 256.377 L
196.7119 256.6113 L
196.478 256.8027 L
196.2227 256.9736 L
195.9463 257.1211 L
195.6484 257.207 L
195.3506 257.2715 L
195.0322 257.291 L
194.7344 257.2715 L
194.4365 257.207 L
194.1396 257.1211 L
193.8623 256.9736 L
193.6074 256.8027 L
193.374 256.6113 L
193.1611 256.377 L
192.9912 256.123 L
192.8633 255.8457 L
192.7573 255.5488 L
192.6934 255.251 L
192.6724 254.9316 L
192.6934 254.6348 L
192.7573 254.3369 L
192.8633 254.0391 L
192.9912 253.7627 L
193.1611 253.5078 L
193.374 253.2734 L
193.6074 253.0605 L
193.8623 252.8906 L
194.1396 252.7637 L
194.4365 252.6563 L
194.7344 252.5938 L
195.0322 252.5723 L
195.3506 252.5938 L
195.6484 252.6563 L
195.9463 252.7637 L
196.2227 252.8906 L
196.478 253.0605 L
196.7119 253.2734 L
196.9028 253.5078 L
197.0728 253.7627 L
197.2217 254.0391 L
197.3071 254.3369 L
197.3711 254.6348 L
197.3921 254.9316 L
f
305.7886 270.2383 m
305.7671 270.5371 L
305.7251 270.8555 L
305.6187 271.1328 L
305.4912 271.4082 L
305.3003 271.6641 L
305.1084 271.8984 L
304.8745 272.1113 L
304.6196 272.2813 L
304.3428 272.4082 L
304.0454 272.5137 L
303.748 272.5781 L
303.4287 272.5977 L
303.1313 272.5781 L
302.833 272.5137 L
302.5361 272.4082 L
302.2598 272.2813 L
302.0039 272.1113 L
301.7705 271.8984 L
301.5581 271.6641 L
301.3882 271.4082 L
301.2598 271.1328 L
301.1538 270.8555 L
301.0898 270.5371 L
301.0688 270.2383 L
301.0898 269.9199 L
301.1538 269.623 L
301.2598 269.3242 L
301.3882 269.0488 L
301.5581 268.7949 L
301.7705 268.5605 L
302.0039 268.3672 L
302.2598 268.1973 L
302.5361 268.0508 L
302.833 267.9648 L
303.1313 267.9004 L
303.4287 267.8809 L
303.748 267.9004 L
304.0454 267.9648 L
304.3428 268.0508 L
304.6196 268.1973 L
304.8745 268.3672 L
305.1084 268.5605 L
305.3003 268.7949 L
305.4912 269.0488 L
305.6187 269.3242 L
305.7251 269.623 L
305.7671 269.9199 L
305.7886 270.2383 L
f
245.2124 273.8965 m
245.1914 274.2148 L
245.1274 274.5137 L
245.0215 274.8105 L
244.8931 275.0859 L
244.7231 275.3418 L
244.5107 275.5752 L
244.2773 275.7871 L
244.0215 275.959 L
243.7451 276.0859 L
243.4692 276.1914 L
243.1499 276.2559 L
242.8525 276.2559 L
242.5332 276.2559 L
242.2358 276.1914 L
241.9385 276.0859 L
241.6616 275.959 L
241.4067 275.7871 L
241.1729 275.5752 L
240.9819 275.3418 L
240.8115 275.0859 L
240.6626 274.8105 L
240.5776 274.5137 L
240.5137 274.2148 L
240.4927 273.8965 L
240.5137 273.5996 L
240.5776 273.3008 L
240.6626 273.0029 L
240.8115 272.7266 L
240.9819 272.4707 L
241.1729 272.2383 L
241.4067 272.0254 L
241.6616 271.8545 L
241.9385 271.7266 L
242.2358 271.6211 L
242.5332 271.5566 L
242.8525 271.5371 L
243.1499 271.5566 L
243.4692 271.6211 L
243.7451 271.7266 L
244.0215 271.8545 L
244.2773 272.0254 L
244.5107 272.2383 L
244.7231 272.4707 L
244.8931 272.7266 L
245.0215 273.0029 L
245.1274 273.3008 L
245.1914 273.5996 L
245.2124 273.8965 L
f
220.5229 241.6934 m
220.501 242.0127 L
220.4375 242.3105 L
220.3311 242.6094 L
220.2036 242.8848 L
220.0337 243.1387 L
219.8213 243.373 L
219.5869 243.5654 L
219.332 243.7559 L
219.0557 243.8828 L
218.7578 243.9902 L
218.4604 244.0332 L
218.1631 244.0527 L
217.8438 244.0332 L
217.5464 243.9902 L
217.248 243.8828 L
216.9722 243.7559 L
216.7173 243.5654 L
216.4829 243.373 L
216.292 243.1387 L
216.1221 242.8848 L
215.9731 242.6094 L
215.8882 242.3105 L
215.8242 242.0127 L
215.8032 241.6934 L
215.8242 241.3965 L
215.8882 241.0986 L
215.9731 240.8008 L
216.1221 240.5244 L
216.292 240.2695 L
216.4829 240.0352 L
216.7173 239.8223 L
216.9722 239.6523 L
217.248 239.5254 L
217.5464 239.4199 L
217.8438 239.3555 L
218.1631 239.334 L
218.4604 239.3555 L
218.7578 239.4199 L
219.0557 239.5254 L
219.332 239.6523 L
219.5869 239.8223 L
219.8213 240.0352 L
220.0337 240.2695 L
220.2036 240.5244 L
220.3311 240.8008 L
220.4375 241.0986 L
220.501 241.3965 L
220.5229 241.6934 L
f
263.4106 307.373 m
263.3896 307.6699 L
263.3467 307.9678 L
263.2407 308.2666 L
263.0918 308.542 L
262.9214 308.7969 L
262.7305 309.0313 L
262.4966 309.2441 L
262.2417 309.4141 L
261.9648 309.541 L
261.6675 309.6484 L
261.3701 309.7129 L
261.0508 309.7324 L
260.7534 309.7129 L
260.4551 309.6484 L
260.1582 309.541 L
259.8818 309.4141 L
259.626 309.2441 L
259.3926 309.0313 L
259.1802 308.7969 L
259.0103 308.542 L
258.8818 308.2666 L
258.7759 307.9678 L
258.7119 307.6699 L
258.6909 307.373 L
258.7119 307.0537 L
258.7759 306.7559 L
258.8818 306.459 L
259.0103 306.1816 L
259.1802 305.9277 L
259.3926 305.6934 L
259.626 305.502 L
259.8818 305.332 L
260.1582 305.1836 L
260.4551 305.0977 L
260.7534 305.0352 L
261.0508 305.0137 L
261.3701 305.0352 L
261.6675 305.0977 L
261.9648 305.1836 L
262.2417 305.332 L
262.4966 305.502 L
262.7305 305.6934 L
262.9214 305.9277 L
263.0918 306.1816 L
263.2407 306.459 L
263.3467 306.7559 L
263.3896 307.0537 L
263.4106 307.373 L
f
174.6294 244.4727 m
174.6084 244.792 L
174.5444 245.0898 L
174.4595 245.3867 L
174.3105 245.6641 L
174.1406 245.918 L
173.9492 246.1514 L
173.7153 246.3438 L
173.4604 246.5352 L
173.1836 246.6621 L
172.8862 246.7676 L
172.5889 246.8105 L
172.2695 246.832 L
171.9722 246.8105 L
171.6528 246.7676 L
171.377 246.6621 L
171.1006 246.5352 L
170.8447 246.3438 L
170.6113 246.1514 L
170.3989 245.918 L
170.229 245.6641 L
170.1006 245.3867 L
169.9946 245.0898 L
169.9307 244.792 L
169.9097 244.4727 L
169.9307 244.1758 L
169.9946 243.877 L
170.1006 243.5791 L
170.229 243.3037 L
170.3989 243.0469 L
170.6113 242.8145 L
170.8447 242.6016 L
171.1006 242.4316 L
171.377 242.3027 L
171.6528 242.1973 L
171.9722 242.1328 L
172.2695 242.1133 L
172.5889 242.1328 L
172.8862 242.1973 L
173.1836 242.3027 L
173.4604 242.4316 L
173.7153 242.6016 L
173.9492 242.8145 L
174.1406 243.0469 L
174.3105 243.3037 L
174.4595 243.5791 L
174.5444 243.877 L
174.6084 244.1758 L
174.6294 244.4727 L
f
376.9102 276.3906 m
376.8887 276.6875 L
376.8242 277.0078 L
376.7188 277.2832 L
376.5918 277.5596 L
376.4219 277.8145 L
376.208 278.0488 L
375.9746 278.2617 L
375.7188 278.4316 L
375.4434 278.5586 L
375.1445 278.666 L
374.8477 278.7285 L
374.5498 278.75 L
374.2305 278.7285 L
373.9336 278.666 L
373.6357 278.5586 L
373.3594 278.4316 L
373.1035 278.2617 L
372.8711 278.0488 L
372.6797 277.8145 L
372.5098 277.5596 L
372.3613 277.2832 L
372.2539 277.0078 L
372.2109 276.6875 L
372.1895 276.3906 L
372.2109 276.0713 L
372.2539 275.7734 L
372.3613 275.4766 L
372.5098 275.1992 L
372.6797 274.9453 L
372.8711 274.7109 L
373.1035 274.5195 L
373.3594 274.3496 L
373.6357 274.2012 L
373.9336 274.1152 L
374.2305 274.0508 L
374.5498 274.0313 L
374.8477 274.0508 L
375.1445 274.1152 L
375.4434 274.2012 L
375.7188 274.3496 L
375.9746 274.5195 L
376.208 274.7109 L
376.4219 274.9453 L
376.5918 275.1992 L
376.7188 275.4766 L
376.8242 275.7734 L
376.8887 276.0713 L
376.9102 276.3906 L
f
257.6284 260.6016 m
257.6284 260.9209 L
257.5645 261.2188 L
257.458 261.5156 L
257.3301 261.793 L
257.1602 262.0469 L
256.9482 262.2803 L
256.7139 262.4727 L
256.459 262.6426 L
256.1826 262.791 L
255.8848 262.877 L
255.5869 262.9395 L
255.2686 262.9609 L
254.9707 262.9395 L
254.6729 262.877 L
254.376 262.791 L
254.0986 262.6426 L
253.8438 262.4727 L
253.6104 262.2803 L
253.3975 262.0469 L
253.2275 261.793 L
253.0996 261.5156 L
252.9937 261.2188 L
252.9297 260.9209 L
252.9087 260.6016 L
252.9297 260.3047 L
252.9937 259.9844 L
253.0996 259.708 L
253.2275 259.4326 L
253.3975 259.1563 L
253.6104 258.9434 L
253.8438 258.7305 L
254.0986 258.5605 L
254.376 258.4121 L
254.6729 258.3262 L
254.9707 258.2617 L
255.2686 258.2422 L
255.5869 258.2617 L
255.8848 258.3262 L
256.1826 258.4121 L
256.459 258.5605 L
256.7139 258.7305 L
256.9482 258.9434 L
257.1602 259.1563 L
257.3301 259.4326 L
257.458 259.708 L
257.5645 259.9844 L
257.6284 260.3047 L
257.6284 260.6016 L
f
211.0552 248.0156 m
211.0342 248.3125 L
210.9697 248.6328 L
210.8848 248.9092 L
210.7358 249.1846 L
210.5659 249.4395 L
210.375 249.6738 L
210.1406 249.8867 L
209.8857 250.0566 L
209.6094 250.1836 L
209.3115 250.291 L
209.0137 250.3535 L
208.6953 250.375 L
208.3975 250.3535 L
208.0786 250.291 L
207.8018 250.1836 L
207.5254 250.0566 L
207.2705 249.8867 L
207.0361 249.6738 L
206.8242 249.4395 L
206.6543 249.1846 L
206.5264 248.9092 L
206.4204 248.6328 L
206.3564 248.3125 L
206.3354 248.0156 L
206.3564 247.6963 L
206.4204 247.3984 L
206.5264 247.1016 L
206.6543 246.8242 L
206.8242 246.5703 L
207.0361 246.3359 L
207.2705 246.1445 L
207.5254 245.9746 L
207.8018 245.8262 L
208.0786 245.7402 L
208.3975 245.6777 L
208.6953 245.6563 L
209.0137 245.6777 L
209.3115 245.7402 L
209.6094 245.8262 L
209.8857 245.9746 L
210.1406 246.1445 L
210.375 246.3359 L
210.5659 246.5703 L
210.7358 246.8242 L
210.8848 247.1016 L
210.9697 247.3984 L
211.0342 247.6963 L
211.0552 248.0156 L
f
280.9292 282.7402 m
280.9082 283.0596 L
280.8442 283.3574 L
280.7588 283.6543 L
280.6099 283.9316 L
280.4399 284.1855 L
280.249 284.4189 L
280.0146 284.6328 L
279.7598 284.8027 L
279.4834 284.9297 L
279.1855 285.0352 L
278.8877 285.0781 L
278.5693 285.0996 L
278.2715 285.0781 L
277.9526 285.0352 L
277.6768 284.9297 L
277.3994 284.8027 L
277.1445 284.6328 L
276.9111 284.4189 L
276.6982 284.1855 L
276.5283 283.9316 L
276.4004 283.6543 L
276.2944 283.3574 L
276.2305 283.0596 L
276.2095 282.7402 L
276.2305 282.4434 L
276.2944 282.1455 L
276.4004 281.8467 L
276.5283 281.5713 L
276.6982 281.3164 L
276.9111 281.082 L
277.1445 280.8691 L
277.3994 280.6992 L
277.6768 280.5723 L
277.9526 280.4648 L
278.2715 280.4004 L
278.5693 280.3809 L
278.8877 280.4004 L
279.1855 280.4648 L
279.4834 280.5723 L
279.7598 280.6992 L
280.0146 280.8691 L
280.249 281.082 L
280.4399 281.3164 L
280.6099 281.5713 L
280.7588 281.8467 L
280.8442 282.1455 L
280.9082 282.4434 L
280.9292 282.7402 L
f
299.4956 295.6387 m
299.4746 295.957 L
299.4106 296.2539 L
299.3257 296.5527 L
299.1768 296.8281 L
299.0068 297.082 L
298.8154 297.3164 L
298.5815 297.5098 L
298.3267 297.6797 L
298.0498 297.8262 L
297.7524 297.9121 L
297.4551 297.9766 L
297.1357 297.9961 L
296.8384 297.9766 L
296.519 297.9121 L
296.2432 297.8262 L
295.9668 297.6797 L
295.6899 297.5098 L
295.4775 297.3164 L
295.2651 297.082 L
295.0952 296.8281 L
294.9458 296.5527 L
294.8608 296.2539 L
294.7969 295.957 L
294.7759 295.6387 L
294.7969 295.3398 L
294.8608 295.043 L
294.9458 294.7441 L
295.0952 294.4688 L
295.2651 294.2129 L
295.4775 293.9785 L
295.6899 293.7656 L
295.9668 293.5957 L
296.2432 293.4688 L
296.519 293.3633 L
296.8384 293.2988 L
297.1357 293.2793 L
297.4551 293.2988 L
297.7524 293.3633 L
298.0498 293.4688 L
298.3267 293.5957 L
298.5815 293.7656 L
298.8154 293.9785 L
299.0068 294.2129 L
299.1768 294.4688 L
299.3257 294.7441 L
299.4106 295.043 L
299.4746 295.3398 L
299.4956 295.6387 L
f
296.1792 237.3848 m
296.1582 237.6836 L
296.0942 237.9805 L
295.9883 238.2783 L
295.8604 238.5547 L
295.6899 238.8105 L
295.4775 239.0449 L
295.2441 239.2568 L
294.9893 239.4268 L
294.7119 239.5547 L
294.415 239.6602 L
294.1167 239.7246 L
293.8193 239.7441 L
293.501 239.7246 L
293.2026 239.6602 L
292.9053 239.5547 L
292.6289 239.4268 L
292.3735 239.2568 L
292.1396 239.0449 L
291.9487 238.8105 L
291.7788 238.5547 L
291.6294 238.2783 L
291.5234 237.9805 L
291.4805 237.6836 L
291.4595 237.3848 L
291.4805 237.0664 L
291.5234 236.7695 L
291.6294 236.4707 L
291.7788 236.1953 L
291.9487 235.9404 L
292.1396 235.7061 L
292.3735 235.4941 L
292.6289 235.3242 L
292.9053 235.1963 L
293.2026 235.0898 L
293.501 235.0254 L
293.8193 235.0254 L
294.1167 235.0254 L
294.415 235.0898 L
294.7119 235.1963 L
294.9893 235.3242 L
295.2441 235.4941 L
295.4775 235.7061 L
295.6899 235.9404 L
295.8604 236.1953 L
295.9883 236.4707 L
296.0942 236.7695 L
296.1582 237.0664 L
296.1792 237.3848 L
f
343.0918 239.3125 m
343.0713 239.6113 L
343.0283 239.9297 L
342.9219 240.2061 L
342.7734 240.4824 L
342.6035 240.7383 L
342.4121 240.9707 L
342.1777 241.1846 L
341.9238 241.3545 L
341.6465 241.4824 L
341.3496 241.5879 L
341.0518 241.6523 L
340.7324 241.6719 L
340.4355 241.6523 L
340.1377 241.5879 L
339.8398 241.4824 L
339.5635 241.3545 L
339.3076 241.1846 L
339.0742 240.9707 L
338.8613 240.7383 L
338.6914 240.4824 L
338.5645 240.2061 L
338.457 239.9297 L
338.3936 239.6113 L
338.373 239.3125 L
338.3936 238.9941 L
338.457 238.6953 L
338.5645 238.3984 L
338.6914 238.123 L
338.8613 237.8672 L
339.0742 237.6338 L
339.3076 237.4414 L
339.5635 237.2715 L
339.8398 237.123 L
340.1377 237.0371 L
340.4355 236.9746 L
340.7324 236.9531 L
341.0518 236.9746 L
341.3496 237.0371 L
341.6465 237.123 L
341.9238 237.2715 L
342.1777 237.4414 L
342.4121 237.6338 L
342.6035 237.8672 L
342.7734 238.123 L
342.9219 238.3984 L
343.0283 238.6953 L
343.0713 238.9941 L
343.0918 239.3125 L
f
349.9238 272.0527 m
349.9033 272.3721 L
349.8398 272.6699 L
349.7539 272.9668 L
349.6055 273.2441 L
349.4355 273.498 L
349.2441 273.7324 L
349.0098 273.9248 L
348.7549 274.1152 L
348.4785 274.2422 L
348.1816 274.3496 L
347.8828 274.3926 L
347.5645 274.4121 L
347.2666 274.3926 L
346.9688 274.3496 L
346.6719 274.2422 L
346.3945 274.1152 L
346.1396 273.9248 L
345.9063 273.7324 L
345.6934 273.498 L
345.5234 273.2441 L
345.3955 272.9668 L
345.2891 272.6699 L
345.2256 272.3721 L
345.2051 272.0527 L
345.2256 271.7559 L
345.2891 271.458 L
345.3955 271.1602 L
345.5234 270.8838 L
345.6934 270.6289 L
345.9063 270.3945 L
346.1396 270.1816 L
346.3945 270.0117 L
346.6719 269.8848 L
346.9688 269.7773 L
347.2666 269.7148 L
347.5645 269.6934 L
347.8828 269.7148 L
348.1816 269.7773 L
348.4785 269.8848 L
348.7549 270.0117 L
349.0098 270.1816 L
349.2441 270.3945 L
349.4355 270.6289 L
349.6055 270.8838 L
349.7539 271.1602 L
349.8398 271.458 L
349.9033 271.7559 L
349.9238 272.0527 L
f
326.2832 287.6152 m
326.2617 287.9121 L
326.1973 288.2109 L
326.1133 288.5088 L
325.9648 288.7842 L
325.7949 289.041 L
325.6016 289.2734 L
325.3691 289.4863 L
325.1133 289.6572 L
324.8379 289.7852 L
324.5391 289.8906 L
324.2422 289.9551 L
323.9229 289.9746 L
323.625 289.9551 L
323.3281 289.8906 L
323.0293 289.7852 L
322.7539 289.6572 L
322.499 289.4863 L
322.2646 289.2734 L
322.0527 289.041 L
321.8828 288.7842 L
321.7549 288.5088 L
321.6484 288.2109 L
321.584 287.9121 L
321.5625 287.6152 L
321.584 287.2969 L
321.6484 286.998 L
321.7549 286.7012 L
321.8828 286.4238 L
322.0527 286.1699 L
322.2646 285.9365 L
322.499 285.7441 L
322.7539 285.5742 L
323.0293 285.4258 L
323.3281 285.3203 L
323.625 285.2773 L
323.9229 285.2559 L
324.2422 285.2773 L
324.5391 285.3203 L
324.8379 285.4258 L
325.1133 285.5742 L
325.3691 285.7441 L
325.6016 285.9365 L
325.7949 286.1699 L
325.9648 286.4238 L
326.1133 286.7012 L
326.1973 286.998 L
326.2617 287.2969 L
326.2832 287.6152 L
f
254.1411 255.8672 m
254.1201 256.1641 L
254.0562 256.4844 L
253.9502 256.7607 L
253.8223 257.0361 L
253.6523 257.293 L
253.4395 257.5254 L
253.2061 257.7383 L
252.9512 257.9082 L
252.6738 258.0371 L
252.3979 258.1426 L
252.0791 258.207 L
251.7813 258.2266 L
251.4629 258.207 L
251.165 258.1426 L
250.8672 258.0371 L
250.5908 257.9082 L
250.3359 257.7383 L
250.1016 257.5254 L
249.9106 257.293 L
249.7407 257.0361 L
249.5918 256.7607 L
249.5063 256.4844 L
249.4424 256.1641 L
249.4214 255.8672 L
249.4424 255.5479 L
249.5063 255.25 L
249.5918 254.9531 L
249.7407 254.6758 L
249.9106 254.4219 L
250.1016 254.1885 L
250.3359 253.9961 L
250.5908 253.8262 L
250.8672 253.6777 L
251.165 253.5918 L
251.4629 253.5293 L
251.7813 253.5078 L
252.0791 253.5293 L
252.3979 253.5918 L
252.6738 253.6777 L
252.9512 253.8262 L
253.2061 253.9961 L
253.4395 254.1885 L
253.6523 254.4219 L
253.8223 254.6758 L
253.9502 254.9531 L
254.0562 255.25 L
254.1201 255.5479 L
254.1411 255.8672 L
f
309.8418 276.6738 m
309.8213 276.9707 L
309.7578 277.291 L
309.6514 277.5674 L
309.5234 277.8428 L
309.3535 278.1191 L
309.1406 278.332 L
308.9072 278.5449 L
308.6514 278.7148 L
308.375 278.8418 L
308.0781 278.9492 L
307.7793 279.0137 L
307.4824 279.0332 L
307.1641 279.0137 L
306.8657 278.9492 L
306.5684 278.8418 L
306.292 278.7148 L
306.0366 278.5449 L
305.8027 278.332 L
305.5908 278.1191 L
305.4199 277.8428 L
305.2925 277.5674 L
305.1865 277.291 L
305.1226 276.9707 L
305.1226 276.6738 L
305.1226 276.3545 L
305.1865 276.0566 L
305.2925 275.7598 L
305.4199 275.4824 L
305.5908 275.2285 L
305.8027 274.9941 L
306.0366 274.8027 L
306.292 274.6328 L
306.5684 274.4844 L
306.8657 274.3984 L
307.1641 274.3359 L
307.4824 274.3145 L
307.7793 274.3359 L
308.0781 274.3984 L
308.375 274.4844 L
308.6514 274.6328 L
308.9072 274.8027 L
309.1406 274.9941 L
309.3535 275.2285 L
309.5234 275.4824 L
309.6514 275.7598 L
309.7578 276.0566 L
309.8213 276.3545 L
309.8418 276.6738 L
f
307.7168 259.3262 m
307.6953 259.623 L
307.6523 259.9209 L
307.5469 260.2188 L
307.4189 260.4951 L
307.2271 260.75 L
307.0361 260.9844 L
306.8022 261.1973 L
306.5474 261.3672 L
306.2705 261.4941 L
305.9731 261.6016 L
305.6748 261.6641 L
305.3564 261.6855 L
305.0591 261.6641 L
304.7607 261.6016 L
304.4639 261.4941 L
304.1875 261.3672 L
303.9316 261.1973 L
303.6982 260.9844 L
303.4858 260.75 L
303.3154 260.4951 L
303.1875 260.2188 L
303.0815 259.9209 L
303.0176 259.623 L
302.9966 259.3262 L
303.0176 259.0068 L
303.0815 258.709 L
303.1875 258.4121 L
303.3154 258.1348 L
303.4858 257.8809 L
303.6982 257.6465 L
303.9316 257.4551 L
304.1875 257.2852 L
304.4639 257.1367 L
304.7607 257.0508 L
305.0591 256.9863 L
305.3564 256.9668 L
305.6748 256.9863 L
305.9731 257.0508 L
306.2705 257.1367 L
306.5474 257.2852 L
306.8022 257.4551 L
307.0361 257.6465 L
307.2271 257.8809 L
307.4189 258.1348 L
307.5469 258.4121 L
307.6523 258.709 L
307.6953 259.0068 L
307.7168 259.3262 L
f
470.4258 258.4473 m
470.4043 258.7441 L
470.3398 259.0645 L
470.2334 259.3398 L
470.1055 259.6162 L
469.9355 259.8711 L
469.7236 260.1055 L
469.4902 260.3184 L
469.2344 260.4883 L
468.959 260.6152 L
468.6602 260.7227 L
468.3633 260.7852 L
468.0654 260.8066 L
467.7461 260.7852 L
467.4492 260.7227 L
467.1514 260.6152 L
466.875 260.4883 L
466.6191 260.3184 L
466.3867 260.1055 L
466.1934 259.8711 L
466.0234 259.6162 L
465.875 259.3398 L
465.791 259.0645 L
465.7266 258.7441 L
465.7051 258.4473 L
465.7266 258.1279 L
465.791 257.8301 L
465.875 257.5332 L
466.0234 257.2559 L
466.1934 257.002 L
466.3867 256.7676 L
466.6191 256.5762 L
466.875 256.4063 L
467.1514 256.2578 L
467.4492 256.1719 L
467.7461 256.1074 L
468.0654 256.0879 L
468.3633 256.1074 L
468.6602 256.1719 L
468.959 256.2578 L
469.2344 256.4063 L
469.4902 256.5762 L
469.7236 256.7676 L
469.9355 257.002 L
470.1055 257.2559 L
470.2334 257.5332 L
470.3398 257.8301 L
470.4043 258.1279 L
470.4258 258.4473 L
f
499.1406 289.4023 m
499.1191 289.6992 L
499.0547 289.9971 L
498.9492 290.2949 L
498.8203 290.5713 L
498.6504 290.8262 L
498.4385 291.0605 L
498.2051 291.2734 L
497.9492 291.4434 L
497.6738 291.5703 L
497.3965 291.6777 L
497.0781 291.7402 L
496.7803 291.7617 L
496.4609 291.7402 L
496.1641 291.6777 L
495.8662 291.5703 L
495.5898 291.4434 L
495.334 291.2734 L
495.1016 291.0605 L
494.9082 290.8262 L
494.7383 290.5713 L
494.5898 290.2949 L
494.5059 289.9971 L
494.4414 289.6992 L
494.4199 289.4023 L
494.4414 289.083 L
494.5059 288.7852 L
494.5898 288.4863 L
494.7383 288.2109 L
494.9082 287.957 L
495.1016 287.7227 L
495.334 287.5303 L
495.5898 287.3398 L
495.8662 287.2129 L
496.1641 287.1055 L
496.4609 287.0625 L
496.7803 287.043 L
497.0781 287.0625 L
497.3965 287.1055 L
497.6738 287.2129 L
497.9492 287.3398 L
498.2051 287.5303 L
498.4385 287.7227 L
498.6504 287.957 L
498.8203 288.2109 L
498.9492 288.4863 L
499.0547 288.7852 L
499.1191 289.083 L
499.1406 289.4023 L
f
492.6484 289.0898 m
492.6279 289.3867 L
492.585 289.707 L
492.4785 289.9824 L
492.3301 290.2588 L
492.1602 290.5137 L
491.9688 290.748 L
491.7344 290.9609 L
491.4795 291.1309 L
491.2031 291.2578 L
490.9063 291.3652 L
490.6074 291.4277 L
490.2891 291.4492 L
489.9912 291.4277 L
489.6934 291.3652 L
489.3965 291.2578 L
489.1191 291.1309 L
488.8643 290.9609 L
488.6309 290.748 L
488.418 290.5137 L
488.248 290.2588 L
488.1201 289.9824 L
488.0137 289.707 L
487.9502 289.3867 L
487.9297 289.0898 L
487.9502 288.7705 L
488.0137 288.4727 L
488.1201 288.1758 L
488.248 287.8984 L
488.418 287.6445 L
488.6309 287.4102 L
488.8643 287.2188 L
489.1191 287.0488 L
489.3965 286.9004 L
489.6934 286.8145 L
489.9912 286.75 L
490.2891 286.7305 L
490.6074 286.75 L
490.9063 286.8145 L
491.2031 286.9004 L
491.4795 287.0488 L
491.7344 287.2188 L
491.9688 287.4102 L
492.1602 287.6445 L
492.3301 287.8984 L
492.4785 288.1758 L
492.585 288.4727 L
492.6279 288.7705 L
492.6484 289.0898 L
f
443.8076 310.6895 m
443.7861 311.0088 L
443.7227 311.3066 L
443.6162 311.6035 L
443.4883 311.8809 L
443.3184 312.1348 L
443.1064 312.3691 L
442.8721 312.5605 L
442.6172 312.7305 L
442.3408 312.8789 L
442.043 312.9648 L
441.7451 313.0293 L
441.4482 313.0488 L
441.1289 313.0293 L
440.8311 312.9648 L
440.5332 312.8789 L
440.2568 312.7305 L
440.002 312.5605 L
439.7676 312.3691 L
439.5771 312.1348 L
439.4072 311.8809 L
439.2578 311.6035 L
439.1523 311.3066 L
439.1094 311.0088 L
439.0879 310.6895 L
439.1094 310.3926 L
439.1523 310.0723 L
439.2578 309.7969 L
439.4072 309.5205 L
439.5771 309.2441 L
439.7676 309.0313 L
440.002 308.8184 L
440.2568 308.6484 L
440.5332 308.5 L
440.8311 308.4141 L
441.1289 308.3516 L
441.4482 308.3301 L
441.7451 308.3516 L
442.043 308.4141 L
442.3408 308.5 L
442.6172 308.6484 L
442.8721 308.8184 L
443.1064 309.0313 L
443.3184 309.2441 L
443.4883 309.5205 L
443.6162 309.7969 L
443.7227 310.0723 L
443.7861 310.3926 L
443.8076 310.6895 L
f
461.8359 276.1914 m
461.8154 276.5107 L
461.751 276.8086 L
461.666 277.1055 L
461.5176 277.3828 L
461.3477 277.6367 L
461.1348 277.8711 L
460.9219 278.0625 L
460.667 278.2334 L
460.3691 278.3809 L
460.0928 278.4883 L
459.7734 278.5313 L
459.4766 278.5508 L
459.1787 278.5313 L
458.8594 278.4883 L
458.583 278.3809 L
458.3066 278.2334 L
458.0313 278.0625 L
457.8184 277.8711 L
457.6055 277.6367 L
457.4355 277.3828 L
457.2871 277.1055 L
457.2012 276.8086 L
457.1377 276.5107 L
457.1172 276.1914 L
457.1377 275.8945 L
457.2012 275.5967 L
457.2871 275.2988 L
457.4355 275.0225 L
457.6055 274.7676 L
457.8184 274.5332 L
458.0313 274.3203 L
458.3066 274.1504 L
458.583 274.0234 L
458.8594 273.916 L
459.1787 273.8535 L
459.4766 273.832 L
459.7734 273.8535 L
460.0928 273.916 L
460.3691 274.0234 L
460.667 274.1504 L
460.9219 274.3203 L
461.1348 274.5332 L
461.3477 274.7676 L
461.5176 275.0225 L
461.666 275.2988 L
461.751 275.5967 L
461.8154 275.8945 L
461.8359 276.1914 L
f
471.3037 341.5313 m
471.2832 341.8281 L
471.2188 342.126 L
471.1123 342.4238 L
470.9844 342.7002 L
470.8145 342.9551 L
470.6025 343.1895 L
470.3682 343.4023 L
470.1133 343.5723 L
469.8369 343.6992 L
469.5391 343.8066 L
469.2412 343.8691 L
468.9443 343.8906 L
468.625 343.8691 L
468.3271 343.8066 L
468.0293 343.6992 L
467.7529 343.5723 L
467.498 343.4023 L
467.2637 343.1895 L
467.0732 342.9551 L
466.8818 342.7002 L
466.7539 342.4238 L
466.6484 342.126 L
466.6055 341.8281 L
466.584 341.5313 L
466.6055 341.2119 L
466.6484 340.9141 L
466.7539 340.6172 L
466.8818 340.3398 L
467.0732 340.0859 L
467.2637 339.8516 L
467.498 339.6602 L
467.7529 339.4893 L
468.0293 339.3418 L
468.3271 339.2344 L
468.625 339.1914 L
468.9443 339.1719 L
469.2412 339.1914 L
469.5391 339.2344 L
469.8369 339.3418 L
470.1133 339.4893 L
470.3682 339.6602 L
470.6025 339.8516 L
470.8145 340.0859 L
470.9844 340.3398 L
471.1123 340.6172 L
471.2188 340.9141 L
471.2832 341.2119 L
471.3037 341.5313 L
f
472.9766 271.9395 m
472.9551 272.2588 L
472.8906 272.5566 L
472.7852 272.8535 L
472.6582 273.1309 L
472.4863 273.3848 L
472.2744 273.6191 L
472.0625 273.8105 L
471.7852 273.9814 L
471.5098 274.1289 L
471.2324 274.2148 L
470.9141 274.2793 L
470.6162 274.2988 L
470.2969 274.2793 L
470 274.2148 L
469.7021 274.1289 L
469.4258 273.9814 L
469.1699 273.8105 L
468.9375 273.6191 L
468.7461 273.3848 L
468.5742 273.1309 L
468.4258 272.8535 L
468.3418 272.5566 L
468.2773 272.2588 L
468.2559 271.9395 L
468.2773 271.6426 L
468.3418 271.3223 L
468.4258 271.0469 L
468.5742 270.7705 L
468.7461 270.4941 L
468.9375 270.2813 L
469.1699 270.0684 L
469.4258 269.8984 L
469.7021 269.7715 L
470 269.6641 L
470.2969 269.6016 L
470.6162 269.5801 L
470.9141 269.6016 L
471.2324 269.6641 L
471.5098 269.7715 L
471.7852 269.8984 L
472.0625 270.0684 L
472.2744 270.2813 L
472.4863 270.4941 L
472.6582 270.7705 L
472.7852 271.0469 L
472.8906 271.3223 L
472.9551 271.6426 L
472.9766 271.9395 L
f
482.6699 286.0273 m
482.6494 286.3262 L
482.5859 286.6445 L
482.5 286.9209 L
482.3516 287.1973 L
482.1816 287.4531 L
481.9902 287.6875 L
481.7559 287.8994 L
481.502 288.0693 L
481.2246 288.1973 L
480.9277 288.3027 L
480.6299 288.3672 L
480.3105 288.3867 L
480.0137 288.3672 L
479.6934 288.3027 L
479.418 288.1973 L
479.1416 288.0693 L
478.8867 287.8994 L
478.6523 287.6875 L
478.4395 287.4531 L
478.2695 287.1973 L
478.1426 286.9209 L
478.0352 286.6445 L
477.9717 286.3262 L
477.9512 286.0273 L
477.9717 285.709 L
478.0352 285.4121 L
478.1426 285.1133 L
478.2695 284.8379 L
478.4395 284.583 L
478.6523 284.3486 L
478.8867 284.1563 L
479.1416 283.9863 L
479.418 283.8389 L
479.6934 283.7539 L
480.0137 283.6895 L
480.3105 283.668 L
480.6299 283.6895 L
480.9277 283.7539 L
481.2246 283.8389 L
481.502 283.9863 L
481.7559 284.1563 L
481.9902 284.3486 L
482.1816 284.583 L
482.3516 284.8379 L
482.5 285.1133 L
482.5859 285.4121 L
482.6494 285.709 L
482.6699 286.0273 L
f
479.3535 302.9219 m
479.333 303.2412 L
479.2695 303.5391 L
479.1631 303.8379 L
479.0352 304.1133 L
478.8652 304.3672 L
478.6523 304.6016 L
478.4189 304.8145 L
478.1641 304.9844 L
477.8867 305.1113 L
477.6113 305.2188 L
477.291 305.2813 L
476.9941 305.2813 L
476.6758 305.2813 L
476.377 305.2188 L
476.0801 305.1113 L
475.8037 304.9844 L
475.5488 304.8145 L
475.3145 304.6016 L
475.123 304.3672 L
474.9531 304.1133 L
474.8047 303.8379 L
474.7188 303.5391 L
474.6553 303.2412 L
474.6348 302.9219 L
474.6553 302.625 L
474.7188 302.3271 L
474.8047 302.0293 L
474.9531 301.7529 L
475.123 301.498 L
475.3145 301.2637 L
475.5488 301.0508 L
475.8037 300.8809 L
476.0801 300.7539 L
476.377 300.6484 L
476.6758 300.584 L
476.9941 300.5625 L
477.291 300.584 L
477.6113 300.6484 L
477.8867 300.7539 L
478.1641 300.8809 L
478.4189 301.0508 L
478.6523 301.2637 L
478.8652 301.498 L
479.0352 301.7529 L
479.1631 302.0293 L
479.2695 302.3271 L
479.333 302.625 L
479.3535 302.9219 L
f
LB
%AI5_EndLayer--
gsave annotatepage grestore showpage
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec

%%EndDocument
 @endspecial 523 4043 a Fs(Fig.)15 b(4.)24 b Fc(Upp)l(er)h(p)l(anel:)c
Ft(The)h(Hubble)f(diagram)g(for)i(high)e(redshift)h(SNIa)f(from)g(b)r
(oth)g(the)h Fa(HZSNS)523 4135 y Ft([83])e(and)e(the)f
Fa(SCP)i Ft([77].)h Fc(L)l(ower)h(p)l(anel:)e Ft(The)f(residual)h(of)g
(the)f(distances)h(relativ)n(e)g(to)f(a)h Fq(\012)3116
4143 y Fd(M)3204 4135 y Ft(=)i(0)p Fq(:)p Ft(3,)523 4226
y Fq(\012)582 4234 y Fd(\003)651 4226 y Ft(=)g(0)p Fq(:)p
Ft(7)j(Univ)n(erse.)f(The)h Fq(z)g(<)d Ft(0)p Fq(:)p
Ft(15)k(ob)t(jects)g(for)f(b)r(oth)g(teams)f(are)h(dra)n(wn)f(from)g
Fa(CTSS)h Ft(sample)523 4317 y([32],)j(so)g(man)n(y)d(of)i(these)g(ob)t
(jects)h(are)f(in)g(common)e(b)r(et)n(w)n(een)h(the)h(analyses)g(of)h
(the)e(t)n(w)n(o)h(teams.)p eop
%%Page: 18 18
18 17 bop 523 232 a Ft(18)199 b(P)n(erlm)n(utter)25 b(and)g(Sc)n(hmidt)
547 4077 y @beginspecial 45 @llx 105 @lly 503 @urx 710
@ury 3401 @rwi @setspecial
%%BeginDocument: PerlmutterSchmidtfig5.eps
%AI5_FileFormat 2.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: 6 29 596 789
%AI3_DocumentPreview: Header
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 1 0 1 0 1 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 2
%AI5_OpenToView: -181.5 1083.5 1 1596 1105 18 0 1 6 64 0 0
%AI5_OpenViewLayers: 77
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_ax neg 0 rmoveto
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
	bind def
} bind def
/xs
{
	exch store
} bd
/nullProc
{
	{
	}
} def
/initialize
{
	pop pop
	Adobe_blend_AI5 begin
		Adobe_blend_AI5_vars begin
			/_contoneDevice where
			{
				pop
			}
			{
				/_contoneDevice false def	
			} ifelse
					
			/_dpiThreshold where
			{
				pop
			}
			{	
				/_dpiThreshold 600 def
			} ifelse
			
			/_screenFreqThreshold where
			{
				pop
			}
			{	
				/_screenFreqThreshold 150 def
			} ifelse
			
			/tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
	/invertXfer
	{
		[
		{
			1 exch sub
				} /exec load systemdict/currenttransfer get exec /exec load
				] cvx systemdict/settransfer get exec
			} bd
			/spotDict 3 dict dup begin
				/nSpots 2 def
				/spot1 7 dict def
				/spot2 7 dict def
		 end
			def
			composite?
			{
				/_setgray_ /setgray load def
				/_fill_ /fill load def
				/_image_ /image load def
			}
			{
				/_setgray_ systemdict/setgray get def
				/_fill_ systemdict/fill get def
				/_image_ systemdict/image get def
			} ifelse
		} bd
		/terminate
		{
			currentdict Adobe_blend_AI5_vars eq
			{
		 end
			currentdict Adobe_blend_AI5 eq
			{
		 end
		} if
	} if
} bd
/_compositeSpotDevice where
{
 begin
		_compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
	/_compositeSpotDevice 0 def	
} ifelse
	
/nullString () def
/d255 256 array def
0 1 255
{
	d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
	d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
	/f /F /s /S /b /B
}
{
	null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
	save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
	pop lv1Fix
}
{
	false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
	null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
	0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
	counttomark 2 add -1 roll
} bd
/setCustomColor
{
	dup /ccTint exch store
	1 exch sub 6 1 roll
	ccAry1 astore
	exch setcustomcolor
} bd
/currentCustomColor
{
	ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where 
{
	pop
}
{
	/nsetcustomcolor
	{
		pop setcmykcolor	
	} bd
} ifelse
/nsetcustomcolorend where 
{
	pop
}
{
	/nsetcustomcolorend
	{
	} bd
} ifelse
/setBSpace
{
	newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
	dup 0 eq
	{
		pop
		
		spotColor?
			{
			dup 1 exch sub /ccTint exch def
			ccAry1 4 /Black put
			} if
		setgray
	}
	{
		1 eq
		{
			setcmykcolor
		}
		{
			composite? not colorType 2 lt and
			{
				forceCMYK
			}
			{
				setCustomColor
			} ifelse
		} ifelse
	} ifelse
} bd
/makeByte
{
	/tmp 0 store
	255 mul cvi
	8 string 8
	{
		dup tmp 3 index put /tmp tmp 1 add store
	} repeat
	exch pop
} bd
/setImgSpace
{
	cDataLen 1 8
	2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
	setImgSpace cData /_image_ load
	{
		exec
	} stopped
	{
		$error /errorname get /undefinedresult ne
		{
			stop
		}
		{
			pop pop pop pop pop
		} ifelse
	} if
} bd
level2?
{
	/bFill
	{
		_fill
	} def
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		expandCMYK
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
} if
/expandOne
{
			dup type /stringtype ne
			{
				cDataLen string
				exch
				dup 0 ne
				{
					255 mul cvi
					0 1 cDataLen 1 sub
					{
						3 copy
						exch put pop
					} for
				} if
				pop
			} if
} bd
/expandSpot
{
	spotColor?
	{
		spotDict begin
			spot1 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
			spot2 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
	 end
	} if
} bd
/expandCMYK
{
	4
	{
		expandOne 4 1 roll
	} repeat
} bd
/colorimage where dup
{
	exch pop
	
	/ncolorimage where
	{
		pop
	}
	{
		/ncolorimage {pop colorimage} bd
	} ifelse
} if
not
{
	/ncolorimage where 
	{
		pop
	}
	{
		/colorimage? false store
		/ncolorimage
		{
			pop pop pop
	
		setSSave
		/blackData xs
		/yeData xs
		/mgData xs
		/cyData xs
		/cnt1 0 store
		[
		byte dup 0
		cyData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
		}
		{
			.3 mul
		} ifelse
		mgData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
		}
		{
			.59 mul
		} ifelse
		yeData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
		}
		{
			.11 mul
		} ifelse
		blackData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx
		} if
		/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/dup cvx 1 /gt cvx
		{
			pop 1
		} /if cvx
		255 /mul cvx /cvi cvx
		256 /mod cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/put cvx
		/cnt1 dup cvx 1 /add cvx /store cvx
		] cvx
		bind
			_image_ 
		sSave restore
	} bd
	} ifelse
} if
level2? not
{
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		colorimage? 
		{
			expandCMYK
		} if
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bwFill
	{
		setSSave
		/cDataLen 8 store
		/cData currentgray makeByte store
		bwImage
		sSave restore
	} bd
	/c1ImgFill
	{
		setSSave
		/cDataLen 8 store
		setImgSpace
		spotColor?
		{
			spotDict begin
				spot1 begin
					currentCustomColor makeByte /tintImage exch def
					/name exch def
					/spot_K exch def
					/spot_Y exch def
					/spot_M exch def
					/spot_C exch def
			 end
				spot2 initSpotData
		 end
		} if
		currentcmykcolor
		4
		{
			makeByte 4 1 roll
		} repeat
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bFill
	noImg
	{
		{
			_fill
		}
	}
	{
		{
			color?
			{
				c1ImgFill
			}
			{
				bwFill
			} ifelse
		}
	} ifelse
	bd
} if
composite?
{
	/bCFun
	{
		color?
		{
			cyData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			mgData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			yeData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			cData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			spotColor?
			{
				spotDict begin
					/spotDict cvx /begin cvx
					spot1 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
					spot2 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/spotDict cvx
				/nsetcustomcolor cvx
			}
			{
				/setcmykcolor cvx
			} ifelse
		}
		{
			cData /ndx cvx /get cvx
			d255 /exch cvx /get cvx
			/setgray cvx
		} ifelse
	} bd
	/Bc
	{
		newpath
		gsave
		setBSpace
		nColors 1 eq
		{
			pop pop
			setCStop
		} if
		bFill
		grestore
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			linImg
		}
		{
			bFill
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		_fill
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			_fill
			blend? bHi? or
			{
				rdBlend
			} if
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/cGetRData
	{
		setCStop
		/blend?
		cData type /stringtype eq
		dup not color? and
		{
			pop
			cyData type /stringtype eq
			mgData type /stringtype eq
			yeData type /stringtype eq
			or or
		} if
		store
	} def
	/cGetRData
} if
/eCStop
{
	mark
	1 index 3 mul 3 add dup 8 gt
	{
		pop 8
	} if
	1 roll
	cleartomark
} bd
composite? not
{
	/knockOut
	level2?
	{
		{
			0 0 0 0 setcmykcolor _fill
		}
	}
	{
		/bFill noImg
		{
			{
				_fill
			}
		}
		{
			{
				_of true eq
				{
					currentgray 1 ne
					{
						bwFill
					} if
				}
				{
					bwFill
				} ifelse
			}
		} ifelse
		def
		/whiteByte 1 makeByte def
		noImg
		{
			{
				0 0 0 0 setcmykcolor _fill
			}
		}
		{
			{
				cBType 0 eq
				{
					setSSave
					/cData whiteByte store
					/cDataLen 8 store
					bwImage
					sSave restore
				}
				{
					_fill
				} ifelse
			}
		} ifelse
	} ifelse
	bd
	/bCFun
	{
		cData dup type /stringtype ne
		{
			color?
			{
				1 exch sub
			} if
		}
		{
			/ndx cvx /get cvx
			color? customColor? not and
			{
				d255-
			}
			{
				d255
			} ifelse
			/exch cvx /get cvx
		} ifelse
		/_setgray_ cvx
	} bd
	/eCCBlend
	{
		dup 3 eq
		{
			pop
			mark 7 1 roll
			6 copy ccThrough? dup /blend? xs
			{
				/startC? true store
				setCustomColor
				customColor?
				{
					/cData tint1Data store
					setCDataLen
				} if
				/endC?
				3 index 3 eq
				{
					4 index 1 ne
				}
				{
					false
				} ifelse
				store
			} if
			cleartomark
			stop
		} if
		1 eq
		{
			pop pop pop
		} if
		pop
		/startC? false store
		6
		{
			8 index
		} repeat
		ccThrough? dup /blend? xs
		{
			/endC? true store
			blend? not
			{
				stop
			} if
			customColor?
			{
				/cData tint1Data store
				setCDataLen
			} if
		} if
	} bd
	/handleOP
	{
		_of not
		{
			knockOut
		} if
	} bd
	/handleROP
	{
		_of not
		{
			0 0 0 0 setcmykcolor _fill
		}
		{
			newpath	
		} ifelse
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		blend? 
		{
			_fill
		}
		{
			handleROP
		} ifelse
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			blend?
			{
				cData type /stringtype ne bHi? not and
				{
					cData color?
					{
						1 exch sub
					} if
					_setgray_ 
					_fill_ 
				}
				{
					cData type /stringtype ne
					{
						/cDataLen 1 store
						/bDataLen 1 store
					} if
					rdBlend
				} ifelse
			}
			{
				
				handleROP
				
				pTState?
				{
					/bAxis rampPoint endPoint sub store
					xHi bAxis mul yHi bAxis mul translate
				} if
			} ifelse
				
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/ccThrough?
	{
		gsave
		pop 0 setCustomColor
		currentcmykcolor
		grestore
		anyColor?
	} bd
	/forceCMYK
	{
		exch pop
		1 exch sub 5 1 roll
		4
		{
			4 index mul 4 1 roll
		} repeat
		0
		cCMYKData dup /cData ne
		{
			dup /yeData eq
			{
				pop 1 add
			}
			{
				/mgData eq
				{
					2
				}
				{
					3
				} ifelse
				add
			} ifelse
			0
		} if
		pop
		index
		0 eq
		{
			pop pop pop pop 0 0 0 0
		} if
		setcmykcolor
		pop
		/fCMYK? true store
	} bd
	/endCapSepBc
	{
		pop pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				colorType 1 eq
				{
					forceCMYK
				}
				{
					fCMYK?
					{
						forceCMYK
					}
					{
						setCustomColor
					} ifelse
				} ifelse
			} ifelse
		} ifelse
		currentcmykcolor anyColor? 
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
		
	} bd
} if
/cCMYKData 0 def
composite? dup not
{
	pop customColor?
} if
not
{
	/cCMYKData
	/cyData /mgData /yeData /cData
	black? not
	{
		yellow?
		{
			exch
		}
		{
			magenta?
			{
				3
			}
			{
				4
			} ifelse
			-1 roll
		} ifelse
	} if
	4 1 roll pop pop pop
	store
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			
			blend? currentcmykcolor anyColor? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cCMYKData load dup type /stringtype eq
			{
				dup length /cDataLen xs
				/cData xs
				gsave
				colorType 0 ne noImg not and
				{
					invertXfer
				} if
				linImg
				grestore
			}
			{
				pop bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/cmykGetRData
	{
		/fCMYK? false store
		blend?
		{
			{
				cmykDataProcs colorType get exec
			} stopped
			pop
			blend?
			{
				/cData cCMYKData load store
				setCDataLen
			} if
		} if
	} def
	/cmykDataProcs
	[
	{
		pop
		black? dup /blend? xs
		{
			setgray
			0
		} if
		pop
	}
	{
		cCMYKData load dup type /stringtype ne
		{
			0 0 0
			cyan? not
			{
				4 magenta?
				{
					1
				}
				{
					yellow?
					{
						2
					}
					{
						3
					} ifelse
				} ifelse
				roll
			} if
			4 copy add add add 0 eq
			{
				/blend? false store
			} if
			
			setcmykcolor
			/startC? true store
			/endC? true store
			eCStop
			stop
		} if
		pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				forceCMYK
			} ifelse
		} ifelse
	} bind
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			black?
			{
				setgray
			}
			{
				0 0 0 4 -1 roll 1 exch sub setcmykcolor
			} ifelse
			black?
			{
				/blend? true store
			} if
			6
			{
				8 index
			} repeat
			ccThrough?
			{
				/blend? true store
			}
			{
				black?
				{
					/cData tint1Data store
					setCDataLen
				}
				{
					/blend? false store
				} ifelse
			} ifelse
		}
		{
			mark 7 1 roll
			6 copy ccThrough?
			{
				forceCMYK
				pop
				stop
			} if
			9 index 0 eq
			{
				black? dup /blend? xs
				{
					pop 1 setgray
					/cData tint2Data store
					setCDataLen
					0
				} if
				pop
			}
			{
				/blend?
				6
				{
					16 index
				} repeat
				ccThrough?
				store
				blend?
				{
					forceCMYK
				} if
			} ifelse
			cleartomark
		} ifelse
	} bind
	] def
	/cmykGetRData
} if
composite? dup not
{
	pop isCMYKSep?
} if
not
{
	/endCapSepBc
	{
		/white? false store
		pop pop
		dup 0 eq
		{
			pop
			/white? 1 index 1 eq store
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				setCustomColor
			} ifelse
		} ifelse
%
		currentcmykcolor anyColor?
		endC? or
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
	} bd
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			blend? startC? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cData type /stringtype eq
			{
				linImg
			}
			{
				bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/discardCMY
	{
		counttomark 4 add -3 roll pop pop pop
	} bd
	/testTopCC
	{
		6 copy ccThrough?
	} bd
	/getCRamp
	{
		{
			ccDataProcs colorType 2 sub get exec
		} stopped pop
		blend? cDataLen 0 eq and
		{
			/cDataLen bDataLen store
		} if
	} bd
	/ccGetRData
	{
		/fCMYK? false store
		/startC? false store
		/endC? false store
		colorType 2 lt
		{
			/blend? false def
		} if
		blend?
		{
			getCRamp
		}
		{
			setCStop
		} ifelse
		blend?
		{
			/blend? cData 1 ne store
			blend?
			{
				cData dup type /stringtype ne
				{
					1 exch sub /cData xs 0
				} if
				pop
			} if
		} if
	} def
	/ccDataProcs
	[
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			/blend? false store
			pop
		}
		{
			mark 7 1 roll
			testTopCC
			{
				/blend? 1 index 1 ne store
				/startC? blend? store
				/endC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint1Data store
				setCDataLen
				setCustomColor
				pop
				stop
			} if
			cleartomark
		} ifelse
		2 index 0 eq
		{
			/blend? false store
		}
		{
			mark 6
			{
				9 index
			} repeat
			testTopCC dup /blend? xs
			{
				/blend? 1 index 1 ne store
				/endC? blend? store
				/startC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint2Data store
				setCDataLen
			} if
			cleartomark
		} ifelse
	} bind
	] def
	/ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
	/cDataLen 0 cData dup type /stringtype eq
	{
		length exch
	} if
	pop store
} bd
/initSpotData
{
 begin
		/name null def
		/tintImage null def
		/tintValue null def
		/spot_C  null def
		/spot_M  null def
		/spot_Y  null def
		/spot_K  null def
 end
} bd
/getRData
{
	/colorType gMark store
	_compositeSpotDevice 0 ne
	{
		spotDict begin
			spot1 initSpotData
			spot2 initSpotData
	 end
		/spotColor? colorType 2 eq colorType 3 eq or def
	} 
	{
		/spotColor? false store
	} ifelse
	/blend? true store
	0 0 0 0 setcmykcolor
	100 div /rampPoint xs
% (between 13 and 87%) 
	100 div /midPoint xs
	dup 0 eq
	{
		2
	}
	{
		dup 1 eq
		{
			5
		}
		{
			_compositeSpotDevice 0 ne
			{
				spotDict begin
					spot1 begin
						/name 3 index def
						/spot_K 4 index def
						/spot_Y 5 index def
						/spot_M 6 index def
						/spot_C 7 index def
				 end
			 end
			} if
			7
		} ifelse
	} ifelse
	/tmp exch def
	tmp index 100 div /endPoint xs
	_compositeSpotDevice 0 ne
	{
		tmp 2 add index 3 eq
		{
			/tmp tmp 4 add def
			tmp index dup 
			spotDict begin
				spot1/name get ne
				{
					spot2 begin
						/name exch def
						/spot_K tmp 2 add index def
						/spot_Y tmp 3 add index def
						/spot_M tmp 4 add index def
						/spot_C tmp 5 add index def
				 end
				}
				{
					pop
				} ifelse
		 end
		} if
	} if
	/color? colorType 0 gt store
	
	colorType 3 eq
	{
		/tint2Data gMark store
	} if
	
	colorType 2 ge
	{
		/tint1Data gMark store
	} if
	_compositeSpotDevice 0 ne
	{
		spotDict begin
		
			colorType 2 ge
			{
				colorType 3 eq
				{
					spot2 begin
						/tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
						name null eq {/name /Black def} if
				 end
				} if
				spot1 begin
					/tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
					colorType 2 eq 
					{
						name null eq 
						{
							/name spot2/name get def
							spot2/name null put
						} if
					}
					{
						name null eq {/name /Black def} if
					} ifelse
			 end
			} if
	 end
	} if
	
	/cData gMark store
	setCDataLen
	colorType 0 gt
	{
		counttomark 4 add -3 roll
		/yeData xs
		/mgData xs
		/cyData xs
	} if
	blend?
	{
		/bDataLen
		cDataLen dup 0 eq color? and
		{
			[
			cyData mgData yeData
			]
			{
				dup type /stringtype eq
				{
					length exch pop exit
				} if
				pop
			} forall
		} if
		store
		bDataLen 0 eq
		{
			/bDataLen 1 store
		} if
		getData
		blend?
		{
			composite? cDataLen 0 eq and
			{
				/cDataLen bDataLen store
			} if
		} if
	}
	{
		setCStop
	} ifelse
} bd
/Bg
{
	0 0 0 0 setcmykcolor
	6
	{
		pop
	} repeat
	/blendLength xs
	pop pop pop
	/cBName xs
	/bRender xs
	bRender 2 ne
	{
		composite? not
		{
			_of setoverprint
		} if
		_eo {eoclip} {clip} ifelse
		_bn cBName 2 copy known
		{
			get
			mark exch aload pop
			/cBType xs
			/nColors xs
			mark exch aload pop
			0 0
		} if
		pop pop
		getRData
		cBType 0 eq
		{
			/linealBm
		}
		{
			bHi?
			{
				/pTState? nColors 2 gt store
			} if
			/doBlend /rdBlend load store
			/rdBm
		} ifelse
	}
	{
		inLine? not
		{
			mark mark
		} if
		/Bc dup
		{
			cleartomark mark
		} bd
		/nullProc
	} ifelse
	load /Bm xs
} bd
/linImg
noImg
{
	{
		newpath doRctBlend
	}
}
{
	{
		/doBlend
		color? composite? and
		{
			/bCImg
		}
		{
			/bwImage
		} ifelse
		load
		store
	
		0 0 moveto
		tRectOK? composite? and
		{
			{
				mark
				0 1 dtransform atan cvi 90 mod 0 eq
				1 0 dtransform atan cvi 90 mod 0 eq
			} stopped
			{
				cleartomark
			}
			{
				and exch pop
				{
					newpath
					doRctBlend
				}
				{
					doBlend
				} ifelse
			} ifelse
		}
		{
			doBlend
		} ifelse
	} 
} ifelse
bd
/doRctBlend
{
	gsave
	/sInc 1 store
	/nSamples bDataLen store
	/bInc 1 bDataLen div store
	/ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
	/pChange ubAxis 0 eq
	{
		0
	}
	{
		bDataLen ubAxis div
	} ifelse
	store
	pChange .5 gt noImg not and dup /optimize? xs
	{
		/nSamples ubAxis 2 div round cvi dup 1 le
		{
			pop 2
		} if
		store
		/bInc 1 nSamples div store
		/sInc bDataLen 1 sub nSamples 1 sub div store
	} if
	0
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	/rectfill where dup
	{
		exch pop _compositeSpotDevice 1 ne and
	} if
	{
		0 0 bInc 1 /rectfill cvx	
	}
	{
		0 0 /moveto cvx
		bInc 0 /lineto cvx
		bInc 1 /lineto cvx
		0 1 /lineto cvx
		/closepath cvx
		/_fill_ cvx
	} ifelse
	bInc 0 /translate cvx
	sInc /add cvx
	] cvx
	bind
	repeat
	pop
	spotColor? {nsetcustomcolorend} if
	
	grestore
} bd
/rdPrep
{
	/nSamples bDataLen dup 0 eq
	{
		pop 1
	} if
	store
	/sInc -1 store
	/bAxis rampPoint endPoint sub store
	/bInc bAxis bDataLen div neg store
	/optimize? false store
	tRectOK?
	{
		/ubAxis
		bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		2 copy lt
		{
			exch
		} if
		pop store
		/pChange ubAxis 0 eq
		{
			0
		}
		{
			bDataLen ubAxis div
		} ifelse
		store
		pChange .5 gt noImg not and dup /optimize? xs
		{
			/nSamples ubAxis 2 div round cvi dup 1 le
			{
				pop 2
			} if
			store
			/bInc bAxis nSamples div neg store
			/sInc bDataLen 1 sub nSamples 1 sub div neg store
		} if
	} if
	bHi?
	{
		/xBCInc xHi bAxis mul nSamples div store
		/yBCInc yHi bAxis mul nSamples div store
	} if
} bd
/rdBlend
{
	newpath
	gsave
	rdPrep
	rampPoint
	bDataLen 1 sub
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
	/exch cvx bInc /add cvx /exch cvx
	sInc /add cvx
	bHi?
	{
		xBCInc yBCInc /translate cvx
	} if
	] cvx
	bind
	repeat
	pop pop
	spotColor? {nsetcustomcolorend} if
	grestore
	pTState?
	{
		xHi bAxis mul yHi bAxis mul translate
	} if
} bd
/Bh
{
	pop pop
	/pTState? false store
	2 copy 0 ne exch 0 ne or dup /bHi? xs
	{
		/yHi xs
		/xHi xs
		0 0
	} if
	pop pop
} bd
/BD
{
	inLine? not
	{
		] nColors cBType
		] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
	3 -1 roll dup nullString eq dup
	{
		setSSave
	} if
	/inLine? exch def
	/cBName exch def
	/nColors exch def
	/cBType exch def
} bd
/Bb
{
	sSave null eq
	{
		Adobe_blend_AI5_vars begin
		setSSave
	} if
	composite?
	{
		/_fill /fill load store
	}
	{
		/__fill /fill load store
			/_fill
			{
				_of true eq
				{
					currentgray 1 ne
					{
						__fill
					} if
				}
				{
					__fill
				} ifelse
			} def
	} ifelse
	/fill
	{
	} def
	} bd
	/BB
	{
	/cBType xs
	cleartomark cleartomark
	cBType dup
	bRender
	sSave dup type /savetype eq
	{
		restore 0
	} if
	pop
	currentdict Adobe_blend_AI5_vars eq
	{
	 end
	} if
	2 ne exch 0 gt and
	{
		2 eq
		{
			s
		}
		{
			S
		} ifelse
	}
	{
		pop newpath
	} ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 50 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 40 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIDataProc null def
	/XIVersion 6 def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
end
currentdict /_colorimage known not {
	/colorimage where {
		/colorimage get /_colorimage exch def
	}{
		/_colorimage null def
	} ifelse
} if
/_image systemdict /image get def
/_currenttransfer systemdict /currenttransfer get def
/FourEqual {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual { 
				/plateindex 0 def
			}{
				0 1 0 0 FourEqual { 
					/plateindex 1 def
				}{
					0 0 1 0 FourEqual {
						/plateindex 2 def
					}{
						0 0 0 1 FourEqual { 
							/plateindex 3 def
						}{
							0 0 0 0 FourEqual {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/clrspaceissepn {
	type /arraytype eq 
} def
/clrspacegetname {
	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse
} def
/clrspacegetalt {
	aload pop pop pop colormake
} def
/clrspacegetcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/clrspacemarksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				/findcmykcustomcolor where {
					pop
					dup length 2 sub get
					0.1 0.1 0.1 0.1 5 -1 roll
					findcmykcustomcolor 1 setcustomcolor
					systemdict /currentgray get exec
					1 ne
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/colormake {
	dup clrspacegetcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/colorexpand {
	dup clrspacegetname exch
	dup clrspaceissepn {
		clrspacegetalt
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				clrspacegetalt colortint colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/WalkRGBString {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/CMYKToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/SeparateCMYKImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne {
			sourcearray plateindex get exec
		}{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub {
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/ColorImageCompositeEmulator {
	pop true eq {
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/colorimage {
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index
 end
	
	dup 8 eq exch 1 eq or not {
		/_colorimage load null ne {
			_colorimage
		}{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}{
		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {
			/_colorimage load null eq {
				ColorImageCompositeEmulator
			}{
				dup 1 eq {
					pop pop image
				}{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						grestore
					} if
				} ifelse
			} ifelse
		}{
			dup 1 eq {
				pop pop
				image
			}{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0 {			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace clrspacegetcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] makeimagedict _image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] makeimagedict _image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} stringapply
			} concatprocs _image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} stringapply
			} concatprocs false _pticomps
			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse
		} ifelse
	} ifelse
} def
/graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray proctintimage
} def
/cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK proctintimage
} def
/rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB proctintimage
} def
/tintimage {
	TestPlateIndex -1 eq {
		colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop graytintimage
		}{
			dup /DeviceRGB eq {
				pop rgbtintimage
			}{
				pop cmyktintimage
			} ifelse
		} ifelse
	}{
		dup clrspacemarksplate {
			plateindex 5 lt {
				colortocmyk plateindex get 1 exch sub
				exch {1 0}{0 1} ifelse () graytintimage
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage
			} ifelse
		}{
			pop pop pop
			{pop 1} 0 1 () /DeviceGray proctintimage
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace tintimage
} def
/XIImage {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIType 1 eq {
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEncoding 0 ne XIVersion 6 le and {
			currentfile 128 string readline pop pop
		} if
		XICompression 0 eq {
			/XIBuffer1 XIRowBytes string def
			XIEncoding 0 eq {
				{currentfile XIBuffer1 readhexstring pop}
			}{
				{currentfile XIBuffer1 readstring pop}
			} ifelse
		}{
			/XIBuffer1 256 string def
			/XIBuffer2 XIRowBytes string def
			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
			/ASCIIHexDecode filter /DCTDecode filter
			/XIFile exch def
			{XIFile XIBuffer2 readstring pop}
		} ifelse
		/XIDataProc exch def
		
		XIVersion 6 le {
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIType 1 eq {
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		XIEnable {
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		grestore
 end
} def
end
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
Adobe_level2_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI5_Begin_NonPrinting
Np
4 Bn
%AI5_BeginGradient: (Black, White)
(Black, White) 0 2 Bd
[
0
0
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
1 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Chrome)
(Chrome) 0 6 Bd
[
0
<
464646454545444444444343434342424241414141404040403F3F3F3E3E3E3E3D3D3D3C3C3C3C3B
3B3B3B3A3A3A39393939383838383737373636363635353535343434333333333232323131313130
3030302F2F2F2E2E2E2E2D2D2D2D2C2C2C2B2B2B2B2A2A2A2A292929282828282727272626262625
2525252424242323232322222222212121202020201F1F1F1F1E1E1E1D1D1D1D1C1C1C1B1B1B1B1A
1A1A1A1919191818181817171717161616151515151414141413131312121212111111101010100F
0F0F0F0E0E0E0D0D0D0D0C0C0C0C0B0B0B0A0A0A0A09090909080808070707070606060505050504
04040403030302020202010101010000
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
1F1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1A1A1A1A1A
1A1A1A19191919191919191818181818181818181717171717171717161616161616161615151515
15151515151414141414141414131313131313131312121212121212121211111111111111111010
1010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C
0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A090909090909090909080808080808080807070707070707
07060606060606060606050505050505050504040404040404040303030303030303030202020202
02020201010101010101010000000000
>
1 %_Br
0
0.275
1
<
6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544
434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F
>
1 %_Br
0
<
00000101010102020202030303040404040505050606060607070707080808090909090A0A0A0A0B
0B0B0C0C0C0C0D0D0D0D0E0E0E0F0F0F0F1010101111111112121212131313141414141515151516
161617171717181818181919191A1A1A1A1B1B1B1C1C1C1C1D1D1D1D1E1E1E1F1F1F1F2020202021
212122222222232323232424242525252526262627272727282828282929292A2A2A2A2B2B2B2B2C
2C2C2D2D2D2D2E2E2E2E2F2F2F303030303131313232323233333333343434353535353636363637
373738383838393939393A3A3A3B3B3B3B3C3C3C3D3D3D3D3E3E3E3E3F3F3F404040404141414142
42424343434344444444454545464646
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
00000101020203030304040505050606070708080809090A0A0B0B0B0C0C0D0D0D0E0E0F0F101010
1111121212131314141515151616171718181819191A1A1A1B1B1C1C1D1D1D1E1E1F1F1F20202121
222222232324242525252626272727282829292A2A2A2B2B2C2C2D2D2D2E2E2F2F2F303031313232
32333334343435353636373737383839393A3A3A3B3B3C3C3C3D3D3E3E3F3F3F4040414142424243
4344444445454646474747484849494A4A4A4B4B4C4C4C4D4D4E4E4F4F4F50505151515252535354
54545555565657575758585959595A5A5B5B5C5C5C5D5D5E5E5E5F5F606061616162626363646464
6565666666676768686969696A6A6B6B
>
1 %_Br
0
0
0
0
1 %_Br
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
4D4C4C4C4B4B4B4A4A4A4A4949494848484747474746464645454544444444434343424242414141
414040403F3F3F3E3E3E3E3D3D3D3C3C3C3B3B3B3B3A3A3A39393938383838373737363636353535
35343434333333323232323131313030302F2F2F2F2E2E2E2D2D2D2C2C2C2C2B2B2B2A2A2A292929
2928282827272726262626252525242424232323232222222121212020201F1F1F1F1E1E1E1D1D1D
1C1C1C1C1B1B1B1A1A1A191919191818181717171616161615151514141413131313121212111111
101010100F0F0F0E0E0E0D0D0D0D0C0C0C0B0B0B0A0A0A0A09090908080807070707060606050505
04040404030303020202010101010000
>
0
0
1 %_Br
[
1 0 50 92 %_Bs
0 0.275 1 0.12 1 50 59 %_Bs
0 0.275 1 0.42 1 50 50 %_Bs
1 0 50 49 %_Bs
1 0 50 41 %_Bs
1 0.3 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060607070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_Bs
1 1 0 0 1 50 80 %_Bs
1 0.0279 0 0 1 50 60 %_Bs
1 0 1 0 1 50 40 %_Bs
0 0 1 0 1 50 20 %_Bs
0 1 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E6
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_Bs
0 0.55 0.9 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Brick)
(Brick) 0 0 72 72 [
%AI3_Tile
(0 O 0 R 0.3 0.85 0.85 0 k
 0.3 0.85 0.85 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
0 0 m
0 72 L
72 72 L
72 0 L
0 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d
0 XR
0 68.4097 m
72 68.4097 l
S
0 61.209 m
72 61.209 L
S
0 54.0088 m
72 54.0088 L
S
0 46.8076 m
72 46.8076 L
S
0 39.6084 m
72 39.6084 L
S
0 32.4072 m
72 32.4072 L
S
0 25.207 m
72 25.207 L
S
0 18.0059 m
72 18.0059 L
S
0 10.8057 m
72 10.8057 L
S
0 3.6064 m
72 3.6064 L
S
68.4102 68.4097 m
68.4102 61.2217 l
S
54.0098 68.4097 m
54.0098 61.2217 L
S
39.6094 68.4097 m
39.6094 61.2217 L
S
25.21 68.4097 m
25.21 61.2217 L
S
10.8105 68.4097 m
10.8105 61.2217 L
S
68.4102 53.9717 m
68.4102 46.7842 l
S
54.0098 53.9717 m
54.0098 46.7842 L
S
39.6094 53.9717 m
39.6094 46.7842 L
S
25.21 53.9717 m
25.21 46.7842 L
S
10.8105 53.9717 m
10.8105 46.7842 L
S
68.4102 39.5967 m
68.4102 32.4092 l
S
54.0098 39.5967 m
54.0098 32.4092 L
S
39.6094 39.5967 m
39.6094 32.4092 L
S
25.21 39.5967 m
25.21 32.4092 L
S
10.8105 39.5967 m
10.8105 32.4092 L
S
68.4102 25.2217 m
68.4102 18.0342 l
S
54.0098 25.2217 m
54.0098 18.0342 L
S
39.6094 25.2217 m
39.6094 18.0342 L
S
25.21 25.2217 m
25.21 18.0342 L
S
10.8105 25.2217 m
10.8105 18.0342 L
S
68.4102 10.7842 m
68.4102 3.5967 l
S
54.0098 10.7842 m
54.0098 3.5967 L
S
39.6094 10.7842 m
39.6094 3.5967 L
S
25.21 10.7842 m
25.21 3.5967 L
S
10.8105 10.7842 m
10.8105 3.5967 L
S
61.1973 3.5967 m
61.1973 0 L
S
46.7969 3.5967 m
46.7969 0 L
S
32.3965 3.5967 m
32.3965 0 L
S
17.9971 3.5967 m
17.9971 0 L
S
3.5967 3.5967 m
3.5967 0 l
S
61.1973 18.0342 m
61.1973 10.8467 L
S
46.7969 18.0342 m
46.7969 10.8467 L
S
32.3965 18.0342 m
32.3965 10.8467 L
S
17.9971 18.0342 m
17.9971 10.8467 L
S
3.5967 18.0342 m
3.5967 10.8467 l
S
61.1973 32.4092 m
61.1973 25.2217 L
S
46.7969 32.4092 m
46.7969 25.2217 L
S
17.9971 32.4092 m
17.9971 25.2217 L
S
3.5967 32.4092 m
3.5967 25.2217 l
S
61.1973 46.7842 m
61.1973 39.5967 L
S
46.7969 46.7842 m
46.7969 39.5967 L
S
32.3965 46.7842 m
32.3965 39.5967 L
S
17.9971 46.7842 m
17.9971 39.5967 L
S
3.5967 46.7842 m
3.5967 39.5967 l
S
61.1973 61.2217 m
61.1973 54.0347 L
S
46.7969 61.2217 m
46.7969 54.0347 L
S
32.3965 61.2217 m
32.3965 54.0347 L
S
17.9971 61.2217 m
17.9971 54.0347 L
S
3.5967 61.2217 m
3.5967 54.0347 l
S
61.1973 71.959 m
61.1973 68.4717 L
S
46.7969 71.959 m
46.7969 68.4717 L
S
32.3965 71.959 m
32.3965 68.4717 L
S
17.9971 71.959 m
17.9971 68.4717 L
S
3.5967 71.959 m
3.5967 68.4717 l
S
32.3965 32.4092 m
32.3965 25.2217 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Confetti)
(Confetti) 4.85 3.617 76.85 75.617 [
%AI3_Tile
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
4.85 3.617 m
4.85 75.617 L
76.85 75.617 L
76.85 3.617 L
4.85 3.617 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d
0 XR
10.6 64.867 m
7.85 62.867 l
S
9.1 8.617 m
6.85 6.867 l
S
78.1 68.617 m
74.85 67.867 l
S
76.85 56.867 m
74.35 55.117 l
S
79.6 51.617 m
76.6 51.617 l
S
76.35 44.117 m
73.6 45.867 l
S
78.6 35.867 m
76.6 34.367 l
S
76.1 23.867 m
73.35 26.117 l
S
78.1 12.867 m
73.85 13.617 l
S
68.35 14.617 m
66.1 12.867 l
S
76.6 30.617 m
73.6 30.617 l
S
62.85 58.117 m
60.956 60.941 l
S
32.85 59.617 m
31.196 62.181 l
S
47.891 64.061 m
49.744 66.742 l
S
72.814 2.769 m
73.928 5.729 l
S
67.976 2.633 m
67.35 5.909 l
S
61.85 27.617 m
59.956 30.441 l
S
53.504 56.053 m
51.85 58.617 l
S
52.762 1.779 m
52.876 4.776 l
S
45.391 5.311 m
47.244 7.992 l
S
37.062 3.375 m
35.639 5.43 l
S
55.165 34.828 m
57.518 37.491 l
S
20.795 3.242 m
22.12 5.193 l
S
14.097 4.747 m
15.008 8.965 l
S
9.736 1.91 m
8.073 4.225 l
S
31.891 5.573 m
32.005 8.571 l
S
12.1 70.367 m
15.6 68.867 l
S
9.35 54.867 m
9.6 58.117 l
S
12.85 31.867 m
14.35 28.117 l
S
10.1 37.367 m
12.35 41.117 l
S
34.1 71.117 m
31.85 68.617 l
S
38.35 71.117 m
41.6 68.367 l
S
55.1 71.117 m
58.35 69.117 l
S
57.35 65.117 m
55.35 61.867 l
S
64.35 66.367 m
69.35 68.617 l
S
71.85 62.867 m
69.35 61.117 l
S
23.6 70.867 m
23.6 67.867 l
S
20.6 65.867 m
17.35 65.367 l
S
24.85 61.367 m
25.35 58.117 l
S
25.85 65.867 m
29.35 66.617 l
S
14.1 54.117 m
16.85 56.117 l
S
12.35 11.617 m
12.6 15.617 l
S
12.1 19.867 m
14.35 22.367 l
S
26.1 9.867 m
23.6 13.367 l
S
34.6 47.117 m
32.1 45.367 l
S
62.6 41.867 m
59.85 43.367 l
S
31.6 35.617 m
27.85 36.367 l
S
36.35 26.117 m
34.35 24.617 l
S
33.85 14.117 m
31.1 16.367 l
S
37.1 9.867 m
35.1 11.117 l
S
34.35 20.867 m
31.35 20.867 l
S
44.6 56.617 m
42.1 54.867 l
S
47.35 51.367 m
44.35 51.367 l
S
44.1 43.867 m
41.35 45.617 l
S
43.35 33.117 m
42.6 30.617 l
S
43.85 23.617 m
41.1 25.867 l
S
44.35 15.617 m
42.35 16.867 l
S
67.823 31.1 m
64.823 31.1 l
S
27.1 32.617 m
29.6 30.867 l
S
31.85 55.117 m
34.85 55.117 l
S
19.6 40.867 m
22.1 39.117 l
S
16.85 35.617 m
19.85 35.617 l
S
20.1 28.117 m
22.85 29.867 l
S
52.1 42.617 m
54.484 44.178 l
S
52.437 50.146 m
54.821 48.325 l
S
59.572 54.133 m
59.35 51.117 l
S
50.185 10.055 m
53.234 9.928 l
S
51.187 15.896 m
53.571 14.075 l
S
58.322 19.883 m
59.445 16.823 l
S
53.1 32.117 m
50.6 30.367 l
S
52.85 24.617 m
49.6 25.617 l
S
61.85 9.117 m
59.1 10.867 l
S
69.35 34.617 m
66.6 36.367 l
S
67.1 23.617 m
65.1 22.117 l
S
24.435 46.055 m
27.484 45.928 l
S
25.437 51.896 m
27.821 50.075 l
S
62.6 47.117 m
65.321 46.575 l
S
19.85 19.867 m
20.35 16.617 l
S
21.85 21.867 m
25.35 22.617 l
S
37.6 62.867 m
41.6 62.117 l
S
38.323 42.1 m
38.823 38.6 l
S
69.35 52.617 m
66.85 53.867 l
S
14.85 62.117 m
18.1 59.367 l
S
9.6 46.117 m
7.1 44.367 l
S
20.6 51.617 m
18.6 50.117 l
S
46.141 70.811 m
47.994 73.492 l
S
69.391 40.561 m
71.244 43.242 l
S
38.641 49.311 m
39.35 52.117 l
S
25.141 16.811 m
25.85 19.617 l
S
36.6 32.867 m
34.6 31.367 l
S
6.1 68.617 m
2.85 67.867 l
S
4.85 56.867 m
2.35 55.117 l
S
7.6 51.617 m
4.6 51.617 l
S
6.6 35.867 m
4.6 34.367 l
S
6.1 12.867 m
1.85 13.617 l
S
4.6 30.617 m
1.6 30.617 l
S
72.814 74.769 m
73.928 77.729 l
S
67.976 74.633 m
67.35 77.909 l
S
52.762 73.779 m
52.876 76.776 l
S
37.062 75.375 m
35.639 77.43 l
S
20.795 75.242 m
22.12 77.193 l
S
9.736 73.91 m
8.073 76.225 l
S
10.1 23.617 m
6.35 24.367 l
S
73.217 18.276 m
71.323 21.1 l
S
28.823 39.6 m
29.505 42.389 l
S
49.6 38.617 m
47.6 37.117 l
S
60.323 73.6 m
62.323 76.6 l
S
60.323 1.6 m
62.323 4.6 l
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Leaves - Fall )
(Leaves - Fall ) 0 0 64.0781 78.9336 [
%AI3_Tile
(0 O 0 R 0.05 0.2 1 0 k
 0.05 0.2 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
64.0781 78.9336 m
64.0781 0 L
0 0 L
0 78.9336 L
64.0781 78.9336 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.83 0 1 0 k
 0.83 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
29.7578 0.9902 m
30.4346 1.1914 30.7246 1.3428 V
29.2559 4.0547 33.707 8.3359 34.627 9.0762 C
35.2275 8.8506 35.3477 6.3184 34.6699 4.9805 C
35.5137 5.1035 37.7031 3.7256 38.4609 2.4365 C
38.5254 3.125 40.0957 6.0664 40.9219 6.4434 C
40.002 6.8408 39.3359 8.3135 38.5742 9.7617 C
39.5957 9.9287 40.9961 9.0078 42.4668 8.1025 C
42.9814 8.9043 44.3555 9.875 45.6143 10.3916 C
44.5264 11.0781 44.0313 11.8203 43.5352 13.2793 C
42.4922 12.7139 40.3057 12.5645 39.7764 12.8516 C
40.291 13.9648 42.5371 14.5078 43.2676 14.4551 C
43.0137 15.3164 42.8652 17.4697 43.0391 20.0625 C
41.3789 18.7461 39.834 17.4297 38.1738 17.4883 C
38.4434 16.0664 37.8076 14.2607 37.4307 13.7676 C
36.8574 14.5117 36.4463 15.3389 36.8008 17.3164 C
35.3486 17.8008 34.1113 18.3467 32.7373 19.6045 C
32.7373 17.7734 32.166 16.5723 31.2969 15.2959 C
32.5576 14.8076 33.8301 13.6045 33.8252 12.5664 C
32.9775 12.7178 31.2852 13.4619 30.793 14.4551 C
30.0742 13.707 28.3906 12.3984 26.7871 12.3945 C
27.9746 11.5391 28.8945 10.5059 28.9893 8.5938 C
30.2422 9.5645 32.6953 10.1797 34.0752 9.582 C
29.2344 5.3457 29.7031 2.3125 29.7578 0.9902 C
f
13.8525 29.9844 m
13.3281 29.5127 13.1309 29.25 V
15.623 27.4326 13.3691 21.6074 12.8555 20.5439 C
12.2168 20.4883 10.8096 23.2285 10.8457 24.7266 C
9.7129 23.9707 8.0488 24.0918 6.4463 24.3779 C
7.0186 23.2891 6.6172 21.3447 5.8164 20.5439 C
6.8184 20.5801 8.1699 19.8652 9.4785 18.8838 C
8.6436 18.0645 6.8164 18.2246 4.9004 18.8838 C
4.9004 17.5107 4.0781 15.7734 3.2412 14.5918 C
4.5576 14.6484 5.7031 13.9629 6.5605 12.9316 C
7.2256 14.5 9.2598 15.6133 10.166 15.5645 C
10.1826 14.1992 8.6094 12.1094 7.5879 11.7109 C
8.1875 11.041 9.207 9.5107 10.166 7.0947 C
10.9648 9.0205 12.1348 10.2627 13.3672 11.1953 C
12.2256 12.7578 12.3994 13.6289 12.7988 15.1074 C
13.541 14.5664 14.5723 14.1338 14.7441 12.1309 C
16.4609 12.416 17.5957 12.3447 19.0938 11.4434 C
18.6387 13.1055 18.6348 14.707 18.9551 16.4063 C
17.1055 16.2666 15.5449 16.4795 14.5156 17.9688 C
15.3457 18.1953 17.6055 18.2549 18.4795 17.3223 C
18.8066 18.3047 19.7012 19.7109 21.1475 20.4043 C
19.707 20.6641 18.7227 21.7637 17.8135 23.4492 C
17.1006 22.0332 14.873 20.3691 13.3711 20.3145 C
15.373 24.3779 15.373 27.2959 13.8525 29.9844 C
f
41.2324 26.0742 m
41.5518 26.7021 41.7549 26.959 V
44.1523 25.0176 48.958 28.3262 49.8535 29.0957 C
49.7432 29.7266 47.6182 30.8643 45.9004 29.834 C
46.3408 31.123 45.4395 33.084 44.2402 34.126 C
45.9805 34.0254 48.126 35.3867 48.6484 36.1289 C
48.8701 35.1514 50.0527 33.8809 51.3379 32.8672 C
51.6895 33.8398 50.9941 35.958 50.0781 37.5605 C
51.3125 38.0605 52.4248 38.9912 52.8828 40.25 C
53.3398 38.9336 54.3428 38.2598 55.6875 37.5039 C
54.5273 36.0762 53.7471 33.9023 54.0273 33.0391 C
55.3496 33.374 56.9209 36.0918 57.0439 37.1816 C
57.9189 36.415 59.4727 35.7285 62.0537 35.4219 C
60.3535 34.3438 59.9902 32.3516 59.4063 30.9219 C
58.2588 31.3682 56.0898 31.4277 55.1152 30.8643 C
55.8281 30.2852 57.168 29.7344 59.1777 29.7207 C
59.1777 28.1758 59.6406 27.043 60.8945 25.8281 C
59.1719 25.8418 57.0723 25.3555 55.5762 24.9629 C
55.3281 26.292 54.4844 27.8887 53.3398 28.2891 C
53.334 27.4277 53.5996 25.1797 54.4844 24.5117 C
53.6201 23.9443 52.3672 22.5674 51.9102 20.8496 C
51.2881 22.1758 50.4268 23.4805 48.5645 23.9238 C
49.749 24.9766 50.584 26.9941 50.25 28.4609 C
45.1973 24.4785 42.5215 25.7773 41.2324 26.0742 C
f
27.7578 38.7324 m
28.4346 38.9316 28.7246 39.084 V
27.2559 41.7969 31.707 46.0776 32.627 46.8169 C
33.2275 46.5918 33.3477 44.0586 32.6699 42.7227 C
33.5137 42.8457 35.7031 41.4678 36.4609 40.1787 C
36.5254 40.8652 38.0957 43.8066 38.9219 44.1846 C
38.002 44.582 37.3359 46.0547 36.5742 47.5039 C
37.5957 47.6709 38.9961 46.7485 40.4668 45.8438 C
40.9814 46.6445 42.3555 47.6177 43.6143 48.1328 C
42.5264 48.8198 42.0313 49.5615 41.5352 51.0205 C
40.4922 50.4556 38.3057 50.3057 37.7764 50.5938 C
38.291 51.7056 40.5371 52.2485 41.2676 52.1958 C
41.0137 53.0576 40.8652 55.2109 41.0391 57.8037 C
39.3789 56.4878 37.834 55.1719 36.1738 55.2285 C
36.4434 53.8076 35.8076 52.002 35.4307 51.5088 C
34.8574 52.2529 34.4463 53.0796 34.8008 55.0576 C
33.3486 55.5425 32.1113 56.0879 30.7373 57.3467 C
30.7373 55.5146 30.166 54.314 29.2969 53.0366 C
30.5576 52.5488 31.8301 51.3467 31.8252 50.3076 C
30.9775 50.46 29.2852 51.2036 28.793 52.1958 C
28.0742 51.4497 26.3906 50.1396 24.7871 50.1357 C
25.9746 49.2817 26.8945 48.2466 26.9893 46.335 C
28.2422 47.3057 30.6953 47.9209 32.0752 47.3237 C
27.2344 43.0869 27.7031 40.0547 27.7578 38.7324 C
f
13.5195 70.3916 m
12.9941 69.9209 12.7988 69.6587 V
15.2891 67.8418 13.0352 62.0146 12.5225 60.9517 C
11.8828 60.8955 10.4766 63.6367 10.5117 65.1348 C
9.3809 64.3789 7.7148 64.4995 6.1133 64.7856 C
6.6855 63.6987 6.2842 61.7529 5.4834 60.9517 C
6.4854 60.9878 7.8359 60.2729 9.1455 59.2925 C
8.3105 58.4717 6.4834 58.6338 4.5674 59.2925 C
4.5674 57.9189 3.7461 56.1816 2.9082 54.9995 C
4.2246 55.0576 5.3691 54.3706 6.2275 53.3408 C
6.8926 54.9097 8.9258 56.0215 9.832 55.9727 C
9.8496 54.6079 8.2764 52.5176 7.2539 52.1187 C
7.8545 51.4497 8.873 49.9189 9.832 47.5039 C
10.6309 49.4297 11.8008 50.6719 13.0342 51.6045 C
11.8926 53.1655 12.0664 54.0366 12.4648 55.5146 C
13.209 54.9746 14.2393 54.5415 14.4102 52.5386 C
16.127 52.8247 17.2637 52.7529 18.7598 51.8525 C
18.3057 53.5137 18.3027 55.1147 18.623 56.8149 C
16.7725 56.6748 15.2129 56.8887 14.1826 58.377 C
15.0117 58.6035 17.2725 58.6626 18.1465 57.731 C
18.4736 58.7129 19.3691 60.1187 20.8145 60.8125 C
19.375 61.0728 18.3896 62.1719 17.4805 63.8579 C
16.7676 62.4429 14.541 60.7769 13.0371 60.7227 C
15.041 64.7856 15.041 67.7046 13.5195 70.3916 C
f
41.2324 64.4824 m
41.5518 65.1113 41.7549 65.3682 V
44.1523 63.4272 48.958 66.7354 49.8535 67.5034 C
49.7432 68.1362 47.6182 69.2725 45.9004 68.2422 C
46.3408 69.5313 45.4395 71.4922 44.2402 72.5342 C
45.9805 72.4341 48.126 73.7954 48.6484 74.5371 C
48.8701 73.5601 50.0527 72.29 51.3379 71.2754 C
51.6895 72.249 50.9941 74.3662 50.0781 75.9683 C
51.3125 76.4692 52.4248 77.3994 52.8828 78.6582 C
53.3398 77.3423 54.3428 76.667 55.6875 75.9111 C
54.5273 74.4844 53.7471 72.3101 54.0273 71.4473 C
55.3496 71.7822 56.9209 74.5 57.0439 75.5903 C
57.9189 74.8232 59.4727 74.1372 62.0537 73.8311 C
60.3535 72.7534 59.9902 70.7612 59.4063 69.3301 C
58.2588 69.7773 56.0898 69.8364 55.1152 69.2725 C
55.8281 68.6934 57.168 68.1431 59.1777 68.1284 C
59.1777 66.583 59.6406 65.4512 60.8945 64.2373 C
59.1719 64.249 57.0723 63.7632 55.5762 63.3721 C
55.3281 64.7002 54.4844 66.2974 53.3398 66.6973 C
53.334 65.8364 53.5996 63.5874 54.4844 62.9214 C
53.6201 62.353 52.3672 60.9751 51.9102 59.2583 C
51.2881 60.583 50.4268 61.8882 48.5645 62.333 C
49.749 63.3862 50.584 65.4033 50.25 66.8691 C
45.1973 62.8872 42.5215 64.1851 41.2324 64.4824 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Stripes)
(Stripes) 8.45 4.6001 80.45 76.6001 [
%AI3_Tile
(0 O 0 R 1 0.07 1 0 k
 1 0.07 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 3.6 w 4 M []0 d
0 XR
8.2 8.2 m
80.7 8.2 L
S
8.2 22.6001 m
80.7 22.6001 L
S
8.2 37.0002 m
80.7 37.0002 L
S
8.2 51.4 m
80.7 51.4 L
S
8.2 65.8001 m
80.7 65.8001 L
S
8.2 15.4 m
80.7 15.4 L
S
8.2 29.8001 m
80.7 29.8001 L
S
8.2 44.2 m
80.7 44.2 L
S
8.2 58.6001 m
80.7 58.6001 L
S
8.2 73.0002 m
80.7 73.0002 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 k
Pc
1 1 1 1 k
Pc
0 0 0 0 k
Pc
0 0 0 1 k
Pc
0 0.1 1 0 k
Pc
0 0.5 0 0 k
Pc
0 0.5 1 0 k
Pc
1 0.55 1 0 k
Pc
1 0.9 0.1 0 k
Pc
0.15 1 1 0 k
Pc
0.45 0.9 0 0 k
Pc
0.5 0.4 0.3 0 k
Pc
0.5 0.85 1 0 k
Pc
0.75 0.05 1 0 k
Pc
0.75 0.9 0 0 k
Pc
0.8 0.05 0 0 k
Pc
Bb
2 (Black, White) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
2 (Chrome) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
2 (Rainbow) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
Pc
(Brick) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Confetti) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Leaves - Fall ) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
PB
%AI5_EndPalette
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
0 O
0.82 g
0 J 0 j 1 w 4 M []0 d
0 XR
126.0625 340.8584 m
127.2832 343.1992 L
128.5283 343.1992 L
129.7739 345.54 L
130.9946 345.54 L
132.2402 347.8379 L
133.4604 347.8379 L
134.7061 350.1787 L
135.9517 350.1787 L
137.1724 352.5195 L
138.4175 354.8613 L
139.6631 354.8613 L
140.8838 357.2021 L
142.1294 357.2021 L
143.3745 359.543 L
144.5952 359.543 L
145.8408 361.8848 L
147.0864 364.2256 L
148.3066 364.2256 L
149.5522 366.5664 L
150.7979 366.5664 L
152.0181 368.9082 L
153.2637 368.9082 L
154.4844 371.249 L
155.73 373.5898 L
156.9756 373.5898 L
158.1958 375.9316 L
159.4414 375.9316 L
160.687 378.2725 L
161.9077 378.2725 L
163.1528 380.6133 L
164.3984 382.9551 L
165.6191 382.9551 L
166.8643 385.252 L
168.1099 385.252 L
169.3306 387.5928 L
170.5762 389.9346 L
171.8213 389.9346 L
173.042 392.2754 L
174.2876 392.2754 L
175.5083 394.6162 L
176.7534 396.9575 L
177.999 396.9575 L
179.2197 399.2988 L
180.4653 399.2988 L
181.7104 401.6401 L
182.9312 403.981 L
184.1768 403.981 L
185.4219 406.3223 L
186.6426 406.3223 L
189.1338 411.0044 L
190.354 411.0044 L
191.5996 413.3457 L
192.8452 414.4941 L
194.0659 415.687 L
195.3115 418.0283 L
196.5317 418.0283 L
197.7773 420.3691 L
199.0229 422.7104 L
200.2432 422.7104 L
201.4888 425.0073 L
202.7344 426.2002 L
203.9551 427.3486 L
205.2002 429.6895 L
206.4458 429.6895 L
207.6665 432.0308 L
208.9121 434.3721 L
210.1572 434.3721 L
211.3779 436.7134 L
212.6235 439.0542 L
213.8691 439.0542 L
215.0894 441.3955 L
216.335 443.7368 L
217.5557 443.7368 L
220.0464 448.4189 L
221.2671 448.4189 L
222.5127 450.7603 L
223.7578 453.1016 L
224.9785 453.1016 L
226.2241 455.4424 L
227.4697 457.7837 L
228.6899 457.7837 L
229.9355 460.125 L
231.1812 462.4658 L
232.4014 462.4658 L
234.8677 467.104 L
236.1133 467.104 L
237.3589 469.4453 L
238.5791 471.7861 L
239.8247 471.7861 L
242.291 476.4688 L
243.5361 476.4688 L
244.7817 478.8096 L
246.0024 481.1509 L
247.248 483.4922 L
248.4932 483.4922 L
250.9595 488.1743 L
252.2046 488.1743 L
255.8916 495.1982 L
257.1367 495.1982 L
258.3823 497.5391 L
259.603 499.8804 L
262.0938 502.1772 L
264.5601 506.8594 L
265.8057 506.8594 L
267.0259 509.2007 L
268.2715 511.542 L
270.7373 516.2241 L
271.9829 516.2241 L
273.2285 518.5654 L
276.915 525.5889 L
278.1606 525.5889 L
279.4063 527.9297 L
283.1177 534.9536 L
284.3384 534.9536 L
286.8291 539.6357 L
288.0498 541.9326 L
289.2949 544.2739 L
293.0068 551.2974 L
294.252 551.2974 L
295.4727 553.6387 L
296.7183 555.9795 L
302.896 567.6855 L
304.1411 570.0269 L
306.6074 574.709 L
306.6074 577.0503 L
311.5645 586.3706 L
311.5645 588.7119 L
312.7852 591.0527 L
314.0303 593.394 L
314.0303 595.7354 L
315.2754 598.0762 L
315.2754 600.4175 L
316.4961 602.7588 L
316.4961 616.8057 L
315.2754 619.1025 L
314.0303 621.4438 L
311.5645 621.4438 L
310.3193 623.7852 L
301.6504 623.7852 L
299.1841 621.4438 L
295.4727 621.4438 L
294.252 619.1025 L
291.7612 619.1025 L
289.2949 616.8057 L
288.0498 616.8057 L
285.5835 614.4644 L
284.3384 614.4644 L
279.4063 609.7822 L
278.1606 609.7822 L
273.2285 605.1001 L
271.9829 603.9072 L
259.603 592.2456 L
258.3823 591.0527 L
257.1367 589.9043 L
253.4253 586.3706 L
252.2046 584.0293 L
246.0024 578.1987 L
244.7817 577.0503 L
243.5361 574.709 L
239.8247 571.1753 L
238.5791 568.834 L
237.3589 567.6855 L
234.8677 565.3442 L
233.647 563.0029 L
231.1812 560.6621 L
229.9355 559.5137 L
228.6899 557.1724 L
227.4697 555.9795 L
226.2241 554.8311 L
224.9785 553.6387 L
223.7578 551.2974 L
222.5127 550.1489 L
221.2671 548.9561 L
220.0464 546.6152 L
217.5557 544.2739 L
216.335 541.9326 L
215.0894 540.7842 L
213.8691 539.6357 L
212.6235 537.2944 L
210.1572 534.9531 L
208.9121 532.6123 L
207.6665 531.4194 L
206.4458 530.271 L
205.2002 527.9297 L
203.9551 526.7373 L
202.7344 525.5889 L
201.4888 523.2476 L
200.2432 522.0547 L
199.0229 520.9063 L
197.7773 518.5654 L
195.3115 516.2241 L
194.0659 513.8833 L
192.8452 512.7344 L
191.5996 511.542 L
190.354 509.2007 L
187.8882 506.8594 L
186.6426 504.5186 L
185.4219 503.3701 L
184.1768 501.0288 L
182.9312 499.8804 L
181.7104 498.6875 L
181.0879 497.5391 L
180.4653 496.3467 L
179.2197 495.1982 L
177.999 492.8569 L
175.5083 490.5156 L
174.2876 488.1743 L
171.8213 485.8335 L
170.5762 483.4922 L
169.3306 482.2993 L
168.1099 481.1509 L
166.8643 478.8096 L
165.6191 477.6611 L
164.3984 475.3203 L
163.1528 474.1274 L
161.9077 471.7861 L
159.4414 469.4453 L
158.1958 467.104 L
156.9756 465.9556 L
155.73 464.7627 L
154.4844 462.4658 L
153.2637 460.1245 L
152.0181 458.9321 L
150.7979 457.7837 L
149.5522 455.4424 L
148.3066 454.2495 L
147.0864 453.1011 L
145.8408 450.7603 L
144.5952 449.5674 L
143.9727 448.4189 L
143.3745 447.2261 L
142.1294 446.0781 L
140.8838 443.7368 L
139.6631 442.5884 L
138.4175 441.3955 L
137.1724 439.0542 L
135.9517 437.9058 L
134.7061 436.7134 L
133.4604 434.3721 L
132.2402 432.0308 L
130.9946 430.8823 L
129.7739 429.6895 L
128.5283 427.3486 L
127.2832 426.2002 L
126.0625 425.0073 L
F
0.88 g
0 R
0.58 G
[3 4 ]0 d
126.5649 318.0742 m
127.9868 320.7246 130.2808 321.7002 132.0439 323.7412 c
138.7139 331.4619 145.7456 338.5479 152.5513 346.1504 c
155.1201 349.0186 157.1323 351.6953 159.3096 354.2305 c
164.0322 359.7275 168.2798 365.5381 173.1235 370.9268 c
175.0225 373.0391 176.8521 374.9346 178.9004 377.2188 c
182.7715 381.5342 187.0161 385.7969 190.3438 390.668 c
196.8979 400.2603 205.1846 408.0371 212.3799 417.0498 c
217.2173 423.1094 221.5547 428.8955 226.6216 434.6494 c
233.0479 441.9468 238.4951 450.3428 244.0898 458.2949 c
246.4492 461.6494 249.3652 464.5796 252.0044 468.5029 c
256.6611 475.4258 263.1221 481.9878 267.7588 488.9102 c
272.8125 496.4541 277.8716 503.5581 283.0552 510.833 c
288.5801 518.5874 292.2007 525.8491 297.7842 534.0063 c
305.3989 545.1313 312.2012 556.6357 318.5156 568.5391 C
319.3887 570.1753 L
319.7637 570.8838 L
320.6367 572.52 L
329.293 588.9248 L
329.293 591.2695 L
329.666 591.9766 L
330.5391 593.6128 330.5391 593.6138 V
334.4395 600.9453 339.5625 613.4023 339.1953 621.6924 C
340.4434 624.0361 L
340.4434 633.3799 340.4434 633.416 v
340.4375 636.2954 337.2598 640.8794 335.0596 642.5093 c
332.4326 644.4556 328.0176 643.6563 325.9385 646.1528 C
327.3779 644.4238 318.5205 644.8188 318.4111 644.8047 c
315.0947 644.3701 311.9785 641.6709 308.6133 642.0791 C
307.3906 639.7339 L
303.6743 639.7339 L
302.4272 637.3906 L
299.9575 637.3906 L
298.7095 635.0479 L
296.2407 635.0479 L
294.9937 632.7031 L
292.5229 632.7031 L
291.2764 630.3604 L
288.8071 630.3604 L
287.5601 628.0156 L
286.3379 628.0156 L
285.0898 625.6724 L
282.6206 625.6724 L
281.374 623.3296 L
280.126 623.3296 L
278.9033 620.9849 L
277.6567 620.9849 L
276.7837 619.3496 L
276.4097 618.6421 L
275.187 618.6421 L
273.9395 616.2979 L
272.6924 616.2979 L
271.4697 613.9536 L
270.2231 613.9536 L
268.9751 611.6104 L
267.7529 611.6104 L
266.5063 609.2661 L
265.2837 609.2661 L
264.0366 606.9229 L
262.7891 606.9229 L
261.5664 604.5796 L
260.3193 604.5796 L
259.0728 602.2803 L
257.8652 602.2803 257.8506 602.2803 V
258.0249 602.2803 248.7227 591.5142 248.0005 590.7031 c
245.084 587.4253 242.7856 585.0107 240.1563 581.1626 c
236.084 575.2036 229.8047 569.5361 225.1538 563.8525 c
214.8647 551.269 204.4717 538.5161 194.8564 525.3169 c
188.3633 516.4028 180.2759 508.3501 174.0034 499.21 c
169.6865 492.9204 163.8076 488.1768 160.3657 481.249 C
160.0161 480.5405 L
159.1436 478.9048 L
158.7695 478.1978 L
157.5215 478.1978 L
156.6733 476.5615 L
155.0522 473.5103 L
153.8052 473.5103 L
152.957 471.874 L
151.3354 468.8223 L
150.0884 468.8223 L
149.2397 467.1855 L
148.8657 466.4795 L
147.9927 464.8423 L
147.6191 464.1343 L
146.3711 464.1343 L
145.1489 461.791 L
144.2759 460.1548 L
143.9019 459.4482 L
142.6548 459.4482 L
141.8066 457.812 L
141.4326 457.1035 L
140.5596 455.4688 L
140.1851 454.7603 L
138.9624 454.7603 L
138.0894 453.124 L
137.7153 452.4175 L
136.8423 450.7803 L
136.4688 450.0728 L
135.6201 448.436 L
135.2461 447.7295 L
133.9985 447.7295 L
133.125 446.0928 L
132.7515 445.4302 L
131.9033 443.7495 L
131.5288 443.0869 L
130.2817 443.0869 L
129.4092 441.4507 L
129.0352 440.7427 L
127.813 438.3994 L
126.5649 438.3994 L
B
[]0 d
126.0625 326.8115 m
127.2832 326.8115 L
128.5283 329.1523 L
129.7739 329.1523 L
130.9946 331.4932 L
132.2402 333.835 L
133.4604 333.835 L
134.7061 336.1758 L
135.9517 336.1758 L
137.1724 338.5166 L
138.4175 338.5166 L
140.8838 343.1992 L
142.1294 343.1992 L
143.3745 345.54 L
144.5952 345.54 L
145.8408 347.8379 L
147.0864 347.8379 L
148.3066 350.1787 L
149.5522 352.5195 L
150.7979 352.5195 L
152.0181 354.8613 L
153.2637 354.8613 L
154.4844 357.2021 L
155.73 359.543 L
156.9756 359.543 L
158.1958 361.8848 L
159.4414 361.8848 L
160.687 364.2256 L
161.9077 366.5664 L
163.1528 366.5664 L
164.3984 368.9082 L
165.6191 368.9082 L
166.8643 371.249 L
168.1099 373.5898 L
169.3306 373.5898 L
170.5762 375.9316 L
171.8213 375.9316 L
173.042 378.2725 L
174.2876 380.6143 L
175.5083 380.6143 L
176.7534 382.9551 L
177.999 382.9551 L
179.2197 385.252 L
180.4653 387.5928 L
181.7104 387.5928 L
182.9312 389.9346 L
184.1768 392.2754 L
185.4219 392.2754 L
186.6426 394.6162 L
187.8882 394.6162 L
189.1338 396.9575 L
190.354 399.2988 L
191.5996 399.2988 L
192.8452 401.6401 L
194.0659 403.981 L
195.3115 403.981 L
196.5317 406.3223 L
197.7773 406.3223 L
199.0229 408.6636 L
200.2432 411.0049 L
201.4888 411.0049 L
202.7344 413.3457 L
203.9551 415.687 L
205.2002 415.687 L
206.4458 418.0283 L
207.6665 420.3691 L
208.9121 420.3691 L
210.1572 422.7104 L
211.3779 422.7104 L
212.6235 425.0073 L
213.8691 427.3486 L
215.0894 427.3486 L
217.5557 432.0308 L
218.8008 432.0308 L
220.0464 434.3721 L
221.2671 436.7134 L
222.5127 436.7134 L
223.7578 439.0542 L
224.9785 441.3955 L
226.2241 441.3955 L
227.4697 443.7368 L
228.6899 446.0781 L
229.9355 446.0781 L
231.1812 448.4189 L
232.4019 450.7603 L
233.647 450.7603 L
236.1133 455.4424 L
237.3589 455.4424 L
238.5791 457.7837 L
239.8247 460.125 L
241.0703 460.125 L
244.7817 467.104 L
246.0024 467.104 L
247.248 469.4453 L
248.4932 471.7861 L
249.7139 471.7861 L
252.2046 476.4688 L
253.4253 476.4688 L
255.8916 481.1509 L
257.1367 483.4922 L
258.3823 483.4922 L
262.0938 490.5156 L
263.3145 490.5156 L
265.8057 495.1982 L
267.0259 495.1982 L
268.2715 497.5391 L
270.7373 502.1772 L
271.9829 502.1772 L
273.2285 504.5186 L
275.6943 509.2007 L
276.915 511.542 L
278.1606 511.542 L
281.8721 518.5654 L
283.1177 518.5654 L
286.8291 525.5889 L
288.0498 527.9297 L
289.2954 527.9297 L
295.4727 539.6357 L
296.7183 539.6357 L
297.939 541.9326 L
302.896 551.2974 L
304.1411 553.6387 L
305.3618 555.9795 L
307.8525 560.6621 L
309.0732 560.6621 L
312.7852 567.6855 L
314.0303 570.0269 L
316.4961 574.709 L
316.4961 577.0503 L
318.9629 581.6885 L
320.208 584.0293 L
323.9199 591.0527 L
323.9199 593.394 L
327.6309 600.4175 L
327.6309 602.7588 L
328.877 605.1001 L
328.877 607.4409 L
330.0967 609.7822 L
330.0967 612.123 L
331.3428 614.4644 L
331.3428 628.4673 L
327.6309 635.4907 L
326.3857 635.4907 L
325.165 637.832 L
309.0732 637.832 L
307.8525 635.4907 L
302.896 635.4907 L
301.6504 633.1494 L
299.1841 633.1494 L
297.939 630.8086 L
295.4727 630.8086 L
294.252 628.4673 L
291.7612 628.4673 L
290.5405 626.126 L
288.0498 626.126 L
286.8291 623.7852 L
284.3384 623.7852 L
283.1177 621.4438 L
281.8721 621.4438 L
280.627 619.1025 L
279.4063 619.1025 L
278.1606 616.8057 L
275.6943 616.8057 L
274.4492 614.4648 L
273.2285 614.4648 L
271.9829 612.1235 L
270.7373 612.1235 L
269.5171 609.7822 L
268.2715 609.7822 L
267.0259 607.4409 L
265.8057 607.4409 L
264.5601 605.1001 L
263.3145 605.1001 L
262.0938 602.7588 L
260.8486 602.7588 L
258.3823 598.0767 L
257.1367 598.0767 L
255.8916 595.7354 L
254.6709 595.7354 L
253.4253 593.394 L
252.2046 593.394 L
250.9595 591.0527 L
249.7139 588.7119 L
248.4932 588.7119 L
247.248 586.3706 L
246.0024 586.3706 L
244.7817 584.0293 L
243.5361 581.6885 L
242.291 581.6885 L
241.0703 579.3916 L
239.8247 579.3916 L
238.5791 577.0503 L
237.3589 574.709 L
236.1133 574.709 L
234.8677 572.3682 L
233.647 572.3682 L
232.4019 570.0269 L
231.1812 567.6855 L
229.9355 567.6855 L
227.4697 563.0029 L
226.2241 563.0029 L
223.7578 558.3208 L
222.5127 558.3208 L
221.2671 555.9795 L
220.0464 553.6387 L
218.8008 553.6387 L
216.335 548.9565 L
215.0894 548.9565 L
213.8691 546.6152 L
212.6235 546.6152 L
210.1572 541.9331 L
208.9121 541.9331 L
207.6665 539.6357 L
206.4458 537.2944 L
205.2002 537.2944 L
202.7344 532.6123 L
201.4888 532.6123 L
200.2432 530.2715 L
199.0229 527.9302 L
197.7773 525.5889 L
196.5317 525.5889 L
194.0659 520.9067 L
192.8452 520.9067 L
191.5996 518.5654 L
190.354 516.2241 L
189.1338 516.2241 L
186.6426 511.542 L
185.4219 511.542 L
184.1768 509.2007 L
182.9312 506.8594 L
181.7104 506.8594 L
179.2197 502.1772 L
177.999 502.1772 L
175.5083 497.5391 L
174.2876 497.5391 L
173.042 495.1982 L
171.8213 492.8569 L
170.5762 492.8569 L
169.3306 490.5156 L
168.1099 488.1743 L
166.8643 488.1743 L
165.6191 485.8335 L
164.3984 483.4922 L
163.1528 481.1514 L
161.9077 481.1514 L
159.4414 476.4688 L
158.1958 476.4688 L
156.9756 474.1279 L
155.73 471.7866 L
154.4844 471.7866 L
153.2637 469.4453 L
152.0181 467.104 L
150.7979 467.104 L
149.5522 464.7632 L
148.3066 462.4658 L
147.0864 460.125 L
145.8408 460.125 L
144.5952 457.7837 L
143.3745 455.4424 L
142.1294 455.4424 L
139.6631 450.7603 L
138.4175 450.7603 L
137.1724 448.4189 L
135.9517 446.0781 L
134.7061 446.0781 L
133.4609 443.7368 L
132.2402 441.3955 L
130.9946 439.0542 L
129.7739 439.0542 L
128.5283 436.7134 L
127.2832 434.3721 L
126.0625 434.3721 L
F
0.82 g
0 R
0.64 G
[3 4 ]0 d
126.5649 341.4082 m
127.813 343.7539 L
129.0352 343.7539 L
130.2817 346.0957 L
131.5288 346.0957 L
132.0283 347.0254 L
132.7515 348.4414 L
133.9985 348.4414 L
134.4971 349.3691 L
135.2461 350.7832 L
136.4688 350.7832 L
136.9673 351.7129 L
137.7153 353.127 L
138.2144 354.0566 L
138.9624 355.4707 L
140.1851 355.4707 L
140.6836 356.4004 L
141.4326 357.8145 L
142.6548 357.8145 L
143.1538 358.7422 L
143.9019 360.1133 L
145.1489 360.1133 L
145.6475 361.0879 L
146.3711 362.457 L
147.6191 362.457 L
148.1177 363.4316 L
148.8657 364.8027 L
149.3647 365.7734 L
150.0884 367.1465 L
151.3354 367.1465 L
151.834 368.0742 L
152.583 369.4883 L
153.8052 369.4883 L
154.3047 370.418 L
155.0522 371.834 L
156.2993 371.834 L
156.7734 372.7617 L
157.5215 374.1758 L
158.0205 375.1055 L
158.7695 376.5215 L
160.0161 376.5215 L
160.4897 377.4492 L
161.2388 378.8633 L
162.4858 378.8633 L
162.9844 379.793 L
163.708 381.207 L
164.207 382.1367 L
164.9551 383.5508 L
166.2031 383.5508 L
166.7017 384.4805 L
167.4248 385.8945 L
168.6719 385.8945 L
170.418 389.168 L
171.1416 390.582 L
172.3892 390.582 L
173.6362 392.9258 L
174.8584 392.9258 L
175.3574 393.8535 L
176.1055 395.269 L
176.6045 396.1987 L
177.3535 397.6133 L
178.5757 397.6133 L
179.0747 398.542 L
179.8228 399.9131 L
181.0698 399.9131 L
181.5435 400.8848 L
182.292 402.2559 L
182.7905 403.2295 L
183.5396 404.6006 L
184.7622 404.6006 L
185.2607 405.5728 L
186.0088 406.9438 L
187.2559 406.9438 L
189.7261 411.6313 L
190.9731 411.6313 L
191.4722 412.5596 L
192.1953 413.9751 L
192.6943 414.9028 L
193.4424 415.6113 L
194.6899 416.3179 L
195.9116 418.6626 L
197.1592 418.6626 L
197.6582 419.5903 L
198.4063 421.0059 L
199.6289 423.3486 L
200.876 423.3486 L
202.5972 426.6221 L
203.3462 427.3296 L
204.5928 428.0361 L
205.8149 430.3809 L
207.062 430.3809 L
207.561 431.3096 L
208.3096 432.7241 L
209.5322 435.0669 L
210.7793 435.0669 L
211.2778 435.9971 L
212.0264 437.3667 L
213.2485 439.7114 L
214.4966 439.7114 L
214.9951 440.6831 L
215.7432 442.0552 L
216.2422 443.0283 L
216.9658 444.3979 L
218.2129 444.3979 L
220.6826 449.0859 L
221.9297 449.0859 L
222.4287 450.0137 L
223.1768 451.4302 L
223.6509 452.3579 L
224.3989 453.7734 L
225.646 453.7734 L
227.3672 457.0464 L
228.1162 458.4609 L
229.3633 458.4609 L
231.0845 461.7324 L
231.832 463.147 L
233.0801 463.147 L
235.5493 467.8354 L
236.7964 467.8354 L
237.2954 468.7632 L
238.0186 470.1802 L
238.5176 471.1084 L
239.2666 472.5229 L
240.5137 472.5229 L
242.9829 477.1655 L
244.231 477.1655 L
245.9521 480.4824 L
246.6997 481.8535 L
247.1992 482.8267 L
247.9224 484.1963 L
249.1689 484.1963 L
250.417 486.541 L
250.916 487.4692 L
251.6396 488.8838 L
252.8862 488.8838 L
253.3853 489.8125 L
254.1333 491.2271 L
254.6323 492.1572 L
255.356 493.5723 L
255.8545 494.5 L
256.6035 495.9155 L
257.8506 495.9155 L
258.3237 496.8433 L
259.0728 498.2598 L
259.5718 499.1885 L
260.3193 500.603 L
260.8188 501.5317 L
261.5664 502.2393 L
262.7891 502.9463 L
263.2881 503.876 L
264.0366 505.2905 L
264.5356 506.2192 L
265.2837 507.6338 L
266.5063 507.6338 L
267.0049 508.562 L
267.7529 509.9766 L
268.252 510.9067 L
268.9751 512.3223 L
269.4746 513.25 L
270.2231 514.665 L
270.7222 515.5942 L
271.4697 516.9639 L
272.6924 516.9639 L
273.1914 517.9375 L
273.9395 519.3086 L
274.4385 520.2803 L
275.187 521.6523 L
275.686 522.625 L
276.4097 523.9956 L
277.6567 523.9956 L
278.1553 524.9248 L
278.9033 526.3398 L
279.3779 527.2686 L
280.126 528.6831 L
280.625 529.6113 L
281.374 531.0259 L
281.8726 531.9561 L
282.6206 533.3706 L
283.0938 534.2993 L
283.8428 535.7139 L
285.0898 535.7139 L
285.5889 536.6421 L
286.3379 538.0591 L
286.811 538.9868 L
287.5601 540.4019 L
288.0581 541.3296 L
288.8071 542.7451 L
289.3057 543.6743 L
290.0293 545.0898 L
290.5283 546.0176 L
291.2764 547.4326 L
292.5229 547.4326 L
293.022 548.3604 L
293.7456 549.7759 L
294.2446 550.7051 L
294.9937 552.1201 L
295.4917 553.0488 L
296.2407 554.4199 L
296.7388 555.3921 L
297.4624 556.7632 L
297.9614 557.7363 L
298.7095 559.1074 L
299.2085 560.0796 L
299.9575 561.4507 L
300.4312 562.3794 L
301.1802 563.7935 L
301.6782 564.7236 L
302.4272 566.1392 L
302.9253 567.0669 L
303.6743 568.4819 L
304.1479 569.4097 L
304.896 570.8252 L
305.395 571.7544 L
306.1445 573.1694 L
306.6426 574.0977 L
307.3906 575.5127 L
307.8652 576.4419 L
308.6133 577.8574 L
309.1113 578.7852 L
311.582 583.4736 L
311.582 585.8164 L
315.2988 592.8472 L
315.2988 595.1904 L
316.0469 596.562 L
316.5449 597.5356 L
317.2949 598.9067 L
317.793 599.8784 L
317.793 602.1772 L
318.5156 603.5928 L
319.0156 604.522 L
319.0156 609.209 L
319.7637 610.6235 L
320.2617 611.5532 L
320.2617 616.2397 L
319.7637 617.1694 L
319.0156 618.584 L
319.0156 620.9272 L
318.5156 621.8555 L
317.2949 624.2002 L
316.0469 624.2002 L
314.7988 626.5435 L
302.4272 626.5435 L
301.9282 625.6157 L
301.1802 624.9072 L
299.9575 624.2002 L
297.4624 624.2002 L
296.2407 623.7568 L
295.7417 623.27 L
294.9937 621.8555 L
292.5229 621.8555 L
292.0254 620.9272 L
291.2764 620.2212 L
290.0293 619.5127 L
288.8071 619.5127 L
288.3081 618.584 L
287.5601 617.8755 L
286.3379 617.1694 L
285.0898 616.7261 L
283.8428 615.5327 L
282.6206 614.8252 L
282.1221 613.8965 L
281.374 613.188 L
280.126 612.4814 L
278.9033 612.0386 L
275.187 608.502 L
273.9395 607.8369 L
273.4404 606.8652 L
272.6924 606.1572 L
271.4697 605.4941 L
270.9712 604.522 L
270.2231 603.8579 L
268.9751 603.1509 L
268.502 602.1772 L
267.7529 601.5146 L
266.5063 600.8062 L
266.0068 599.8784 L
265.2837 599.1719 L
264.0366 598.4634 L
263.5381 597.5356 L
262.7891 596.8271 L
261.5664 596.1201 L
261.0684 595.1904 L
260.3193 594.4839 L
259.0728 593.2905 L
258.5737 592.8472 L
253.6343 588.1597 L
252.3877 585.8164 L
251.6396 585.1079 L
250.417 584.4014 L
249.918 583.4736 L
249.1689 582.7651 L
247.9224 581.6157 L
247.4478 581.1289 L
246.6997 580.4219 L
245.4526 579.2725 L
244.9541 578.7852 L
243.7319 576.4419 L
242.9829 575.7344 L
241.7358 574.584 L
241.2368 574.0977 L
240.5137 573.3911 L
239.6406 571.7544 L
239.2666 571.0459 L
238.0186 570.3398 L
237.52 569.4097 L
236.7964 568.7031 L
235.5493 567.5537 L
235.0503 567.0669 L
233.8037 564.7236 L
233.0801 564.061 L
231.832 562.8657 L
231.3335 562.3794 L
230.585 561.7158 L
229.3633 559.3726 L
228.1162 558.1777 L
227.6172 557.7363 L
226.8682 557.0283 L
225.646 555.8345 L
225.1479 555.3936 L
223.8999 553.0488 L
221.9297 551.147 L
221.4307 550.7051 L
220.1836 548.3618 L
219.4604 547.6543 L
218.2129 546.4609 L
217.7134 546.0176 L
216.4663 543.6743 L
215.7432 542.9658 L
214.4966 541.8164 L
213.9976 541.3296 L
212.7495 538.9868 L
212.0264 538.2798 L
210.7793 537.1304 L
210.2803 536.6436 L
209.0576 534.2993 L
208.3096 533.5923 L
207.062 532.4429 L
206.563 531.9561 L
205.3408 529.6133 L
204.5928 528.9048 L
203.3462 527.7544 L
202.8467 527.2686 L
201.6245 524.9248 L
200.876 524.2622 L
199.6289 523.0669 L
199.1299 522.625 L
197.9072 520.2822 L
197.1592 519.5742 L
195.9116 518.3809 L
195.4136 517.9375 L
194.1909 515.5942 L
193.4424 514.8862 L
192.1953 513.6934 L
191.7212 513.2515 L
190.9731 511.8345 L
190.4741 510.9067 L
189.7261 510.1997 L
188.4785 509.0054 L
188.0049 508.564 L
186.7568 506.2192 L
186.0088 505.5122 L
185.1357 503.876 L
184.7622 503.1675 L
183.5396 502.0176 L
182.292 500.8247 L
181.4189 499.1885 L
181.0698 498.4814 L
179.8228 497.3315 L
179.3232 496.8447 L
178.5757 495.4302 L
178.0767 494.5015 L
177.3535 493.7939 L
176.1055 492.644 L
175.6064 492.1572 L
174.8584 490.7861 L
174.3599 489.814 L
173.6362 489.1055 L
172.3892 487.9561 L
171.8901 487.4712 L
170.668 485.1265 L
169.9189 484.4629 L
168.6719 483.27 L
168.1729 482.8267 L
166.9507 480.4839 L
166.2031 479.7754 L
165.3301 478.1392 L
164.9551 477.4321 L
163.708 476.2373 L
163.2349 475.7959 L
162.4858 474.3809 L
161.9868 473.4531 L
161.2388 472.7446 L
160.0161 471.5513 L
159.5176 471.1084 L
158.7695 469.6934 L
158.2705 468.7646 L
157.5215 468.0571 L
156.2993 466.9067 L
155.8003 466.4219 L
154.5532 464.0771 L
153.8052 462.6626 L
153.3062 461.7339 L
152.583 461.0259 L
150.8359 459.3911 L
150.0884 457.9741 L
149.6143 457.0464 L
148.8657 456.3394 L
147.6191 455.1899 L
147.1201 454.7036 L
146.3711 453.2881 L
145.8975 452.3579 L
145.1489 451.6519 L
144.2759 450.0151 L
143.9019 449.3071 L
142.6548 448.644 L
142.1807 447.6719 L
141.4326 446.3008 L
140.9336 445.3271 L
140.1851 444.6646 L
138.9624 443.4712 L
138.4644 443.0283 L
137.7153 441.6133 L
137.2168 440.6846 L
136.4688 439.9771 L
135.2461 438.7837 L
134.7471 438.3418 L
133.9985 436.9258 L
133.5005 435.9971 L
132.7515 434.5825 L
132.2524 433.6538 L
131.5288 432.9458 L
130.2817 432.2397 L
128.5605 428.9663 L
127.813 428.2598 L
126.5649 427.1104 L
B
0.73 g
0.61 G
1.5 w
126.0625 378.2725 m
127.2832 378.2725 L
128.5283 379.4209 L
129.7739 379.4209 L
130.9946 380.6133 L
132.2402 381.3643 L
133.4604 382.1602 L
134.7061 382.9551 L
135.9517 383.7061 L
137.1724 384.501 L
137.7949 385.252 L
138.4175 386.0469 L
140.8838 387.5928 L
142.1294 388.7852 L
143.3745 389.9346 L
144.5952 390.7295 L
145.8408 391.7012 L
146.4634 392.2754 L
147.0864 393.0703 L
148.3066 394.042 L
149.5522 395.1909 L
150.7979 396.207 L
151.3955 396.9575 L
152.0181 397.5322 L
153.2637 398.5039 L
153.8867 399.2988 L
154.4844 399.873 L
155.73 401.0659 L
156.3525 401.6401 L
158.8188 403.9814 L
159.4414 404.5557 L
160.687 405.748 L
161.9077 406.8965 L
163.1528 408.0894 L
165.6191 410.4302 L
166.0425 411.0049 L
166.8643 411.9321 L
168.1099 413.3457 L
169.3306 414.4941 L
170.5762 415.687 L
173.042 418.0283 L
174.2876 419.3975 L
175.1094 420.3691 L
175.5083 420.811 L
176.7534 422.0923 L
177.999 423.2847 L
179.2197 424.5659 L
181.7104 427.3486 L
182.9312 428.541 L
183.7534 429.6895 L
184.1768 430.1758 L
185.4219 431.103 L
186.2441 432.0308 L
186.6426 432.5166 L
187.8882 433.9302 L
190.354 436.7134 L
191.5996 438.127 L
192.4219 439.0542 L
192.8452 439.54 L
194.0659 440.9097 L
196.5317 443.7368 L
197.7773 445.1504 L
199.0229 446.5635 L
200.2432 447.9331 L
202.7344 450.7603 L
203.9551 452.1738 L
205.2002 453.543 L
206.4458 455.4424 L
207.6665 456.812 L
208.4883 457.7837 L
208.9116 458.1372 L
210.1572 459.6387 L
211.3779 461.0522 L
213.8691 463.8354 L
214.4668 464.7632 L
216.335 467.104 L
217.5557 468.5176 L
218.4023 469.4453 L
218.8008 469.9312 L
220.0464 471.7866 L
221.2671 473.1997 L
222.0889 474.1274 L
222.5127 474.6133 L
223.7578 476.4688 L
224.9785 477.8823 L
225.8003 478.8101 L
226.2241 479.2959 L
227.4697 481.1509 L
228.6899 482.5645 L
229.5122 483.4922 L
229.9355 483.978 L
231.1812 485.8335 L
232.4014 487.2471 L
233.647 489.1021 L
234.8677 490.5156 L
236.1133 492.3711 L
236.5366 492.8569 L
237.3584 493.7842 L
238.2803 495.1982 L
238.5791 495.5513 L
239.8247 497.0532 L
240.1235 497.5391 L
241.0703 498.9087 L
241.6929 499.8804 L
243.5361 502.1772 L
244.7817 504.0767 L
245.1802 504.5186 L
246.0024 505.7109 L
246.8242 506.8594 L
247.2476 507.3457 L
248.4932 509.2007 L
249.7139 510.9678 L
251.7813 513.8833 L
252.2046 514.3691 L
254.6709 518.0796 L
254.9697 518.5654 L
255.8911 519.979 L
257.1367 521.8345 L
258.0586 523.248 L
258.3823 523.7334 L
259.603 525.5889 L
260.8486 527.356 L
261.1475 527.9302 L
262.0938 529.3438 L
262.7168 530.2715 L
263.3145 531.4199 L
264.5601 533.1865 L
265.4814 534.9536 L
265.8052 535.5278 L
267.0259 537.2944 L
268.2715 539.6357 L
269.5171 541.3584 L
269.8159 541.9326 L
270.7373 543.6997 L
271.1611 544.2739 L
272.3813 546.6152 L
273.2285 548.2051 L
276.0928 553.6387 L
276.915 555.1846 L
277.3384 555.9795 L
278.1606 558.3208 L
280.6265 563.0029 L
282.2954 567.6855 L
283.1177 570.0269 L
283.9395 572.3682 L
284.3379 574.709 L
284.9609 577.0503 L
284.9609 581.6885 L
284.3379 584.0293 L
283.1177 586.3706 L
276.915 586.3706 L
275.6943 585.7964 L
274.4492 585.2222 L
273.2285 584.6479 L
271.9829 584.0293 L
270.7373 583.1021 L
269.5171 582.3066 L
268.2715 581.6885 L
267.0259 580.7607 L
265.8052 579.833 L
264.5601 578.9053 L
263.3145 577.8013 L
262.0938 576.6528 L
260.8486 575.8574 L
258.3823 573.5166 L
257.1367 572.3682 L
253.4253 568.834 L
252.2046 567.6855 L
249.7139 565.3442 L
248.4932 564.019 L
247.5469 563.0029 L
247.2476 562.6499 L
246.0024 561.457 L
245.3794 560.6621 L
244.7817 559.9995 L
243.5361 558.7188 L
243.2373 558.3208 L
242.2905 557.3047 L
239.8247 554.6543 L
238.9028 553.6387 L
238.5791 553.3296 L
237.3584 551.96 L
236.1133 550.6348 L
234.8677 548.9565 L
233.647 547.6313 L
232.7256 546.6152 L
232.4014 546.3062 L
231.1812 544.6719 L
230.8574 544.2739 L
229.9355 543.3022 L
228.6899 541.9331 L
227.4697 540.2983 L
226.2241 538.9292 L
224.9785 537.2949 L
223.7578 535.9258 L
223.0107 534.9536 L
222.5127 534.335 L
221.2671 532.9219 L
221.0181 532.6123 L
220.0464 531.2432 L
219.125 530.2715 L
218.8008 529.918 L
217.5557 528.2393 L
217.3311 527.9302 L
216.335 526.7373 L
215.3384 525.5889 L
215.0894 525.2354 L
213.8691 523.6455 L
213.6196 523.248 L
211.627 520.9067 L
211.3779 520.5532 L
210.1572 518.9189 L
209.9082 518.5654 L
207.9155 516.2246 L
207.6665 515.915 L
206.4458 514.2368 L
206.1968 513.8833 L
205.2002 512.5581 L
204.4531 511.542 L
203.9551 510.9678 L
202.7344 509.2012 L
200.8662 506.8599 L
200.2432 506.1973 L
199.0229 504.5186 L
197.7773 502.8843 L
197.2793 502.1777 L
196.5317 501.2056 L
195.5605 499.8804 L
195.311 499.5713 L
194.0659 497.8926 L
192.8452 496.3467 L
192.0977 495.1982 L
191.5996 494.5796 L
190.354 492.8569 L
187.8882 489.7207 L
186.8916 488.1748 L
186.6426 487.8652 L
185.4219 486.231 L
182.9312 483.0947 L
181.7104 481.1514 L
179.2197 478.0146 L
178.248 476.4688 L
177.999 476.1597 L
176.7534 474.5254 L
176.4546 474.1279 L
175.5083 472.7139 L
174.9102 471.7866 L
173.042 469.4453 L
171.8213 467.5903 L
171.4976 467.1045 L
170.5762 465.9561 L
169.3306 464.0122 L
168.1099 462.4663 L
166.8643 460.5664 L
166.5654 460.125 L
165.6191 458.7114 L
164.9961 457.7837 L
164.3984 456.9888 L
163.1528 455.4424 L
161.9077 453.5435 L
161.6084 453.1016 L
160.687 451.688 L
159.4414 449.833 L
158.5195 448.4189 L
158.1958 448.0215 L
156.9756 446.0781 L
155.73 444.6646 L
154.4844 442.8091 L
153.5625 441.3955 L
153.2637 440.9097 L
152.0181 439.0547 L
150.7979 437.1992 L
150.4741 436.7134 L
149.5522 435.2998 L
148.9297 434.3721 L
148.3066 433.2236 L
147.4849 432.0313 L
147.0864 431.457 L
145.8408 429.6899 L
144.5952 427.9673 L
144.2964 427.3486 L
143.3745 425.626 L
142.9512 425.0078 L
142.1294 423.8589 L
141.3071 422.7104 L
140.8838 421.9155 L
140.0615 420.3696 L
139.6631 419.751 L
138.4175 418.0283 L
137.1724 415.687 L
135.9517 414.0967 L
135.5283 413.3457 L
134.7061 411.7559 L
134.3076 411.0049 L
133.4609 409.459 L
132.2402 407.8687 L
130.9946 405.5273 L
130.1729 403.9814 L
129.7739 403.186 L
128.9272 401.6401 L
128.5288 400.8452 L
127.2832 399.2993 L
126.4609 396.958 L
126.0625 395.8096 L
B
0 To
0.3761 0 0 1 372.0313 686.3633 0 Tp
TP
0 Tr
0 g
1 w []0 d
/_Helvetica 28.0555 Tf
0 Ts
100 Tz
0 Tt
0 TA
%_ 0 XL
36 0 Xb
XB
0 0 100 TC
100 100 100 TW
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
( ) Tx 
(\r) TX 
TO
0 To
0.3761 0 0 1 433.8965 686.3633 0 Tp
TP
0 Tr
( ) Tx 
(\r) TX 
TO
0.7804 g
126.0117 469.4932 m
127.2583 474.7295 L
128.5044 479.104 L
129.7256 482.9482 L
130.9722 486.395 L
132.1934 489.6426 L
133.4395 492.6914 L
134.686 495.6079 L
135.9072 498.3916 L
137.1533 501.1089 L
138.3999 503.6938 L
139.6211 506.2124 L
140.8672 508.665 L
142.1138 510.9844 L
143.335 513.3047 L
144.5815 515.5581 L
145.8276 517.8115 L
147.0488 519.999 L
148.2949 522.1196 L
149.5415 524.2407 L
150.7627 526.2954 L
152.0093 528.2842 L
153.2305 530.3384 L
154.4771 532.2607 L
155.7231 534.249 L
156.9443 536.1709 L
158.1909 538.0269 L
159.4375 539.9492 L
160.6587 541.8052 L
161.9048 543.5942 L
163.1509 545.4502 L
164.3726 547.2402 L
165.6182 549.0293 L
166.8652 550.7529 L
168.0864 552.4756 L
169.3325 554.2656 L
170.5791 555.9229 L
171.8003 557.646 L
173.0464 559.3691 L
174.2676 561.0259 L
175.5142 562.6831 L
176.7603 564.3403 L
177.9819 565.9971 L
179.228 567.5879 L
180.4746 569.1787 L
181.6958 570.8354 L
182.9419 572.4263 L
184.1885 574.0171 L
185.4097 575.5415 L
186.6558 577.1323 L
187.9023 578.6567 L
189.1235 580.2471 L
190.3701 581.7715 L
191.6162 583.2964 L
192.8374 584.8203 L
194.084 586.3452 L
195.3052 587.8032 L
196.5513 589.3276 L
197.7979 590.7856 L
199.019 592.3105 L
200.2651 593.7686 L
201.5117 595.2266 L
202.7329 596.6846 L
203.979 598.1431 L
205.2256 599.6011 L
206.4468 601.0596 L
207.6934 602.4512 L
208.9395 603.9097 L
210.1606 605.3677 L
211.4067 606.7598 L
212.6533 608.1514 L
213.8745 609.543 L
215.1211 611.001 L
216.3423 612.3931 L
217.5884 613.7852 L
218.835 615.1772 L
220.0562 616.5024 L
221.3027 617.8945 L
222.5488 619.2861 L
223.7705 620.6118 L
225.0166 622.0039 L
237.3794 635.3926 L
249.7676 648.3833 L
262.1309 661.0425 L
274.5186 673.3706 L
286.8818 685.5 L
299.27 694.1162 L
311.6328 694.1162 L
324.0215 694.1162 L
336.3848 694.1162 L
348.7725 694.1162 L
361.1348 694.1162 L
373.5234 694.1162 L
385.8867 694.1162 L
398.2744 694.1162 L
410.6377 694.1162 L
423.001 694.1162 L
435.3887 694.1162 L
447.752 694.1162 L
460.1396 694.1162 L
472.5029 694.1162 L
484.8906 694.1162 L
496.0332 694.1162 L
496.0332 694.1162 L
126.0117 694.1162 L
126.0117 469.4937 L
126.0117 469.4932 L
F
0 R
0 G
0.5 w 2.5 M
126.0117 167.7871 m
497.2539 167.7871 L
S
0.2835 w
126.0117 167.7871 m
126.0117 181.7725 L
S
0.5 w
187.8774 167.7871 m
187.8774 181.7725 L
S
249.7427 167.7871 m
249.7427 181.7725 L
S
311.6328 167.7871 m
311.6328 181.7725 L
S
373.498 167.7871 m
373.498 181.7725 L
S
435.3643 167.7871 m
435.3643 181.7725 L
S
497.2539 167.7871 m
497.2539 181.7725 L
S
138.375 167.7871 m
138.375 174.7461 L
S
150.7632 167.7871 m
150.7632 174.7461 L
S
163.126 167.7871 m
163.126 174.7461 L
S
175.4893 167.7871 m
175.4893 174.7461 L
S
200.2407 167.7871 m
200.2407 174.7461 L
S
212.6284 167.7871 m
212.6284 174.7461 L
S
224.9917 167.7871 m
224.9917 174.7461 L
S
237.3794 167.7871 m
237.3794 174.7461 L
S
262.1309 167.7871 m
262.1309 174.7461 L
S
274.4941 167.7871 m
274.4941 174.7461 L
S
286.8818 167.7871 m
286.8818 174.7461 L
S
299.2446 167.7871 m
299.2446 174.7461 L
S
323.9961 167.7871 m
323.9961 174.7461 L
S
336.3848 167.7871 m
336.3848 174.7461 L
S
348.7471 167.7871 m
348.7471 174.7461 L
S
361.1104 167.7871 m
361.1104 174.7461 L
S
385.8613 167.7871 m
385.8613 174.7461 L
S
398.25 167.7871 m
398.25 174.7461 L
S
410.6133 167.7871 m
410.6133 174.7461 L
S
423.001 167.7871 m
423.001 174.7461 L
S
447.752 167.7871 m
447.752 174.7461 L
S
460.1152 167.7871 m
460.1152 174.7461 L
S
472.5029 167.7871 m
472.5029 174.7461 L
S
484.8662 167.7871 m
484.8662 174.7461 L
S
126.0117 694.1162 m
497.2539 694.1162 L
S
0.2835 w
126.0117 694.1162 m
126.0117 680.0649 L
S
0.5 w
187.8774 694.1162 m
187.8774 680.0649 L
S
249.7427 694.1162 m
249.7427 680.0649 L
S
311.6328 694.1162 m
311.6328 680.0649 L
S
373.498 694.1162 m
373.498 680.0649 L
S
435.3643 694.1162 m
435.3643 680.0649 L
S
497.2539 694.1162 m
497.2539 680.0649 L
S
138.375 694.1162 m
138.375 687.0908 L
S
150.7632 694.1162 m
150.7632 687.0908 L
S
163.126 694.1162 m
163.126 687.0908 L
S
175.4893 694.1162 m
175.4893 687.0908 L
S
200.2407 694.1162 m
200.2407 687.0908 L
S
212.6284 694.1162 m
212.6284 687.0908 L
S
224.9917 694.1162 m
224.9917 687.0908 L
S
237.3794 694.1162 m
237.3794 687.0908 L
S
262.1309 694.1162 m
262.1309 687.0908 L
S
274.4941 694.1162 m
274.4941 687.0908 L
S
286.8818 694.1162 m
286.8818 687.0908 L
S
299.2446 694.1162 m
299.2446 687.0908 L
S
323.9961 694.1162 m
323.9961 687.0908 L
S
336.3848 694.1162 m
336.3848 687.0908 L
S
348.7471 694.1162 m
348.7471 687.0908 L
S
361.1104 694.1162 m
361.1104 687.0908 L
S
385.8613 694.1162 m
385.8613 687.0908 L
S
398.25 694.1162 m
398.25 687.0908 L
S
410.6133 694.1162 m
410.6133 687.0908 L
S
423.001 694.1162 m
423.001 687.0908 L
S
447.752 694.1162 m
447.752 687.0908 L
S
460.1152 694.1162 m
460.1152 687.0908 L
S
472.5029 694.1162 m
472.5029 687.0908 L
S
484.8662 694.1162 m
484.8662 687.0908 L
S
126.0117 167.7871 m
133.415 167.7871 L
S
126.0117 226.2461 m
133.415 226.2461 L
S
126.0117 343.2305 m
133.415 343.2305 L
S
126.0117 460.1479 m
133.415 460.1479 L
S
126.0117 577.1323 m
133.415 577.1323 L
S
126.0117 694.1162 m
133.415 694.1162 L
S
126.0117 167.7871 m
129.7261 167.7871 L
S
126.0117 284.7051 m
129.7261 284.7051 L
S
126.0117 401.689 m
129.7261 401.689 L
S
126.0117 518.6729 m
129.7261 518.6729 L
S
126.0117 635.5908 m
129.7261 635.5908 L
S
497.2539 167.7871 m
489.8262 167.7871 L
S
497.2539 226.2461 m
489.8262 226.2461 L
S
497.2539 343.2305 m
489.8262 343.2305 L
S
497.2539 460.1479 m
489.8262 460.1479 L
S
497.2539 577.1323 m
489.8262 577.1323 L
S
497.2539 694.1162 m
489.8262 694.1162 L
S
497.2539 167.7871 m
493.54 167.7871 L
S
497.2539 179.4521 m
493.54 179.4521 L
S
497.2539 191.1836 m
493.54 191.1836 L
S
497.2539 202.8486 m
493.54 202.8486 L
S
497.2539 214.5137 m
493.54 214.5137 L
S
497.2539 237.9111 m
493.54 237.9111 L
S
497.2539 249.6426 m
493.54 249.6426 L
S
497.2539 261.3086 m
493.54 261.3086 L
S
497.2539 273.0391 m
493.54 273.0391 L
S
497.2539 284.7051 m
493.54 284.7051 L
S
497.2539 401.689 m
493.54 401.689 L
S
497.2539 518.6729 m
493.54 518.6729 L
S
497.2539 635.5908 m
493.54 635.5908 L
S
0 O
0.7882 g
1 w 4 M
385.085 167.5146 m
398.25 184.2236 L
423.001 214.8457 L
435.3643 229.8252 L
447.752 244.6055 L
460.1152 259.2529 L
472.5029 273.7021 L
484.8662 288.0186 L
497.2539 302.2021 L
497.2539 168.1758 L
F
0 To
0.8524 0 0 1 135.4434 642.8965 0 Tp
TP
0 Tr
0 g
/_Helvetica 18 Tf
(No Big Bang) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w 2.5 M
126.0117 167.7871 m
497.2539 167.7871 L
S
0.2835 w
126.0117 167.7871 m
126.0117 181.7725 L
S
0.5 w
187.8774 167.7871 m
187.8774 181.7725 L
S
249.7427 167.7871 m
249.7427 181.7725 L
S
311.6328 167.7871 m
311.6328 181.7725 L
S
373.498 167.7871 m
373.498 181.7725 L
S
435.3643 167.7871 m
435.3643 181.7725 L
S
497.2539 167.7871 m
497.2539 181.7725 L
S
0 To
1.0001 0 0 1.0001 182.0493 142.624 0 Tp
TP
0 Tr
0 O
0 g
1 w 4 M
/_Helvetica 20 Tf
( ) Tx 
(\r) TX 
TO
0 To
1.0001 0 0 1.0001 243.915 142.624 0 Tp
TP
0 Tr
(1) Tx 
(\r) TX 
TO
0 To
1.0001 0 0 1.0001 305.8052 142.624 0 Tp
TP
0 Tr
( ) Tx 
(\r) TX 
TO
0 To
1.0001 0 0 1.0001 367.6709 142.624 0 Tp
TP
0 Tr
(2) Tx 
(\r) TX 
TO
0 To
1.0001 0 0 1.0001 429.5371 142.624 0 Tp
TP
0 Tr
( ) Tx 
(\r) TX 
TO
0 To
1.0001 0 0 1.0001 121.063 142.624 0 Tp
TP
0 Tr
(0) Tx 
(\r) TX 
TO
0 To
1.0001 0 0 1.0001 182.0488 142.624 0 Tp
TP
0 Tr
( ) Tx 
(\r) TX 
TO
0 To
1.0001 0 0 1.0001 243.9146 142.624 0 Tp
TP
0 Tr
(1) Tx 
(\r) TX 
TO
0 To
1.0001 0 0 1.0001 305.8047 142.624 0 Tp
TP
0 Tr
( ) Tx 
(\r) TX 
TO
0 To
1.0001 0 0 1.0001 367.6699 142.624 0 Tp
TP
0 Tr
(2) Tx 
(\r) TX 
TO
0 To
1.0001 0 0 1.0001 429.5361 142.624 0 Tp
TP
0 Tr
( ) Tx 
(\r) TX 
TO
0 To
1.0001 0 0 1.0001 491.4258 142.624 0 Tp
TP
0 Tr
(3) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w 2.5 M
138.375 167.7871 m
138.375 174.7461 L
S
150.7632 167.7871 m
150.7632 174.7461 L
S
163.126 167.7871 m
163.126 174.7461 L
S
175.4893 167.7871 m
175.4893 174.7461 L
S
200.2407 167.7871 m
200.2407 174.7461 L
S
212.6284 167.7871 m
212.6284 174.7461 L
S
224.9917 167.7871 m
224.9917 174.7461 L
S
237.3794 167.7871 m
237.3794 174.7461 L
S
262.1309 167.7871 m
262.1309 174.7461 L
S
274.4941 167.7871 m
274.4941 174.7461 L
S
286.8818 167.7871 m
286.8818 174.7461 L
S
299.2446 167.7871 m
299.2446 174.7461 L
S
323.9961 167.7871 m
323.9961 174.7461 L
S
336.3848 167.7871 m
336.3848 174.7461 L
S
348.7471 167.7871 m
348.7471 174.7461 L
S
361.1104 167.7871 m
361.1104 174.7461 L
S
385.8613 167.7871 m
385.8613 174.7461 L
S
398.25 167.7871 m
398.25 174.7461 L
S
410.6133 167.7871 m
410.6133 174.7461 L
S
423.001 167.7871 m
423.001 174.7461 L
S
447.752 167.7871 m
447.752 174.7461 L
S
460.1152 167.7871 m
460.1152 174.7461 L
S
472.5029 167.7871 m
472.5029 174.7461 L
S
484.8662 167.7871 m
484.8662 174.7461 L
S
126.0117 167.7871 m
133.415 167.7871 L
S
126.0117 226.2461 m
133.415 226.2461 L
S
126.0117 343.2305 m
133.415 343.2305 L
S
133.415 460.1479 m
126.0117 460.1479 L
S
126.0117 577.1323 m
133.415 577.1323 L
S
126.0117 694.1162 m
133.415 694.1162 L
S
126.0117 167.7871 m
129.7261 167.7871 L
S
126.0117 284.7051 m
129.7261 284.7051 L
S
126.0117 401.689 m
129.7261 401.689 L
S
126.0117 518.6729 m
129.7261 518.6729 L
S
126.0117 635.5908 m
129.7261 635.5908 L
S
126.0117 694.1162 m
497.2539 694.1162 L
S
0.2835 w
126.0117 694.1162 m
126.0117 680.0649 L
S
0.5 w
187.8774 694.1162 m
187.8774 680.0649 L
S
249.7427 694.1162 m
249.7427 680.0649 L
S
311.6328 694.1162 m
311.6328 680.0649 L
S
373.498 694.1162 m
373.498 680.0649 L
S
435.3643 694.1162 m
435.3643 680.0649 L
S
497.2539 694.1162 m
497.2539 680.0649 L
S
138.375 694.1162 m
138.375 687.0908 L
S
150.7632 694.1162 m
150.7632 687.0908 L
S
163.126 694.1162 m
163.126 687.0908 L
S
175.4893 694.1162 m
175.4893 687.0908 L
S
200.2407 694.1162 m
200.2407 687.0908 L
S
212.6284 694.1162 m
212.6284 687.0908 L
S
224.9917 694.1162 m
224.9917 687.0908 L
S
237.3794 694.1162 m
237.3794 687.0908 L
S
262.1309 694.1162 m
262.1309 687.0908 L
S
274.4941 694.1162 m
274.4941 687.0908 L
S
286.8818 694.1162 m
286.8818 687.0908 L
S
299.2446 694.1162 m
299.2446 687.0908 L
S
323.9961 694.1162 m
323.9961 687.0908 L
S
336.3848 694.1162 m
336.3848 687.0908 L
S
348.7471 694.1162 m
348.7471 687.0908 L
S
361.1104 694.1162 m
361.1104 687.0908 L
S
385.8613 694.1162 m
385.8613 687.0908 L
S
398.25 694.1162 m
398.25 687.0908 L
S
410.6133 694.1162 m
410.6133 687.0908 L
S
423.001 694.1162 m
423.001 687.0908 L
S
447.752 694.1162 m
447.752 687.0908 L
S
460.1152 694.1162 m
460.1152 687.0908 L
S
472.5029 694.1162 m
472.5029 687.0908 L
S
484.8662 694.1162 m
484.8662 687.0908 L
S
497.2539 167.7871 m
489.8262 167.7871 L
S
0 To
0.3761 0 0 1 500.0205 167.7871 0 Tp
TP
0 Tr
0 O
0 g
1 w 4 M
/_Helvetica 28.0555 Tf
( ) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w 2.5 M
497.2539 226.2461 m
489.8262 226.2461 L
S
0 To
0.3761 0 0 1 500.0205 216.9004 0 Tp
TP
0 Tr
0 O
0 g
1 w 4 M
( ) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w 2.5 M
497.2539 343.2305 m
489.8262 343.2305 L
S
0 To
0.3761 0 0 1 500.0205 333.8848 0 Tp
TP
0 Tr
0 O
0 g
1 w 4 M
( ) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w 2.5 M
497.2539 460.1479 m
489.8262 460.1479 L
S
0 To
0.3761 0 0 1 500.0205 450.8027 0 Tp
TP
0 Tr
0 O
0 g
1 w 4 M
( ) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w 2.5 M
497.2539 577.1323 m
489.8262 577.1323 L
S
0 To
0.3761 0 0 1 500.0205 567.7866 0 Tp
TP
0 Tr
0 O
0 g
1 w 4 M
( ) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w 2.5 M
497.2539 694.1162 m
489.8262 694.1162 L
S
0 To
0.3761 0 0 1 500.0205 677.7451 0 Tp
TP
0 Tr
0 O
0 g
1 w 4 M
( ) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w 2.5 M
497.2539 167.7871 m
493.54 167.7871 L
S
497.2539 284.7051 m
493.54 284.7051 L
S
497.2539 401.689 m
493.54 401.689 L
S
497.2539 518.6729 m
493.54 518.6729 L
S
497.2539 635.5908 m
493.54 635.5908 L
S
0 To
0.6487 0.0631 -0.0968 0.9951 352.875 352.8545 0 Tp
TP
0 Tr
0 O
0.7 g
1 w 4 M
/_Times-Roman 26.3046 Tf
(e) Tx 
(\r) TX 
TO
0 To
0.6487 0.0631 -0.0968 0.9951 360.499 353.5957 0 Tp
TP
0 Tr
(x) Tx 
(\r) TX 
TO
0 To
0.6483 0.0669 -0.1027 0.9945 369.166 354.4521 0 Tp
TP
0 Tr
/_Times-Roman 26.3044 Tf
(p) Tx 
(\r) TX 
TO
0 To
0.6481 0.0705 -0.1081 0.9943 377.8281 355.3389 0 Tp
TP
0 Tr
/_Times-Roman 26.3036 Tf
(a) Tx 
(\r) TX 
TO
0 To
0.6481 0.0705 -0.1081 0.9943 385.4453 356.167 0 Tp
TP
0 Tr
(n) Tx 
(\r) TX 
TO
0 To
0.647 0.0779 -0.1196 0.9926 394.1729 357.1445 0 Tp
TP
0 Tr
/_Times-Roman 26.3041 Tf
(d) Tx 
(\r) TX 
TO
0 To
0.6482 0.0678 -0.1041 0.9944 402.6729 358.1914 0 Tp
TP
0 Tr
/_Times-Roman 26.3056 Tf
(s) Tx 
(\r) TX 
TO
0 To
0.6461 0.0853 -0.1308 0.9912 414.0518 359.5088 0 Tp
TP
0 Tr
/_Times-Roman 26.3045 Tf
(f) Tx 
(\r) TX 
TO
0 To
0.6461 0.0853 -0.1308 0.9912 419.748 360.2598 0 Tp
TP
0 Tr
(o) Tx 
(\r) TX 
TO
0 To
0.6464 0.0851 -0.1305 0.9916 428.3086 361.3896 0 Tp
TP
0 Tr
/_Times-Roman 26.3035 Tf
(r) Tx 
(\r) TX 
TO
0 To
0.6464 0.0851 -0.1305 0.9916 433.9209 362.1289 0 Tp
TP
0 Tr
(e) Tx 
(\r) TX 
TO
0 To
0.6452 0.0925 -0.142 0.9897 441.6836 363.1563 0 Tp
TP
0 Tr
/_Times-Roman 26.3056 Tf
(v) Tx 
(\r) TX 
TO
0 To
0.6452 0.0923 -0.1417 0.9897 450.3174 364.3955 0 Tp
TP
0 Tr
/_Times-Roman 26.3044 Tf
(e) Tx 
(\r) TX 
TO
0 To
0.6452 0.0923 -0.1417 0.9897 457.9043 365.4814 0 Tp
TP
0 Tr
(r) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w 2.5 M [1.1339 2.8347 ]0 d
126.0122 343.2305 m
497.2539 343.2305 L
S
[]0 d
126.0117 460.1479 m
250.2935 342.5859 L
S
0.2835 w
126.0117 346.4834 m
126.0117 310.6309 L
S
0 To
1.0029 0 0 1.0001 101.3989 216.9004 0 Tp
TP
0 Tr
0 O
0 g
1 w 4 M
/_Helvetica 20 Tf
(-1) Tx 
(\r) TX 
TO
0 To
1.0029 0 0 1.0001 104.9131 333.8838 0 Tp
TP
0 Tr
(0) Tx 
(\r) TX 
TO
0 To
1.0029 0 0 1.0001 104.9131 450.8022 0 Tp
TP
0 Tr
(1) Tx 
(\r) TX 
TO
0 To
1.0029 0 0 1.0001 104.9131 567.7861 0 Tp
TP
0 Tr
(2) Tx 
(\r) TX 
TO
0 To
1.0029 0 0 1.0001 104.9131 677.7441 0 Tp
TP
0 Tr
(3) Tx 
(\r) TX 
TO
0 To
1.0029 0 0 1.0001 104.9131 567.7861 0 Tp
TP
0 Tr
(2) Tx 
(\r) TX 
TO
0 To
1.0029 0 0 1.0001 104.9131 677.7441 0 Tp
TP
0 Tr
(3) Tx 
(\r) TX 
TO
0 To
0.7081 -0.7061 0.7081 0.7061 354.9385 279.0479 0 Tp
TP
0 Tr
/_Times-Roman 23.4144 Tf
(closed) Tx 
(\r) TX 
TO
0 To
0.7081 -0.7061 0.7081 0.7061 317.3027 223.8398 0 Tp
TP
0 Tr
(open) Tx 
(\r) TX 
TO
0 To
0.6504 0.0411 -0.063 0.9978 326.5215 317.4736 0 Tp
TP
0 Tr
0.65 g
/_Times-Roman 26.3044 Tf
(r) Tx 
(\r) TX 
TO
0 To
0.6499 0.0485 -0.0744 0.997 332.4346 317.8174 0 Tp
TP
0 Tr
/_Times-Roman 26.3039 Tf
(e) Tx 
(\r) TX 
TO
0 To
0.6499 0.0485 -0.0744 0.997 340.0361 318.3848 0 Tp
TP
0 Tr
(c) Tx 
(\r) TX 
TO
0 To
0.6496 0.0521 -0.0799 0.9966 347.7646 318.9629 0 Tp
TP
0 Tr
/_Times-Roman 26.3046 Tf
(o) Tx 
(\r) TX 
TO
0 To
0.6496 0.0521 -0.0799 0.9966 356.3398 319.6504 0 Tp
TP
0 Tr
(l) Tx 
(\r) TX 
TO
0 To
0.6493 0.0559 -0.0857 0.9961 361.2451 320.0527 0 Tp
TP
0 Tr
/_Times-Roman 26.3042 Tf
(l) Tx 
(\r) TX 
TO
0 To
0.6493 0.0559 -0.0857 0.9961 366.0781 320.4688 0 Tp
TP
0 Tr
(a) Tx 
(\r) TX 
TO
0 To
0.6487 0.0631 -0.0968 0.9951 373.8594 321.1582 0 Tp
TP
0 Tr
/_Times-Roman 26.3046 Tf
(p) Tx 
(\r) TX 
TO
0 To
0.6483 0.0669 -0.1027 0.9945 382.5479 321.9922 0 Tp
TP
0 Tr
/_Times-Roman 26.3044 Tf
(s) Tx 
(\r) TX 
TO
0 To
0.6483 0.0669 -0.1027 0.9945 389.2168 322.6807 0 Tp
TP
0 Tr
(e) Tx 
(\r) TX 
TO
0 To
0.6481 0.0705 -0.1081 0.9943 396.9951 323.4854 0 Tp
TP
0 Tr
/_Times-Roman 26.3036 Tf
(s) Tx 
(\r) TX 
TO
0 To
0.647 0.0779 -0.1196 0.9926 408.1104 324.6807 0 Tp
TP
0 Tr
/_Times-Roman 26.3041 Tf
(e) Tx 
(\r) TX 
TO
0 To
0.647 0.0779 -0.1196 0.9926 415.6699 325.5918 0 Tp
TP
0 Tr
(v) Tx 
(\r) TX 
TO
0 To
0.6469 0.0816 -0.1251 0.9923 424.3379 326.5791 0 Tp
TP
0 Tr
/_Times-Roman 26.3035 Tf
(e) Tx 
(\r) TX 
TO
0 To
0.6461 0.0853 -0.1308 0.9912 432.0225 327.5361 0 Tp
TP
0 Tr
/_Times-Roman 26.3045 Tf
(n) Tx 
(\r) TX 
TO
0 To
0.6461 0.0853 -0.1308 0.9912 440.5 328.6543 0 Tp
TP
0 Tr
(t) Tx 
(\r) TX 
TO
0 To
0.6464 0.0851 -0.1305 0.9916 445.2559 329.2832 0 Tp
TP
0 Tr
/_Times-Roman 26.3035 Tf
(u) Tx 
(\r) TX 
TO
0 To
0.6464 0.0851 -0.1305 0.9916 453.8857 330.4189 0 Tp
TP
0 Tr
(a) Tx 
(\r) TX 
TO
0 To
0.6452 0.0925 -0.1419 0.9897 461.6338 331.4736 0 Tp
TP
0 Tr
/_Times-Roman 26.3052 Tf
(l) Tx 
(\r) TX 
TO
0 To
0.6452 0.0925 -0.1419 0.9897 466.3799 332.1543 0 Tp
TP
0 Tr
(l) Tx 
(\r) TX 
TO
0 To
0.6452 0.0923 -0.1417 0.9897 471.1533 332.8389 0 Tp
TP
0 Tr
/_Times-Roman 26.3044 Tf
(y) Tx 
(\r) TX 
TO
0 R
0 G
497.2539 167.7871 m
497.2539 694.1162 L
126.0117 694.1162 L
126.0117 167.7871 L
497.2539 167.7871 L
s
0.6 w
126.0117 460.1479 m
435.3643 167.7871 L
S
0 O
1 g
1 w
372.9531 202.6348 m
391.418 230.6934 L
353.6494 268.7178 L
348.6592 231.248 L
372.9531 202.6348 L
F
0 To
0.7081 -0.7061 0.7081 0.7061 350.5566 237.9795 0 Tp
TP
0 Tr
0 g
/_Times-Roman 23.4144 Tf
(flat) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w 2.5 M
497.2539 362.5469 m
484.8662 360.7734 L
472.5029 359.001 L
460.1152 357.3691 L
447.752 355.7383 L
438.7539 354.6035 L
435.3643 354.249 L
423.001 352.7598 L
410.6133 351.4121 L
398.25 350.1357 L
385.8613 348.9297 L
373.498 347.8662 L
361.1104 346.873 L
348.7471 345.9512 L
336.3848 345.1709 L
323.9961 344.5332 L
311.6328 343.9648 L
299.2446 343.54 L
286.8818 343.2559 L
274.4941 343.043 L
262.1309 342.9727 L
249.7427 342.9727 L
249.7427 342.9727 L
126.0117 342.9727 L
126.0117 343.8877 L
126.0117 693.6016 L
497.2539 693.6016 L
497.2539 362.5938 L
497.2539 362.5469 L
s
0 To
0.9999 0 0 0.9999 258.1899 110 0 Tp
TP
0 Tr
0 O
0 g
1 w 4 M
/_Helvetica 19 Tf
(mass density) Tx 
(\r) TX 
TO
0 To
0 0.9999 -0.9999 0 60.707 314.3623 0 Tp
TP
0 Tr
(vacuum energy density) Tx 
(\r) TX 
TO
0 To
0 1 -1 0 84.707 328.1133 0 Tp
TP
0 Tr
/_Helvetica 16 Tf
(\(cosmological constant\)) Tx 
(\r) TX 
TO
1 g
0 R
0 G
[4 4 ]0 d
126.0117 342.9727 m
497.2539 518.6729 L
B
0 To
0.9003 0.4353 -0.4353 0.9003 354.3213 428.6938 0 Tp
TP
0 Tr
0.6355 g
[]0 d
/_Times-BoldItalic 18 Tf
(decelerating) Tx 
(\r) TX 
TO
0 To
0.9003 0.4353 -0.4353 0.9003 353.3203 459.6943 0 Tp
TP
0 Tr
0.6395 g
(accelerating) Tx 
(\r) TX 
TO
0 To
1.0001 0 0 1.0001 401.5371 113.624 0 Tp
TP
0 Tr
0 g
/_Helvetica 15.5 Tf
100.2808 Tz
36.1011 0 Xb
XB
( ) Tx 
(\r) TX 
TO
0 To
1.0001 0 0 1.0001 401.5361 113.624 0 Tp
TP
0 Tr
( ) Tx 
(\r) TX 
TO
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 255 79 79 Lb
(Layer 2) Ln
0 A
u
u
0 R
0 G
0 J 0 j 0.5 w 2.5 M []0 d
0 XR
126.377 330.0977 m
129.5112 333.7441 L
131.1392 335.5918 L
133.5615 338.4277 L
135.9019 341.1309 L
137.5908 343.1133 L
140.6646 346.6934 L
141.2344 347.3457 L
174.042 386.9102 L
S
173.2686 385.9414 m
174.042 386.9102 L
176.4438 389.8828 L
178.8247 392.832 L
180.1885 394.5664 L
183.5874 398.8218 L
183.9331 399.2495 L
187.5967 403.9331 L
188.3496 404.8569 L
191.2603 408.5942 L
193.1123 410.9819 L
194.9033 413.2788 L
197.895 417.1284 L
198.5259 417.9624 L
202.1079 422.646 L
202.6572 423.3667 L
205.6289 427.3062 L
207.4199 429.6714 L
209.1499 431.9907 L
212.2026 436.0444 L
212.6709 436.6743 L
216.1104 441.3579 L
216.9648 442.5063 L
219.5088 446.019 L
221.7275 449.0591 L
222.9077 450.7026 L
226.2866 455.3862 L
226.4897 455.6792 L
229.5835 460.0708 L
231.2725 462.4346 L
232.8604 464.7314 L
236.0352 469.2578 L
236.1367 469.4155 L
239.312 474.0991 L
240.7979 476.2832 L
242.4663 478.7827 L
245.5806 483.3765 L
245.6211 483.4438 L
248.6533 488.1279 L
250.3428 490.6948 L
251.686 492.8115 L
254.6777 497.4951 L
255.1055 498.1709 L
257.5679 502.1563 L
259.8677 505.8945 L
260.458 506.8403 L
263.2461 511.5239 L
264.6504 513.8887 L
265.9731 516.2075 L
268.6597 520.8916 L
269.4131 522.2202 L
271.2241 525.5527 L
273.7686 530.2368 L
274.1753 531.002 L
276.1699 534.9204 L
278.5103 539.604 L
278.938 540.5049 L
280.688 544.2651 L
282.8047 548.9487 L
283.7207 551.1333 L
284.7383 553.6328 L
286.4883 558.3164 L
288.1167 562.9775 L
288.4829 564.2837 L
289.4194 567.6611 L
290.3965 572.3452 L
290.9658 577.0288 L
290.8643 581.6899 L
289.5615 586.3735 L
288.4829 587.9951 L
283.7207 590.855 L
278.938 590.9448 L
274.1753 589.7515 L
269.4131 587.9053 L
269.3721 587.9053 L
S
126.377 441.4028 m
130.1626 446.019 L
131.1396 447.2808 L
133.9482 450.7026 L
135.9019 453.1577 L
137.7334 455.3862 L
140.6646 459.0796 L
141.4785 460.0708 L
145.2642 464.7314 L
145.4473 464.9795 L
149.1514 469.4155 L
150.2095 470.7441 L
153.0386 474.0991 L
154.9722 476.5088 L
156.9053 478.7827 L
159.7549 482.2729 L
160.752 483.4438 L
164.5171 488.0151 L
164.5986 488.1279 L
168.6079 492.8115 L
169.2798 493.6221 L
172.6172 497.4951 L
174.042 499.2065 L
176.647 502.1563 L
178.8247 504.7461 L
180.6768 506.8403 L
183.5874 510.2407 L
184.7271 511.5239 L
188.3496 515.7124 L
188.7974 516.2075 L
192.9492 520.8916 L
193.1123 521.0718 L
197.2231 525.5527 L
197.895 526.3184 L
201.5381 530.2368 L
202.6572 531.4751 L
205.9141 534.9204 L
207.4199 536.564 L
210.3506 539.604 L
212.2026 541.5405 L
214.8892 544.2651 L
216.9648 546.4043 L
219.5293 548.9487 L
221.7275 551.1558 L
224.312 553.6328 L
226.4897 555.772 L
229.2373 558.3164 L
231.2725 560.2305 L
231.4561 560.4106 L
253.2217 576.9819 L
269.4131 587.9053 L
S
U
u
126.377 296.9277 m
129.8369 301.0039 L
131.1392 302.5117 L
133.8262 305.6875 L
135.0879 307.1504 L
167.3882 346.1484 L
S
167.2241 345.6113 m
169.0151 347.7734 L
169.2798 348.1113 L
172.8208 352.457 L
174.042 353.9668 L
176.6064 357.1406 L
178.8247 359.8652 L
180.3921 361.8242 L
183.5874 365.7656 L
184.1572 366.4863 L
187.9019 371.1699 L
188.3496 371.7324 L
191.6265 375.8535 L
193.1123 377.7441 L
195.3306 380.5371 L
197.895 383.7793 L
199.0142 385.1992 L
202.6572 389.8379 L
202.6982 389.8828 L
206.3208 394.5664 L
207.4199 395.9839 L
209.9434 399.2495 L
212.2026 402.1538 L
213.5459 403.9331 L
216.9648 408.3687 L
217.1279 408.5942 L
220.6694 413.2788 L
221.7275 414.6519 L
224.2104 417.9624 L
226.4897 421.0015 L
227.7314 422.646 L
231.2319 427.3062 L
231.2725 427.3745 L
234.6714 431.9907 L
236.0352 433.8374 L
238.1108 436.6743 L
240.7979 440.3452 L
241.5303 441.3579 L
244.9087 446.019 L
245.5806 446.9194 L
248.2666 450.7026 L
250.3428 453.5854 L
251.6045 455.3862 L
254.9219 460.0708 L
255.1055 460.3184 L
258.1782 464.7314 L
259.8677 467.1636 L
261.4351 469.4155 L
264.6504 474.0767 L
264.6709 474.0991 L
267.8252 478.7827 L
269.4131 481.1021 L
270.98 483.4438 L
274.1143 488.1279 L
274.1753 488.2407 L
277.167 492.8115 L
278.938 495.5137 L
280.2197 497.4951 L
283.2319 502.1563 L
283.7207 502.9224 L
286.1836 506.8403 L
288.4829 510.4883 L
289.1343 511.5239 L
292.0039 516.2075 L
293.2456 518.2568 L
294.833 520.8916 L
297.6416 525.5527 L
298.0283 526.2056 L
300.3486 530.2368 L
302.7905 534.4473 L
303.0552 534.9204 L
305.6606 539.604 L
307.5527 543.0044 L
308.2451 544.2651 L
310.7285 548.9487 L
311.7871 550.9756 L
320.7217 569.7939 L
327.5967 587.6069 L
332.1182 601.2583 L
332.8916 605.0864 L
333.543 609.77 L
333.8076 614.4536 L
333.543 619.1147 L
332.4443 623.7983 L
331.4063 626.0503 L
329.7373 628.4824 L
326.623 631.0269 L
321.8613 632.896 L
319.0313 633.166 L
317.0986 633.2788 L
315.8975 633.166 L
312.3154 632.7832 L
307.5527 631.6572 L
302.7905 630.126 L
298.415 628.4824 L
298.0283 628.3247 L
293.2456 626.0278 L
288.8086 623.7983 L
288.4829 623.6411 L
283.7207 620.8262 L
280.9121 619.1147 L
278.938 617.8989 L
274.1753 614.7915 L
273.687 614.4536 L
269.4131 611.3911 L
267.2148 609.77 L
264.6504 607.856 L
261.0479 605.0864 L
259.8677 604.1626 L
255.1865 600.4023 L
255.1055 600.3574 L
250.3428 596.2817 L
249.7119 595.7412 L
245.5806 592.0708 L
244.4609 591.0571 L
240.7979 587.7021 L
239.3936 586.3735 L
236.0352 583.2212 L
234.4683 581.6899 L
231.2725 578.605 L
229.6851 577.0288 L
226.4897 573.8765 L
225.0044 572.3452 L
221.7275 569.0122 L
220.4453 567.6611 L
216.9648 564.0586 L
215.9678 562.9775 L
212.2026 558.9917 L
211.5718 558.3164 L
207.4199 553.8354 L
207.2368 553.6328 L
203.0034 548.9487 L
202.6572 548.5889 L
198.8516 544.2651 L
197.895 543.2065 L
194.7402 539.604 L
193.1123 537.7798 L
190.6494 534.9204 L
188.3496 532.3081 L
186.5996 530.2368 L
183.5874 526.791 L
182.5493 525.5527 L
178.8247 521.252 L
178.5195 520.8911 L
174.5508 516.2075 L
174.042 515.6221 L
172.9839 514.3164 L
141.0308 475.6304 L
140.6646 475.2251 L
139.7891 474.0991 L
135.9224 469.4155 L
135.9019 469.4155 L
132.1978 464.7314 L
131.1392 463.4482 L
128.4531 460.0708 L
126.377 457.5259 L
S
U
u
126.377 360.1582 m
127.8423 361.8242 L
131.1392 365.4512 L
132.0552 366.4863 L
135.4946 370.3359 L
168.2217 409.2729 L
S
167.7124 408.6392 m
169.2798 410.5757 L
171.4165 413.2788 L
174.042 416.5435 L
175.1411 417.9624 L
178.8247 422.5776 L
178.8657 422.646 L
182.4272 427.3062 L
183.5874 428.8159 L
185.9683 431.9907 L
188.3496 435.0981 L
189.5098 436.6743 L
193.0513 441.3579 L
193.1123 441.4487 L
196.4092 446.019 L
197.895 448.0464 L
199.7876 450.7026 L
202.6572 454.689 L
203.146 455.3862 L
206.3818 460.0708 L
207.4199 461.5566 L
209.5566 464.7314 L
212.2026 468.582 L
212.7524 469.4155 L
215.7847 474.0991 L
216.9648 475.9009 L
218.7764 478.7827 L
221.7275 483.3765 L
221.7681 483.4438 L
224.5156 488.1279 L
226.4897 491.438 L
227.2837 492.8115 L
229.8687 497.4951 L
231.2725 500.0176 L
232.3921 502.1563 L
234.7124 506.8403 L
236.0352 509.5874 L
236.9102 511.5239 L
238.7827 516.2075 L
240.5532 520.8916 L
240.7979 521.8374 L
241.6729 525.5527 L
241.9985 530.2368 L
240.7979 533.9971 L
238.6401 534.9204 L
236.0352 535.2354 L
235.2007 534.9204 L
231.2725 533.479 L
226.4897 530.8672 L
225.6353 530.2368 L
221.7275 527.4893 L
219.3057 525.5527 L
216.9648 523.7739 L
213.5864 520.8916 L
212.2026 519.7432 L
208.2949 516.2075 L
207.4199 515.4424 L
203.3291 511.5239 L
202.6572 510.916 L
198.6074 506.8403 L
197.895 506.1646 L
194.0483 502.1563 L
193.1123 501.2559 L
189.6113 497.4951 L
188.3496 496.1895 L
185.2969 492.8115 L
183.5874 491.0103 L
181.0435 488.1279 L
178.8247 485.7183 L
176.8506 483.4438 L
174.042 480.3594 L
172.7192 478.7827 L
169.2798 474.9097 L
168.6079 474.0991 L
164.5171 469.4155 L
160.6504 464.7314 L
159.7549 463.6958 L
156.7832 460.0708 L
154.9722 457.9536 L
152.9165 455.3862 L
150.2095 452.1665 L
149.0288 450.7026 L
145.4473 446.3794 L
145.1621 446.019 L
141.4175 441.3579 L
140.6646 440.4351 L
137.7539 436.6743 L
135.9019 434.4224 L
134.0293 431.9907 L
131.1392 428.4097 L
130.3052 427.3062 L
126.5806 422.646 L
126.377 422.3755 L
S
0 To
0.7165 0.6976 -0.6224 0.7827 128.4648 363.1777 0 Tp
TP
1 Tr
/_Helvetica 0.9144 Tf
0 Ts
98.7286 Tz
0 Tt
0 TA
%_ 0 XL
32.4981 0 Xb
XB
0 0 5 TC
100 100 100 TW
0 0 0 Ti
0 Ta
0 1 2 2 99 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
( ) Tx 
(\r) TX 
TO
U
U
0 To
1 0 0 1 366.3066 569.1958 0 Tp
TP
0 Tr
0 O
0 g
1 w 4 M
/_Helvetica-Bold 15 Tf
93 Tz
32.4671 0 Xb
XB
0 0 100 TC
0 1 2 2 3 Th
17 0 Tl
(   HZSNS ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 392.3066 638.1958 0 Tp
TP
0 Tr
0.32 g
0 0 Tl
(SCP\r) Tx 
0 -18 Td
( ) Tx 
(\r) TX 
TO
0 R
0.58 G
1.5 w [3 4 ]0 d
341 643 m
387.667 643.6665 L
S
0 G
0.5 w 2.5 M []0 d
325.9092 573.5249 m
371.667 573.6665 L
S
LB
%AI5_EndLayer--
gsave annotatepage grestore showpage
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec

%%EndDocument
 @endspecial 523 4193 a Fs(Fig.)15 b(5.)23 b Ft(The)e(con\014dence)f
(regions)h(for)h(b)r(oth)e Fa(HZSNS)f Ft([83])i(and)g
Fa(SCP)f Ft([77])i(for)g Fq(\012)2876 4201 y Fd(M)2943
4193 y Ft(,)f Fq(\012)3044 4201 y Fd(\003)3091 4193 y
Ft(.)g(The)f(t)n(w)n(o)523 4284 y(exp)r(erimen)n(ts)28
b(sho)n(w,)j(with)e(remark)l(able)g(consistency)-6 b(,)30
b(that)f Fq(\012)2401 4292 y Fd(\003)2476 4284 y Fq(>)e
Ft(0)j(is)g(required)f(to)h(reconcile)523 4376 y(observ)l(ations)23
b(and)f(theory)-6 b(.)22 b(The)h Fa(SCP)g Ft(result)f(is)h(based)g(on)g
(measuremen)n(ts)d(of)k(42)f(distan)n(t)f(SNIa.)523 4467
y(\(The)37 b(analysis)h(sho)n(wn)f(here)f(is)i(uncorrected)e(for)i
(host)f(galaxy)g(extinction;see)h([77])g(for)f(the)523
4558 y(alternativ)n(e)h(analyses)h(with)f(host)f(extinction)h
(correction,)h(whic)n(h)f(is)g(sho)n(wn)g(to)g(mak)n(e)e(little)523
4650 y(di\013erence)28 b(in)g(this)g(data)h(set.\))f(The)h
Fa(HZSNS)d Ft(result)j(is)f(based)h(on)f(measuremen)n(ts)e(of)j(16)g
(SNIa,)523 4741 y(including)23 b(6)g(snapshot)g(distances)h([80],)g(of)
g(whic)n(h)f(t)n(w)n(o)g(are)h Fa(SCP)f Ft(SNe)f(from)h(the)f(42)i(SN)e
(sample.)523 4832 y(The)f Fq(z)k(<)c Ft(0)p Fq(:)p Ft(15)h(ob)t(jects)h
(used)e(to)g(constrain)h(the)f(\014t)f(for)i(b)r(oth)f(teams)g(are)h
(dra)n(wn)f(from)g(the)g Fa(CTSS)523 4924 y Ft(sample)32
b([32],)h(so)f(man)n(y)e(of)j(these)f(ob)t(jects)g(are)h(common)d(b)r
(et)n(w)n(een)h(the)h(analyses)g(b)n(y)f(the)g(t)n(w)n(o)523
5015 y(teams.)p eop
%%Page: 19 19
19 18 bop 1829 232 a Ft(Measuring)27 b(cosmology)g(with)e(Sup)r(erno)n
(v)l(ae)198 b(19)547 2174 y @beginspecial 43 @llx 215
@lly 551 @urx 545 @ury 3401 @rwi @setspecial
%%BeginDocument: PerlmutterSchmidtfig6.eps
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: 13 -183 599 583
%AI3_DocumentPreview: Header
%AI5_ArtSize: 612 400
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 4
%AI5_OpenToView: -142.5 663.5 1 1586 1095 18 0 1 8 66 0 0
%AI5_OpenViewLayers: 3377
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 50 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 40 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIDataProc null def
	/XIVersion 6 def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
end
currentdict /_colorimage known not {
	/colorimage where {
		/colorimage get /_colorimage exch def
	}{
		/_colorimage null def
	} ifelse
} if
/_image systemdict /image get def
/_currenttransfer systemdict /currenttransfer get def
/FourEqual {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual { 
				/plateindex 0 def
			}{
				0 1 0 0 FourEqual { 
					/plateindex 1 def
				}{
					0 0 1 0 FourEqual {
						/plateindex 2 def
					}{
						0 0 0 1 FourEqual { 
							/plateindex 3 def
						}{
							0 0 0 0 FourEqual {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/clrspaceissepn {
	type /arraytype eq 
} def
/clrspacegetname {
	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse
} def
/clrspacegetalt {
	aload pop pop pop colormake
} def
/clrspacegetcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/clrspacemarksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				/findcmykcustomcolor where {
					pop
					dup length 2 sub get
					0.1 0.1 0.1 0.1 5 -1 roll
					findcmykcustomcolor 1 setcustomcolor
					systemdict /currentgray get exec
					1 ne
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/colormake {
	dup clrspacegetcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/colorexpand {
	dup clrspacegetname exch
	dup clrspaceissepn {
		clrspacegetalt
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				clrspacegetalt colortint colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/WalkRGBString {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/CMYKToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/SeparateCMYKImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne {
			sourcearray plateindex get exec
		}{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub {
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/ColorImageCompositeEmulator {
	pop true eq {
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/colorimage {
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index
 end
	
	dup 8 eq exch 1 eq or not {
		/_colorimage load null ne {
			_colorimage
		}{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}{
		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {
			/_colorimage load null eq {
				ColorImageCompositeEmulator
			}{
				dup 1 eq {
					pop pop image
				}{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						grestore
					} if
				} ifelse
			} ifelse
		}{
			dup 1 eq {
				pop pop
				image
			}{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0 {			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace clrspacegetcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] makeimagedict _image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] makeimagedict _image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} stringapply
			} concatprocs _image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} stringapply
			} concatprocs false _pticomps
			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse
		} ifelse
	} ifelse
} def
/graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray proctintimage
} def
/cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK proctintimage
} def
/rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB proctintimage
} def
/tintimage {
	TestPlateIndex -1 eq {
		colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop graytintimage
		}{
			dup /DeviceRGB eq {
				pop rgbtintimage
			}{
				pop cmyktintimage
			} ifelse
		} ifelse
	}{
		dup clrspacemarksplate {
			plateindex 5 lt {
				colortocmyk plateindex get 1 exch sub
				exch {1 0}{0 1} ifelse () graytintimage
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage
			} ifelse
		}{
			pop pop pop
			{pop 1} 0 1 () /DeviceGray proctintimage
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace tintimage
} def
/XIImage {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIType 1 eq {
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEncoding 0 ne XIVersion 6 le and {
			currentfile 128 string readline pop pop
		} if
		XICompression 0 eq {
			/XIBuffer1 XIRowBytes string def
			XIEncoding 0 eq {
				{currentfile XIBuffer1 readhexstring pop}
			}{
				{currentfile XIBuffer1 readstring pop}
			} ifelse
		}{
			/XIBuffer1 256 string def
			/XIBuffer2 XIRowBytes string def
			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
			/ASCIIHexDecode filter /DCTDecode filter
			/XIFile exch def
			{XIFile XIBuffer2 readstring pop}
		} ifelse
		/XIDataProc exch def
		
		XIVersion 6 le {
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIType 1 eq {
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		XIEnable {
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		grestore
 end
} def
end
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
userdict /_useSmoothShade true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _Myriad-Roman Myriad-Roman
[/_Myriad-Roman/Myriad-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI55J_Tsume: None
%AI3_BeginEncoding: _SymbolMT SymbolMT
[/_SymbolMT/SymbolMT 0 0 0 TZ
%AI3_EndEncoding TrueType
%AI55J_Tsume: None
%AI3_BeginEncoding: _Trebuchet-BoldItalic Trebuchet-BoldItalic
[/_Trebuchet-BoldItalic/Trebuchet-BoldItalic 0 0 0 TZ
%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
6 Bn
%AI5_BeginGradient: (Black, White Radial)
(Black, White Radial) 1 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 0 1 50 0 %_Bs
0 0 0 1 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Emerald Eye)
(Emerald Eye) 1 3 Bd
[
<
E4E4E4E4E5E5E5E5E5E5E5E5E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8
E8E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
ECECECECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEF
EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
>
<
7675737271706E6D6C6B6A68676665646361605F5E5D5C5B5A595857565554535251504F4E4D4C4B
4A4948474646454443424141403F3E3D3C3C3B3A39393837363635343433323131302F2F2E2E2D2C
2C2B2A2A292928282726262525242423232222212120201F1F1E1E1D1D1C1C1B1B1B1A1A19191818
181717171616151515141414131313121212111111101010100F0F0F0E0E0E0E0D0D0D0D0C0C0C0C
0B0B0B0B0B0A0A0A0A0A090909090908080808080807070707070706060606060606050505050505
05050404040404040404040403030303030303030303030302020202020202020202020202020202
01010101010101010101010101010101010101010101010101010101010000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000
>
<
F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F9F9
F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFB
FBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
9896959391908E8D8B8A8886858382807F7E7C7B79787675747271706E6D6C6A6968676564636261
5F5E5D5C5B5A5957565554535251504F4E4D4C4B4A49484746454443424241403F3E3D3C3C3B3A39
3837373635343433323131302F2F2E2D2D2C2B2B2A2929282727262625242423232222212120201F
1F1E1E1D1D1C1C1B1B1A1A1919181818171716161615151414141313131212121111111010100F0F
0F0F0E0E0E0D0D0D0D0C0C0C0C0B0B0B0B0A0A0A0A0A090909090908080808080707070707070606
06060606050505050505050504040404040404040403030303030303030303030202020202020202
02020202020202020101010101010101010101010101010101010101010101010101010000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000
>
1 %_Br
<
F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEDEDEDEDECECECECEBEBEBEAEAEAEAE9E9E9E8E8E8E7E7E6E6
E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DFDFDFDEDEDDDDDCDCDBDBDBDADAD9D9D8D8D7D7D6D6D5D5
D4D4D3D3D2D2D1D1D0D0CFCFCECECDCDCCCCCBCBCACAC9C8C8C7C7C6C6C5C5C4C3C3C2C2C1C1C0BF
BFBEBEBDBCBCBBBBBAB9B9B8B8B7B6B6B5B5B4B3B3B2B1B1B0B0AFAEAEADACACABAAAAA9A8A8A7A6
A6A5A4A4A3A2A2A1A0A09F9E9E9D9C9C9B9A9A99989797969595949393929190908F8E8E8D8C8B8B
8A89888887868685848383828180807F7E7D7D7C7B7A7A797877767675747373727170706F6E6D6C
6C6B6A696868676665646463626160605F5E5D5C5C5B5A5958575756555453535251504F4E4E4D4C
4B4A4948484746454443434241403F3E3D3C3C3B3A39383736363534333231302F2F2E2D2C2B2A29
282727262524232221201F1E1E1D1C1B1A19181716151414131211100F0E0D0C0B0A090807070605
0403020100
>
0
<
FFFFFFFFFFFEFEFEFEFEFDFDFDFDFDFCFCFCFCFBFBFBFAFAFAF9F9F9F8F8F8F7F7F7F6F6F6F5F5F4
F4F4F3F3F3F2F2F1F1F0F0F0EFEFEEEEEDEDECECECEBEBEAEAE9E9E8E8E7E7E6E6E5E5E4E4E3E3E2
E2E1E1E0E0DFDEDEDDDDDCDCDBDBDADAD9D8D8D7D7D6D6D5D4D4D3D3D2D1D1D0D0CFCECECDCDCCCB
CBCAC9C9C8C8C7C6C6C5C4C4C3C2C2C1C0C0BFBEBEBDBCBCBBBABAB9B8B8B7B6B6B5B4B4B3B2B2B1
B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A09F9F9E9D9C9C9B9A999998979696959493
939291908F8F8E8D8C8C8B8A898888878685848483828180807F7E7D7C7B7B7A7978777676757473
727171706F6E6D6C6C6B6A6968676666656463626160605F5E5D5C5B5A5959585756555453525151
504F4E4D4C4B4A49484847464544434241403F3E3E3D3C3B3A39383736353433323130302F2E2D2C
2B2A292827262524232221201F1E1D1D1C1B1A191817161514131211100F0E0D0C0B0A0908070605
0403020100
>
0
1 %_Br
[
0.8941 0.4627 0.9608 0.5961 1 16.2162 28.6517 %_Bs
0.9412 0 1 0 1 61.5385 64.6067 %_Bs
0 0 0 0 1 50 78.6517 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
F9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2
D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAA
A9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878685848382
81807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A
595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635343332
31302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A
0908070605040302
>
0.9882
<
05050505050505050505050505050505050505050505050505050505050505050505050505050505
05050606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606070707070707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707070707070707070707070707070707
07070707070708080808080808080808080808080808080808080808080808080808080808080808
0808080808080808
>
0
1 %_Br
<
E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEB
EBEBEBEBEBEBEBEBECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9
>
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B
8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3
B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADB
DCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFC
>
<
09090909090909090909090909090909090909090909090909090909090908080808080808080808
08080808080808080808080808080808080808080808080808080808080808080808080808080808
08080808080808080707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707060606060606060606060606060606
06060606060606060606060606060606060606060606060606060606060606060606060606060606
060606050505050505050505050505050505050505050505050505050505050505
>
0
1 %_Br
<
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8
>
<
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313131313
13131313131313131313131313131313131313131313131313131313131313131313131313141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414141414141414141414
14141414141414141414141414141414141414141414141414141414141414
>
<
EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8
C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A0
9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978
77767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525150
4F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928
27262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09
>
0
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBEC
>
<
05050505050505050506060606060606060606060606060606070707070707070707070707070707
070808080808080808080808080808080808090909090909090909090909090909090A0A0A0A0A0A
0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C
0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F
0F0F0F0F0F0F0F0F0F0F0F0F10101010101010101010101010101010111111111111111111111111
1111111112121212121212121212121212121212131313131313131313
>
<
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEF
>
0
1 %_Br
<
03030303030303030303030303030303030303030303030304040404040404040404040404040404
04040404040404040404040404040404040404040404040404040404040404040505050505050505
05050505050505050505050505050505050505050505050505050505050505050505050505050505
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707080808080808080808080808080808080808080808080808
08
>
<
F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCE
CDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6
A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E
7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756
5554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706
05
>
0.9137
0
1 %_Br
[
0.0078 0.9882 0.0314 0 1 50 100 %_Bs
0.9765 0.9882 0.0196 0 1 50 80 %_Bs
0.9098 0.0784 0.0353 0 1 50 60 %_Bs
0.9255 0.0745 0.9373 0 1 50 40 %_Bs
0.0314 0.0196 0.9137 0 1 50 20 %_Bs
0.0118 0.9608 0.9137 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar II)
(Steel Bar II) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A
>
0 %_Br
<
1A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041
42434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263646566676869
6A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F9091
92939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9
BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1
E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0.1 0 50 100 %_Bs
1 0 50 39.8876 %_Bs
0.1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Sunset)
(Sunset) 0 5 Bd
[
<
EEEDEDECECEBEBEAE9E9E8E8E7E6E6E5E5E4E4E3E2E2E1E1E0DFDFDEDEDDDDDCDBDBDADAD9D9D8D7
D7D6D6D5D4D4D3D3D2D2D1
>
<
3534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E
0D0C0B0A09080706050403
>
1
<
807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160605F5E5D5C5B5A
595857565554535251504F
>
1 %_Br
<
08090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354555657
58595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE
>
<
050505060606060607070707080808080809090909090A0A0A0A0A0B0B0B0B0B0C0C0C0C0D0D0D0D
0D0E0E0E0E0E0F0F0F0F0F1010101010111111111212121212131313131314141414141515151515
161616161717171717181818181819191919191A1A1A1A1A1B1B1B1B1C1C1C1C1C1D1D1D1D1D1E1E
1E1E1E1F1F1F1F1F2020202021212121212222222222232323232324242424252525252526262626
2627272727272828282828292929292A2A2A2A2A2B2B2B2B2B2C2C2C2C2C2D2D2D2D2D2E2E2E2E2F
2F2F2F2F303030303031313131313232323232333333333434343434353535
>
<
E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBECECECECECECECECECECEDEDED
EDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F1
F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4
F4F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8
F8F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFC
FCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF
>
<
0001010202030304040506060707080809090A0B0B0C0C0D0D0E0E0F101011111212131314151516
161717181819191A1B1B1C1C1D1D1E1E1F2020212122222323242525262627272828292A2A2B2B2C
2C2D2D2E2F2F3030313132323334343535363637373839393A3A3B3B3C3C3D3E3E3F3F4040414142
434344444545464647484849494A4A4B4B4C4D4D4E4E4F4F50505151525353545455555656575858
59595A5A5B5B5C5D5D5E5E5F5F6060616262636364646565666767686869696A6A6B6C6C6D6D6E6E
6F6F7071717272737374747576767777787879797A7B7B7C7C7D7D7E7E7F7F
>
1 %_Br
<
33333232323231313131303030302F2F2F2E2E2E2E2D2D2D2D2C2C2C2C2B2B2B2B2A2A2A29292929
282828282727272726262625252525242424242323232322222221212121202020201F1F1F1F1E1E
1E1E1D1D1D1C1C1C1C1B1B1B1B1A1A1A1A1919191818181817171717161616161515151414141413
13131312121212111111101010100F0F0F0F0E0E0E0E0D0D0D0D0C0C0C0B0B0B0B0A0A0A0A090909
090808
>
<
A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A89888786858483828180
7F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A5958
57565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736353433323130
2F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A0908
070605
>
<
F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1
F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEE
EEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECECECEC
ECECEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9
E9E9E9
>
<
1111111111101010101010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D
0D0D0D0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0909090909090909
09090808080808080808080707070707070707070706060606060606060605050505050505050505
04040404040404040403030303030303030303020202020202020202010101010101010101010000
000000
>
1 %_Br
<
F6F5F4F4F3F2F1F0F0EFEEEDECECEBEAE9E8E8E7E6E5E4E4E3E2E1E1E0DFDEDDDDDCDBDAD9D9D8D7
D6D6D5D4D3D2D2D1D0CFCFCECDCCCBCBCAC9C8C8C7C6C5C4C4C3C2C1C1C0BFBEBEBDBCBBBABAB9B8
B7B7B6B5B4B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A5A5A4A3A2A2A1A09F9F9E9D9C9C9B9A
9A999897979695949493929291908F8F8E8D8C8C8B8A8A89888787868585848382828180807F7E7E
7D7C7B7B7A7979787777767574747372727170706F6E6E6D6C6C6B6A6A6968686766666564646362
626160605F5E5E5D5C5C5B5A5A595858575756555554535352525150504F4E4E4D4D4C4B4B4A4A49
484847474646454444434342424140403F3F3E3E3D3D3C3C3B3B3A39393938383737363635353434
343333
>
<
EAEAE9E9E9E9E8E8E8E8E7E7E7E6E6E6E6E5E5E5E5E4E4E4E3E3E3E3E2E2E2E2E1E1E1E0E0E0E0DF
DFDFDFDEDEDEDDDDDDDDDCDCDCDCDBDBDBDBDADADAD9D9D9D9D8D8D8D8D7D7D7D7D6D6D6D6D5D5D5
D4D4D4D4D3D3D3D3D2D2D2D2D1D1D1D1D0D0D0D0CFCFCFCFCECECECECDCDCDCDCCCCCCCBCBCBCBCA
CACACAC9C9C9C9C8C8C8C8C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1
C0C0C0C0BFBFBFBFBEBEBEBEBDBDBDBDBDBCBCBCBCBBBBBBBBBABABABABAB9B9B9B9B8B8B8B8B7B7
B7B7B7B6B6B6B6B5B5B5B5B5B4B4B4B4B3B3B3B3B3B2B2B2B2B1B1B1B1B1B0B0B0B0B0AFAFAFAFAF
AEAEAEAEAEADADADADADACACACACACABABABABABAAAAAAAAAAAAA9A9A9A9A9A9A8A8A8A8A8A8A7A7
A7A7A7
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
2728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F40414243434445464748494A4B4C4D
4E4F50515253545556565758595A5B5C5D5E5F60616263646465666768696A6B6C6D6E6F70707172
737475767778797A7A7B7C7D7E7F80818283848485868788898A8B8C8C8D8E8F9091929394949596
9798999A9A9B9C9D9E9FA0A1A1A2A3A4A5A6A7A7A8A9AAABACACADAEAFB0B1B2B2B3B4B5B6B6B7B8
B9BABBBBBCBDBEBFBFC0C1C2C3C3C4C5C6C7C7C8C9CACBCBCCCDCECECFD0D1D2D2D3D4D5D5D6D7D8
D8D9DADADBDCDDDDDEDFDFE0E1E2E2E3E4E4E5E6E6E7E8E8E9EAEAEBECECEDEDEEEFEFF0F0F1F1F2
F2F3F3
>
<
00000000000000000101010101010101010101010101020202020202020202020202020202030303
03030303030303030303030404040404040404040404040404040505050505050505050505050505
05060606060606060606060606060606070707070707070707070707070707070808080808080808
08080808080808090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D
0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F
0F0F0F0F0F0F0F0F1010101010101010101010101010101010101010101111111111111111111111
111111
>
1 %_Br
[
0.8196 0.01 1 0.31 1 50 100 %_Bs
0.9333 0.2078 1 0.5 1 50 57.3034 %_Bs
0.0314 0.0196 0.9137 0 1 50 55.618 %_Bs
0.2 0.6549 0.9529 0.0667 1 50 49.4382 %_Bs
0.9647 0.9176 0 0 1 45 32.5843 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (White, Black)
(White, Black) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 1 1 50 100 %_Bs
0 0 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Azure Rings)
(Azure Rings) 22.5 22.5 58.5 58.5 [
%AI3_Tile
(0 O 0 R 0.9569 0.9294 0 0 k
 0.9569 0.9294 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1.75 w 4 M []0 d
0 XR
40.5 58.5 m
40.5 48.5586 32.4409 40.5 22.5 40.5 c
12.5591 40.5 4.5 48.5586 4.5 58.5 c
4.5 68.4414 12.5591 76.5 22.5 76.5 c
32.4409 76.5 40.5 68.4414 40.5 58.5 c
s
40.5 22.5 m
40.5 12.5586 32.4409 4.5 22.5 4.5 c
12.5591 4.5 4.5 12.5586 4.5 22.5 c
4.5 32.4414 12.5591 40.5 22.5 40.5 c
32.4409 40.5 40.5 32.4414 40.5 22.5 c
s
40.5 40.5 m
40.5 30.5586 32.4409 22.5 22.5 22.5 c
12.5591 22.5 4.5 30.5586 4.5 40.5 c
4.5 50.4414 12.5591 58.5 22.5 58.5 c
32.4409 58.5 40.5 50.4414 40.5 40.5 c
s
58.5 58.5 m
58.5 48.5586 50.4409 40.5 40.5 40.5 c
30.5591 40.5 22.5 48.5586 22.5 58.5 c
22.5 68.4414 30.5591 76.5 40.5 76.5 c
50.4409 76.5 58.5 68.4414 58.5 58.5 c
s
58.5 22.5 m
58.5 12.5586 50.4409 4.5 40.5 4.5 c
30.5591 4.5 22.5 12.5586 22.5 22.5 c
22.5 32.4414 30.5591 40.5 40.5 40.5 c
50.4409 40.5 58.5 32.4414 58.5 22.5 c
s
58.5 40.5 m
58.5 30.5586 50.4409 22.5 40.5 22.5 c
30.5591 22.5 22.5 30.5586 22.5 40.5 c
22.5 50.4414 30.5591 58.5 40.5 58.5 c
50.4409 58.5 58.5 50.4414 58.5 40.5 c
s
76.5 58.5 m
76.5 48.5586 68.4409 40.5 58.5 40.5 c
48.5591 40.5 40.5 48.5586 40.5 58.5 c
40.5 68.4414 48.5591 76.5 58.5 76.5 c
68.4409 76.5 76.5 68.4414 76.5 58.5 c
s
76.5 22.5 m
76.5 12.5586 68.4409 4.5 58.5 4.5 c
48.5591 4.5 40.5 12.5586 40.5 22.5 c
40.5 32.4414 48.5591 40.5 58.5 40.5 c
68.4409 40.5 76.5 32.4414 76.5 22.5 c
s
76.5 40.5 m
76.5 30.5586 68.4409 22.5 58.5 22.5 c
48.5591 22.5 40.5 30.5586 40.5 40.5 c
40.5 50.4414 48.5591 58.5 58.5 58.5 c
68.4409 58.5 76.5 50.4414 76.5 40.5 c
s
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Camouflage)
(Camouflage) 1 1 73 73 [
%AI3_Tile
(0 O 0 R 0.5961 0.1412 0.949 0.0275 k
 0.5961 0.1412 0.949 0.0275 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
1 73 m
1 1 L
73 1 L
73 73 L
1 73 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.498 0.349 0.9725 0.2 k
 0.498 0.349 0.9725 0.2 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
18.5449 73 m
18.5449 1 L
46.7832 1 L
46.7832 73 L
18.5449 73 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1882 0.1098 0.9255 0.0157 k
 0.1882 0.1098 0.9255 0.0157 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
11.9512 1 m
11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c
9.2314 10.2334 4.25 10.2334 4.25 13.8735 c
4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c
10.0313 24.832 10.208 24.832 10.208 28.5654 c
10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c
5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c
11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c
7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c
5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c
4.6631 69.1636 11.9512 69.3184 11.9512 73 C
27.9268 73 L
27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c
22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c
28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c
25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c
28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c
22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c
26.3945 24.832 24.4248 24.832 24.4248 21.0991 c
24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c
20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c
24.6055 2.8813 27.9268 4.7129 27.9268 1 C
11.9512 1 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.9255 0.2157 0.9647 0.0745 k
 0.9255 0.2157 0.9647 0.0745 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
41.875 1 m
41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c
42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c
40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c
41.5742 24.832 43.6484 24.832 43.6484 28.5659 c
43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c
39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c
39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c
45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c
40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c
40.6289 69.1636 41.875 69.3184 41.875 73 C
59.0752 73 L
59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c
53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c
55.8945 55.502 61.0059 55.502 61.0059 51.7886 c
61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c
60.5635 40.897 59.9277 40.897 59.9277 37.2842 c
59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c
56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c
61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c
52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c
55.7461 3.978 59.0752 4.6484 59.0752 1 C
41.875 1 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Clown Attack)
(Clown Attack) 5.25 11 41.25 47 [
%AI3_Tile
(0 O 0 R 0.9255 0 1 0 k
 0.9255 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
17.5 18.25 m
17.5 15.2119 15.0376 12.75 12 12.75 c
8.9624 12.75 6.5 15.2119 6.5 18.25 c
6.5 21.2881 8.9624 23.75 12 23.75 c
15.0376 23.75 17.5 21.2881 17.5 18.25 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0078 0.9529 0 0 k
 0.0078 0.9529 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
22.25 34.125 m
22.25 31.2939 19.9556 29 17.125 29 c
14.2944 29 12 31.2939 12 34.125 c
12 36.9561 14.2944 39.25 17.125 39.25 c
19.9556 39.25 22.25 36.9561 22.25 34.125 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0118 0.9608 0.9137 0 k
 0.0118 0.9608 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
30 31.625 m
30 29.4854 28.2646 27.75 26.125 27.75 c
23.9849 27.75 22.25 29.4854 22.25 31.625 c
22.25 33.7646 23.9849 35.5 26.125 35.5 c
28.2646 35.5 30 33.7646 30 31.625 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
23.25 24.5 m
23.25 22.4287 21.5713 20.75 19.5 20.75 c
17.4287 20.75 15.75 22.4287 15.75 24.5 c
15.75 26.5713 17.4287 28.25 19.5 28.25 c
21.5713 28.25 23.25 26.5713 23.25 24.5 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.9569 0.9294 0 0 k
 0.9569 0.9294 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
36 22.25 m
36 19.0742 33.4258 16.5 30.25 16.5 c
27.0742 16.5 24.5 19.0742 24.5 22.25 c
24.5 25.4258 27.0742 28 30.25 28 c
33.4258 28 36 25.4258 36 22.25 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1882 0.1216 0.8 0.0157 k
 0.1882 0.1216 0.8 0.0157 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
24.25 16.5 m
24.25 14.8438 22.9067 13.5 21.25 13.5 c
19.5933 13.5 18.25 14.8438 18.25 16.5 c
18.25 18.1563 19.5933 19.5 21.25 19.5 c
22.9067 19.5 24.25 18.1563 24.25 16.5 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8353 0 0 0 k
 0.8353 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
37.25 43.875 m
37.25 39.5264 33.7236 36 29.375 36 c
25.0264 36 21.5 39.5264 21.5 43.875 c
21.5 48.2236 25.0264 51.75 29.375 51.75 c
33.7236 51.75 37.25 48.2236 37.25 43.875 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0078 0.1961 0.9373 0 k
 0.0078 0.1961 0.9373 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
38.75 26.625 m
38.75 25.7275 38.0225 25 37.125 25 c
36.2275 25 35.5 25.7275 35.5 26.625 c
35.5 27.5225 36.2275 28.25 37.125 28.25 c
38.0225 28.25 38.75 27.5225 38.75 26.625 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0196 0.5961 0.9137 0 k
 0.0196 0.5961 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
19.875 42 m
19.875 41.1025 19.1475 40.375 18.25 40.375 c
17.3525 40.375 16.625 41.1025 16.625 42 c
16.625 42.8975 17.3525 43.625 18.25 43.625 c
19.1475 43.625 19.875 42.8975 19.875 42 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0118 0.9608 0.9137 0 k
 0.0118 0.9608 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
12.75 28.125 m
12.75 26.8135 11.6865 25.75 10.375 25.75 c
9.0635 25.75 8 26.8135 8 28.125 c
8 29.4365 9.0635 30.5 10.375 30.5 c
11.6865 30.5 12.75 29.4365 12.75 28.125 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.9255 0 1 0 k
 0.9255 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
43.25 33 m
43.25 30.998 41.627 29.375 39.625 29.375 c
37.623 29.375 36 30.998 36 33 c
36 35.002 37.623 36.625 39.625 36.625 c
41.627 36.625 43.25 35.002 43.25 33 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
13.25 43.75 m
13.25 40.9883 11.0117 38.75 8.25 38.75 c
5.4883 38.75 3.25 40.9883 3.25 43.75 c
3.25 46.5117 5.4883 48.75 8.25 48.75 c
11.0117 48.75 13.25 46.5117 13.25 43.75 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.3922 0.9451 0 0 k
 0.3922 0.9451 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
6.5 22.25 m
6.5 20.7314 5.2686 19.5 3.75 19.5 c
2.2314 19.5 1 20.7314 1 22.25 c
1 23.7686 2.2314 25 3.75 25 c
5.2686 25 6.5 23.7686 6.5 22.25 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0235 0.0118 0.6 0 k
 0.0235 0.0118 0.6 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
34.4883 32.75 m
34.4883 31.9277 33.8223 31.2617 33 31.2617 c
32.1777 31.2617 31.5117 31.9277 31.5117 32.75 c
31.5117 33.5723 32.1777 34.2383 33 34.2383 c
33.8223 34.2383 34.4883 33.5723 34.4883 32.75 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
49.25 43.75 m
49.25 40.9883 47.0117 38.75 44.25 38.75 c
41.4883 38.75 39.25 40.9883 39.25 43.75 c
39.25 46.5117 41.4883 48.75 44.25 48.75 c
47.0117 48.75 49.25 46.5117 49.25 43.75 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.3922 0.9451 0 0 k
 0.3922 0.9451 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
42.5 22.25 m
42.5 20.7314 41.2686 19.5 39.75 19.5 c
38.2314 19.5 37 20.7314 37 22.25 c
37 23.7686 38.2314 25 39.75 25 c
41.2686 25 42.5 23.7686 42.5 22.25 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
49.25 7.752 m
49.25 4.9902 47.0117 2.752 44.25 2.752 c
41.4883 2.752 39.25 4.9902 39.25 7.752 c
39.25 10.5137 41.4883 12.752 44.25 12.752 c
47.0117 12.752 49.25 10.5137 49.25 7.752 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8353 0 0 0 k
 0.8353 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
37.25 7.875 m
37.25 3.5264 33.7236 0 29.375 0 c
25.0264 0 21.5 3.5264 21.5 7.875 c
21.5 12.2236 25.0264 15.75 29.375 15.75 c
33.7236 15.75 37.25 12.2236 37.25 7.875 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0314 0.0196 0.9137 0 k
 0.0314 0.0196 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
13.25 7.75 m
13.25 4.9883 11.0117 2.75 8.25 2.75 c
5.4883 2.75 3.25 4.9883 3.25 7.75 c
3.25 10.5117 5.4883 12.75 8.25 12.75 c
11.0117 12.75 13.25 10.5117 13.25 7.75 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.9255 0 1 0 k
 0.9255 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
7.25 33 m
7.25 30.998 5.627 29.375 3.625 29.375 c
1.623 29.375 0 30.998 0 33 c
0 35.002 1.623 36.625 3.625 36.625 c
5.627 36.625 7.25 35.002 7.25 33 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.0235 0.4078 0 0 k
 0.0235 0.4078 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
39.6533 16.0381 m
39.6533 15.1064 38.8975 14.3506 37.9658 14.3506 c
37.0342 14.3506 36.2783 15.1064 36.2783 16.0381 c
36.2783 16.9697 37.0342 17.7256 37.9658 17.7256 c
38.8975 17.7256 39.6533 16.9697 39.6533 16.0381 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Pyramids)
(Pyramids) 1 1 19.5 19.5 [
%AI3_Tile
(0 O 0 R 0.1882 0.1294 0.102 0.0118 k
 0.1882 0.1294 0.102 0.0118 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
1 19.5 m
10.25 10.25 l
19.5 19.5 l
1 19.5 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6235 0.4863 0.4863 0.4784 k
 0.6235 0.4863 0.4863 0.4784 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
19.5 1 m
10.25 10.25 l
1 1 l
19.5 1 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.3529 0.2549 0.2235 0.0667 k
 0.3529 0.2549 0.2235 0.0667 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
1 1 m
10.25 10.25 l
1 19.5 l
1 1 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.4902 0.3647 0.3451 0.2196 k
 0.4902 0.3647 0.3451 0.2196 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
19.5 19.5 m
10.25 10.25 l
19.5 1 l
19.5 19.5 l
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Red Stripe)
(Red Stripe) 37 19 73 55 [
%AI3_Tile
(0 O 0 R 0 0.9608 0.9137 0 k
 0 0.9608 0.9137 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 18 w 4 M []0 d
0 XR
37 37 m
73 37 l
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Red Tablecloth)
(Red Tablecloth) 0 0 24 24 [
%AI3_Tile
(0 O 0 R 0.25 1 1 0 k
 0.25 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
6 18 m
0 18 L
0 24 L
6 24 L
6 18 L
f
18 18 m
12 18 L
12 24 L
18 24 L
18 18 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1225 0.5 0.5 0 k
 0.1225 0.5 0.5 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
12 18 m
6 18 L
6 24 L
12 24 L
12 18 L
f
24 18 m
18 18 L
18 24 L
24 24 L
24 18 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
12 12 m
6 12 L
6 18 L
12 18 L
12 12 L
f
24 12 m
18 12 L
18 18 L
24 18 L
24 12 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1225 0.5 0.5 0 k
 0.1225 0.5 0.5 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
6 12 m
0 12 L
0 18 L
6 18 L
6 12 L
f
18 12 m
12 12 L
12 18 L
18 18 L
18 12 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.25 1 1 0 k
 0.25 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
6 6 m
0 6 L
0 12 L
6 12 L
6 6 L
f
18 6 m
12 6 L
12 12 L
18 12 L
18 6 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1225 0.5 0.5 0 k
 0.1225 0.5 0.5 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
12 6 m
6 6 L
6 12 L
12 12 L
12 6 L
f
24 6 m
18 6 L
18 12 L
24 12 L
24 6 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
12 0 m
6 0 L
6 6 L
12 6 L
12 0 L
f
24 0 m
18 0 L
18 6 L
24 6 L
24 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1225 0.5 0.5 0 k
 0.1225 0.5 0.5 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
6 0 m
0 0 L
0 6 L
6 6 L
6 0 L
f
18 0 m
12 0 L
12 6 L
18 6 L
18 0 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 k
([Registration]) Pc
1 1 1 1 k
([Registration]) Pc
([Registration]) Pc
0 0 0 0 k
(White) Pc
0 0 0 1 k
(Black) Pc
0 0 0 0.8 k
(80% Black) Pc
0 0 0 0.6 k
(60% Black) Pc
0 0 0 0.4 k
(40% Black) Pc
0 0 0 0.2 k
(20% Black) Pc
0 1 1 0 k
(Red M=100 Y=100) Pc
0 0.75 0.75 0 k
(75% Red M=75 Y=75) Pc
0 0.5 0.5 0 k
(50% Red M=50 Y=50) Pc
0 0.25 0.25 0 k
(25% Red M=25 Y=25) Pc
0.8 0 1 0 k
(Green C=80 Y=100) Pc
0.6 0 0.75 0 k
(75% Green C=60 Y=75) Pc
0.4 0 0.5 0 k
(50% Green C=40 Y=50) Pc
0.2 0 0.25 0 k
(25% Green C=20 Y=25) Pc
1 0.5 0 0 k
(Blue C=100 M=50) Pc
0.75 0.375 0 0 k
(75% Blue C=75 M=37.5) Pc
0.5 0.25 0 0 k
(50% Blue C=50 M=25) Pc
0.25 0.125 0 0 k
(25% Blue C=25 M=12.5) Pc
0 0.5 1 0 k
(Orange M=50 Y=100) Pc
0 0.375 0.75 0 k
(75% Orange M=37.5 Y=75) Pc
0 0.25 0.5 0 k
(50% Orange M=25 Y=50) Pc
0 0.125 0.25 0 k
(25% Orange M=12.5 Y=25) Pc
0.5 0.9 0 0 k
(Violet C=50 M=90) Pc
0.375 0.675 0 0 k
(75% Violet C=37.5 M=67.5) Pc
0.25 0.45 0 0 k
(50% Violet C=25 M=45 ) Pc
0.125 0.225 0 0 k
(25% Violet C=12.5 M=22.5) Pc
0.8 0 0 0 k
(Azure C=80) Pc
0.6 0 0 0 k
(75% Azure C=60) Pc
0.4 0 0 0 k
(50% Azure C=40) Pc
0.2 0 0 0 k
(25% Azure C=20) Pc
0 0 1 0 k
(Yellow) Pc
0 0 0.75 0 k
(75% Yellow) Pc
0 0 0.5 0 k
(50% Yellow) Pc
0 0 0.25 0 k
(25% Yellow) Pc
Bb
2 (White, Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(White, Black) Pc
Bb
0 0 0 0 Bh
2 (Black, White Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Black, White Radial) Pc
Bb
2 (Steel Bar II) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Steel Bar II) Pc
Bb
2 (Rainbow) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Rainbow) Pc
Bb
0 0 0 0 Bh
2 (Emerald Eye) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Emerald Eye) Pc
Bb
2 (Sunset) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Sunset) Pc
(Red Tablecloth) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Red Tablecloth) Pc
(Pyramids) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Pyramids) Pc
(Azure Rings) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Azure Rings) Pc
(Red Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Red Stripe) Pc
(Clown Attack) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Clown Attack) Pc
(Camouflage) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Camouflage) Pc
PB
%AI5_EndPalette
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 255 79 79 Lb
(Layer 2) Ln
0 A
u
*u
300 Ar
0 R
0 0 0 1 K
1 J 1 j 1 w 10 M []0 d
0 XR
75.0469 243.8271 m
291.0283 243.8271 l
S
300 Ar
75.0469 243.8271 m
75.0469 251.5068 l
S
300 Ar
81.167 243.8271 m
81.167 247.667 l
S
300 Ar
87.4063 243.8271 m
87.4063 247.667 l
S
300 Ar
93.5254 243.8271 m
93.5254 247.667 l
S
300 Ar
99.7646 243.8271 m
99.7646 247.667 l
S
300 Ar
105.8848 243.8271 m
105.8848 251.5068 l
S
300 Ar
112.124 243.8271 m
112.124 247.667 l
S
300 Ar
118.2432 243.8271 m
118.2432 247.667 l
S
300 Ar
124.3633 243.8271 m
124.3633 247.667 l
S
300 Ar
130.6025 243.8271 m
130.6025 247.667 l
S
300 Ar
136.7217 243.8271 m
136.7217 251.5068 l
S
300 Ar
142.9609 243.8271 m
142.9609 247.667 l
S
300 Ar
149.0811 243.8271 m
149.0811 247.667 l
S
300 Ar
155.3203 243.8271 m
155.3203 247.667 l
S
300 Ar
161.4399 243.8271 m
161.4399 247.667 l
S
300 Ar
167.5586 243.8271 m
167.5586 251.5068 l
S
300 Ar
173.7988 243.8271 m
173.7988 247.667 l
S
300 Ar
179.918 243.8271 m
179.918 247.667 l
S
300 Ar
186.1572 243.8271 m
186.1572 247.667 l
S
300 Ar
192.2773 243.8271 m
192.2773 247.667 l
S
300 Ar
198.5166 243.8271 m
198.5166 251.5068 l
S
300 Ar
204.6357 243.8271 m
204.6357 247.667 l
S
300 Ar
210.7559 243.8271 m
210.7559 247.667 l
S
300 Ar
216.9941 243.8271 m
216.9941 247.667 l
S
300 Ar
223.1152 243.8271 m
223.1152 247.667 l
S
300 Ar
229.3545 243.8271 m
229.3545 251.5068 l
S
300 Ar
235.4736 243.8271 m
235.4736 247.667 l
S
300 Ar
241.7139 243.8271 m
241.7139 247.667 l
S
300 Ar
247.832 243.8271 m
247.832 247.667 l
S
300 Ar
253.9512 243.8271 m
253.9512 247.667 l
S
300 Ar
260.1914 243.8271 m
260.1914 251.5068 l
S
300 Ar
266.3115 243.8271 m
266.3115 247.667 l
S
300 Ar
272.5498 243.8271 m
272.5498 247.667 l
S
300 Ar
278.6699 243.8271 m
278.6699 247.667 l
S
300 Ar
284.9092 243.8271 m
284.9092 247.667 l
S
300 Ar
291.0283 243.8271 m
291.0283 251.5068 l
S
300 Ar
1 D
74.8066 241.5469 m
74.0869 241.3066 l
73.6074 240.5869 l
73.3672 239.3867 l
73.3672 238.667 l
73.6074 237.4668 l
74.0869 236.7471 l
74.8066 236.5068 l
75.2871 236.5068 l
76.0068 236.7471 l
76.4873 237.4668 l
76.7266 238.667 l
76.7266 239.3867 l
76.4873 240.5869 l
76.0068 241.3066 l
75.2871 241.5469 l
74.8066 241.5469 l
74.3271 241.3066 l
74.0869 241.0674 l
73.8467 240.5869 l
73.6074 239.3867 l
73.6074 238.667 l
73.8467 237.4668 l
74.0869 236.9873 l
74.3271 236.7471 l
74.8066 236.5068 l
S
300 Ar
75.2871 236.5068 m
75.7666 236.7471 l
76.0068 236.9873 l
76.2471 237.4668 l
76.4873 238.667 l
76.4873 239.3867 l
76.2471 240.5869 l
76.0068 241.0674 l
75.7666 241.3066 l
75.2871 241.5469 l
S
300 Ar
103.4849 236.9873 m
103.2451 236.7471 l
103.4849 236.5068 l
103.7246 236.7471 l
103.4849 236.9873 l
S
300 Ar
0 D
105.8848 240.5869 m
106.3647 240.8271 l
107.084 241.5469 l
107.084 236.5068 l
S
300 Ar
106.8442 241.3066 m
106.8442 236.5068 l
S
300 Ar
105.8848 236.5068 m
108.0439 236.5068 l
S
300 Ar
1 D
134.3223 236.9873 m
134.082 236.7471 l
134.3223 236.5068 l
134.562 236.7471 l
134.3223 236.9873 l
S
300 Ar
0 D
136.2422 240.5869 m
136.4819 240.3467 l
136.2422 240.1064 l
136.002 240.3467 l
136.002 240.5869 l
136.2422 241.0674 l
136.4819 241.3066 l
137.2021 241.5469 l
138.1621 241.5469 l
138.8818 241.3066 l
139.1221 241.0674 l
139.3618 240.5869 l
139.3618 240.1064 l
139.1221 239.627 l
138.4019 239.1465 l
137.2021 238.667 l
136.7217 238.4268 l
136.2422 237.9473 l
136.002 237.2266 l
136.002 236.5068 l
S
300 Ar
138.1621 241.5469 m
138.6416 241.3066 l
138.8818 241.0674 l
139.1221 240.5869 l
139.1221 240.1064 l
138.8818 239.627 l
138.1621 239.1465 l
137.2021 238.667 l
S
300 Ar
1 D
136.002 236.9873 m
136.2422 237.2266 l
136.7217 237.2266 l
137.9219 236.7471 l
138.6416 236.7471 l
139.1221 236.9873 l
139.3618 237.2266 l
S
300 Ar
136.7217 237.2266 m
137.9219 236.5068 l
138.8818 236.5068 l
139.1221 236.7471 l
139.3618 237.2266 l
139.3618 237.707 l
S
300 Ar
165.1592 236.9873 m
164.9189 236.7471 l
165.1592 236.5068 l
165.3994 236.7471 l
165.1592 236.9873 l
S
300 Ar
0 D
167.0791 240.8271 m
167.3193 240.5869 l
167.0791 240.3467 l
166.8389 240.5869 l
166.8389 240.8271 l
167.3193 241.3066 l
168.0391 241.5469 l
168.999 241.5469 l
169.7188 241.3066 l
169.959 240.8271 l
169.959 240.1064 l
169.7188 239.627 l
168.999 239.3867 l
168.2793 239.3867 l
S
300 Ar
168.999 241.5469 m
169.4785 241.3066 l
169.7188 240.8271 l
169.7188 240.1064 l
169.4785 239.627 l
168.999 239.3867 l
169.4785 239.1465 l
169.959 238.667 l
170.1992 238.1865 l
170.1992 237.4668 l
169.959 236.9873 l
169.7188 236.7471 l
168.999 236.5068 l
168.0391 236.5068 l
167.3193 236.7471 l
167.0791 236.9873 l
166.8389 237.4668 l
166.8389 237.707 l
167.0791 237.9473 l
167.3193 237.707 l
167.0791 237.4668 l
S
300 Ar
169.7188 238.9072 m
169.959 238.1865 l
169.959 237.4668 l
169.7188 236.9873 l
169.4785 236.7471 l
168.999 236.5068 l
S
300 Ar
1 D
196.1172 236.9873 m
195.877 236.7471 l
196.1172 236.5068 l
196.3574 236.7471 l
196.1172 236.9873 l
S
300 Ar
0 D
199.9561 241.0674 m
199.9561 236.5068 l
S
300 Ar
200.1963 241.5469 m
200.1963 236.5068 l
S
300 Ar
1 D
200.1963 241.5469 m
197.5566 237.9473 l
201.3965 237.9473 l
S
300 Ar
0 D
199.2363 236.5068 m
200.916 236.5068 l
S
300 Ar
1 D
226.9541 236.9873 m
226.7139 236.7471 l
226.9541 236.5068 l
227.1934 236.7471 l
226.9541 236.9873 l
S
300 Ar
0 D
229.1133 241.5469 m
228.6338 239.1465 l
229.1133 239.3867 l
229.834 239.627 l
230.5537 239.627 l
231.2744 239.3867 l
231.7549 238.9072 l
231.9932 238.1865 l
231.9932 237.9473 l
231.7549 237.2266 l
231.2744 236.7471 l
230.5537 236.5068 l
229.834 236.5068 l
229.1133 236.7471 l
228.874 236.9873 l
228.6338 237.4668 l
228.6338 237.707 l
228.874 237.9473 l
229.1133 237.707 l
228.874 237.4668 l
S
300 Ar
230.5537 239.627 m
231.0332 239.3867 l
231.5137 238.9072 l
231.7549 238.1865 l
231.7549 237.9473 l
231.5137 237.2266 l
231.0332 236.7471 l
230.5537 236.5068 l
S
300 Ar
229.1133 241.5469 m
231.5137 241.5469 l
S
300 Ar
1 D
229.1133 241.3066 m
230.3145 241.3066 l
231.5137 241.5469 l
S
300 Ar
257.791 236.9873 m
257.5518 236.7471 l
257.791 236.5068 l
258.0313 236.7471 l
257.791 236.9873 l
S
300 Ar
262.3516 240.8271 m
262.1113 240.5869 l
262.3516 240.3467 l
262.5918 240.5869 l
262.5918 240.8271 l
262.3516 241.3066 l
261.8711 241.5469 l
261.1514 241.5469 l
260.4316 241.3066 l
259.9512 240.8271 l
259.7119 240.3467 l
259.4717 239.3867 l
259.4717 237.9473 l
259.7119 237.2266 l
260.1914 236.7471 l
260.9111 236.5068 l
261.3916 236.5068 l
262.1113 236.7471 l
262.5918 237.2266 l
262.8311 237.9473 l
262.8311 238.1865 l
262.5918 238.9072 l
262.1113 239.3867 l
261.3916 239.627 l
261.1514 239.627 l
260.4316 239.3867 l
259.9512 238.9072 l
259.7119 238.1865 l
S
300 Ar
261.1514 241.5469 m
260.6719 241.3066 l
260.1914 240.8271 l
259.9512 240.3467 l
259.7119 239.3867 l
259.7119 237.9473 l
259.9512 237.2266 l
260.4316 236.7471 l
260.9111 236.5068 l
S
300 Ar
261.3916 236.5068 m
261.8711 236.7471 l
262.3516 237.2266 l
262.5918 237.9473 l
262.5918 238.1865 l
262.3516 238.9072 l
261.8711 239.3867 l
261.3916 239.627 l
S
300 Ar
288.6299 236.9873 m
288.3896 236.7471 l
288.6299 236.5068 l
288.8691 236.7471 l
288.6299 236.9873 l
S
300 Ar
0 D
290.3096 241.5469 m
290.3096 240.1064 l
S
300 Ar
290.3096 240.5869 m
290.5488 241.0674 l
291.0283 241.5469 l
291.5088 241.5469 l
292.71 240.8271 l
293.1895 240.8271 l
293.4287 241.0674 l
293.6689 241.5469 l
S
300 Ar
290.5488 241.0674 m
291.0283 241.3066 l
291.5088 241.3066 l
292.71 240.8271 l
S
300 Ar
1 D
293.6689 241.5469 m
293.6689 240.8271 l
293.4287 240.1064 l
292.4688 238.9072 l
292.2295 238.4268 l
291.9883 237.707 l
291.9883 236.5068 l
S
300 Ar
293.4287 240.1064 m
292.2295 238.9072 l
291.9883 238.4268 l
291.749 237.707 l
291.749 236.5068 l
S
300 Ar
0 D
75.0469 543.8018 m
291.0283 543.8018 l
S
300 Ar
75.0469 543.8018 m
75.0469 536.1226 l
S
300 Ar
81.167 543.8018 m
81.167 539.9619 l
S
300 Ar
87.4063 543.8018 m
87.4063 539.9619 l
S
300 Ar
93.5254 543.8018 m
93.5254 539.9619 l
S
300 Ar
99.7646 543.8018 m
99.7646 539.9619 l
S
300 Ar
105.8848 543.8018 m
105.8848 536.1226 l
S
300 Ar
112.124 543.8018 m
112.124 539.9619 l
S
300 Ar
118.2432 543.8018 m
118.2432 539.9619 l
S
300 Ar
124.3633 543.8018 m
124.3633 539.9619 l
S
300 Ar
130.6025 543.8018 m
130.6025 539.9619 l
S
300 Ar
136.7217 543.8018 m
136.7217 536.1226 l
S
300 Ar
142.9609 543.8018 m
142.9609 539.9619 l
S
300 Ar
149.0811 543.8018 m
149.0811 539.9619 l
S
300 Ar
155.3203 543.8018 m
155.3203 539.9619 l
S
300 Ar
161.4399 543.8018 m
161.4399 539.9619 l
S
300 Ar
167.5586 543.8018 m
167.5586 536.1226 l
S
300 Ar
173.7988 543.8018 m
173.7988 539.9619 l
S
300 Ar
179.918 543.8018 m
179.918 539.9619 l
S
300 Ar
186.1572 543.8018 m
186.1572 539.9619 l
S
300 Ar
192.2773 543.8018 m
192.2773 539.9619 l
S
300 Ar
198.5166 543.8018 m
198.5166 536.1226 l
S
300 Ar
204.6357 543.8018 m
204.6357 539.9619 l
S
300 Ar
210.7559 543.8018 m
210.7559 539.9619 l
S
300 Ar
216.9941 543.8018 m
216.9941 539.9619 l
S
300 Ar
223.1152 543.8018 m
223.1152 539.9619 l
S
300 Ar
229.3545 543.8018 m
229.3545 536.1226 l
S
300 Ar
235.4736 543.8018 m
235.4736 539.9619 l
S
300 Ar
241.7139 543.8018 m
241.7139 539.9619 l
S
300 Ar
247.832 543.8018 m
247.832 539.9619 l
S
300 Ar
253.9512 543.8018 m
253.9512 539.9619 l
S
300 Ar
260.1914 543.8018 m
260.1914 536.1226 l
S
300 Ar
266.3115 543.8018 m
266.3115 539.9619 l
S
300 Ar
272.5498 543.8018 m
272.5498 539.9619 l
S
300 Ar
278.6699 543.8018 m
278.6699 539.9619 l
S
300 Ar
284.9092 543.8018 m
284.9092 539.9619 l
S
300 Ar
291.0283 543.8018 m
291.0283 536.1226 l
S
300 Ar
75.0469 243.8271 m
75.0469 543.8018 l
S
300 Ar
75.0469 243.8271 m
82.7261 243.8271 l
S
300 Ar
75.0469 252.7061 m
78.8867 252.7061 l
S
300 Ar
75.0469 261.4648 m
78.8867 261.4648 l
S
300 Ar
75.0469 270.3447 m
78.8867 270.3447 l
S
300 Ar
75.0469 279.1025 m
82.7261 279.1025 l
S
300 Ar
75.0469 287.9834 m
78.8867 287.9834 l
S
300 Ar
75.0469 296.7432 m
78.8867 296.7432 l
S
300 Ar
75.0469 305.6221 m
78.8867 305.6221 l
S
300 Ar
75.0469 314.3799 m
82.7261 314.3799 l
S
300 Ar
75.0469 323.2588 m
78.8867 323.2588 l
S
300 Ar
75.0469 332.0205 m
78.8867 332.0205 l
S
300 Ar
75.0469 340.8994 m
78.8867 340.8994 l
S
300 Ar
75.0469 349.6572 m
82.7261 349.6572 l
S
300 Ar
75.0469 358.5371 m
78.8867 358.5371 l
S
300 Ar
75.0469 367.2959 m
78.8867 367.2959 l
S
300 Ar
75.0469 376.1748 m
78.8867 376.1748 l
S
300 Ar
75.0469 384.9355 m
82.7261 384.9355 l
S
300 Ar
75.0469 393.8135 m
78.8867 393.8135 l
S
300 Ar
75.0469 402.6934 m
78.8867 402.6934 l
S
300 Ar
75.0469 411.4531 m
78.8867 411.4531 l
S
300 Ar
75.0469 420.332 m
82.7261 420.332 l
S
300 Ar
75.0469 429.0913 m
78.8867 429.0913 l
S
300 Ar
75.0469 437.9707 m
78.8867 437.9707 l
S
300 Ar
75.0469 446.73 m
78.8867 446.73 l
S
300 Ar
75.0469 455.6094 m
82.7261 455.6094 l
S
300 Ar
75.0469 464.3682 m
78.8867 464.3682 l
S
300 Ar
75.0469 473.2476 m
78.8867 473.2476 l
S
300 Ar
75.0469 482.0068 m
78.8867 482.0068 l
S
300 Ar
75.0469 490.8862 m
82.7261 490.8862 l
S
300 Ar
75.0469 499.6455 m
78.8867 499.6455 l
S
300 Ar
75.0469 508.5249 m
78.8867 508.5249 l
S
300 Ar
75.0469 517.2842 m
78.8867 517.2842 l
S
300 Ar
75.0469 526.1631 m
82.7261 526.1631 l
S
300 Ar
75.0469 534.9224 m
78.8867 534.9224 l
S
300 Ar
75.0469 543.8018 m
78.8867 543.8018 l
S
300 Ar
62.6875 243.8271 m
67.0078 243.8271 l
S
300 Ar
68.6875 245.7471 m
68.9272 245.5068 l
68.6875 245.2666 l
68.4473 245.5068 l
68.4473 245.7471 l
68.6875 246.2266 l
68.9272 246.4658 l
69.6475 246.707 l
70.6074 246.707 l
71.3271 246.4658 l
71.5674 246.2266 l
71.8076 245.7471 l
71.8076 245.2666 l
71.5674 244.7871 l
70.8477 244.3066 l
69.6475 243.8271 l
69.1675 243.5869 l
68.6875 243.1064 l
68.4473 242.3867 l
68.4473 241.667 l
S
300 Ar
70.6074 246.707 m
71.0874 246.4658 l
71.3271 246.2266 l
71.5674 245.7471 l
71.5674 245.2666 l
71.3271 244.7871 l
70.6074 244.3066 l
69.6475 243.8271 l
S
300 Ar
1 D
68.4473 242.1465 m
68.6875 242.3867 l
69.1675 242.3867 l
70.3672 241.9072 l
71.0874 241.9072 l
71.5674 242.1465 l
71.8076 242.3867 l
S
300 Ar
69.1675 242.3867 m
70.3672 241.667 l
71.3271 241.667 l
71.5674 241.9072 l
71.8076 242.3867 l
71.8076 242.8672 l
S
300 Ar
0 D
55.9683 279.1025 m
60.2881 279.1025 l
S
300 Ar
62.4478 281.0244 m
62.9277 281.2627 l
63.6479 281.9834 l
63.6479 276.9443 l
S
300 Ar
63.4082 281.7432 m
63.4082 276.9443 l
S
300 Ar
62.4478 276.9443 m
64.6079 276.9443 l
S
300 Ar
1 D
66.7676 277.4248 m
66.5278 277.1826 l
66.7676 276.9443 l
67.0078 277.1826 l
66.7676 277.4248 l
S
300 Ar
69.6475 281.9834 m
68.9272 281.7432 l
68.6875 281.2627 l
68.6875 280.5439 l
68.9272 280.0635 l
69.6475 279.8232 l
70.6074 279.8232 l
71.3271 280.0635 l
71.5674 280.5439 l
71.5674 281.2627 l
71.3271 281.7432 l
70.6074 281.9834 l
69.6475 281.9834 l
69.1675 281.7432 l
68.9272 281.2627 l
68.9272 280.5439 l
69.1675 280.0635 l
69.6475 279.8232 l
S
300 Ar
70.6074 279.8232 m
71.0874 280.0635 l
71.3271 280.5439 l
71.3271 281.2627 l
71.0874 281.7432 l
70.6074 281.9834 l
S
300 Ar
69.6475 279.8232 m
68.9272 279.583 l
68.6875 279.3428 l
68.4473 278.8633 l
68.4473 277.9033 l
68.6875 277.4248 l
68.9272 277.1826 l
69.6475 276.9443 l
70.6074 276.9443 l
71.3271 277.1826 l
71.5674 277.4248 l
71.8076 277.9033 l
71.8076 278.8633 l
71.5674 279.3428 l
71.3271 279.583 l
70.6074 279.8232 l
S
300 Ar
69.6475 279.8232 m
69.1675 279.583 l
68.9272 279.3428 l
68.6875 278.8633 l
68.6875 277.9033 l
68.9272 277.4248 l
69.1675 277.1826 l
69.6475 276.9443 l
S
300 Ar
70.6074 276.9443 m
71.0874 277.1826 l
71.3271 277.4248 l
71.5674 277.9033 l
71.5674 278.8633 l
71.3271 279.3428 l
71.0874 279.583 l
70.6074 279.8232 l
S
300 Ar
0 D
55.9683 314.3799 m
60.2881 314.3799 l
S
300 Ar
62.4478 316.2998 m
62.9277 316.541 l
63.6479 317.2607 l
63.6479 312.2207 l
S
300 Ar
63.4082 317.0215 m
63.4082 312.2207 l
S
300 Ar
62.4478 312.2207 m
64.6079 312.2207 l
S
300 Ar
1 D
66.7676 312.7012 m
66.5278 312.4609 l
66.7676 312.2207 l
67.0078 312.4609 l
66.7676 312.7012 l
S
300 Ar
71.3271 316.541 m
71.0874 316.2998 l
71.3271 316.0615 l
71.5674 316.2998 l
71.5674 316.541 l
71.3271 317.0215 l
70.8477 317.2607 l
70.1274 317.2607 l
69.4072 317.0215 l
68.9272 316.541 l
68.6875 316.0615 l
68.4473 315.1006 l
68.4473 313.6611 l
68.6875 312.9404 l
69.1675 312.4609 l
69.8877 312.2207 l
70.3672 312.2207 l
71.0874 312.4609 l
71.5674 312.9404 l
71.8076 313.6611 l
71.8076 313.9014 l
71.5674 314.6211 l
71.0874 315.1006 l
70.3672 315.3408 l
70.1274 315.3408 l
69.4072 315.1006 l
68.9272 314.6211 l
68.6875 313.9014 l
S
300 Ar
70.1274 317.2607 m
69.6475 317.0215 l
69.1675 316.541 l
68.9272 316.0615 l
68.6875 315.1006 l
68.6875 313.6611 l
68.9272 312.9404 l
69.4072 312.4609 l
69.8877 312.2207 l
S
300 Ar
70.3672 312.2207 m
70.8477 312.4609 l
71.3271 312.9404 l
71.5674 313.6611 l
71.5674 313.9014 l
71.3271 314.6211 l
70.8477 315.1006 l
70.3672 315.3408 l
S
300 Ar
0 D
55.9683 349.6572 m
60.2881 349.6572 l
S
300 Ar
62.4478 351.5771 m
62.9277 351.8174 l
63.6479 352.5381 l
63.6479 347.499 l
S
300 Ar
63.4082 352.2969 m
63.4082 347.499 l
S
300 Ar
62.4478 347.499 m
64.6079 347.499 l
S
300 Ar
1 D
66.7676 347.9795 m
66.5278 347.7373 l
66.7676 347.499 l
67.0078 347.7373 l
66.7676 347.9795 l
S
300 Ar
0 D
70.6074 352.0576 m
70.6074 347.499 l
S
300 Ar
70.8477 352.5381 m
70.8477 347.499 l
S
300 Ar
1 D
70.8477 352.5381 m
68.207 348.9385 l
72.0474 348.9385 l
S
300 Ar
0 D
69.8877 347.499 m
71.5674 347.499 l
S
300 Ar
55.9683 384.9355 m
60.2881 384.9355 l
S
300 Ar
62.4478 386.8555 m
62.9277 387.0938 l
63.6479 387.8145 l
63.6479 382.7754 l
S
300 Ar
63.4082 387.5752 m
63.4082 382.7754 l
S
300 Ar
62.4478 382.7754 m
64.6079 382.7754 l
S
300 Ar
1 D
66.7676 383.2539 m
66.5278 383.0156 l
66.7676 382.7754 l
67.0078 383.0156 l
66.7676 383.2539 l
S
300 Ar
0 D
68.6875 386.8555 m
68.9272 386.6152 l
68.6875 386.375 l
68.4473 386.6152 l
68.4473 386.8555 l
68.6875 387.334 l
68.9272 387.5752 l
69.6475 387.8145 l
70.6074 387.8145 l
71.3271 387.5752 l
71.5674 387.334 l
71.8076 386.8555 l
71.8076 386.375 l
71.5674 385.8955 l
70.8477 385.415 l
69.6475 384.9355 l
69.1675 384.6953 l
68.6875 384.2148 l
68.4473 383.4951 l
68.4473 382.7754 l
S
300 Ar
70.6074 387.8145 m
71.0874 387.5752 l
71.3271 387.334 l
71.5674 386.8555 l
71.5674 386.375 l
71.3271 385.8955 l
70.6074 385.415 l
69.6475 384.9355 l
S
300 Ar
1 D
68.4473 383.2539 m
68.6875 383.4951 l
69.1675 383.4951 l
70.3672 383.0156 l
71.0874 383.0156 l
71.5674 383.2539 l
71.8076 383.4951 l
S
300 Ar
69.1675 383.4951 m
70.3672 382.7754 l
71.3271 382.7754 l
71.5674 383.0156 l
71.8076 383.4951 l
71.8076 383.9756 l
S
300 Ar
0 D
62.6875 420.332 m
67.0078 420.332 l
S
300 Ar
69.1675 422.252 m
69.6475 422.4922 l
70.3672 423.2119 l
70.3672 418.1724 l
S
300 Ar
70.1274 422.9722 m
70.1274 418.1724 l
S
300 Ar
69.1675 418.1724 m
71.3271 418.1724 l
S
300 Ar
60.7686 455.6094 m
65.0879 455.6094 l
S
300 Ar
1 D
66.7676 453.9292 m
66.5278 453.6895 l
66.7676 453.4492 l
67.0078 453.6895 l
66.7676 453.9292 l
S
300 Ar
69.6475 458.4888 m
68.9272 458.249 l
68.6875 457.769 l
68.6875 457.0493 l
68.9272 456.5693 l
69.6475 456.3291 l
70.6074 456.3291 l
71.3271 456.5693 l
71.5674 457.0493 l
71.5674 457.769 l
71.3271 458.249 l
70.6074 458.4888 l
69.6475 458.4888 l
69.1675 458.249 l
68.9272 457.769 l
68.9272 457.0493 l
69.1675 456.5693 l
69.6475 456.3291 l
S
300 Ar
70.6074 456.3291 m
71.0874 456.5693 l
71.3271 457.0493 l
71.3271 457.769 l
71.0874 458.249 l
70.6074 458.4888 l
S
300 Ar
69.6475 456.3291 m
68.9272 456.0894 l
68.6875 455.8491 l
68.4473 455.3691 l
68.4473 454.4092 l
68.6875 453.9292 l
68.9272 453.6895 l
69.6475 453.4492 l
70.6074 453.4492 l
71.3271 453.6895 l
71.5674 453.9292 l
71.8076 454.4092 l
71.8076 455.3691 l
71.5674 455.8491 l
71.3271 456.0894 l
70.6074 456.3291 l
S
300 Ar
69.6475 456.3291 m
69.1675 456.0894 l
68.9272 455.8491 l
68.6875 455.3691 l
68.6875 454.4092 l
68.9272 453.9292 l
69.1675 453.6895 l
69.6475 453.4492 l
S
300 Ar
70.6074 453.4492 m
71.0874 453.6895 l
71.3271 453.9292 l
71.5674 454.4092 l
71.5674 455.3691 l
71.3271 455.8491 l
71.0874 456.0894 l
70.6074 456.3291 l
S
300 Ar
0 D
60.7686 490.8862 m
65.0879 490.8862 l
S
300 Ar
1 D
66.7676 489.2065 m
66.5278 488.9663 l
66.7676 488.7266 l
67.0078 488.9663 l
66.7676 489.2065 l
S
300 Ar
71.3271 493.0464 m
71.0874 492.8062 l
71.3271 492.5664 l
71.5674 492.8062 l
71.5674 493.0464 l
71.3271 493.5264 l
70.8477 493.7661 l
70.1274 493.7661 l
69.4072 493.5264 l
68.9272 493.0464 l
68.6875 492.5664 l
68.4473 491.6064 l
68.4473 490.1665 l
68.6875 489.4463 l
69.1675 488.9663 l
69.8877 488.7266 l
70.3672 488.7266 l
71.0874 488.9663 l
71.5674 489.4463 l
71.8076 490.1665 l
71.8076 490.4063 l
71.5674 491.1265 l
71.0874 491.6064 l
70.3672 491.8462 l
70.1274 491.8462 l
69.4072 491.6064 l
68.9272 491.1265 l
68.6875 490.4063 l
S
300 Ar
70.1274 493.7661 m
69.6475 493.5264 l
69.1675 493.0464 l
68.9272 492.5664 l
68.6875 491.6064 l
68.6875 490.1665 l
68.9272 489.4463 l
69.4072 488.9663 l
69.8877 488.7266 l
S
300 Ar
70.3672 488.7266 m
70.8477 488.9663 l
71.3271 489.4463 l
71.5674 490.1665 l
71.5674 490.4063 l
71.3271 491.1265 l
70.8477 491.6064 l
70.3672 491.8462 l
S
300 Ar
0 D
60.7686 526.1631 m
65.0879 526.1631 l
S
300 Ar
1 D
66.7676 524.4834 m
66.5278 524.2432 l
66.7676 524.0034 l
67.0078 524.2432 l
66.7676 524.4834 l
S
300 Ar
0 D
70.6074 528.563 m
70.6074 524.0034 l
S
300 Ar
70.8477 529.043 m
70.8477 524.0034 l
S
300 Ar
1 D
70.8477 529.043 m
68.207 525.4434 l
72.0474 525.4434 l
S
300 Ar
0 D
69.8877 524.0034 m
71.5674 524.0034 l
S
300 Ar
291.0283 243.8271 m
291.0283 543.8018 l
S
300 Ar
291.0283 243.8271 m
283.3496 243.8271 l
S
300 Ar
291.0283 252.7061 m
287.1895 252.7061 l
S
300 Ar
291.0283 261.4648 m
287.1895 261.4648 l
S
300 Ar
291.0283 270.3447 m
287.1895 270.3447 l
S
300 Ar
291.0283 279.1025 m
283.3496 279.1025 l
S
300 Ar
291.0283 287.9834 m
287.1895 287.9834 l
S
300 Ar
291.0283 296.7432 m
287.1895 296.7432 l
S
300 Ar
291.0283 305.6221 m
287.1895 305.6221 l
S
300 Ar
291.0283 314.3799 m
283.3496 314.3799 l
S
300 Ar
291.0283 323.2588 m
287.1895 323.2588 l
S
300 Ar
291.0283 332.0205 m
287.1895 332.0205 l
S
300 Ar
291.0283 340.8994 m
287.1895 340.8994 l
S
300 Ar
291.0283 349.6572 m
283.3496 349.6572 l
S
300 Ar
291.0283 358.5371 m
287.1895 358.5371 l
S
300 Ar
291.0283 367.2959 m
287.1895 367.2959 l
S
300 Ar
291.0283 376.1748 m
287.1895 376.1748 l
S
300 Ar
291.0283 384.9355 m
283.3496 384.9355 l
S
300 Ar
291.0283 393.8135 m
287.1895 393.8135 l
S
300 Ar
291.0283 402.6934 m
287.1895 402.6934 l
S
300 Ar
291.0283 411.4531 m
287.1895 411.4531 l
S
300 Ar
291.0283 420.332 m
283.3496 420.332 l
S
300 Ar
291.0283 429.0913 m
287.1895 429.0913 l
S
300 Ar
291.0283 437.9707 m
287.1895 437.9707 l
S
300 Ar
291.0283 446.73 m
287.1895 446.73 l
S
300 Ar
291.0283 455.6094 m
283.3496 455.6094 l
S
300 Ar
291.0283 464.3682 m
287.1895 464.3682 l
S
300 Ar
291.0283 473.2476 m
287.1895 473.2476 l
S
300 Ar
291.0283 482.0068 m
287.1895 482.0068 l
S
300 Ar
291.0283 490.8862 m
283.3496 490.8862 l
S
300 Ar
291.0283 499.6455 m
287.1895 499.6455 l
S
300 Ar
291.0283 508.5249 m
287.1895 508.5249 l
S
300 Ar
291.0283 517.2842 m
287.1895 517.2842 l
S
300 Ar
291.0283 526.1631 m
283.3496 526.1631 l
S
300 Ar
291.0283 534.9224 m
287.1895 534.9224 l
S
300 Ar
291.0283 543.8018 m
287.1895 543.8018 l
S
300 Ar
75.0469 499.2852 m
S
*U
0 To
0 1 -1 0 60.96 398.9238 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
0 J 0 j 4 M
%_ 0 50 XQ
/_Trebuchet-BoldItalic 17.9985 17.3745 -4.8512 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
18 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
0 Tc
0 Tw
(w) Tx 
(\r) TX 
TO
0 To
1 0 0 1 185.7861 222.127 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 17.9985 17.9985 -3.9547 Tf
(W) Tx 
(\r) TX 
TO
0 To
1 0 0 1 200.7861 218.1279 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 8.9992 8.9992 -1.9774 Tf
(M) Tx 
(\r) TX 
TO
0 To
1 0 0 1 185.3242 510.9082 0 Tp
0 Tv
TP
0 Tr
/_Myriad-Roman 11.999 9.9711 -2.9997 Tf
(SCP + High-Z) Tx 
(\r) TX 
TO
300 Ar
0 R
0 0 0 1 K
0.9999 w
250.3125 483.647 m
174.8184 457.6489 l
S
300 Ar
0 O
0 0 0 1 k
1 w
175.3008 457.8149 m
176.9229 456.4688 l
176.8779 456.4097 l
173.7217 456.5566 l
172.6807 456.436 171.6396 456.3159 170.5977 456.1958 c
171.4922 456.7417 172.3867 457.2876 173.2813 457.834 c
175.6787 459.8931 l
175.7461 459.8843 l
175.3008 457.8149 l
F
0 To
1 0 0 1 251.8184 479.9111 0 Tp
0 Tv
TP
0 Tr
(68.3%) Tx 
(\r) TX 
TO
0 To
1 0 0 1 251.8184 465.4121 0 Tp
0 Tv
TP
0 Tr
(95.4%) Tx 
(\r) TX 
TO
300 Ar
0 R
0 0 0 1 K
0.9999 w
249.8125 468.6479 m
204.3164 451.6494 l
S
300 Ar
0 O
0 0 0 1 k
1 w
204.7939 451.8281 m
206.4502 450.5239 l
206.4072 450.4644 l
203.248 450.5288 l
202.21 450.3818 201.1729 450.2344 200.1357 450.0869 c
201.0146 450.6558 201.8945 451.2251 202.7744 451.7944 c
205.1172 453.9155 l
205.1865 453.9082 l
204.7939 451.8281 l
F
300 Ar
0 R
0 0 0 1 K
0.9999 w
249.8125 454.1494 m
235.3135 446.6499 l
S
300 Ar
0 O
0 0 0 1 k
1 w
235.7666 446.8843 m
237.5664 445.7871 l
237.5313 445.7231 l
234.3867 445.4102 l
233.373 445.1396 232.3613 444.8691 231.3477 444.5991 c
232.1543 445.269 232.96 445.9395 233.7646 446.6094 c
235.8379 448.9956 l
235.9072 448.9966 l
235.7666 446.8843 l
F
0 To
1 0 0 1 251.8184 450.9136 0 Tp
0 Tv
TP
0 Tr
(99.7%) Tx 
(\r) TX 
TO
U
/BBAccumRotation (0.000000) XT
u
*u
300 Ar
0 R
0 0 0 1 K
1 J 1 j 10 M
331.5332 242.7422 m
547.5225 242.7422 l
S
300 Ar
331.5332 242.7422 m
331.5332 250.4219 l
S
300 Ar
337.6533 242.7422 m
337.6533 246.582 l
S
300 Ar
343.8916 242.7422 m
343.8916 246.582 l
S
300 Ar
350.0127 242.7422 m
350.0127 246.582 l
S
300 Ar
356.251 242.7422 m
356.251 246.582 l
S
300 Ar
362.3721 242.7422 m
362.3721 250.4219 l
S
300 Ar
368.6113 242.7422 m
368.6113 246.582 l
S
300 Ar
374.7314 242.7422 m
374.7314 246.582 l
S
300 Ar
380.8506 242.7422 m
380.8506 246.582 l
S
300 Ar
387.0908 242.7422 m
387.0908 246.582 l
S
300 Ar
393.21 242.7422 m
393.21 250.4219 l
S
300 Ar
399.4502 242.7422 m
399.4502 246.582 l
S
300 Ar
405.5693 242.7422 m
405.5693 246.582 l
S
300 Ar
411.8096 242.7422 m
411.8096 246.582 l
S
300 Ar
417.9287 242.7422 m
417.9287 246.582 l
S
300 Ar
424.0498 242.7422 m
424.0498 250.4219 l
S
300 Ar
430.2881 242.7422 m
430.2881 246.582 l
S
300 Ar
436.4072 242.7422 m
436.4072 246.582 l
S
300 Ar
442.6475 242.7422 m
442.6475 246.582 l
S
300 Ar
448.7686 242.7422 m
448.7686 246.582 l
S
300 Ar
455.0068 242.7422 m
455.0068 250.4219 l
S
300 Ar
461.1279 242.7422 m
461.1279 246.582 l
S
300 Ar
467.2471 242.7422 m
467.2471 246.582 l
S
300 Ar
473.4854 242.7422 m
473.4854 246.582 l
S
300 Ar
479.6064 242.7422 m
479.6064 246.582 l
S
300 Ar
485.8467 242.7422 m
485.8467 250.4219 l
S
300 Ar
491.9658 242.7422 m
491.9658 246.582 l
S
300 Ar
498.2061 242.7422 m
498.2061 246.582 l
S
300 Ar
504.3252 242.7422 m
504.3252 246.582 l
S
300 Ar
510.4443 242.7422 m
510.4443 246.582 l
S
300 Ar
516.6846 242.7422 m
516.6846 250.4219 l
S
300 Ar
522.8057 242.7422 m
522.8057 246.582 l
S
300 Ar
529.0439 242.7422 m
529.0439 246.582 l
S
300 Ar
535.165 242.7422 m
535.165 246.582 l
S
300 Ar
541.4033 242.7422 m
541.4033 246.582 l
S
300 Ar
547.5225 242.7422 m
547.5225 250.4219 l
S
300 Ar
1 D
331.293 240.4629 m
330.5723 240.2217 l
330.0928 239.502 l
329.8535 238.3018 l
329.8535 237.582 l
330.0928 236.3828 l
330.5723 235.6621 l
331.293 235.4219 l
331.7725 235.4219 l
332.4932 235.6621 l
332.9727 236.3828 l
333.2119 237.582 l
333.2119 238.3018 l
332.9727 239.502 l
332.4932 240.2217 l
331.7725 240.4629 l
331.293 240.4629 l
330.8125 240.2217 l
330.5723 239.9824 l
330.332 239.502 l
330.0928 238.3018 l
330.0928 237.582 l
330.332 236.3828 l
330.5723 235.9023 l
330.8125 235.6621 l
331.293 235.4219 l
S
300 Ar
331.7725 235.4219 m
332.2529 235.6621 l
332.4932 235.9023 l
332.7334 236.3828 l
332.9727 237.582 l
332.9727 238.3018 l
332.7334 239.502 l
332.4932 239.9824 l
332.2529 240.2217 l
331.7725 240.4629 l
S
300 Ar
359.9717 235.9023 m
359.7314 235.6621 l
359.9717 235.4219 l
360.2119 235.6621 l
359.9717 235.9023 l
S
300 Ar
0 D
362.3721 239.502 m
362.8516 239.7422 l
363.5713 240.4629 l
363.5713 235.4219 l
S
300 Ar
363.3311 240.2217 m
363.3311 235.4219 l
S
300 Ar
362.3721 235.4219 m
364.5322 235.4219 l
S
300 Ar
1 D
390.8096 235.9023 m
390.5703 235.6621 l
390.8096 235.4219 l
391.0498 235.6621 l
390.8096 235.9023 l
S
300 Ar
0 D
392.7295 239.502 m
392.9697 239.2617 l
392.7295 239.0215 l
392.4902 239.2617 l
392.4902 239.502 l
392.7295 239.9824 l
392.9697 240.2217 l
393.6904 240.4629 l
394.6494 240.4629 l
395.3701 240.2217 l
395.6104 239.9824 l
395.8506 239.502 l
395.8506 239.0215 l
395.6104 238.543 l
394.8896 238.0625 l
393.6904 237.582 l
393.21 237.3418 l
392.7295 236.8633 l
392.4902 236.1426 l
392.4902 235.4219 l
S
300 Ar
394.6494 240.4629 m
395.1299 240.2217 l
395.3701 239.9824 l
395.6104 239.502 l
395.6104 239.0215 l
395.3701 238.543 l
394.6494 238.0625 l
393.6904 237.582 l
S
300 Ar
1 D
392.4902 235.9023 m
392.7295 236.1426 l
393.21 236.1426 l
394.4102 235.6621 l
395.1299 235.6621 l
395.6104 235.9023 l
395.8506 236.1426 l
S
300 Ar
393.21 236.1426 m
394.4102 235.4219 l
395.3701 235.4219 l
395.6104 235.6621 l
395.8506 236.1426 l
395.8506 236.623 l
S
300 Ar
421.6494 235.9023 m
421.4092 235.6621 l
421.6494 235.4219 l
421.8896 235.6621 l
421.6494 235.9023 l
S
300 Ar
0 D
423.5693 239.7422 m
423.8096 239.502 l
423.5693 239.2617 l
423.3291 239.502 l
423.3291 239.7422 l
423.8096 240.2217 l
424.5283 240.4629 l
425.4893 240.4629 l
426.208 240.2217 l
426.4482 239.7422 l
426.4482 239.0215 l
426.208 238.543 l
425.4893 238.3018 l
424.7686 238.3018 l
S
300 Ar
425.4893 240.4629 m
425.9697 240.2217 l
426.208 239.7422 l
426.208 239.0215 l
425.9697 238.543 l
425.4893 238.3018 l
425.9697 238.0625 l
426.4482 237.582 l
426.6885 237.1016 l
426.6885 236.3828 l
426.4482 235.9023 l
426.208 235.6621 l
425.4893 235.4219 l
424.5283 235.4219 l
423.8096 235.6621 l
423.5693 235.9023 l
423.3291 236.3828 l
423.3291 236.623 l
423.5693 236.8633 l
423.8096 236.623 l
423.5693 236.3828 l
S
300 Ar
426.208 237.8223 m
426.4482 237.1016 l
426.4482 236.3828 l
426.208 235.9023 l
425.9697 235.6621 l
425.4893 235.4219 l
S
300 Ar
1 D
452.6084 235.9023 m
452.3682 235.6621 l
452.6084 235.4219 l
452.8486 235.6621 l
452.6084 235.9023 l
S
300 Ar
0 D
456.4463 239.9824 m
456.4463 235.4219 l
S
300 Ar
456.6885 240.4629 m
456.6885 235.4219 l
S
300 Ar
1 D
456.6885 240.4629 m
454.0479 236.8633 l
457.8877 236.8633 l
S
300 Ar
0 D
455.7275 235.4219 m
457.4072 235.4219 l
S
300 Ar
1 D
483.4463 235.9023 m
483.2061 235.6621 l
483.4463 235.4219 l
483.6865 235.6621 l
483.4463 235.9023 l
S
300 Ar
0 D
485.6064 240.4629 m
485.126 238.0625 l
485.6064 238.3018 l
486.3252 238.543 l
487.0459 238.543 l
487.7666 238.3018 l
488.2471 237.8223 l
488.4854 237.1016 l
488.4854 236.8633 l
488.2471 236.1426 l
487.7666 235.6621 l
487.0459 235.4219 l
486.3252 235.4219 l
485.6064 235.6621 l
485.3662 235.9023 l
485.126 236.3828 l
485.126 236.623 l
485.3662 236.8633 l
485.6064 236.623 l
485.3662 236.3828 l
S
300 Ar
487.0459 238.543 m
487.5264 238.3018 l
488.0068 237.8223 l
488.2471 237.1016 l
488.2471 236.8633 l
488.0068 236.1426 l
487.5264 235.6621 l
487.0459 235.4219 l
S
300 Ar
485.6064 240.4629 m
488.0068 240.4629 l
S
300 Ar
1 D
485.6064 240.2217 m
486.8057 240.2217 l
488.0068 240.4629 l
S
300 Ar
514.2842 235.9023 m
514.0459 235.6621 l
514.2842 235.4219 l
514.5244 235.6621 l
514.2842 235.9023 l
S
300 Ar
518.8447 239.7422 m
518.6045 239.502 l
518.8447 239.2617 l
519.085 239.502 l
519.085 239.7422 l
518.8447 240.2217 l
518.3643 240.4629 l
517.6455 240.4629 l
516.9248 240.2217 l
516.4443 239.7422 l
516.2061 239.2617 l
515.9658 238.3018 l
515.9658 236.8633 l
516.2061 236.1426 l
516.6846 235.6621 l
517.4053 235.4219 l
517.8857 235.4219 l
518.6045 235.6621 l
519.085 236.1426 l
519.3252 236.8633 l
519.3252 237.1016 l
519.085 237.8223 l
518.6045 238.3018 l
517.8857 238.543 l
517.6455 238.543 l
516.9248 238.3018 l
516.4443 237.8223 l
516.2061 237.1016 l
S
300 Ar
517.6455 240.4629 m
517.165 240.2217 l
516.6846 239.7422 l
516.4443 239.2617 l
516.2061 238.3018 l
516.2061 236.8633 l
516.4443 236.1426 l
516.9248 235.6621 l
517.4053 235.4219 l
S
300 Ar
517.8857 235.4219 m
518.3643 235.6621 l
518.8447 236.1426 l
519.085 236.8633 l
519.085 237.1016 l
518.8447 237.8223 l
518.3643 238.3018 l
517.8857 238.543 l
S
300 Ar
545.124 235.9023 m
544.8838 235.6621 l
545.124 235.4219 l
545.3643 235.6621 l
545.124 235.9023 l
S
300 Ar
0 D
546.8037 240.4629 m
546.8037 239.0215 l
S
300 Ar
546.8037 239.502 m
547.0439 239.9824 l
547.5225 240.4629 l
548.0029 240.4629 l
549.2041 239.7422 l
549.6846 239.7422 l
549.9229 239.9824 l
550.165 240.4629 l
S
300 Ar
547.0439 239.9824 m
547.5225 240.2217 l
548.0029 240.2217 l
549.2041 239.7422 l
S
300 Ar
1 D
550.165 240.4629 m
550.165 239.7422 l
549.9229 239.0215 l
548.9639 237.8223 l
548.7236 237.3418 l
548.4834 236.623 l
548.4834 235.4219 l
S
300 Ar
549.9229 239.0215 m
548.7236 237.8223 l
548.4834 237.3418 l
548.2432 236.623 l
548.2432 235.4219 l
S
300 Ar
0 D
331.5332 542.7295 m
547.5225 542.7295 l
S
300 Ar
331.5332 542.7295 m
331.5332 535.0498 l
S
300 Ar
337.6533 542.7295 m
337.6533 538.8896 l
S
300 Ar
343.8916 542.7295 m
343.8916 538.8896 l
S
300 Ar
350.0127 542.7295 m
350.0127 538.8896 l
S
300 Ar
356.251 542.7295 m
356.251 538.8896 l
S
300 Ar
362.3721 542.7295 m
362.3721 535.0498 l
S
300 Ar
368.6113 542.7295 m
368.6113 538.8896 l
S
300 Ar
374.7314 542.7295 m
374.7314 538.8896 l
S
300 Ar
380.8506 542.7295 m
380.8506 538.8896 l
S
300 Ar
387.0908 542.7295 m
387.0908 538.8896 l
S
300 Ar
393.21 542.7295 m
393.21 535.0498 l
S
300 Ar
399.4502 542.7295 m
399.4502 538.8896 l
S
300 Ar
405.5693 542.7295 m
405.5693 538.8896 l
S
300 Ar
411.8096 542.7295 m
411.8096 538.8896 l
S
300 Ar
417.9287 542.7295 m
417.9287 538.8896 l
S
300 Ar
424.0498 542.7295 m
424.0498 535.0498 l
S
300 Ar
430.2881 542.7295 m
430.2881 538.8896 l
S
300 Ar
436.4072 542.7295 m
436.4072 538.8896 l
S
300 Ar
442.6475 542.7295 m
442.6475 538.8896 l
S
300 Ar
448.7686 542.7295 m
448.7686 538.8896 l
S
300 Ar
455.0068 542.7295 m
455.0068 535.0498 l
S
300 Ar
461.1279 542.7295 m
461.1279 538.8896 l
S
300 Ar
467.2471 542.7295 m
467.2471 538.8896 l
S
300 Ar
473.4854 542.7295 m
473.4854 538.8896 l
S
300 Ar
479.6064 542.7295 m
479.6064 538.8896 l
S
300 Ar
485.8467 542.7295 m
485.8467 535.0498 l
S
300 Ar
491.9658 542.7295 m
491.9658 538.8896 l
S
300 Ar
498.2061 542.7295 m
498.2061 538.8896 l
S
300 Ar
504.3252 542.7295 m
504.3252 538.8896 l
S
300 Ar
510.4443 542.7295 m
510.4443 538.8896 l
S
300 Ar
516.6846 542.7295 m
516.6846 535.0498 l
S
300 Ar
522.8057 542.7295 m
522.8057 538.8896 l
S
300 Ar
529.0439 542.7295 m
529.0439 538.8896 l
S
300 Ar
535.165 542.7295 m
535.165 538.8896 l
S
300 Ar
541.4033 542.7295 m
541.4033 538.8896 l
S
300 Ar
547.5225 542.7295 m
547.5225 535.0498 l
S
300 Ar
331.5332 242.7422 m
331.5332 542.7295 l
S
300 Ar
331.5332 242.7422 m
339.2119 242.7422 l
S
300 Ar
331.5332 251.6211 m
335.3721 251.6211 l
S
300 Ar
331.5332 260.3809 m
335.3721 260.3809 l
S
300 Ar
331.5332 269.2607 m
335.3721 269.2607 l
S
300 Ar
331.5332 278.0195 m
339.2119 278.0195 l
S
300 Ar
331.5332 286.9004 m
335.3721 286.9004 l
S
300 Ar
331.5332 295.6602 m
335.3721 295.6602 l
S
300 Ar
331.5332 304.5391 m
335.3721 304.5391 l
S
300 Ar
331.5332 313.2988 m
339.2119 313.2988 l
S
300 Ar
331.5332 322.1777 m
335.3721 322.1777 l
S
300 Ar
331.5332 330.9395 m
335.3721 330.9395 l
S
300 Ar
331.5332 339.8184 m
335.3721 339.8184 l
S
300 Ar
331.5332 348.5781 m
339.2119 348.5781 l
S
300 Ar
331.5332 357.457 m
335.3721 357.457 l
S
300 Ar
331.5332 366.2168 m
335.3721 366.2168 l
S
300 Ar
331.5332 375.0957 m
335.3721 375.0957 l
S
300 Ar
331.5332 383.8574 m
339.2119 383.8574 l
S
300 Ar
331.5332 392.7363 m
335.3721 392.7363 l
S
300 Ar
331.5332 401.6152 m
335.3721 401.6152 l
S
300 Ar
331.5332 410.375 m
335.3721 410.375 l
S
300 Ar
331.5332 419.2549 m
339.2119 419.2549 l
S
300 Ar
331.5332 428.0146 m
335.3721 428.0146 l
S
300 Ar
331.5332 436.894 m
335.3721 436.894 l
S
300 Ar
331.5332 445.6538 m
335.3721 445.6538 l
S
300 Ar
331.5332 454.5332 m
339.2119 454.5332 l
S
300 Ar
331.5332 463.293 m
335.3721 463.293 l
S
300 Ar
331.5332 472.1729 m
335.3721 472.1729 l
S
300 Ar
331.5332 480.9321 m
335.3721 480.9321 l
S
300 Ar
331.5332 489.8115 m
339.2119 489.8115 l
S
300 Ar
331.5332 498.5713 m
335.3721 498.5713 l
S
300 Ar
331.5332 507.4512 m
335.3721 507.4512 l
S
300 Ar
331.5332 516.2109 m
335.3721 516.2109 l
S
300 Ar
331.5332 525.0903 m
339.2119 525.0903 l
S
300 Ar
331.5332 533.8501 m
335.3721 533.8501 l
S
300 Ar
331.5332 542.7295 m
335.3721 542.7295 l
S
300 Ar
319.1738 242.7422 m
323.4932 242.7422 l
S
300 Ar
325.1729 244.6621 m
325.4121 244.4219 l
325.1729 244.1816 l
324.9336 244.4219 l
324.9336 244.6621 l
325.1729 245.1416 l
325.4121 245.3818 l
326.1328 245.6221 l
327.0938 245.6221 l
327.8125 245.3818 l
328.0527 245.1416 l
328.293 244.6621 l
328.293 244.1816 l
328.0527 243.7021 l
327.333 243.2217 l
326.1328 242.7422 l
325.6523 242.502 l
325.1729 242.0215 l
324.9336 241.3018 l
324.9336 240.582 l
S
300 Ar
327.0938 245.6221 m
327.5723 245.3818 l
327.8125 245.1416 l
328.0527 244.6621 l
328.0527 244.1816 l
327.8125 243.7021 l
327.0938 243.2217 l
326.1328 242.7422 l
S
300 Ar
1 D
324.9336 241.0615 m
325.1729 241.3018 l
325.6523 241.3018 l
326.8535 240.8223 l
327.5723 240.8223 l
328.0527 241.0615 l
328.293 241.3018 l
S
300 Ar
325.6523 241.3018 m
326.8535 240.582 l
327.8125 240.582 l
328.0527 240.8223 l
328.293 241.3018 l
328.293 241.7822 l
S
300 Ar
0 D
312.4531 278.0195 m
316.7734 278.0195 l
S
300 Ar
318.9336 279.9414 m
319.4131 280.1797 l
320.1328 280.9004 l
320.1328 275.8613 l
S
300 Ar
319.8926 280.6602 m
319.8926 275.8613 l
S
300 Ar
318.9336 275.8613 m
321.0938 275.8613 l
S
300 Ar
1 D
323.2539 276.3408 m
323.0137 276.0996 l
323.2539 275.8613 l
323.4932 276.0996 l
323.2539 276.3408 l
S
300 Ar
326.1328 280.9004 m
325.4121 280.6602 l
325.1729 280.1797 l
325.1729 279.4609 l
325.4121 278.9805 l
326.1328 278.7402 l
327.0938 278.7402 l
327.8125 278.9805 l
328.0527 279.4609 l
328.0527 280.1797 l
327.8125 280.6602 l
327.0938 280.9004 l
326.1328 280.9004 l
325.6523 280.6602 l
325.4121 280.1797 l
325.4121 279.4609 l
325.6523 278.9805 l
326.1328 278.7402 l
S
300 Ar
327.0938 278.7402 m
327.5723 278.9805 l
327.8125 279.4609 l
327.8125 280.1797 l
327.5723 280.6602 l
327.0938 280.9004 l
S
300 Ar
326.1328 278.7402 m
325.4121 278.5 l
325.1729 278.2598 l
324.9336 277.7813 l
324.9336 276.8203 l
325.1729 276.3408 l
325.4121 276.0996 l
326.1328 275.8613 l
327.0938 275.8613 l
327.8125 276.0996 l
328.0527 276.3408 l
328.293 276.8203 l
328.293 277.7813 l
328.0527 278.2598 l
327.8125 278.5 l
327.0938 278.7402 l
S
300 Ar
326.1328 278.7402 m
325.6523 278.5 l
325.4121 278.2598 l
325.1729 277.7813 l
325.1729 276.8203 l
325.4121 276.3408 l
325.6523 276.0996 l
326.1328 275.8613 l
S
300 Ar
327.0938 275.8613 m
327.5723 276.0996 l
327.8125 276.3408 l
328.0527 276.8203 l
328.0527 277.7813 l
327.8125 278.2598 l
327.5723 278.5 l
327.0938 278.7402 l
S
300 Ar
0 D
312.4531 313.2988 m
316.7734 313.2988 l
S
300 Ar
318.9336 315.2188 m
319.4131 315.459 l
320.1328 316.1787 l
320.1328 311.1387 l
S
300 Ar
319.8926 315.9395 m
319.8926 311.1387 l
S
300 Ar
318.9336 311.1387 m
321.0938 311.1387 l
S
300 Ar
1 D
323.2539 311.6191 m
323.0137 311.3789 l
323.2539 311.1387 l
323.4932 311.3789 l
323.2539 311.6191 l
S
300 Ar
327.8125 315.459 m
327.5723 315.2188 l
327.8125 314.9795 l
328.0527 315.2188 l
328.0527 315.459 l
327.8125 315.9395 l
327.333 316.1787 l
326.6133 316.1787 l
325.8926 315.9395 l
325.4121 315.459 l
325.1729 314.9795 l
324.9336 314.0186 l
324.9336 312.5791 l
325.1729 311.8594 l
325.6523 311.3789 l
326.373 311.1387 l
326.8535 311.1387 l
327.5723 311.3789 l
328.0527 311.8594 l
328.293 312.5791 l
328.293 312.8193 l
328.0527 313.5391 l
327.5723 314.0186 l
326.8535 314.2588 l
326.6133 314.2588 l
325.8926 314.0186 l
325.4121 313.5391 l
325.1729 312.8193 l
S
300 Ar
326.6133 316.1787 m
326.1328 315.9395 l
325.6523 315.459 l
325.4121 314.9795 l
325.1729 314.0186 l
325.1729 312.5791 l
325.4121 311.8594 l
325.8926 311.3789 l
326.373 311.1387 l
S
300 Ar
326.8535 311.1387 m
327.333 311.3789 l
327.8125 311.8594 l
328.0527 312.5791 l
328.0527 312.8193 l
327.8125 313.5391 l
327.333 314.0186 l
326.8535 314.2588 l
S
300 Ar
0 D
312.4531 348.5781 m
316.7734 348.5781 l
S
300 Ar
318.9336 350.498 m
319.4131 350.7383 l
320.1328 351.457 l
320.1328 346.418 l
S
300 Ar
319.8926 351.2168 m
319.8926 346.418 l
S
300 Ar
318.9336 346.418 m
321.0938 346.418 l
S
300 Ar
1 D
323.2539 346.8984 m
323.0137 346.6582 l
323.2539 346.418 l
323.4932 346.6582 l
323.2539 346.8984 l
S
300 Ar
0 D
327.0938 350.9785 m
327.0938 346.418 l
S
300 Ar
327.333 351.457 m
327.333 346.418 l
S
300 Ar
1 D
327.333 351.457 m
324.6934 347.8584 l
328.5332 347.8584 l
S
300 Ar
0 D
326.373 346.418 m
328.0527 346.418 l
S
300 Ar
312.4531 383.8574 m
316.7734 383.8574 l
S
300 Ar
318.9336 385.7764 m
319.4131 386.0156 l
320.1328 386.7363 l
320.1328 381.6963 l
S
300 Ar
319.8926 386.4961 m
319.8926 381.6963 l
S
300 Ar
318.9336 381.6963 m
321.0938 381.6963 l
S
300 Ar
1 D
323.2539 382.1758 m
323.0137 381.9375 l
323.2539 381.6963 l
323.4932 381.9375 l
323.2539 382.1758 l
S
300 Ar
0 D
325.1729 385.7764 m
325.4121 385.5361 l
325.1729 385.2959 l
324.9336 385.5361 l
324.9336 385.7764 l
325.1729 386.2559 l
325.4121 386.4961 l
326.1328 386.7363 l
327.0938 386.7363 l
327.8125 386.4961 l
328.0527 386.2559 l
328.293 385.7764 l
328.293 385.2959 l
328.0527 384.8164 l
327.333 384.3359 l
326.1328 383.8574 l
325.6523 383.6162 l
325.1729 383.1357 l
324.9336 382.416 l
324.9336 381.6963 l
S
300 Ar
327.0938 386.7363 m
327.5723 386.4961 l
327.8125 386.2559 l
328.0527 385.7764 l
328.0527 385.2959 l
327.8125 384.8164 l
327.0938 384.3359 l
326.1328 383.8574 l
S
300 Ar
1 D
324.9336 382.1758 m
325.1729 382.416 l
325.6523 382.416 l
326.8535 381.9375 l
327.5723 381.9375 l
328.0527 382.1758 l
328.293 382.416 l
S
300 Ar
325.6523 382.416 m
326.8535 381.6963 l
327.8125 381.6963 l
328.0527 381.9375 l
328.293 382.416 l
328.293 382.8965 l
S
300 Ar
0 D
319.1738 419.2549 m
323.4932 419.2549 l
S
300 Ar
325.6523 421.1748 m
326.1328 421.415 l
326.8535 422.1348 l
326.8535 417.0947 l
S
300 Ar
326.6133 421.8945 m
326.6133 417.0947 l
S
300 Ar
325.6523 417.0947 m
327.8125 417.0947 l
S
300 Ar
317.2539 454.5332 m
321.5732 454.5332 l
S
300 Ar
1 D
323.2539 452.8535 m
323.0137 452.6133 l
323.2539 452.3735 l
323.4932 452.6133 l
323.2539 452.8535 l
S
300 Ar
326.1328 457.4131 m
325.4121 457.1733 l
325.1729 456.6934 l
325.1729 455.9731 l
325.4121 455.4932 l
326.1328 455.2534 l
327.0938 455.2534 l
327.8125 455.4932 l
328.0527 455.9731 l
328.0527 456.6934 l
327.8125 457.1733 l
327.0938 457.4131 l
326.1328 457.4131 l
325.6523 457.1733 l
325.4121 456.6934 l
325.4121 455.9731 l
325.6523 455.4932 l
326.1328 455.2534 l
S
300 Ar
327.0938 455.2534 m
327.5723 455.4932 l
327.8125 455.9731 l
327.8125 456.6934 l
327.5723 457.1733 l
327.0938 457.4131 l
S
300 Ar
326.1328 455.2534 m
325.4121 455.0132 l
325.1729 454.7734 l
324.9336 454.2935 l
324.9336 453.3335 l
325.1729 452.8535 l
325.4121 452.6133 l
326.1328 452.3735 l
327.0938 452.3735 l
327.8125 452.6133 l
328.0527 452.8535 l
328.293 453.3335 l
328.293 454.2935 l
328.0527 454.7734 l
327.8125 455.0132 l
327.0938 455.2534 l
S
300 Ar
326.1328 455.2534 m
325.6523 455.0132 l
325.4121 454.7734 l
325.1729 454.2935 l
325.1729 453.3335 l
325.4121 452.8535 l
325.6523 452.6133 l
326.1328 452.3735 l
S
300 Ar
327.0938 452.3735 m
327.5723 452.6133 l
327.8125 452.8535 l
328.0527 453.3335 l
328.0527 454.2935 l
327.8125 454.7734 l
327.5723 455.0132 l
327.0938 455.2534 l
S
300 Ar
0 D
317.2539 489.8115 m
321.5732 489.8115 l
S
300 Ar
1 D
323.2539 488.1318 m
323.0137 487.8916 l
323.2539 487.6519 l
323.4932 487.8916 l
323.2539 488.1318 l
S
300 Ar
327.8125 491.9717 m
327.5723 491.7314 l
327.8125 491.4917 l
328.0527 491.7314 l
328.0527 491.9717 l
327.8125 492.4517 l
327.333 492.6914 l
326.6133 492.6914 l
325.8926 492.4517 l
325.4121 491.9717 l
325.1729 491.4917 l
324.9336 490.5317 l
324.9336 489.0918 l
325.1729 488.3721 l
325.6523 487.8916 l
326.373 487.6519 l
326.8535 487.6519 l
327.5723 487.8916 l
328.0527 488.3721 l
328.293 489.0918 l
328.293 489.332 l
328.0527 490.0518 l
327.5723 490.5317 l
326.8535 490.7715 l
326.6133 490.7715 l
325.8926 490.5317 l
325.4121 490.0518 l
325.1729 489.332 l
S
300 Ar
326.6133 492.6914 m
326.1328 492.4517 l
325.6523 491.9717 l
325.4121 491.4917 l
325.1729 490.5317 l
325.1729 489.0918 l
325.4121 488.3721 l
325.8926 487.8916 l
326.373 487.6519 l
S
300 Ar
326.8535 487.6519 m
327.333 487.8916 l
327.8125 488.3721 l
328.0527 489.0918 l
328.0527 489.332 l
327.8125 490.0518 l
327.333 490.5317 l
326.8535 490.7715 l
S
300 Ar
0 D
317.2539 525.0903 m
321.5732 525.0903 l
S
300 Ar
1 D
323.2539 523.4102 m
323.0137 523.1704 l
323.2539 522.9307 l
323.4932 523.1704 l
323.2539 523.4102 l
S
300 Ar
0 D
327.0938 527.4902 m
327.0938 522.9307 l
S
300 Ar
327.333 527.9702 m
327.333 522.9307 l
S
300 Ar
1 D
327.333 527.9702 m
324.6934 524.3701 l
328.5332 524.3701 l
S
300 Ar
0 D
326.373 522.9307 m
328.0527 522.9307 l
S
300 Ar
547.5225 242.7422 m
547.5225 542.7295 l
S
300 Ar
547.5225 242.7422 m
539.8447 242.7422 l
S
300 Ar
547.5225 251.6211 m
543.6846 251.6211 l
S
300 Ar
547.5225 260.3809 m
543.6846 260.3809 l
S
300 Ar
547.5225 269.2607 m
543.6846 269.2607 l
S
300 Ar
547.5225 278.0195 m
539.8447 278.0195 l
S
300 Ar
547.5225 286.9004 m
543.6846 286.9004 l
S
300 Ar
547.5225 295.6602 m
543.6846 295.6602 l
S
300 Ar
547.5225 304.5391 m
543.6846 304.5391 l
S
300 Ar
547.5225 313.2988 m
539.8447 313.2988 l
S
300 Ar
547.5225 322.1777 m
543.6846 322.1777 l
S
300 Ar
547.5225 330.9395 m
543.6846 330.9395 l
S
300 Ar
547.5225 339.8184 m
543.6846 339.8184 l
S
300 Ar
547.5225 348.5781 m
539.8447 348.5781 l
S
300 Ar
547.5225 357.457 m
543.6846 357.457 l
S
300 Ar
547.5225 366.2168 m
543.6846 366.2168 l
S
300 Ar
547.5225 375.0957 m
543.6846 375.0957 l
S
300 Ar
547.5225 383.8574 m
539.8447 383.8574 l
S
300 Ar
547.5225 392.7363 m
543.6846 392.7363 l
S
300 Ar
547.5225 401.6152 m
543.6846 401.6152 l
S
300 Ar
547.5225 410.375 m
543.6846 410.375 l
S
300 Ar
547.5225 419.2549 m
539.8447 419.2549 l
S
300 Ar
547.5225 428.0146 m
543.6846 428.0146 l
S
300 Ar
547.5225 436.894 m
543.6846 436.894 l
S
300 Ar
547.5225 445.6538 m
543.6846 445.6538 l
S
300 Ar
547.5225 454.5332 m
539.8447 454.5332 l
S
300 Ar
547.5225 463.293 m
543.6846 463.293 l
S
300 Ar
547.5225 472.1729 m
543.6846 472.1729 l
S
300 Ar
547.5225 480.9321 m
543.6846 480.9321 l
S
300 Ar
547.5225 489.8115 m
539.8447 489.8115 l
S
300 Ar
547.5225 498.5713 m
543.6846 498.5713 l
S
300 Ar
547.5225 507.4512 m
543.6846 507.4512 l
S
300 Ar
547.5225 516.2109 m
543.6846 516.2109 l
S
300 Ar
547.5225 525.0903 m
539.8447 525.0903 l
S
300 Ar
547.5225 533.8501 m
543.6846 533.8501 l
S
300 Ar
547.5225 542.7295 m
543.6846 542.7295 l
S
300 Ar
331.5332 498.2114 m
S
300 Ar
331.5332 494.6113 m
S
300 Ar
331.5332 491.1318 m
S
300 Ar
331.5332 498.2114 m
S
300 Ar
331.5332 498.2114 m
S
300 Ar
331.5332 499.0518 m
S
300 Ar
331.5332 494.6113 m
S
300 Ar
331.5332 498.2114 m
S
300 Ar
331.5332 498.2114 m
S
300 Ar
331.5332 494.6113 m
S
300 Ar
331.5332 494.6113 m
S
300 Ar
331.5332 498.2114 m
S
300 Ar
331.5332 494.6113 m
S
300 Ar
331.5332 498.2114 m
S
300 Ar
331.5332 498.2114 m
S
*U
0 To
0 1 -1 0 317.4453 397.8457 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
0 J 0 j 4 M
/_Trebuchet-BoldItalic 17.9992 17.3752 -4.8513 Tf
(w) Tx 
(\r) TX 
TO
0 To
1 0 0 1 442.2764 221.041 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 17.9992 17.9992 -3.9549 Tf
(W) Tx 
(\r) TX 
TO
0 To
1 0 0 1 457.2764 217.042 0 Tp
0 Tv
TP
0 Tr
/_SymbolMT 8.9996 8.9996 -1.9775 Tf
(M) Tx 
(\r) TX 
TO
*u
300 Ar
0 R
0 0 0 1 K
1 J 1 j 10 M
450.5576 235.6436 m
449.9424 235.6436 l
S
300 Ar
460.4229 235.6436 m
S
*U
0 To
1 0 0 1 441.8076 510.0713 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
0 J 0 j 4 M
/_Myriad-Roman 11.9995 9.9715 -2.9999 Tf
(SCP + High-Z ) Tx 
(\r) TX 
TO
0 To
1 0 0 1 510.165 510.0713 0 Tp
0 Tv
TP
0 Tr
(+) Tx 
(\r) TX 
TO
0 To
1 0 0 1 441.8076 495.5713 0 Tp
0 Tv
TP
0 Tr
(2dF Redshif) Tx 
(\r) TX 
TO
0 To
1 0 0 1 500.2451 495.5713 0 Tp
0 Tv
TP
0 Tr
(t Sur) Tx 
(\r) TX 
TO
0 To
1 0 0 1 523.5107 495.5713 0 Tp
0 Tv
TP
0 Tr
-11 Tt
-0.132 Tc
(ve) Tx 
(\r) TX 
TO
0 To
1 0 0 1 535.1377 495.5713 0 Tp
0 Tv
TP
0 Tr
0 Tt
0 Tc
(y) Tx 
(\r) TX 
TO
300 Ar
0 R
0 0 0 1 K
485.8057 458.5732 m
431.8096 450.5732 l
S
0 To
1 0 0 1 487.8057 455.0732 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 1 k
(68.3%) Tx 
(\r) TX 
TO
0 To
1 0 0 1 487.8057 440.5742 0 Tp
0 Tv
TP
0 Tr
(95.4%) Tx 
(\r) TX 
TO
0 To
1 0 0 1 487.8057 426.0742 0 Tp
0 Tv
TP
0 Tr
(99.7%) Tx 
(\r) TX 
TO
300 Ar
432.3135 450.6479 m
433.6592 449.0264 l
433.6064 448.9775 l
430.5283 449.7012 l
429.4834 449.7734 428.4385 449.8467 427.3936 449.9189 c
428.3721 450.292 429.3525 450.6646 430.3311 451.0376 c
433.0654 452.6221 l
433.1318 452.6006 l
432.3135 450.6479 l
F
300 Ar
0 R
0 0 0 1 K
485.3057 444.0737 m
455.3076 432.5742 l
S
300 Ar
0 O
0 0 0 1 k
455.7842 432.7568 m
457.4502 431.4668 l
457.4092 431.4067 l
454.249 431.4448 l
453.2119 431.2891 452.1748 431.1323 451.1396 430.9766 c
452.0146 431.5527 452.8896 432.1289 453.7646 432.7061 c
456.0889 434.8472 l
456.1572 434.8398 l
455.7842 432.7568 l
F
300 Ar
0 R
0 0 0 1 K
484.8057 429.0742 m
474.8076 422.0747 l
S
300 Ar
0 O
0 0 0 1 k
475.2256 422.3672 m
477.1553 421.5195 l
477.1279 421.4507 l
474.0518 420.7222 l
473.085 420.3198 472.1182 419.917 471.1494 419.5146 c
471.8584 420.2861 472.5693 421.0571 473.2783 421.8291 c
475.0146 424.4697 l
475.083 424.479 l
475.2256 422.3672 l
F
U
/BBAccumRotation (0.000000) XT
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 0 1 0 0 3 79 79 255 Lb
(Layer 4) Ln
1 A
0 A
*u
300 Ar
0 R
0 0 0 1 K
0 J 0 j 1 w 4 M [11.999 11.999 ]0 d
0 XR
198.9424 245.7305 m
198.8408 246.2432 l
S
300 Ar
198.8408 246.2432 m
198.6348 247.5244 l
S
300 Ar
198.6348 247.5244 m
198.2744 249.2549 l
S
300 Ar
198.2744 249.2549 m
197.9668 251.0479 l
S
300 Ar
197.9668 251.0479 m
197.6055 252.7783 l
S
300 Ar
197.6055 252.7783 m
197.2979 254.5732 l
S
300 Ar
197.2979 254.5732 m
196.9385 256.3027 l
S
300 Ar
196.9385 256.3027 m
196.5273 258.0967 l
S
300 Ar
196.5273 258.0967 m
196.167 259.8916 l
S
300 Ar
196.167 259.8916 m
195.7559 261.6211 l
S
300 Ar
195.7559 261.6211 m
195.7559 261.8154 l
S
300 Ar
195.7559 261.8154 m
195.4482 263.416 l
S
300 Ar
195.4482 263.416 m
195.0879 265.1455 l
S
300 Ar
195.0879 265.1455 m
194.7275 266.9404 l
S
300 Ar
194.7275 266.9404 m
194.3174 268.6709 l
S
300 Ar
194.3174 268.6709 m
193.957 270.4639 l
S
300 Ar
193.9561 270.4639 m
193.5459 272.1943 l
S
300 Ar
193.5459 272.1943 m
193.1348 273.9893 l
S
300 Ar
193.1348 273.9893 m
192.7236 275.7197 l
S
300 Ar
192.7236 275.7197 m
192.6719 275.9756 l
S
300 Ar
192.6719 275.9756 m
192.3633 277.5127 l
S
300 Ar
192.3633 277.5127 m
191.9531 279.2432 l
S
300 Ar
191.9531 279.2432 m
191.541 281.0381 l
S
300 Ar
191.541 281.0381 m
191.1289 282.7686 l
S
300 Ar
191.1289 282.7686 m
190.7188 284.5615 l
S
300 Ar
190.7188 284.5615 m
190.3076 286.292 l
S
300 Ar
190.3076 286.292 m
189.8447 288.0859 l
S
300 Ar
189.8447 288.0859 m
189.5879 289.0479 l
S
300 Ar
189.5879 289.0479 m
189.3818 289.8174 l
S
300 Ar
189.3818 289.8174 m
188.9717 291.6104 l
S
300 Ar
188.9717 291.6104 m
188.5596 293.4033 l
S
300 Ar
188.5596 293.4033 m
188.0967 295.1357 l
S
300 Ar
188.0967 295.1357 m
187.6348 296.9287 l
S
300 Ar
187.6348 296.9287 m
187.1709 298.6592 l
S
300 Ar
187.1709 298.6592 m
186.6582 300.4541 l
S
300 Ar
186.6582 300.4541 m
186.5029 301.0303 l
S
300 Ar
186.5029 301.0303 m
186.1953 302.1826 l
S
300 Ar
186.1953 302.1826 m
185.7324 303.9775 l
S
300 Ar
185.7324 303.9775 m
185.2695 305.708 l
S
300 Ar
185.2695 305.708 m
184.8066 307.5029 l
S
300 Ar
184.8066 307.5029 m
184.2949 309.2324 l
S
300 Ar
184.2949 309.2324 m
183.7793 311.0264 l
S
300 Ar
183.7793 311.0264 m
183.4209 312.1797 l
S
300 Ar
183.4209 312.1797 m
183.2148 312.7549 l
S
300 Ar
183.2148 312.7549 m
182.752 314.5498 l
S
300 Ar
182.752 314.5498 m
182.2373 316.2803 l
S
300 Ar
182.2373 316.2803 m
181.7227 318.0752 l
S
300 Ar
181.7227 318.0752 m
181.1572 319.8057 l
S
300 Ar
181.1572 319.8057 m
180.5918 321.6006 l
S
300 Ar
180.5918 321.6006 m
180.3359 322.4326 l
S
300 Ar
180.3359 322.4326 m
180.0781 323.3291 l
S
300 Ar
180.0781 323.3291 m
179.5127 325.124 l
S
300 Ar
179.5127 325.124 m
179 326.9189 l
S
300 Ar
179 326.9189 m
178.3828 328.6484 l
S
300 Ar
178.3828 328.6484 m
177.8174 330.4424 l
S
300 Ar
177.8174 330.4424 m
177.252 332.0439 l
S
300 Ar
177.252 332.0439 m
177.2012 332.1729 l
S
300 Ar
177.2012 332.1729 m
176.6348 333.9658 l
S
300 Ar
176.6348 333.9658 m
176.0186 335.6973 l
S
300 Ar
176.0186 335.6973 m
175.4014 337.4912 l
S
300 Ar
175.4014 337.4912 m
174.7852 339.2217 l
S
300 Ar
174.7852 339.2217 m
174.168 340.8877 l
S
300 Ar
174.168 340.8877 m
174.1172 341.0156 l
S
300 Ar
174.1172 341.0156 m
173.5518 342.7451 l
S
300 Ar
173.5518 342.7451 m
172.8828 344.54 l
S
300 Ar
172.8828 344.54 m
172.2148 346.2705 l
S
300 Ar
172.2148 346.2705 m
171.5469 348.0635 l
S
300 Ar
171.5469 348.0635 m
171.084 349.2822 l
S
300 Ar
171.084 349.2822 m
170.8789 349.7939 l
S
300 Ar
170.8789 349.7939 m
170.2109 351.5879 l
S
300 Ar
170.2109 351.5879 m
169.542 353.3184 l
S
300 Ar
169.542 353.3184 m
168.8223 355.1123 l
S
300 Ar
168.8223 355.1123 m
168.0508 356.8428 l
S
300 Ar
168.0508 356.8428 m
168 357.0352 l
S
300 Ar
168 357.0352 m
167.332 358.6377 l
S
300 Ar
167.332 358.6377 m
166.6631 360.4316 l
S
300 Ar
166.6631 360.4316 m
165.8926 362.1621 l
S
300 Ar
165.8926 362.1621 m
165.0703 363.9561 l
S
300 Ar
187.0693 245.7305 m
186.709 247.5244 l
S
300 Ar
186.709 247.5244 m
186.5029 248.6143 l
S
300 Ar
186.5029 248.6143 m
186.3496 249.2549 l
S
300 Ar
186.3496 249.2549 m
186.04 251.0479 l
S
300 Ar
186.04 251.0479 m
185.6807 252.7783 l
S
300 Ar
185.6807 252.7783 m
185.3213 254.5732 l
S
300 Ar
185.3213 254.5732 m
184.9609 256.3027 l
S
300 Ar
184.9609 256.3027 m
184.6016 258.0967 l
S
300 Ar
184.6016 258.0967 m
184.1914 259.8916 l
S
300 Ar
184.1914 259.8916 m
183.8301 261.6211 l
S
300 Ar
183.8301 261.6211 m
183.4209 263.416 l
S
300 Ar
183.4209 263.416 m
183.4209 263.4805 l
S
300 Ar
183.4209 263.4805 m
183.0586 265.1455 l
S
300 Ar
183.0586 265.1455 m
182.7002 266.9404 l
S
300 Ar
182.7002 266.9404 m
182.2881 268.6709 l
S
300 Ar
182.2881 268.6709 m
181.9287 270.4639 l
S
300 Ar
181.9287 270.4639 m
181.5166 272.1943 l
S
300 Ar
181.5166 272.1943 m
181.1064 273.9893 l
S
300 Ar
181.1064 273.9893 m
180.6445 275.7197 l
S
300 Ar
180.6445 275.7197 m
180.3359 277.1299 l
S
300 Ar
180.3359 277.1299 m
180.2334 277.5127 l
S
300 Ar
180.2334 277.5127 m
179.8213 279.2432 l
S
300 Ar
179.8213 279.2432 m
179.4102 281.0381 l
S
300 Ar
179.4102 281.0381 m
179 282.7686 l
S
300 Ar
179 282.7686 m
178.5371 284.5615 l
S
300 Ar
178.5371 284.5615 m
178.126 286.292 l
S
300 Ar
178.126 286.292 m
177.6631 288.0859 l
S
300 Ar
177.6631 288.0859 m
177.252 289.5605 l
S
300 Ar
177.252 289.5605 m
177.1494 289.8174 l
S
300 Ar
177.1494 289.8174 m
176.7373 291.6104 l
S
300 Ar
176.7373 291.6104 m
176.2754 293.4033 l
S
300 Ar
176.2754 293.4033 m
175.8135 295.1357 l
S
300 Ar
175.8135 295.1357 m
175.3506 296.9287 l
S
300 Ar
175.3506 296.9287 m
174.8359 298.6592 l
S
300 Ar
174.8359 298.6592 m
174.3223 300.4541 l
S
300 Ar
174.3223 300.4541 m
174.168 301.0947 l
S
300 Ar
174.168 301.0947 m
173.8594 302.1826 l
S
300 Ar
173.8594 302.1826 m
173.3457 303.9775 l
S
300 Ar
173.3457 303.9775 m
172.8828 305.708 l
S
300 Ar
172.8828 305.708 m
172.3691 307.5029 l
S
300 Ar
172.3691 307.5029 m
171.8545 309.2324 l
S
300 Ar
171.8545 309.2324 m
171.2891 311.0264 l
S
300 Ar
171.2891 311.0264 m
171.084 311.668 l
S
300 Ar
171.084 311.668 m
170.7754 312.7549 l
S
300 Ar
170.7754 312.7549 m
170.2617 314.5498 l
S
300 Ar
170.2617 314.5498 m
169.6963 316.2803 l
S
300 Ar
169.6963 316.2803 m
169.1309 318.0752 l
S
300 Ar
169.1309 318.0752 m
168.5654 319.8057 l
S
300 Ar
168.5654 319.8057 m
168 321.6006 l
S
300 Ar
168 321.6006 m
167.4336 323.3291 l
S
300 Ar
167.4336 323.3291 m
166.8691 325.124 l
S
300 Ar
166.8691 325.124 m
166.252 326.9189 l
S
300 Ar
166.252 326.9189 m
165.6348 328.6484 l
S
300 Ar
165.6348 328.6484 m
165.0186 330.4424 l
S
300 Ar
165.0186 330.4424 m
164.916 330.6992 l
S
300 Ar
164.916 330.6992 m
164.4023 332.1729 l
S
300 Ar
164.4023 332.1729 m
163.7861 333.9658 l
S
300 Ar
163.7861 333.9658 m
163.168 335.6973 l
S
300 Ar
163.168 335.6973 m
162.499 337.4912 l
S
300 Ar
162.499 337.4912 m
161.8311 339.2217 l
S
300 Ar
161.8311 339.2217 m
161.8311 339.2861 l
S
300 Ar
161.8311 339.2861 m
161.2148 341.0156 l
S
300 Ar
161.2148 341.0156 m
160.5474 342.7451 l
S
300 Ar
160.5474 342.7451 m
159.8281 344.54 l
S
300 Ar
159.8281 344.54 m
159.1592 346.2705 l
S
300 Ar
159.1592 346.2705 m
158.7476 347.2949 l
S
300 Ar
158.7476 347.2949 m
158.4395 348.0635 l
S
300 Ar
158.4395 348.0635 m
157.771 349.7939 l
S
300 Ar
157.771 349.7939 m
156.9995 351.5889 l
S
300 Ar
156.9995 351.5889 m
156.2803 353.3184 l
S
300 Ar
156.2803 353.3184 m
155.6641 354.792 l
S
300 Ar
155.6641 354.792 m
155.5088 355.1133 l
S
300 Ar
155.5088 355.1133 m
154.7896 356.8428 l
S
300 Ar
154.7896 356.8428 m
154.0186 358.6377 l
S
300 Ar
154.0186 358.6377 m
153.248 360.4316 l
S
300 Ar
153.248 360.4316 m
152.5801 361.8408 l
S
300 Ar
152.5801 361.8408 m
152.4253 362.1621 l
S
300 Ar
152.4253 362.1621 m
151.6543 363.9561 l
S
300 Ar
175.915 245.7305 m
175.5557 247.5244 l
S
300 Ar
175.5557 247.5244 m
175.1953 249.2549 l
S
300 Ar
175.1953 249.2549 m
174.8359 251.0479 l
S
300 Ar
174.8359 251.0479 m
174.4248 252.7783 l
S
300 Ar
174.4248 252.7783 m
174.168 254.124 l
S
300 Ar
174.168 254.124 m
174.0654 254.5732 l
S
300 Ar
174.0654 254.5732 m
173.7051 256.3027 l
S
300 Ar
173.7051 256.3027 m
173.3457 258.0967 l
S
300 Ar
173.3457 258.0967 m
172.9346 259.8916 l
S
300 Ar
172.9346 259.8916 m
172.5742 261.6211 l
S
*U
*u
300 Ar
172.5742 261.6211 m
172.1631 263.416 l
S
300 Ar
172.1631 263.416 m
171.752 265.1455 l
S
300 Ar
171.752 265.1455 m
171.3408 266.9404 l
S
300 Ar
171.3408 266.9404 m
171.084 268.0283 l
S
300 Ar
171.084 268.0283 m
170.9297 268.6699 l
S
300 Ar
170.9297 268.6699 m
170.5186 270.4639 l
S
300 Ar
170.5186 270.4639 m
170.1074 272.1943 l
S
300 Ar
170.1074 272.1943 m
169.6963 273.9893 l
S
300 Ar
169.6963 273.9893 m
169.2852 275.7197 l
S
300 Ar
169.2852 275.7197 m
168.8223 277.5127 l
S
300 Ar
168.8223 277.5127 m
168.3594 279.2432 l
S
300 Ar
168.3594 279.2432 m
168 280.7813 l
S
300 Ar
168 280.7813 m
167.9482 281.0381 l
S
300 Ar
167.9482 281.0381 m
167.4854 282.7686 l
S
300 Ar
167.4854 282.7686 m
167.0234 284.5615 l
S
300 Ar
167.0234 284.5615 m
166.6113 286.292 l
S
300 Ar
166.6113 286.292 m
166.0977 288.0859 l
S
300 Ar
166.0977 288.0859 m
165.6348 289.8174 l
S
300 Ar
165.6348 289.8174 m
165.1738 291.6104 l
S
300 Ar
165.1738 291.6104 m
164.915 292.5068 l
S
300 Ar
164.915 292.5068 m
164.6582 293.4033 l
S
300 Ar
164.6582 293.4033 m
164.1958 295.1357 l
S
300 Ar
164.1958 295.1357 m
163.6826 296.9287 l
S
300 Ar
163.6826 296.9287 m
163.2188 298.6592 l
S
300 Ar
163.2188 298.6592 m
162.7051 300.4541 l
S
300 Ar
162.7051 300.4541 m
162.1406 302.1826 l
S
300 Ar
162.1406 302.1826 m
161.8311 303.2744 l
S
300 Ar
161.8311 303.2744 m
161.6265 303.9775 l
S
300 Ar
161.6265 303.9775 m
161.1123 305.708 l
S
300 Ar
161.1123 305.708 m
160.5986 307.5029 l
S
300 Ar
160.5986 307.5029 m
160.0332 309.2324 l
S
300 Ar
160.0332 309.2324 m
159.5186 311.0264 l
S
300 Ar
159.5186 311.0264 m
158.9023 312.7549 l
S
300 Ar
158.9023 312.7549 m
158.7476 313.334 l
S
300 Ar
158.7476 313.334 m
158.3877 314.5498 l
S
300 Ar
158.3877 314.5498 m
157.8223 316.2803 l
S
300 Ar
157.8223 316.2803 m
157.2568 318.0752 l
S
300 Ar
157.2568 318.0752 m
156.6401 319.8057 l
S
300 Ar
156.6401 319.8057 m
156.0234 321.6006 l
S
300 Ar
156.0234 321.6006 m
155.6641 322.624 l
S
300 Ar
155.6641 322.624 m
155.4067 323.3291 l
S
300 Ar
155.4067 323.3291 m
154.8408 325.124 l
S
300 Ar
154.8408 325.124 m
154.2241 326.9189 l
S
300 Ar
154.2241 326.9189 m
153.5566 328.6484 l
S
300 Ar
153.5566 328.6484 m
152.9395 330.4424 l
S
300 Ar
152.9395 330.4424 m
152.5801 331.3389 l
S
300 Ar
152.5801 331.3389 m
152.2715 332.1729 l
S
300 Ar
152.2715 332.1729 m
151.6543 333.9658 l
S
300 Ar
151.6543 333.9658 m
150.9863 335.6973 l
S
300 Ar
150.9863 335.6973 m
150.3188 337.4912 l
S
300 Ar
150.3188 337.4912 m
149.5996 339.2217 l
S
300 Ar
149.5996 339.2217 m
149.4961 339.4775 l
S
300 Ar
149.4961 339.4775 m
148.9307 341.0156 l
S
300 Ar
148.9307 341.0156 m
148.2109 342.7451 l
S
300 Ar
148.2109 342.7451 m
147.4912 344.54 l
S
300 Ar
147.4912 344.54 m
146.772 346.2705 l
S
300 Ar
146.772 346.2705 m
146.4121 347.1045 l
S
300 Ar
146.4121 347.1045 m
146.0005 348.0635 l
S
300 Ar
146.0005 348.0635 m
145.2813 349.7939 l
S
300 Ar
145.2813 349.7939 m
144.561 351.5879 l
S
300 Ar
144.561 351.5879 m
143.7393 353.3184 l
S
300 Ar
143.7393 353.3184 m
143.3276 354.2803 l
S
300 Ar
143.3276 354.2803 m
142.9683 355.1123 l
S
300 Ar
142.9683 355.1123 m
142.1968 356.8428 l
S
300 Ar
142.1968 356.8428 m
141.374 358.6377 l
S
300 Ar
141.374 358.6377 m
140.5522 360.4316 l
S
300 Ar
140.5522 360.4316 m
140.2432 361.0723 l
S
300 Ar
140.2432 361.0723 m
139.7295 362.1621 l
S
300 Ar
139.7295 362.1621 m
138.9067 363.9561 l
S
300 Ar
165.0703 363.9561 m
164.915 364.3389 l
S
300 Ar
164.915 364.3389 m
164.3506 365.6865 l
S
300 Ar
164.3506 365.6865 m
163.5791 367.4795 l
S
300 Ar
163.5791 367.4795 m
162.7573 369.21 l
S
300 Ar
162.7573 369.21 m
161.9346 371.0049 l
S
300 Ar
161.9346 371.0049 m
161.8311 371.1963 l
S
300 Ar
161.8311 371.1963 m
161.1641 372.7344 l
S
300 Ar
161.1641 372.7344 m
160.3418 374.5283 l
S
300 Ar
160.3418 374.5283 m
159.4668 376.2588 l
S
300 Ar
159.4668 376.2588 m
158.7476 377.6689 l
S
300 Ar
158.7476 377.6689 m
158.5938 378.0527 l
S
300 Ar
158.5938 378.0527 m
157.7188 379.7832 l
S
300 Ar
157.7188 379.7832 m
156.8457 381.5781 l
S
300 Ar
156.8457 381.5781 m
155.9209 383.3086 l
S
300 Ar
155.9209 383.3086 m
155.6636 383.8203 l
S
300 Ar
155.6636 383.8203 m
154.9956 385.1025 l
S
300 Ar
154.9956 385.1025 m
154.123 386.832 l
S
300 Ar
154.123 386.832 m
153.0938 388.625 l
S
300 Ar
153.0938 388.625 m
152.5801 389.5879 l
S
300 Ar
152.5801 389.5879 m
152.168 390.3555 l
S
300 Ar
152.168 390.3555 m
151.1924 392.1504 l
S
300 Ar
151.1924 392.1504 m
150.1641 393.9453 l
S
300 Ar
150.1641 393.9453 m
149.4961 395.0347 l
S
300 Ar
149.4961 395.0347 m
149.1357 395.6743 l
S
300 Ar
149.1357 395.6743 m
148.1079 397.4692 l
S
300 Ar
148.1079 397.4692 m
147.0801 399.1987 l
S
300 Ar
147.0801 399.1987 m
146.4116 400.2246 l
S
300 Ar
146.4116 400.2246 m
145.9492 400.9937 l
S
300 Ar
145.9492 400.9937 m
144.9209 402.7227 l
S
300 Ar
144.9209 402.7227 m
143.7383 404.5176 l
S
300 Ar
143.7383 404.5176 m
143.3276 405.1587 l
S
300 Ar
143.3276 405.1587 m
142.6592 406.2476 l
S
300 Ar
142.6592 406.2476 m
141.4775 408.042 l
S
300 Ar
141.4775 408.042 m
140.2949 409.772 l
S
300 Ar
140.2949 409.772 m
140.2432 409.8364 l
S
300 Ar
140.2432 409.8364 m
139.1133 411.5669 l
S
300 Ar
139.1133 411.5669 m
137.8799 413.2959 l
S
300 Ar
137.8799 413.2959 m
137.1592 414.3218 l
S
300 Ar
137.1592 414.3218 m
136.5938 415.0903 l
S
300 Ar
136.5938 415.0903 m
135.3604 416.8203 l
S
300 Ar
135.3604 416.8203 m
134.0752 418.5508 l
S
300 Ar
134.0752 418.5508 m
134.0244 418.6152 l
S
300 Ar
134.0244 418.6152 m
132.7393 420.3452 l
S
300 Ar
132.7393 420.3452 m
131.3511 422.1396 l
S
300 Ar
131.3511 422.1396 m
130.9912 422.5884 l
S
300 Ar
130.9912 422.5884 m
130.0146 423.8696 l
S
300 Ar
130.0146 423.8696 m
128.5757 425.6641 l
S
300 Ar
128.5757 425.6641 m
127.9067 426.4966 l
S
300 Ar
127.9067 426.4966 m
127.1875 427.3945 l
S
300 Ar
127.1875 427.3945 m
125.6973 429.1885 l
S
300 Ar
125.6973 429.1885 m
124.8242 430.2139 l
S
300 Ar
124.8242 430.2139 m
124.207 430.9824 l
S
300 Ar
124.207 430.9824 m
122.665 432.7129 l
S
300 Ar
122.665 432.7129 m
121.7393 433.7378 l
S
300 Ar
121.7393 433.7378 m
121.0713 434.5068 l
S
300 Ar
121.0713 434.5068 m
119.5293 436.2368 l
S
300 Ar
119.5293 436.2368 m
118.6553 437.1333 l
S
300 Ar
118.6553 437.1333 m
117.8848 438.0303 l
S
300 Ar
117.8848 438.0303 m
116.1875 439.7607 l
S
300 Ar
116.1875 439.7607 m
115.5718 440.4019 l
S
300 Ar
115.5718 440.4019 m
114.4912 441.5547 l
S
300 Ar
114.4912 441.5547 m
112.6934 443.2856 l
S
300 Ar
112.6934 443.2856 m
112.4873 443.5415 l
S
300 Ar
112.4873 443.5415 m
110.9453 445.0791 l
S
300 Ar
110.9453 445.0791 m
109.4033 446.5537 l
S
300 Ar
109.4033 446.5537 m
109.0947 446.8101 l
S
300 Ar
109.0947 446.8101 m
107.2446 448.6045 l
S
300 Ar
107.2446 448.6045 m
106.3193 449.437 l
S
300 Ar
106.3193 449.437 m
105.3433 450.334 l
S
300 Ar
105.3433 450.334 m
103.3374 452.1284 l
S
300 Ar
103.3374 452.1284 m
103.2358 452.1924 l
S
300 Ar
103.2358 452.1924 m
101.3857 453.8584 l
S
300 Ar
101.3857 453.8584 m
100.1514 454.9482 l
S
300 Ar
100.1514 454.9482 m
99.2773 455.6533 l
S
300 Ar
99.2773 455.6533 m
97.1187 457.3828 l
S
300 Ar
97.1187 457.3828 m
97.0674 457.4473 l
S
300 Ar
97.0674 457.4473 m
95.0117 459.1772 l
S
300 Ar
95.0117 459.1772 m
93.9834 460.0103 l
S
300 Ar
93.9834 460.0103 m
92.8013 460.9072 l
S
300 Ar
92.8013 460.9072 m
90.8989 462.3813 l
S
300 Ar
90.8989 462.3813 m
90.4888 462.7017 l
S
300 Ar
90.4888 462.7017 m
88.1758 464.4951 l
S
300 Ar
88.1758 464.4951 m
87.8154 464.7524 l
S
300 Ar
87.8154 464.7524 m
85.7598 466.2261 l
S
300 Ar
85.7598 466.2261 m
84.7314 466.9941 l
S
300 Ar
84.7314 466.9941 m
83.292 468.02 l
S
300 Ar
83.292 468.02 m
81.6475 469.1094 l
S
300 Ar
81.6475 469.1094 m
80.7217 469.7505 l
S
300 Ar
80.7217 469.7505 m
78.5635 471.2236 l
S
300 Ar
78.5635 471.2236 m
78.1006 471.5444 l
S
300 Ar
78.1006 471.5444 m
75.4795 473.2749 l
S
300 Ar
132.019 482.1182 m
134.0752 480.772 l
S
300 Ar
134.0752 480.772 m
134.6411 480.3237 l
S
300 Ar
134.6411 480.3237 m
137.1592 478.6572 l
S
300 Ar
137.1592 478.6572 m
137.2109 478.5928 l
S
300 Ar
137.2109 478.5928 m
139.7295 476.7988 l
S
300 Ar
139.7295 476.7988 m
140.2432 476.415 l
S
300 Ar
140.2432 476.415 m
142.0938 475.0688 l
S
300 Ar
142.0938 475.0688 m
143.3276 474.1084 l
S
300 Ar
143.3276 474.1084 m
144.4072 473.2749 l
S
300 Ar
144.4072 473.2749 m
146.4116 471.7368 l
S
300 Ar
146.4116 471.7368 m
146.6685 471.5444 l
S
300 Ar
146.6685 471.5444 m
148.8789 469.7505 l
S
300 Ar
148.8789 469.7505 m
149.4961 469.3022 l
S
300 Ar
149.4961 469.3022 m
151.0381 468.02 l
S
300 Ar
151.0381 468.02 m
152.5801 466.6743 l
S
300 Ar
152.5801 466.6743 m
153.0938 466.2261 l
S
300 Ar
153.0938 466.2261 m
155.0981 464.4951 l
S
300 Ar
155.0981 464.4951 m
155.6636 463.9829 l
S
300 Ar
155.6636 463.9829 m
157.103 462.7017 l
S
300 Ar
157.103 462.7017 m
158.7476 461.2275 l
S
300 Ar
158.7476 461.2275 m
159.0049 460.9082 l
S
300 Ar
159.0049 460.9082 m
160.8555 459.1772 l
S
300 Ar
160.8555 459.1772 m
161.8311 458.2803 l
S
300 Ar
161.8311 458.2803 m
162.7051 457.3828 l
S
300 Ar
162.7051 457.3828 m
164.4541 455.6533 l
S
300 Ar
164.4541 455.6533 m
164.915 455.2046 l
S
300 Ar
164.915 455.2046 m
166.1494 453.8584 l
S
300 Ar
166.1494 453.8584 m
167.8975 452.1284 l
S
300 Ar
167.8975 452.1284 m
168 452 l
S
300 Ar
168 452 m
169.4902 450.334 l
S
300 Ar
169.4902 450.334 m
171.084 448.6675 l
S
300 Ar
171.084 448.6675 m
171.1357 448.6045 l
S
300 Ar
171.1357 448.6045 m
172.626 446.8101 l
S
300 Ar
172.626 446.8101 m
174.168 445.0801 l
S
300 Ar
174.168 445.0801 m
175.6074 443.2856 l
S
300 Ar
175.6074 443.2856 m
177.0986 441.5562 l
S
300 Ar
177.0986 441.5562 m
177.252 441.3628 l
S
300 Ar
177.252 441.3628 m
178.4854 439.7607 l
S
300 Ar
178.4854 439.7607 m
179.873 438.0313 l
S
300 Ar
179.873 438.0313 m
180.3359 437.4546 l
S
*U
*u
300 Ar
180.3359 437.4546 m
181.21 436.2368 l
S
300 Ar
181.21 436.2368 m
182.5469 434.5078 l
S
300 Ar
182.5469 434.5078 m
183.4209 433.2896 l
S
300 Ar
183.4209 433.2896 m
183.8301 432.7129 l
S
300 Ar
183.8301 432.7129 m
185.0645 430.9834 l
S
300 Ar
185.0645 430.9834 m
186.2988 429.1885 l
S
300 Ar
186.2988 429.1885 m
186.5029 428.9316 l
S
300 Ar
186.5029 428.9316 m
187.5322 427.3945 l
S
300 Ar
187.5322 427.3945 m
188.7139 425.6641 l
S
300 Ar
188.7139 425.6641 m
189.5879 424.3184 l
S
300 Ar
189.5879 424.3184 m
189.8447 423.8706 l
S
300 Ar
189.8447 423.8706 m
190.9746 422.1396 l
S
300 Ar
190.9746 422.1396 m
192.0547 420.3457 l
S
300 Ar
192.0547 420.3457 m
192.6719 419.4487 l
S
300 Ar
192.6719 419.4487 m
193.1348 418.6152 l
S
300 Ar
193.1348 418.6152 m
194.2139 416.8213 l
S
300 Ar
194.2139 416.8213 m
195.1904 415.0903 l
S
300 Ar
195.1904 415.0903 m
195.7559 414.1938 l
S
300 Ar
195.7559 414.1938 m
196.2695 413.2974 l
S
300 Ar
196.2695 413.2974 m
197.1953 411.5669 l
S
300 Ar
197.1953 411.5669 m
198.1719 409.7725 l
S
300 Ar
198.1719 409.7725 m
198.8408 408.6831 l
S
300 Ar
198.8408 408.6831 m
199.2002 408.042 l
S
300 Ar
199.2002 408.042 m
200.0742 406.2485 l
S
300 Ar
200.0742 406.2485 m
200.999 404.5176 l
S
300 Ar
200.999 404.5176 m
201.9238 402.7871 l
S
300 Ar
201.9238 402.7871 m
201.9238 402.7227 l
S
300 Ar
201.9238 402.7227 m
202.7471 400.9937 l
S
300 Ar
202.7471 400.9937 m
203.6191 399.1987 l
S
300 Ar
203.6191 399.1987 m
204.4932 397.4692 l
S
300 Ar
204.4932 397.4692 m
205.0078 396.3794 l
S
300 Ar
205.0078 396.3794 m
205.3174 395.6743 l
S
300 Ar
205.3174 395.6743 m
206.0879 393.9453 l
S
300 Ar
206.0879 393.9453 m
206.9092 392.1504 l
S
300 Ar
206.9092 392.1504 m
207.6797 390.3555 l
S
300 Ar
207.6797 390.3555 m
208.0918 389.5234 l
S
300 Ar
208.0918 389.5234 m
208.4512 388.625 l
S
300 Ar
208.4512 388.625 m
209.2227 386.832 l
S
300 Ar
209.2227 386.832 m
209.9434 385.1025 l
S
300 Ar
209.9434 385.1025 m
210.6611 383.3086 l
S
300 Ar
210.6611 383.3086 m
211.1768 382.2178 l
S
300 Ar
211.1768 382.2178 m
211.3818 381.5781 l
S
300 Ar
211.3828 381.5781 m
212.1016 379.7832 l
S
300 Ar
212.1016 379.7832 m
212.7686 378.0527 l
S
300 Ar
212.7686 378.0527 m
213.4385 376.2588 l
S
300 Ar
213.4385 376.2588 m
214.1582 374.5283 l
S
300 Ar
214.1582 374.5283 m
214.2598 374.2715 l
S
300 Ar
214.2598 374.2715 m
214.7744 372.7344 l
S
300 Ar
214.7744 372.7344 m
215.3906 371.0049 l
S
300 Ar
215.3906 371.0049 m
216.0078 369.21 l
S
300 Ar
216.0078 369.21 m
216.6758 367.4795 l
S
300 Ar
216.6758 367.4795 m
217.293 365.6865 l
S
300 Ar
217.293 365.6865 m
217.3438 365.6221 l
S
300 Ar
151.6543 363.9561 m
150.832 365.6865 l
S
300 Ar
150.832 365.6865 m
150.0088 367.4795 l
S
300 Ar
150.0088 367.4795 m
149.4961 368.4404 l
S
300 Ar
149.4961 368.4404 m
149.1357 369.21 l
S
300 Ar
149.1357 369.21 m
148.3135 371.0049 l
S
300 Ar
148.3135 371.0049 m
147.4395 372.7344 l
S
300 Ar
147.4395 372.7344 m
146.5146 374.5283 l
S
300 Ar
146.5146 374.5283 m
146.4116 374.7217 l
S
300 Ar
146.4116 374.7217 m
145.6401 376.2588 l
S
300 Ar
145.6401 376.2588 m
144.7148 378.0527 l
S
300 Ar
144.7148 378.0527 m
143.79 379.7832 l
S
300 Ar
143.79 379.7832 m
143.3276 380.6162 l
S
300 Ar
143.3276 380.6162 m
142.8135 381.5781 l
S
300 Ar
142.8135 381.5781 m
141.8882 383.3086 l
S
300 Ar
141.8882 383.3086 m
140.9111 385.1025 l
S
300 Ar
140.9111 385.1025 m
140.2432 386.2539 l
S
300 Ar
140.2432 386.2539 m
139.8843 386.832 l
S
300 Ar
139.8843 386.832 m
138.9067 388.625 l
S
300 Ar
138.9067 388.625 m
137.8799 390.3555 l
S
300 Ar
137.8799 390.3555 m
137.1592 391.5742 l
S
300 Ar
137.1592 391.5742 m
136.7998 392.1504 l
S
300 Ar
136.7998 392.1504 m
135.772 393.9453 l
S
300 Ar
135.772 393.9453 m
134.6411 395.6743 l
S
300 Ar
134.6411 395.6743 m
134.0752 396.5718 l
S
300 Ar
134.0752 396.5718 m
133.5615 397.4692 l
S
300 Ar
133.5615 397.4692 m
132.4302 399.1987 l
S
300 Ar
132.4302 399.1987 m
131.2998 400.9937 l
S
300 Ar
131.2998 400.9937 m
130.9912 401.4419 l
S
300 Ar
130.9912 401.4419 m
130.1177 402.7227 l
S
300 Ar
130.1177 402.7227 m
128.9355 404.5176 l
S
300 Ar
128.9355 404.5176 m
127.9067 405.9912 l
S
300 Ar
127.9067 405.9912 m
127.7012 406.2476 l
S
300 Ar
127.7012 406.2476 m
126.5195 408.042 l
S
300 Ar
126.5195 408.042 m
125.2354 409.772 l
S
300 Ar
125.2354 409.772 m
124.8242 410.3491 l
S
300 Ar
124.8242 410.3491 m
123.9492 411.5669 l
S
300 Ar
123.9492 411.5669 m
122.6133 413.2959 l
S
300 Ar
122.6133 413.2959 m
121.7393 414.5137 l
S
300 Ar
121.7393 414.5137 m
121.2764 415.0903 l
S
300 Ar
121.2764 415.0903 m
119.9404 416.8203 l
S
300 Ar
119.9404 416.8203 m
118.6553 418.4868 l
S
300 Ar
118.6553 418.4868 m
118.5527 418.6152 l
S
300 Ar
118.5527 418.6152 m
117.165 420.3457 l
S
300 Ar
117.165 420.3457 m
115.6743 422.1396 l
S
300 Ar
115.6743 422.1396 m
115.5718 422.2676 l
S
300 Ar
115.5718 422.2676 m
114.2354 423.8706 l
S
300 Ar
114.2354 423.8706 m
112.6934 425.6641 l
S
300 Ar
112.6934 425.6641 m
112.4873 425.9199 l
S
300 Ar
112.4873 425.9199 m
111.2021 427.3945 l
S
300 Ar
111.2021 427.3945 m
109.5581 429.1885 l
S
300 Ar
109.5581 429.1885 m
109.4033 429.3804 l
S
300 Ar
109.4033 429.3804 m
108.0161 430.9824 l
S
300 Ar
108.0161 430.9824 m
106.3711 432.7129 l
S
300 Ar
106.3711 432.7129 m
106.3193 432.7769 l
S
300 Ar
106.3193 432.7769 m
104.6748 434.5068 l
S
300 Ar
104.6748 434.5068 m
103.2358 435.98 l
S
300 Ar
103.2358 435.98 m
102.9785 436.2368 l
S
300 Ar
102.9785 436.2368 m
101.2314 438.0303 l
S
300 Ar
101.2314 438.0303 m
100.1514 439.0566 l
S
300 Ar
100.1514 439.0566 m
99.4316 439.7607 l
S
300 Ar
99.4316 439.7607 m
97.5815 441.5547 l
S
300 Ar
97.5815 441.5547 m
97.0674 442.0044 l
S
300 Ar
97.0674 442.0044 m
95.7314 443.2856 l
S
300 Ar
95.7314 443.2856 m
93.9834 444.8872 l
S
300 Ar
93.9834 444.8872 m
93.7773 445.0791 l
S
300 Ar
93.7773 445.0791 m
91.8247 446.8101 l
S
300 Ar
91.8247 446.8101 m
90.8989 447.6436 l
S
300 Ar
90.8989 447.6436 m
89.8198 448.6045 l
S
300 Ar
89.8198 448.6045 m
87.8154 450.334 l
S
300 Ar
87.8154 450.334 m
87.7637 450.334 l
S
300 Ar
87.7637 450.334 m
85.6563 452.1284 l
S
300 Ar
85.6563 452.1284 m
84.7314 452.8975 l
S
300 Ar
84.7314 452.8975 m
83.4976 453.8584 l
S
300 Ar
83.4976 453.8584 m
81.6475 455.332 l
S
300 Ar
81.6475 455.332 m
81.2871 455.6533 l
S
300 Ar
81.2871 455.6533 m
79.0259 457.3828 l
S
300 Ar
79.0259 457.3828 m
78.5635 457.7681 l
S
300 Ar
78.5635 457.7681 m
76.7134 459.1772 l
S
300 Ar
76.7134 459.1772 m
75.4795 460.0742 l
S
300 Ar
161.7285 482.1182 m
161.8311 482.0537 l
S
300 Ar
161.8311 482.0537 m
164.042 480.3237 l
S
300 Ar
164.042 480.3237 m
164.915 479.6182 l
S
300 Ar
164.915 479.6182 m
166.2012 478.5928 l
S
300 Ar
166.2012 478.5928 m
168 477.1196 l
S
300 Ar
168 477.1196 m
168.3594 476.7988 l
S
300 Ar
168.3594 476.7988 m
170.4668 475.0688 l
S
300 Ar
170.4668 475.0688 m
171.084 474.4917 l
S
300 Ar
171.084 474.4917 m
172.4717 473.2749 l
S
300 Ar
172.4717 473.2749 m
174.168 471.8008 l
S
300 Ar
174.168 471.8008 m
174.4248 471.5444 l
S
300 Ar
174.4248 471.5444 m
176.3271 469.7505 l
S
300 Ar
176.3271 469.7505 m
177.252 468.9175 l
S
300 Ar
177.252 468.917 m
178.2285 468.02 l
S
300 Ar
178.2285 468.02 m
180.0273 466.2261 l
S
300 Ar
180.0273 466.2261 m
180.3359 465.9053 l
S
300 Ar
180.3359 465.9053 m
181.7754 464.4951 l
S
300 Ar
181.7754 464.4951 m
183.4209 462.7661 l
S
300 Ar
183.4209 462.7661 m
183.4707 462.7017 l
S
300 Ar
183.4707 462.7017 m
185.1152 460.9072 l
S
300 Ar
185.1152 460.9072 m
186.5029 459.4971 l
S
300 Ar
186.5029 459.4971 m
186.7607 459.1772 l
S
300 Ar
186.7607 459.1772 m
188.3027 457.3828 l
S
300 Ar
188.3027 457.3828 m
189.5879 456.0371 l
S
300 Ar
189.5879 456.0371 m
189.8965 455.6533 l
S
300 Ar
189.8965 455.6533 m
191.335 453.8584 l
S
300 Ar
191.335 453.8584 m
192.6719 452.3853 l
S
300 Ar
192.6719 452.3853 m
192.8262 452.1284 l
S
300 Ar
192.8262 452.1284 m
194.2646 450.334 l
S
300 Ar
194.2646 450.334 m
195.6533 448.6045 l
S
300 Ar
195.6533 448.6045 m
195.7559 448.4761 l
S
300 Ar
195.7559 448.4761 m
196.9902 446.8101 l
S
300 Ar
196.9902 446.8101 m
198.3262 445.0801 l
S
300 Ar
198.3262 445.0801 m
198.8408 444.375 l
S
300 Ar
198.8408 444.375 m
199.6104 443.2856 l
S
300 Ar
199.6104 443.2856 m
200.8447 441.5562 l
S
300 Ar
200.8447 441.5562 m
201.9229 440.082 l
S
300 Ar
201.9229 440.082 m
202.0791 439.7607 l
S
300 Ar
202.0791 439.7607 m
203.3115 438.0313 l
S
300 Ar
203.3115 438.0313 m
204.4932 436.2368 l
S
300 Ar
204.4932 436.2368 m
205.0078 435.4678 l
S
300 Ar
205.0078 435.4678 m
205.625 434.5078 l
S
300 Ar
205.625 434.5078 m
206.7559 432.7129 l
S
300 Ar
206.7559 432.7129 m
207.8359 430.9824 l
S
300 Ar
207.8359 430.9824 m
208.0918 430.5981 l
S
300 Ar
208.0918 430.5981 m
208.9131 429.1885 l
S
300 Ar
208.9131 429.1885 m
209.9434 427.3945 l
S
300 Ar
209.9434 427.3945 m
210.9697 425.6641 l
S
300 Ar
210.9697 425.6641 m
211.1758 425.3428 l
S
300 Ar
211.1758 425.3428 m
211.998 423.8706 l
S
300 Ar
211.998 423.8706 m
212.9746 422.1396 l
S
300 Ar
212.9746 422.1396 m
213.8994 420.3457 l
S
300 Ar
213.8994 420.3457 m
214.2598 419.7686 l
S
300 Ar
214.2598 419.7686 m
214.877 418.6152 l
S
300 Ar
214.877 418.6152 m
215.8018 416.8213 l
S
300 Ar
215.8018 416.8213 m
216.6758 415.0903 l
S
300 Ar
216.6758 415.0903 m
217.3438 413.8735 l
S
300 Ar
138.9067 363.9561 m
138.0342 365.6865 l
S
300 Ar
138.0342 365.6865 m
137.1592 367.416 l
S
300 Ar
137.1592 367.416 m
137.1089 367.4795 l
S
300 Ar
137.1089 367.4795 m
136.2861 369.21 l
S
300 Ar
136.2861 369.21 m
135.3604 371.0049 l
S
300 Ar
135.3604 371.0049 m
134.4355 372.7344 l
S
300 Ar
134.4355 372.7344 m
134.0752 373.4395 l
S
300 Ar
134.0752 373.4395 m
133.5098 374.5283 l
S
300 Ar
133.5098 374.5283 m
132.585 376.2588 l
S
300 Ar
132.585 376.2588 m
131.6084 378.0527 l
S
300 Ar
131.6084 378.0527 m
130.9912 379.1426 l
S
*U
*u
300 Ar
130.9912 379.1426 m
130.6318 379.7832 l
S
300 Ar
130.6318 379.7832 m
129.6553 381.5781 l
S
300 Ar
129.6553 381.5781 m
128.626 383.3086 l
S
300 Ar
128.626 383.3086 m
127.9067 384.5254 l
S
300 Ar
127.9067 384.5254 m
127.5996 385.1025 l
S
300 Ar
127.5996 385.1025 m
126.5708 386.832 l
S
300 Ar
126.5708 386.832 m
125.4922 388.625 l
S
300 Ar
125.4922 388.625 m
124.8242 389.7168 l
S
300 Ar
124.8242 389.7168 m
124.4121 390.3555 l
S
300 Ar
124.4121 390.3555 m
123.3325 392.1504 l
S
300 Ar
123.3335 392.1504 m
122.2021 393.9453 l
S
300 Ar
122.2021 393.9453 m
121.7393 394.585 l
S
300 Ar
121.7393 394.585 m
121.02 395.6743 l
S
300 Ar
121.02 395.6743 m
119.8892 397.4692 l
S
300 Ar
119.8892 397.4692 m
118.6553 399.1987 l
S
300 Ar
118.6553 399.1987 m
118.6553 399.2632 l
S
300 Ar
118.6553 399.2632 m
117.4731 400.9937 l
S
300 Ar
117.4731 400.9937 m
116.2397 402.7227 l
S
300 Ar
116.2397 402.7227 m
115.5718 403.6841 l
S
300 Ar
115.5718 403.6841 m
115.0063 404.5176 l
S
300 Ar
115.0063 404.5176 m
113.7207 406.2476 l
S
300 Ar
113.7207 406.2476 m
112.4873 407.9136 l
S
300 Ar
112.4873 407.9136 m
112.436 408.042 l
S
300 Ar
112.436 408.042 m
111.0996 409.772 l
S
300 Ar
111.0996 409.772 m
109.7627 411.5669 l
S
300 Ar
109.7627 411.5669 m
109.4033 412.0156 l
S
300 Ar
109.4033 412.0156 m
108.3755 413.2974 l
S
300 Ar
108.3755 413.2974 m
106.9873 415.0903 l
S
300 Ar
106.9873 415.0903 m
106.3193 415.8604 l
S
300 Ar
106.3193 415.8604 m
105.5479 416.8213 l
S
300 Ar
105.5479 416.8213 m
104.0586 418.6152 l
S
300 Ar
104.0586 418.6152 m
103.2358 419.5767 l
S
300 Ar
103.2358 419.5767 m
102.5669 420.3457 l
S
300 Ar
102.5669 420.3457 m
101.0762 422.1396 l
S
300 Ar
101.0762 422.1396 m
100.1514 423.165 l
S
300 Ar
100.1514 423.165 m
99.4834 423.8706 l
S
300 Ar
99.4834 423.8706 m
97.9414 425.6641 l
S
300 Ar
97.9414 425.6641 m
97.0674 426.561 l
S
300 Ar
97.0674 426.561 m
96.2969 427.3945 l
S
300 Ar
96.2969 427.3945 m
94.6514 429.1885 l
S
300 Ar
94.6514 429.1885 m
93.9834 429.8926 l
S
300 Ar
93.9834 429.8926 m
92.9551 430.9824 l
S
300 Ar
92.9551 430.9824 m
91.208 432.7129 l
S
300 Ar
91.208 432.7129 m
90.8989 433.0332 l
S
300 Ar
90.8989 433.0332 m
89.46 434.5068 l
S
300 Ar
89.46 434.5068 m
87.8154 436.1094 l
S
300 Ar
87.8154 436.1094 m
87.6611 436.2368 l
S
300 Ar
87.6611 436.2368 m
85.8105 438.0313 l
S
300 Ar
85.8105 438.0313 m
84.7314 438.9917 l
S
300 Ar
84.7314 438.9917 m
83.9087 439.7607 l
S
300 Ar
83.9087 439.7607 m
82.0068 441.5562 l
S
300 Ar
82.0068 441.5562 m
81.6475 441.8115 l
S
300 Ar
81.6475 441.8115 m
80.0537 443.2856 l
S
300 Ar
80.0537 443.2856 m
78.5635 444.5674 l
S
300 Ar
78.5635 444.5674 m
77.998 445.0801 l
S
300 Ar
77.998 445.0801 m
75.9414 446.8101 l
S
300 Ar
75.9414 446.8101 m
75.4795 447.1953 l
S
300 Ar
193.752 482.1182 m
195.7041 480.3237 l
S
300 Ar
195.7041 480.3237 m
195.7559 480.3237 l
S
300 Ar
195.7559 480.3237 m
197.5547 478.5928 l
S
300 Ar
197.5547 478.5928 m
198.8408 477.3765 l
S
300 Ar
198.8408 477.3765 m
199.4063 476.7988 l
S
300 Ar
199.4063 476.7988 m
201.1523 475.0688 l
S
300 Ar
201.1523 475.0688 m
201.9229 474.2998 l
S
300 Ar
201.9229 474.2998 m
202.8496 473.2749 l
S
300 Ar
202.8496 473.2749 m
204.5449 471.5444 l
S
300 Ar
204.5449 471.5444 m
205.0078 471.0327 l
S
300 Ar
205.0078 471.0327 m
206.1387 469.7505 l
S
300 Ar
206.1387 469.7505 m
207.7324 468.02 l
S
300 Ar
207.7324 468.02 m
208.0918 467.5718 l
S
300 Ar
208.0918 467.5718 m
209.2227 466.2261 l
S
300 Ar
209.2227 466.2261 m
210.7139 464.4951 l
S
300 Ar
210.7139 464.4951 m
211.1758 463.9829 l
S
300 Ar
211.1758 463.9829 m
212.1523 462.7017 l
S
300 Ar
212.1523 462.7017 m
213.5918 460.9082 l
S
300 Ar
213.5918 460.9082 m
214.2598 460.0742 l
S
300 Ar
214.2598 460.0742 m
214.9277 459.1772 l
S
300 Ar
214.9277 459.1772 m
216.2637 457.3828 l
S
300 Ar
216.2637 457.3828 m
217.3438 456.0371 l
S
300 Ar
75.4795 510.1201 m
75.4795 510.1201 l
S
300 Ar
75.4795 510.1201 m
78.5625 508.9663 l
S
300 Ar
78.5625 508.9663 m
79.6934 508.582 l
S
300 Ar
79.6934 508.582 m
81.6475 507.7485 l
S
300 Ar
81.6475 507.7485 m
84.1143 506.7881 l
S
300 Ar
84.1143 506.7881 m
84.7314 506.5322 l
S
300 Ar
84.7314 506.5322 m
87.8149 505.314 l
S
300 Ar
87.8149 505.314 m
88.4316 505.0576 l
S
300 Ar
88.4316 505.0576 m
90.8989 503.9688 l
S
300 Ar
90.8989 503.9688 m
92.5439 503.2642 l
S
300 Ar
92.5439 503.2642 m
93.9834 502.6226 l
S
300 Ar
93.9834 502.6226 m
96.502 501.5332 l
S
300 Ar
96.502 501.5332 m
97.0664 501.2769 l
S
300 Ar
97.0664 501.2769 m
100.1514 499.8672 l
S
300 Ar
100.1514 499.8672 m
100.3569 499.7393 l
S
300 Ar
100.3569 499.7393 m
103.2358 498.3936 l
S
300 Ar
103.2358 498.3936 m
104.0068 498.0093 l
S
300 Ar
104.0068 498.0093 m
106.3184 496.856 l
S
300 Ar
106.3184 496.856 m
107.5532 496.2148 l
S
300 Ar
107.5532 496.2148 m
109.4033 495.2544 l
S
300 Ar
109.4033 495.2544 m
110.9971 494.4204 l
S
300 Ar
110.9971 494.4204 m
112.4873 493.6519 l
S
300 Ar
112.4873 493.6523 m
114.3379 492.6914 l
S
300 Ar
114.3379 492.6914 m
115.5713 491.9863 l
S
300 Ar
115.5713 491.9863 m
117.5244 490.8965 l
S
300 Ar
117.5244 490.8965 m
118.6553 490.2559 l
S
300 Ar
118.6553 490.2559 m
120.6084 489.167 l
S
300 Ar
120.6084 489.167 m
121.7393 488.5254 l
S
300 Ar
121.7393 488.5254 m
123.5898 487.3721 l
S
300 Ar
123.5898 487.3721 m
124.8242 486.667 l
S
300 Ar
124.8242 486.667 m
126.5195 485.6421 l
S
300 Ar
126.5195 485.6421 m
127.9067 484.7451 l
S
300 Ar
127.9067 484.7451 m
129.2949 483.8481 l
S
300 Ar
129.2949 483.8481 m
130.9912 482.7588 l
S
300 Ar
130.9912 482.7588 m
132.02 482.1182 l
S
300 Ar
75.4795 523.7686 m
75.4795 523.7686 l
S
300 Ar
75.4795 523.7686 m
78.5625 522.8081 l
S
300 Ar
78.5625 522.8081 m
79.0259 522.6792 l
S
300 Ar
79.0259 522.6792 m
81.6475 521.8467 l
S
300 Ar
81.6475 521.8467 m
84.4741 520.8848 l
S
300 Ar
84.4741 520.8848 m
84.7314 520.8203 l
S
300 Ar
84.7314 520.8203 m
87.8149 519.7959 l
S
300 Ar
87.8149 519.7959 m
89.666 519.1558 l
S
300 Ar
89.666 519.1558 m
90.8989 518.7065 l
S
300 Ar
90.8989 518.7065 m
93.9834 517.6177 l
S
300 Ar
93.9834 517.6177 m
94.5996 517.3618 l
S
300 Ar
94.5996 517.3618 m
97.0664 516.4639 l
S
300 Ar
97.0664 516.4639 m
99.3281 515.6309 l
S
300 Ar
99.3281 515.6309 m
100.1514 515.3105 l
S
300 Ar
100.1514 515.3105 m
103.2358 514.0928 l
S
300 Ar
103.2358 514.0928 m
103.9038 513.8369 l
S
300 Ar
103.9038 513.8369 m
106.3184 512.8755 l
S
300 Ar
106.3184 512.8755 m
108.2207 512.1064 l
S
300 Ar
108.2207 512.1064 m
109.4033 511.5938 l
S
300 Ar
109.4033 511.5938 m
112.436 510.312 l
S
300 Ar
112.436 510.312 m
112.4873 510.312 l
S
300 Ar
112.4873 510.312 m
115.5713 508.9663 l
S
300 Ar
115.5713 508.9663 m
116.4458 508.582 l
S
300 Ar
116.4458 508.582 m
118.6553 507.5571 l
S
300 Ar
118.6553 507.5571 m
120.2998 506.7881 l
S
300 Ar
120.2998 506.7881 m
121.7393 506.0835 l
S
300 Ar
121.7393 506.0835 m
124.001 505.0576 l
S
300 Ar
124.001 505.0576 m
124.8242 504.6094 l
S
300 Ar
124.8242 504.6094 m
127.5479 503.2642 l
S
300 Ar
127.5479 503.2642 m
127.9067 503.0713 l
S
300 Ar
127.9067 503.0713 m
130.9912 501.5332 l
S
300 Ar
130.9912 501.5332 m
134.0752 499.8672 l
S
300 Ar
134.0752 499.8672 m
134.3325 499.7393 l
S
300 Ar
134.3325 499.7393 m
137.1592 498.2012 l
S
300 Ar
137.1592 498.2012 m
137.4678 498.0093 l
S
300 Ar
137.4678 498.0093 m
140.2432 496.4072 l
S
300 Ar
140.2432 496.4072 m
140.5513 496.2148 l
S
300 Ar
140.5513 496.2148 m
143.3276 494.6128 l
S
300 Ar
143.3276 494.6128 m
143.5337 494.4204 l
S
300 Ar
143.5337 494.4204 m
146.4116 492.6914 l
S
300 Ar
146.4116 492.6899 m
149.1875 490.8965 l
S
300 Ar
149.1875 490.8965 m
149.4961 490.7041 l
S
300 Ar
149.4961 490.7041 m
151.8608 489.167 l
S
300 Ar
151.8608 489.166 m
152.5801 488.6538 l
S
300 Ar
152.5801 488.6538 m
154.4302 487.3721 l
S
300 Ar
154.4302 487.3721 m
155.6636 486.5396 l
S
300 Ar
155.6636 486.5396 m
156.9492 485.6421 l
S
300 Ar
156.9492 485.6421 m
158.7476 484.3604 l
S
300 Ar
158.7476 484.3604 m
159.3643 483.8481 l
S
300 Ar
159.3643 483.8481 m
161.7285 482.1172 l
S
300 Ar
75.4795 537.3535 m
75.4795 537.3535 l
S
300 Ar
75.4795 537.3535 m
77.6895 536.7769 l
S
300 Ar
77.6895 536.7769 m
78.5625 536.585 l
S
300 Ar
78.5625 536.585 m
81.6475 535.8159 l
S
300 Ar
81.6475 535.8159 m
84.6279 535.0469 l
S
300 Ar
84.6279 535.0469 m
84.7314 534.9824 l
S
300 Ar
84.7314 534.9824 m
87.8149 534.1499 l
S
300 Ar
87.8149 534.1499 m
90.8989 533.3164 l
S
300 Ar
90.8989 533.3164 m
91.1567 533.2524 l
S
300 Ar
91.1567 533.2524 m
93.9834 532.4834 l
S
300 Ar
93.9834 532.4834 m
97.0664 531.5864 l
S
300 Ar
97.0664 531.5864 m
97.3242 531.5229 l
S
300 Ar
97.3242 531.5229 m
100.1514 530.6255 l
S
300 Ar
100.1514 530.6255 m
103.2358 529.7285 l
S
300 Ar
103.2358 529.7285 m
106.3184 528.7671 l
S
300 Ar
106.3184 528.7671 m
108.7861 527.9341 l
S
300 Ar
108.7861 527.9341 m
109.4033 527.7422 l
S
300 Ar
109.4033 527.7422 m
112.4873 526.7163 l
S
300 Ar
112.4873 526.7163 m
114.0811 526.2041 l
S
300 Ar
114.0811 526.2041 m
115.5713 525.6914 l
S
300 Ar
115.5713 525.6914 m
118.6553 524.6021 l
S
300 Ar
118.6553 524.6021 m
119.1182 524.4097 l
S
300 Ar
119.1182 524.4097 m
121.7393 523.4482 l
S
300 Ar
121.7393 523.4482 m
123.8979 522.6792 l
S
300 Ar
123.8979 522.6792 m
124.8242 522.3589 l
S
300 Ar
124.8242 522.3589 m
127.9067 521.1421 l
S
300 Ar
127.9067 521.1421 m
128.5244 520.8848 l
S
300 Ar
128.5244 520.8848 m
130.9912 519.9238 l
S
300 Ar
130.9912 519.9238 m
132.8936 519.1558 l
S
300 Ar
132.8936 519.1558 m
134.0752 518.6431 l
S
300 Ar
134.0752 518.6431 m
137.0566 517.3618 l
S
300 Ar
137.0566 517.3618 m
137.1592 517.3618 l
S
300 Ar
137.1592 517.3618 m
140.2432 516.0151 l
S
300 Ar
140.2432 516.0151 m
141.0664 515.6309 l
S
300 Ar
141.0664 515.6309 m
143.3276 514.606 l
S
300 Ar
143.3276 514.606 m
144.9209 513.8369 l
S
*U
*u
300 Ar
144.9209 513.8369 m
146.4116 513.1323 l
S
300 Ar
146.4116 513.1323 m
148.5713 512.1064 l
S
300 Ar
148.5713 512.1064 m
149.4961 511.6577 l
S
300 Ar
149.4961 511.6577 m
152.1167 510.3125 l
S
300 Ar
152.1167 510.3125 m
152.5801 510.1201 l
S
300 Ar
152.5801 510.1201 m
155.5088 508.582 l
S
300 Ar
155.5088 508.582 m
155.6636 508.4536 l
S
300 Ar
155.6636 508.4536 m
158.7476 506.7881 l
S
300 Ar
158.7476 506.7881 m
161.8311 505.0576 l
S
300 Ar
161.8311 505.0576 m
161.8828 505.0576 l
S
300 Ar
161.8828 505.0576 m
164.915 503.2642 l
S
300 Ar
164.915 503.2642 m
167.7939 501.5332 l
S
300 Ar
167.7939 501.5332 m
168 501.4058 l
S
300 Ar
168 501.4058 m
170.5693 499.7393 l
S
300 Ar
170.5693 499.7393 m
171.084 499.4189 l
S
300 Ar
171.084 499.4189 m
173.2939 498.0093 l
S
300 Ar
173.2939 498.0093 m
174.168 497.3691 l
S
300 Ar
174.168 497.3691 m
175.8643 496.2148 l
S
300 Ar
175.8652 496.2148 m
177.252 495.2544 l
S
300 Ar
177.252 495.2544 m
178.3828 494.4204 l
S
300 Ar
178.3828 494.4204 m
180.3359 493.0112 l
S
300 Ar
180.3359 493.0112 m
180.7988 492.6914 l
S
300 Ar
180.7988 492.6914 m
183.1621 490.8965 l
S
300 Ar
183.1621 490.8965 m
183.4209 490.7041 l
S
300 Ar
183.4209 490.7041 m
185.4248 489.167 l
S
300 Ar
185.4248 489.167 m
186.5029 488.269 l
S
300 Ar
186.5029 488.269 m
187.583 487.3721 l
S
300 Ar
187.583 487.3721 m
189.5879 485.77 l
S
300 Ar
189.5879 485.77 m
189.6904 485.6421 l
S
300 Ar
189.6904 485.6421 m
191.7979 483.8481 l
S
300 Ar
191.7979 483.8481 m
192.6719 483.0786 l
S
300 Ar
192.6719 483.0786 m
193.752 482.1182 l
S
300 Ar
217.8584 363.9561 m
218.4238 362.1621 l
S
300 Ar
218.4238 362.1621 m
218.9893 360.4316 l
S
300 Ar
218.9893 360.4316 m
219.6064 358.6377 l
S
300 Ar
219.6064 358.6377 m
220.1719 356.8428 l
S
300 Ar
220.1719 356.8428 m
220.4287 356.0742 l
S
300 Ar
220.4287 356.0742 m
220.6846 355.1133 l
S
300 Ar
220.6846 355.1133 m
221.1992 353.3184 l
S
300 Ar
221.1992 353.3184 m
221.7637 351.5889 l
S
300 Ar
221.7637 351.5889 m
222.2793 349.7939 l
S
300 Ar
222.2793 349.7939 m
222.793 348.0635 l
S
300 Ar
222.793 348.0635 m
223.3066 346.2705 l
S
300 Ar
223.3066 346.2705 m
223.5127 345.6299 l
S
300 Ar
223.5127 345.6299 m
223.8193 344.54 l
S
300 Ar
223.8193 344.54 m
224.2842 342.7451 l
S
300 Ar
224.2842 342.7451 m
224.7451 341.0156 l
S
300 Ar
224.7451 341.0156 m
225.208 339.2217 l
S
300 Ar
225.208 339.2217 m
225.6719 337.4912 l
S
300 Ar
225.6719 337.4912 m
226.1855 335.6973 l
S
300 Ar
226.1855 335.6973 m
226.5957 334.1592 l
S
300 Ar
226.5957 334.1592 m
226.6475 333.9658 l
S
300 Ar
226.6475 333.9658 m
227.0586 332.1729 l
S
300 Ar
227.0586 332.1729 m
227.4688 330.4424 l
S
300 Ar
227.4688 330.4424 m
227.8809 328.6484 l
S
300 Ar
227.8809 328.6484 m
228.3428 326.9189 l
S
300 Ar
228.3438 326.9189 m
228.7549 325.124 l
S
300 Ar
228.7549 325.124 m
229.167 323.3291 l
S
300 Ar
229.167 323.3291 m
229.5771 321.6006 l
S
300 Ar
229.5771 321.6006 m
229.6787 321.2139 l
S
300 Ar
229.6787 321.2139 m
229.9375 319.8057 l
S
300 Ar
229.9375 319.8057 m
230.3477 318.0752 l
S
300 Ar
230.3477 318.0752 m
230.7598 316.2803 l
S
300 Ar
230.7598 316.2803 m
231.1182 314.5498 l
S
300 Ar
231.1182 314.5498 m
231.4795 312.7549 l
S
300 Ar
231.4795 312.7549 m
231.8389 311.0264 l
S
300 Ar
231.8389 311.0264 m
232.1982 309.2324 l
S
300 Ar
232.1982 309.2324 m
232.6104 307.5029 l
S
300 Ar
232.6104 307.5029 m
232.7637 306.7969 l
S
300 Ar
232.7637 306.7969 m
232.9697 305.708 l
S
300 Ar
232.9697 305.708 m
233.2773 303.9775 l
S
300 Ar
233.2773 303.9775 m
233.5869 302.1826 l
S
300 Ar
233.5869 302.1826 m
233.9463 300.4541 l
S
300 Ar
233.9463 300.4541 m
234.2549 298.6592 l
S
300 Ar
234.2549 298.6592 m
234.6143 296.9287 l
S
300 Ar
234.6143 296.9287 m
234.9229 295.1357 l
S
300 Ar
234.9229 295.1357 m
235.2305 293.4033 l
S
300 Ar
235.2305 293.4033 m
235.5918 291.6104 l
S
300 Ar
235.5918 291.6104 m
235.8477 290.1367 l
S
300 Ar
235.8477 290.1367 m
235.8477 289.8174 l
S
300 Ar
235.8477 289.8174 m
236.1563 288.0859 l
S
300 Ar
236.1563 288.0859 m
236.4639 286.292 l
S
300 Ar
236.4639 286.292 m
236.7734 284.5615 l
S
300 Ar
236.7734 284.5615 m
237.0313 282.7686 l
S
300 Ar
237.0313 282.7686 m
237.3389 281.0381 l
S
300 Ar
237.3389 281.0381 m
237.5957 279.2432 l
S
300 Ar
237.5957 279.2432 m
237.8525 277.5127 l
S
300 Ar
237.8525 277.5127 m
238.1611 275.7197 l
S
300 Ar
238.1611 275.7197 m
238.418 273.9893 l
S
300 Ar
238.418 273.9893 m
238.7256 272.1943 l
S
300 Ar
238.7266 272.1943 m
238.9316 270.9775 l
S
300 Ar
238.9316 270.9775 m
238.9834 270.4639 l
S
300 Ar
238.9834 270.4639 m
239.2412 268.6699 l
S
300 Ar
239.2412 268.6699 m
239.4463 266.9404 l
S
300 Ar
239.4463 266.9404 m
239.7031 265.1455 l
S
300 Ar
239.7031 265.1455 m
239.96 263.416 l
S
300 Ar
239.96 263.416 m
240.2178 261.6211 l
S
300 Ar
240.2178 261.6211 m
240.4229 259.8916 l
S
300 Ar
240.4229 259.8916 m
240.6797 258.0967 l
S
300 Ar
240.6797 258.0967 m
240.9365 256.3027 l
S
300 Ar
240.9365 256.3027 m
241.1426 254.5732 l
S
300 Ar
241.1426 254.5732 m
241.3477 252.7783 l
S
300 Ar
241.3477 252.7783 m
241.6055 251.0479 l
S
300 Ar
241.6055 251.0479 m
241.8623 249.2549 l
S
300 Ar
241.8623 249.2549 m
242.0156 248.165 l
S
300 Ar
242.0156 248.165 m
242.0684 247.5244 l
S
300 Ar
242.0684 247.5244 m
242.2734 245.7305 l
S
300 Ar
236.5674 363.9561 m
237.0313 362.1621 l
S
300 Ar
237.0313 362.1621 m
237.5439 360.4316 l
S
300 Ar
237.5439 360.4316 m
238.0576 358.6377 l
S
300 Ar
238.0576 358.6377 m
238.5723 356.8428 l
S
300 Ar
238.5723 356.8428 m
238.9316 355.6885 l
S
300 Ar
238.9316 355.6885 m
239.0869 355.1133 l
S
300 Ar
239.0869 355.1133 m
239.4971 353.3184 l
S
300 Ar
239.4971 353.3184 m
240.0117 351.5889 l
S
300 Ar
240.0117 351.5889 m
240.4746 349.7939 l
S
300 Ar
240.4746 349.7939 m
240.9365 348.0635 l
S
300 Ar
240.9365 348.0635 m
241.3477 346.2705 l
S
300 Ar
241.3477 346.2705 m
241.8105 344.54 l
S
300 Ar
241.8105 344.54 m
242.0156 343.7061 l
S
300 Ar
242.0156 343.7061 m
242.2217 342.7451 l
S
300 Ar
242.2217 342.7451 m
242.6328 341.0156 l
S
300 Ar
242.6328 341.0156 m
243.0947 339.2217 l
S
300 Ar
243.0947 339.2217 m
243.4551 337.4912 l
S
300 Ar
243.4551 337.4912 m
243.8662 335.6973 l
S
300 Ar
243.8662 335.6973 m
244.2783 333.9658 l
S
300 Ar
244.2783 333.9658 m
244.6895 332.1729 l
S
300 Ar
244.6895 332.1729 m
245.1006 330.4424 l
S
300 Ar
245.1006 330.4424 m
245.4609 328.6484 l
S
300 Ar
245.4609 328.6484 m
245.8203 326.9189 l
S
300 Ar
245.8203 326.9189 m
246.1797 325.124 l
S
300 Ar
246.1797 325.124 m
246.5391 323.3311 l
S
300 Ar
246.5391 323.3311 m
246.8994 321.6006 l
S
300 Ar
246.8994 321.6006 m
247.2588 319.8057 l
S
300 Ar
247.2588 319.8057 m
247.6191 318.0752 l
S
300 Ar
247.6191 318.0752 m
247.9795 316.2803 l
S
300 Ar
247.9795 316.2803 m
248.1836 315.3193 l
S
300 Ar
248.1836 315.3193 m
248.2871 314.5498 l
S
300 Ar
248.2871 314.5498 m
248.5957 312.7549 l
S
300 Ar
248.5957 312.7549 m
248.9551 311.0264 l
S
300 Ar
248.9551 311.0264 m
249.2637 309.2324 l
S
300 Ar
249.2637 309.2324 m
249.5723 307.5029 l
S
300 Ar
249.5723 307.5029 m
249.9316 305.708 l
S
300 Ar
249.9316 305.708 m
250.2402 303.9775 l
S
300 Ar
250.2402 303.9775 m
250.4971 302.1826 l
S
300 Ar
250.4971 302.1826 m
250.8066 300.4541 l
S
300 Ar
250.8066 300.4541 m
251.1133 298.6592 l
S
300 Ar
251.1133 298.6592 m
251.2686 297.9541 l
S
300 Ar
251.2686 297.9541 m
251.4219 296.9287 l
S
300 Ar
251.4219 296.9287 m
251.7314 295.1357 l
S
300 Ar
251.7314 295.1357 m
251.9873 293.4053 l
S
300 Ar
251.9873 293.4053 m
252.2441 291.6104 l
S
300 Ar
252.2441 291.6104 m
252.5518 289.8174 l
S
300 Ar
252.5518 289.8174 m
252.8115 288.0859 l
S
300 Ar
252.8115 288.0859 m
253.0674 286.292 l
S
300 Ar
253.0674 286.292 m
253.3232 284.5615 l
S
300 Ar
253.3232 284.5615 m
253.6328 282.7686 l
S
300 Ar
253.6328 282.7686 m
253.8887 281.0381 l
S
300 Ar
253.8887 281.0381 m
254.1475 279.2432 l
S
300 Ar
254.1475 279.2432 m
254.3516 277.8975 l
S
300 Ar
254.3516 277.8975 m
254.4043 277.5127 l
S
300 Ar
254.4043 277.5127 m
254.6084 275.7197 l
S
300 Ar
254.6084 275.7197 m
254.8662 273.9893 l
S
300 Ar
254.8662 273.9893 m
255.0713 272.1943 l
S
300 Ar
255.0713 272.1943 m
255.3281 270.4639 l
S
300 Ar
255.3281 270.4639 m
255.5869 268.6709 l
S
300 Ar
255.5869 268.6709 m
255.791 266.9404 l
S
300 Ar
255.791 266.9404 m
255.9961 265.1455 l
S
300 Ar
255.9961 265.1455 m
256.2549 263.416 l
S
300 Ar
256.2549 263.416 m
256.46 261.6211 l
S
300 Ar
256.46 261.6211 m
256.665 259.8916 l
S
300 Ar
256.665 259.8916 m
256.9219 258.0967 l
S
300 Ar
256.9219 258.0967 m
257.1279 256.3027 l
S
300 Ar
257.1279 256.3027 m
257.333 254.5732 l
S
300 Ar
257.333 254.5732 m
257.4365 253.9971 l
S
300 Ar
257.4365 253.9971 m
257.5381 252.7783 l
S
300 Ar
257.5381 252.7783 m
257.7441 251.0479 l
S
300 Ar
257.7441 251.0479 m
257.9502 249.2549 l
S
300 Ar
257.9502 249.2549 m
258.1553 247.5244 l
S
300 Ar
258.1553 247.5244 m
258.3096 245.7305 l
S
300 Ar
257.1787 363.9561 m
257.4365 362.9951 l
S
300 Ar
257.4365 362.9951 m
257.6406 362.1621 l
S
300 Ar
257.6406 362.1621 m
258.0527 360.4316 l
S
300 Ar
258.0527 360.4316 m
258.4639 358.6377 l
S
300 Ar
258.4639 358.6377 m
258.875 356.8428 l
S
300 Ar
258.875 356.8428 m
259.2861 355.1133 l
S
300 Ar
259.2861 355.1133 m
259.6982 353.3184 l
S
300 Ar
259.6982 353.3184 m
260.1084 351.5889 l
S
300 Ar
260.1084 351.5889 m
260.5195 349.9229 l
S
300 Ar
260.5195 349.9229 m
260.5195 349.7939 l
S
300 Ar
260.5195 349.7939 m
260.8799 348.0635 l
S
300 Ar
260.8799 348.0635 m
261.2393 346.2705 l
S
300 Ar
261.2393 346.2705 m
261.6504 344.54 l
S
300 Ar
261.6504 344.54 m
262.0107 342.7451 l
S
300 Ar
262.0107 342.7451 m
262.3701 341.0156 l
S
300 Ar
262.3701 341.0156 m
262.7305 339.2217 l
S
300 Ar
262.7305 339.2217 m
263.0908 337.4912 l
S
300 Ar
263.0908 337.4912 m
263.4502 335.6973 l
S
300 Ar
263.4502 335.6973 m
263.6045 334.9277 l
S
300 Ar
263.6045 334.9277 m
263.7588 333.9658 l
S
*U
*u
300 Ar
263.7588 333.9658 m
264.1182 332.1729 l
S
300 Ar
264.1182 332.1729 m
264.4268 330.4424 l
S
300 Ar
264.4268 330.4424 m
264.7354 328.6484 l
S
300 Ar
264.7354 328.6484 m
265.0947 326.9189 l
S
300 Ar
265.0947 326.9189 m
265.4033 325.124 l
S
300 Ar
265.4033 325.124 m
265.7119 323.3311 l
S
300 Ar
265.7119 323.3311 m
266.0205 321.6006 l
S
300 Ar
266.0205 321.6006 m
266.3281 319.8057 l
S
300 Ar
266.3281 319.8057 m
266.6367 318.0752 l
S
300 Ar
266.6367 318.0752 m
266.6885 317.8193 l
S
300 Ar
266.6885 317.8193 m
266.8945 316.2803 l
S
300 Ar
266.8945 316.2803 m
267.2021 314.5498 l
S
300 Ar
267.2021 314.5498 m
267.459 312.7549 l
S
300 Ar
267.459 312.7549 m
267.7676 311.0264 l
S
300 Ar
267.7676 311.0264 m
268.0254 309.2324 l
S
300 Ar
268.0254 309.2324 m
268.2813 307.5029 l
S
300 Ar
268.2813 307.5029 m
268.5898 305.708 l
S
300 Ar
268.5898 305.708 m
268.8467 303.9775 l
S
300 Ar
268.8467 303.9775 m
269.1055 302.1826 l
S
300 Ar
269.1055 302.1826 m
269.3613 300.4541 l
S
300 Ar
269.3613 300.4541 m
269.6182 298.6592 l
S
300 Ar
269.6182 298.6592 m
269.7725 297.7627 l
S
300 Ar
269.7725 297.7627 m
269.875 296.9287 l
S
300 Ar
269.875 296.9287 m
270.1328 295.1357 l
S
300 Ar
270.1328 295.1357 m
270.3369 293.4053 l
S
300 Ar
270.3369 293.4053 m
270.5947 291.6104 l
S
300 Ar
270.5947 291.6104 m
270.8008 289.8174 l
S
300 Ar
270.8008 289.8174 m
271.0576 288.0859 l
S
300 Ar
271.0576 288.0859 m
271.3145 286.292 l
S
300 Ar
271.3145 286.292 m
271.5205 284.5615 l
S
300 Ar
271.5205 284.5615 m
271.7256 282.7686 l
S
300 Ar
271.7256 282.7686 m
271.9824 281.0381 l
S
300 Ar
271.9824 281.0381 m
272.1885 279.2432 l
S
300 Ar
272.1885 279.2432 m
272.3936 277.5127 l
S
300 Ar
272.3936 277.5127 m
272.5996 275.7197 l
S
300 Ar
272.5996 275.7197 m
272.8057 273.9893 l
S
300 Ar
272.8057 273.9893 m
272.8564 273.9248 l
S
300 Ar
272.8564 273.9248 m
273.0098 272.1943 l
S
300 Ar
273.0098 272.1943 m
273.2158 270.4639 l
S
300 Ar
273.2158 270.4639 m
273.4209 268.6709 l
S
300 Ar
273.4209 268.6709 m
273.6279 266.9404 l
S
300 Ar
273.6279 266.9404 m
273.833 265.1455 l
S
300 Ar
273.833 265.1455 m
274.0391 263.416 l
S
300 Ar
274.0391 263.416 m
274.1924 261.6211 l
S
300 Ar
274.1924 261.6211 m
274.3994 259.8916 l
S
300 Ar
274.3994 259.8916 m
274.5518 258.0967 l
S
300 Ar
274.5518 258.0967 m
274.7578 256.3027 l
S
300 Ar
274.7578 256.3027 m
274.9639 254.5732 l
S
300 Ar
274.9639 254.5732 m
275.1182 252.7783 l
S
300 Ar
275.1182 252.7783 m
275.3232 251.0479 l
S
300 Ar
275.3232 251.0479 m
275.4785 249.2549 l
S
300 Ar
275.4785 249.2549 m
275.6318 247.5244 l
S
300 Ar
275.6318 247.5244 m
275.8369 245.7305 l
S
300 Ar
217.3438 365.6221 m
217.8584 363.9561 l
S
300 Ar
217.3438 413.8735 m
217.6006 413.2974 l
S
300 Ar
217.6006 413.2974 m
218.4746 411.5669 l
S
300 Ar
218.4746 411.5669 m
219.2979 409.7725 l
S
300 Ar
219.2979 409.7725 m
220.1191 408.042 l
S
300 Ar
220.1191 408.042 m
220.4287 407.4653 l
S
300 Ar
220.4287 407.4653 m
220.9424 406.2485 l
S
300 Ar
220.9424 406.2485 m
221.7139 404.5176 l
S
300 Ar
221.7139 404.5176 m
222.5352 402.7227 l
S
300 Ar
222.5352 402.7227 m
223.3066 400.9937 l
S
300 Ar
223.3066 400.9937 m
223.5127 400.5454 l
S
300 Ar
223.5127 400.5454 m
224.0781 399.1987 l
S
300 Ar
224.0781 399.1987 m
224.7969 397.4692 l
S
300 Ar
224.7969 397.4692 m
225.5166 395.6743 l
S
300 Ar
225.5166 395.6743 m
226.2354 393.9453 l
S
300 Ar
226.2354 393.9453 m
226.5957 393.0488 l
S
300 Ar
226.5957 393.0488 m
226.9043 392.1504 l
S
300 Ar
226.9043 392.1504 m
227.624 390.3555 l
S
300 Ar
227.624 390.3555 m
228.293 388.625 l
S
300 Ar
228.293 388.625 m
228.9609 386.832 l
S
300 Ar
228.9609 386.832 m
229.5771 385.1025 l
S
300 Ar
229.5771 385.1025 m
229.6787 384.9102 l
S
300 Ar
229.6787 384.9102 m
230.2441 383.3086 l
S
300 Ar
230.2441 383.3086 m
230.8623 381.5781 l
S
300 Ar
230.8623 381.5781 m
231.4795 379.7832 l
S
300 Ar
231.4795 379.7832 m
232.0957 378.0527 l
S
300 Ar
232.0957 378.0527 m
232.6611 376.2588 l
S
300 Ar
232.6611 376.2588 m
232.7637 376.1299 l
S
300 Ar
232.7637 376.1299 m
233.2773 374.5283 l
S
300 Ar
233.2773 374.5283 m
233.8438 372.7344 l
S
300 Ar
233.8438 372.7344 m
234.4082 371.0049 l
S
300 Ar
234.4082 371.0049 m
234.9229 369.21 l
S
300 Ar
234.9229 369.21 m
235.4883 367.4795 l
S
300 Ar
235.4883 367.4795 m
235.8477 366.3916 l
S
300 Ar
235.8477 366.3916 m
236.0537 365.6865 l
S
300 Ar
236.0537 365.6865 m
236.5674 363.9561 l
S
300 Ar
217.3438 456.0371 m
217.6006 455.6533 l
S
300 Ar
217.6006 455.6533 m
218.835 453.8584 l
S
300 Ar
218.835 453.8584 m
220.1191 452.1284 l
S
300 Ar
220.1191 452.1284 m
220.4287 451.6802 l
S
300 Ar
220.4287 451.6802 m
221.3027 450.334 l
S
300 Ar
221.3027 450.334 m
222.4844 448.6045 l
S
300 Ar
222.4844 448.6045 m
223.5127 447.0029 l
S
300 Ar
223.5127 447.0029 m
223.6152 446.8101 l
S
300 Ar
223.6152 446.8101 m
224.7461 445.0801 l
S
300 Ar
224.7461 445.0801 m
225.8242 443.2856 l
S
300 Ar
225.8242 443.2856 m
226.5957 442.0679 l
S
300 Ar
226.5957 442.0688 m
226.9043 441.5562 l
S
300 Ar
226.9043 441.5562 m
227.9336 439.7607 l
S
300 Ar
227.9336 439.7607 m
228.9609 438.0313 l
S
300 Ar
228.9609 438.0313 m
229.6787 436.7495 l
S
300 Ar
229.6787 436.7495 m
229.9375 436.2368 l
S
300 Ar
229.9375 436.2368 m
230.9131 434.5078 l
S
300 Ar
230.9131 434.5078 m
231.8896 432.7129 l
S
300 Ar
231.8896 432.7129 m
232.7637 431.0469 l
S
300 Ar
232.7637 431.0469 m
232.7637 430.9834 l
S
300 Ar
232.7637 430.9834 m
233.6885 429.1885 l
S
300 Ar
233.6885 429.1885 m
234.6143 427.3945 l
S
300 Ar
234.6143 427.3945 m
235.4365 425.6641 l
S
300 Ar
235.4365 425.6641 m
235.8477 424.8945 l
S
300 Ar
235.8477 424.8945 m
236.3105 423.8706 l
S
300 Ar
236.3105 423.8706 m
237.1328 422.1396 l
S
300 Ar
237.1328 422.1396 m
237.9561 420.3457 l
S
300 Ar
237.9561 420.3457 m
238.7773 418.6152 l
S
300 Ar
238.7773 418.6152 m
238.9316 418.2944 l
S
300 Ar
238.9316 418.2944 m
239.5488 416.8213 l
S
300 Ar
239.5488 416.8213 m
240.3203 415.0903 l
S
300 Ar
240.3203 415.0903 m
241.0391 413.2974 l
S
300 Ar
241.0391 413.2974 m
241.8105 411.5669 l
S
300 Ar
241.8105 411.5669 m
242.0156 411.1187 l
S
300 Ar
242.0156 411.1187 m
242.5303 409.7725 l
S
300 Ar
242.5303 409.7725 m
243.1982 408.042 l
S
300 Ar
243.1982 408.042 m
243.918 406.2485 l
S
300 Ar
243.918 406.2485 m
244.5869 404.5176 l
S
300 Ar
244.5869 404.5176 m
245.1006 403.2358 l
S
300 Ar
245.1006 403.2358 m
245.2549 402.7227 l
S
300 Ar
245.2549 402.7227 m
245.9229 400.9937 l
S
300 Ar
245.9229 400.9937 m
246.5391 399.1987 l
S
300 Ar
246.5391 399.1987 m
247.208 397.4692 l
S
300 Ar
247.208 397.4692 m
247.8242 395.6743 l
S
300 Ar
247.8242 395.6743 m
248.1836 394.6504 l
S
300 Ar
248.1836 394.6504 m
248.3896 393.9453 l
S
300 Ar
248.3896 393.9453 m
249.0059 392.1504 l
S
300 Ar
249.0059 392.1504 m
249.5723 390.3555 l
S
300 Ar
249.5723 390.3555 m
250.1367 388.625 l
S
300 Ar
250.1367 388.625 m
250.7031 386.832 l
S
300 Ar
250.7031 386.832 m
251.2686 385.166 l
S
300 Ar
251.2686 385.166 m
251.2686 385.1025 l
S
300 Ar
251.2686 385.1025 m
251.7813 383.3086 l
S
300 Ar
251.7813 383.3086 m
252.3467 381.5781 l
S
300 Ar
252.3467 381.5781 m
252.8613 379.7832 l
S
300 Ar
252.8613 379.7832 m
253.376 378.0527 l
S
300 Ar
253.376 378.0527 m
253.8887 376.2588 l
S
300 Ar
253.8887 376.2588 m
254.3516 374.6572 l
S
300 Ar
254.3516 374.6572 m
254.3516 374.5283 l
S
300 Ar
254.3516 374.5283 m
254.8662 372.7344 l
S
300 Ar
254.8662 372.7344 m
255.3281 371.0049 l
S
300 Ar
255.3281 371.0049 m
255.791 369.21 l
S
300 Ar
255.791 369.21 m
256.2549 367.4795 l
S
300 Ar
256.2549 367.4795 m
256.7168 365.6865 l
S
300 Ar
256.7168 365.6865 m
257.1787 363.9561 l
S
*U
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 0 1 0 0 2 79 255 79 Lb
(Layer 3) Ln
1 A
0 A
u
*u
300 Ar
0 R
0 0 0 1 K
0 J 0 j 1 w 4 M [11.9995 11.9995 ]0 d
0 XR
448.1943 362.8604 m
448.2451 361.0615 l
S
300 Ar
448.2451 361.0615 m
448.3486 359.3262 l
S
300 Ar
448.3486 359.3262 m
448.3486 357.5273 l
S
300 Ar
448.3486 357.5273 m
448.3486 355.7285 l
S
300 Ar
448.3486 355.7285 m
448.3486 353.9941 l
S
300 Ar
448.3486 353.9941 m
448.2979 352.1953 l
S
300 Ar
448.2979 352.1953 m
448.2451 350.4609 l
S
300 Ar
448.2451 350.4609 m
448.1436 348.6602 l
S
300 Ar
448.1436 348.6602 m
447.9893 346.9258 l
S
300 Ar
447.9893 346.9258 m
447.7842 345.127 l
S
300 Ar
447.7842 345.127 m
447.5771 343.3926 l
S
300 Ar
447.5771 343.3926 m
447.2705 341.5938 l
S
300 Ar
447.2705 341.5938 m
446.9092 339.8584 l
S
300 Ar
446.9092 339.8584 m
446.499 338.0596 l
S
300 Ar
446.499 338.0596 m
445.9346 336.3242 l
S
300 Ar
445.9346 336.3242 m
445.626 335.3604 l
S
300 Ar
445.626 335.3604 m
444.9053 334.5254 l
S
300 Ar
444.9053 334.5254 m
442.5439 332.791 l
S
300 Ar
442.5439 332.791 m
439.46 334.0117 l
S
300 Ar
439.46 334.0117 m
438.9971 334.5254 l
S
300 Ar
438.9971 334.5254 m
437.3525 336.3242 l
S
300 Ar
437.3525 336.3242 m
436.3779 337.2246 l
S
300 Ar
436.3779 337.2246 m
435.8643 338.0596 l
S
300 Ar
435.8643 338.0596 m
434.6318 339.8584 l
S
300 Ar
434.6318 339.8584 m
433.2959 341.5283 l
S
300 Ar
433.2959 341.5283 m
433.2432 341.5938 l
S
300 Ar
433.2432 341.5938 m
432.2666 343.3926 l
S
300 Ar
432.2666 343.3926 m
431.1885 345.127 l
S
300 Ar
431.1885 345.127 m
430.2119 346.6699 l
S
300 Ar
430.2119 346.6699 m
430.1104 346.9258 l
S
300 Ar
430.1104 346.9258 m
429.1846 348.6602 l
S
300 Ar
429.1846 348.6602 m
428.1572 350.4609 l
S
300 Ar
428.1572 350.4609 m
427.1299 352.1953 l
S
300 Ar
427.1299 352.1953 m
426.2568 353.9941 l
S
300 Ar
426.2568 353.9941 m
425.3311 355.7285 l
S
300 Ar
425.3311 355.7285 m
424.3545 357.5273 l
S
300 Ar
424.3545 357.5273 m
424.0459 358.1055 l
S
300 Ar
424.0459 358.1055 m
423.4814 359.3262 l
S
300 Ar
423.4814 359.3262 m
422.6084 361.0615 l
S
300 Ar
422.6084 361.0615 m
421.6846 362.8604 l
S
300 Ar
451.4834 244.3164 m
450.8154 246.1152 l
S
300 Ar
450.8154 246.1152 m
450.0947 247.8516 l
S
300 Ar
450.0947 247.8516 m
449.3252 249.6504 l
S
300 Ar
449.3252 249.6504 m
448.708 251.1279 l
S
300 Ar
448.708 251.1279 m
448.6064 251.3848 l
S
300 Ar
448.6064 251.3848 m
447.9893 253.1836 l
S
300 Ar
447.9893 253.1836 m
447.3721 254.918 l
S
300 Ar
447.3721 254.918 m
446.7568 256.7168 l
S
300 Ar
446.7568 256.7168 m
446.0361 258.5166 l
S
300 Ar
446.0361 258.5166 m
445.626 259.4805 l
S
300 Ar
445.626 259.4805 m
445.3682 260.251 l
S
300 Ar
445.3682 260.251 m
444.8037 262.0508 l
S
300 Ar
444.8037 262.0508 m
444.1865 263.7852 l
S
300 Ar
444.1865 263.7852 m
443.5713 265.584 l
S
300 Ar
443.5693 265.584 m
442.9541 267.3203 l
S
300 Ar
442.9541 267.3203 m
442.5439 268.3467 l
S
300 Ar
442.5439 268.3467 m
442.2861 269.1182 l
S
300 Ar
442.2861 269.1182 m
441.7197 270.8535 l
S
300 Ar
441.7197 270.8535 m
441.1553 272.6523 l
S
300 Ar
441.1553 272.6523 m
440.54 274.3867 l
S
300 Ar
440.54 274.3867 m
439.9229 276.1855 l
S
300 Ar
439.9229 276.1855 m
439.46 277.4063 l
S
300 Ar
439.46 277.4063 m
439.3057 277.9209 l
S
300 Ar
439.3057 277.9209 m
438.7412 279.7188 l
S
300 Ar
438.7412 279.7188 m
438.1748 281.4551 l
S
300 Ar
438.1748 281.4551 m
437.5596 283.2539 l
S
300 Ar
437.5596 283.2539 m
436.8916 284.9883 l
S
300 Ar
436.8916 284.9883 m
436.3779 286.5293 l
S
300 Ar
436.3779 286.5293 m
436.2744 286.7871 l
S
300 Ar
436.2744 286.7871 m
435.71 288.5225 l
S
300 Ar
435.71 288.5225 m
435.1436 290.3203 l
S
300 Ar
435.1436 290.3203 m
434.5283 292.1191 l
S
300 Ar
434.5283 292.1191 m
433.9111 293.8545 l
S
300 Ar
433.9111 293.8545 m
433.2959 295.5898 l
S
300 Ar
433.2959 295.5898 m
433.2959 295.6543 l
S
300 Ar
433.2959 295.6543 m
432.6787 297.3887 l
S
300 Ar
432.6787 297.3887 m
432.1123 299.1875 l
S
300 Ar
432.1123 299.1875 m
431.4971 300.9219 l
S
300 Ar
431.4971 300.9219 m
430.8799 302.7217 l
S
300 Ar
430.8799 302.7217 m
430.2119 304.4561 l
S
300 Ar
430.2119 304.4561 m
430.2119 304.5205 l
S
300 Ar
430.2119 304.5205 m
429.6475 306.2559 l
S
300 Ar
429.6475 306.2559 m
429.0303 307.9893 l
S
300 Ar
429.0303 307.9893 m
428.4131 309.7891 l
S
300 Ar
428.4131 309.7891 m
427.7471 311.5234 l
S
300 Ar
427.7471 311.5234 m
427.1299 313.2578 l
S
300 Ar
427.1299 313.2578 m
427.1299 313.3223 l
S
300 Ar
427.1299 313.3223 m
426.5127 315.0566 l
S
300 Ar
426.5127 315.0566 m
425.8975 316.8574 l
S
300 Ar
425.8975 316.8574 m
425.2275 318.5908 l
S
300 Ar
425.2275 318.5908 m
424.6123 320.3906 l
S
300 Ar
424.6123 320.3906 m
424.0459 321.8037 l
S
300 Ar
424.0459 321.8037 m
423.8916 322.125 l
S
300 Ar
423.8916 322.125 m
423.3271 323.9238 l
S
300 Ar
423.3271 323.9238 m
422.6592 325.7227 l
S
300 Ar
422.6592 325.7227 m
421.9912 327.458 l
S
300 Ar
421.9912 327.458 m
421.3232 329.2559 l
S
300 Ar
421.3232 329.2559 m
420.9639 330.1563 l
S
300 Ar
420.9639 330.1563 m
420.6553 330.9922 l
S
300 Ar
420.6553 330.9922 m
420.04 332.791 l
S
300 Ar
420.04 332.791 m
419.3721 334.5254 l
S
300 Ar
419.3721 334.5254 m
418.6514 336.3242 l
S
300 Ar
418.6514 336.3242 m
417.9326 338.0596 l
S
300 Ar
417.9326 338.0596 m
417.8818 338.252 l
S
300 Ar
417.8818 338.252 m
417.2646 339.8584 l
S
300 Ar
417.2646 339.8584 m
416.5967 341.5938 l
S
300 Ar
416.5967 341.5938 m
415.9287 343.3926 l
S
300 Ar
415.9287 343.3926 m
415.21 345.127 l
S
300 Ar
415.21 345.127 m
414.7988 346.1553 l
S
300 Ar
414.7988 346.1553 m
414.4902 346.9258 l
S
300 Ar
414.4902 346.9258 m
413.8232 348.6602 l
S
300 Ar
413.8232 348.6602 m
413.1025 350.459 l
S
300 Ar
413.1025 350.459 m
412.3838 352.1953 l
S
300 Ar
412.3838 352.1953 m
411.7158 353.8008 l
S
300 Ar
411.7158 353.8008 m
411.6123 353.9932 l
S
300 Ar
411.6123 353.9932 m
410.9463 355.7285 l
S
300 Ar
410.9463 355.7285 m
410.2256 357.5273 l
S
300 Ar
410.2256 357.5273 m
409.4561 359.3262 l
S
300 Ar
409.4561 359.3262 m
408.6846 361.0615 l
S
300 Ar
408.6846 361.0615 m
408.6338 361.2539 l
S
300 Ar
408.6338 361.2539 m
407.9658 362.8604 l
S
300 Ar
463.8643 362.8604 m
464.1221 361.0615 l
S
300 Ar
464.1221 361.0615 m
464.3271 359.3262 l
S
300 Ar
464.3271 359.3262 m
464.4814 357.5273 l
S
300 Ar
464.4814 357.5273 m
464.6865 355.7285 l
S
300 Ar
464.6865 355.7285 m
464.8936 353.9941 l
S
300 Ar
464.8936 353.9941 m
465.0459 352.1953 l
S
300 Ar
465.0459 352.1953 m
465.2002 350.4609 l
S
300 Ar
465.2002 350.4609 m
465.4053 348.6602 l
S
300 Ar
465.4053 348.6602 m
465.5615 346.9258 l
S
300 Ar
465.5615 346.9258 m
465.7139 345.127 l
S
300 Ar
465.7139 345.127 m
465.8682 343.3926 l
S
300 Ar
465.8682 343.3926 m
466.0225 341.5938 l
S
300 Ar
466.0225 341.5938 m
466.1768 339.8584 l
S
300 Ar
466.1768 339.8584 m
466.3311 338.0596 l
S
300 Ar
466.3311 338.0596 m
466.4854 336.3242 l
S
300 Ar
466.4854 336.3242 m
466.5889 334.5254 l
S
300 Ar
466.5889 334.5254 m
466.7412 332.791 l
S
300 Ar
466.7412 332.791 m
466.8447 330.9922 l
S
300 Ar
466.8447 330.9922 m
466.999 329.2559 l
S
300 Ar
466.999 329.2559 m
467.1025 327.458 l
S
300 Ar
467.1025 327.458 m
467.2041 326.3018 l
S
300 Ar
467.2041 326.3018 m
467.2041 325.7227 l
S
300 Ar
467.2041 325.7227 m
467.3076 323.9238 l
S
300 Ar
467.3076 323.9238 m
467.4092 322.126 l
S
300 Ar
467.4092 322.126 m
467.5127 320.3906 l
S
300 Ar
467.5127 320.3906 m
467.5635 318.5908 l
S
300 Ar
467.5635 318.5908 m
467.667 316.8574 l
S
300 Ar
467.667 316.8574 m
467.7178 315.0566 l
S
300 Ar
467.7178 315.0566 m
467.8213 313.3223 l
S
300 Ar
467.8213 313.3223 m
467.8721 311.5234 l
S
300 Ar
467.8721 311.5234 m
467.9248 309.7891 l
S
300 Ar
467.9248 309.7891 m
467.9756 307.9893 l
S
300 Ar
467.9756 307.9893 m
468.0264 306.2559 l
S
300 Ar
468.0264 306.2559 m
468.0771 304.4561 l
S
300 Ar
468.0771 304.4561 m
468.1299 302.7217 l
S
300 Ar
468.1299 302.7217 m
468.1299 300.9219 l
S
300 Ar
468.1299 300.9219 m
468.1807 299.1875 l
S
300 Ar
468.1807 299.1875 m
468.2334 297.3887 l
S
300 Ar
468.2334 297.3887 m
468.2334 295.6543 l
S
300 Ar
468.2334 295.6543 m
468.2334 293.8545 l
S
300 Ar
468.2334 293.8545 m
468.2822 292.1201 l
S
300 Ar
468.2822 292.1201 m
468.2822 290.3203 l
S
300 Ar
468.2822 290.3203 m
468.2822 288.5225 l
S
300 Ar
468.2822 288.5225 m
468.2822 286.7871 l
S
300 Ar
468.2822 286.7871 m
468.2822 284.9883 l
S
*U
*u
300 Ar
468.2822 284.9883 m
468.2822 283.2539 l
S
300 Ar
468.2822 283.2539 m
468.2334 281.4551 l
S
300 Ar
468.2334 281.4551 m
468.2334 279.7188 l
S
300 Ar
468.2334 279.7188 m
468.1807 277.9209 l
S
300 Ar
468.1807 277.9209 m
468.1299 276.1855 l
S
300 Ar
468.1299 276.1855 m
468.0771 274.3867 l
S
300 Ar
468.0771 274.3867 m
468.0264 272.6523 l
S
300 Ar
468.0264 272.6523 m
467.9756 270.8535 l
S
300 Ar
467.9756 270.8535 m
467.9229 269.1182 l
S
300 Ar
467.9229 269.1182 m
467.8721 267.3203 l
S
300 Ar
467.8721 267.3203 m
467.7705 265.584 l
S
300 Ar
467.7705 265.584 m
467.667 263.7852 l
S
300 Ar
467.667 263.7852 m
467.5635 262.0508 l
S
300 Ar
467.5635 262.0508 m
467.4619 260.251 l
S
300 Ar
467.4619 260.251 m
467.3584 258.5166 l
S
300 Ar
467.3584 258.5166 m
467.2041 256.7168 l
S
300 Ar
467.2041 256.7168 m
467.2041 256.1387 l
S
300 Ar
467.2041 256.1387 m
467.0498 254.918 l
S
300 Ar
467.0498 254.918 m
466.8975 253.1836 l
S
300 Ar
466.8975 253.1836 m
466.6904 251.3848 l
S
300 Ar
466.6904 251.3848 m
466.4346 249.6504 l
S
300 Ar
466.4346 249.6504 m
466.1768 247.8516 l
S
300 Ar
466.1768 247.8516 m
465.9209 246.1152 l
S
300 Ar
465.9209 246.1152 m
465.6631 244.3164 l
S
300 Ar
433.1396 244.3164 m
432.7295 246.1152 l
S
300 Ar
432.7295 246.1152 m
432.3701 247.8516 l
S
300 Ar
432.3701 247.8516 m
431.96 249.6504 l
S
300 Ar
431.96 249.6504 m
431.5479 251.3848 l
S
300 Ar
431.5479 251.3848 m
431.085 253.1836 l
S
300 Ar
431.085 253.1836 m
430.6748 254.918 l
S
300 Ar
430.6748 254.918 m
430.2119 256.7168 l
S
300 Ar
430.2119 256.7168 m
429.8018 258.5166 l
S
300 Ar
429.8018 258.5166 m
429.3896 260.251 l
S
300 Ar
429.3896 260.251 m
428.9268 262.0508 l
S
300 Ar
428.9268 262.0508 m
428.5166 263.7852 l
S
300 Ar
428.5166 263.7852 m
428.0537 265.584 l
S
300 Ar
428.0537 265.584 m
427.5908 267.3203 l
S
300 Ar
427.5908 267.3203 m
427.1299 268.9893 l
S
300 Ar
427.1299 268.9893 m
427.0791 269.1182 l
S
300 Ar
427.0791 269.1182 m
426.667 270.8535 l
S
300 Ar
426.667 270.8535 m
426.2041 272.6523 l
S
300 Ar
426.2041 272.6523 m
425.7412 274.3867 l
S
300 Ar
425.7412 274.3867 m
425.2803 276.1855 l
S
300 Ar
425.2803 276.1855 m
424.8174 277.9209 l
S
300 Ar
424.8174 277.9209 m
424.3037 279.7188 l
S
300 Ar
424.3037 279.7188 m
424.0459 280.6836 l
S
300 Ar
424.0459 280.6836 m
423.8408 281.4551 l
S
300 Ar
423.8408 281.4551 m
423.3799 283.2539 l
S
300 Ar
423.3799 283.2539 m
422.8643 284.9883 l
S
300 Ar
422.8643 284.9883 m
422.4033 286.7871 l
S
300 Ar
422.4033 286.7871 m
421.8877 288.5225 l
S
300 Ar
421.8877 288.5225 m
421.374 290.3203 l
S
300 Ar
421.374 290.3203 m
420.9639 291.6699 l
S
300 Ar
420.9639 291.6699 m
420.8604 292.1191 l
S
300 Ar
420.8604 292.1191 m
420.3477 293.8545 l
S
300 Ar
420.3477 293.8545 m
419.833 295.6543 l
S
300 Ar
419.833 295.6543 m
419.3193 297.3887 l
S
300 Ar
419.3193 297.3887 m
418.8057 299.1875 l
S
300 Ar
418.8057 299.1875 m
418.2412 300.9219 l
S
300 Ar
418.2412 300.9219 m
417.8818 302.1426 l
S
300 Ar
417.8818 302.1426 m
417.7275 302.7217 l
S
300 Ar
417.7275 302.7217 m
417.2139 304.4561 l
S
300 Ar
417.2139 304.4561 m
416.6475 306.2559 l
S
300 Ar
416.6475 306.2559 m
416.1338 307.9893 l
S
300 Ar
416.1338 307.9893 m
415.5693 309.7891 l
S
300 Ar
415.5693 309.7891 m
414.9521 311.5234 l
S
300 Ar
414.9521 311.5234 m
414.7988 312.1016 l
S
300 Ar
414.7988 312.1016 m
414.4385 313.3223 l
S
300 Ar
414.4385 313.3223 m
413.874 315.0566 l
S
300 Ar
413.874 315.0566 m
413.3096 316.8574 l
S
300 Ar
413.3096 316.8574 m
412.6924 318.5908 l
S
300 Ar
412.6924 318.5908 m
412.126 320.3906 l
S
300 Ar
412.126 320.3906 m
411.7158 321.5469 l
S
300 Ar
411.7158 321.5469 m
411.5107 322.125 l
S
300 Ar
411.5107 322.125 m
410.9443 323.9238 l
S
300 Ar
410.9443 323.9238 m
410.3291 325.7227 l
S
300 Ar
410.3291 325.7227 m
409.7627 327.458 l
S
300 Ar
409.7627 327.458 m
409.0947 329.2559 l
S
300 Ar
409.0947 329.2559 m
408.6338 330.543 l
S
300 Ar
408.6338 330.543 m
408.4795 330.9922 l
S
300 Ar
408.4795 330.9922 m
407.8623 332.791 l
S
300 Ar
407.8623 332.791 m
407.2461 334.5254 l
S
300 Ar
407.2461 334.5254 m
406.6299 336.3242 l
S
300 Ar
406.6299 336.3242 m
405.9619 338.0596 l
S
300 Ar
405.9619 338.0596 m
405.5498 339.1514 l
S
300 Ar
405.5498 339.1514 m
405.2939 339.8584 l
S
300 Ar
405.2939 339.8584 m
404.6768 341.5938 l
S
300 Ar
404.6768 341.5938 m
404.0088 343.3926 l
S
300 Ar
404.0088 343.3926 m
403.3408 345.127 l
S
300 Ar
403.3408 345.127 m
402.6729 346.9258 l
S
300 Ar
402.6729 346.9258 m
402.4678 347.377 l
S
300 Ar
402.4678 347.377 m
402.0049 348.6602 l
S
300 Ar
402.0049 348.6602 m
401.3369 350.4609 l
S
300 Ar
401.3369 350.4609 m
400.6182 352.1953 l
S
300 Ar
400.6182 352.1953 m
399.8994 353.9941 l
S
300 Ar
399.8994 353.9941 m
399.3857 355.2783 l
S
300 Ar
399.3857 355.2783 m
399.1787 355.7285 l
S
300 Ar
399.1787 355.7285 m
398.5107 357.5273 l
S
300 Ar
398.5107 357.5273 m
397.792 359.3262 l
S
300 Ar
397.792 359.3262 m
397.0732 361.0615 l
S
300 Ar
397.0732 361.0615 m
396.3018 362.8604 l
S
300 Ar
421.6846 362.8604 m
420.9639 364.1465 l
S
300 Ar
420.9639 364.1465 m
420.7588 364.5957 l
S
300 Ar
420.7588 364.5957 m
419.9365 366.3945 l
S
300 Ar
419.9365 366.3945 m
419.0625 368.1289 l
S
300 Ar
419.0625 368.1289 m
418.1377 369.9277 l
S
300 Ar
418.1377 369.9277 m
417.8818 370.3779 l
S
300 Ar
417.8818 370.3779 m
417.2646 371.6631 l
S
300 Ar
417.2646 371.6631 m
416.4424 373.4629 l
S
300 Ar
416.4424 373.4629 m
415.5693 375.1973 l
S
300 Ar
415.5693 375.1973 m
414.7988 376.6094 l
S
300 Ar
414.7988 376.6094 m
414.6436 376.9961 l
S
300 Ar
414.6436 376.9961 m
413.8213 378.7305 l
S
300 Ar
413.8213 378.7305 m
412.9482 380.5293 l
S
300 Ar
412.9482 380.5293 m
412.0752 382.2637 l
S
300 Ar
412.0752 382.2637 m
411.7158 382.9707 l
S
300 Ar
411.7158 382.9707 m
411.2021 384.0635 l
S
300 Ar
411.2021 384.0635 m
410.3799 385.7988 l
S
300 Ar
410.3799 385.7988 m
409.5068 387.5967 l
S
300 Ar
409.5068 387.5967 m
408.6338 389.332 l
S
300 Ar
408.6338 389.332 m
407.8115 391.1309 l
S
300 Ar
407.8115 391.1309 m
406.9893 392.9297 l
S
300 Ar
406.9893 392.9297 m
406.0635 394.6641 l
S
300 Ar
406.0635 394.6641 m
405.5498 395.6929 l
S
300 Ar
405.5498 395.6929 m
405.1904 396.4639 l
S
300 Ar
405.1904 396.4639 m
404.4209 398.1982 l
S
300 Ar
404.4209 398.1982 m
403.5459 399.9976 l
S
300 Ar
403.5459 399.9976 m
402.6729 401.7319 l
S
300 Ar
402.6729 401.7319 m
402.4678 402.1816 l
S
300 Ar
402.4678 402.1816 m
401.8506 403.5313 l
S
300 Ar
401.8506 403.5313 m
401.0283 405.2656 l
S
300 Ar
401.0283 405.2656 m
400.1553 407.0654 l
S
300 Ar
400.1553 407.0654 m
399.3857 408.6709 l
S
300 Ar
399.3857 408.6709 m
399.333 408.7998 l
S
300 Ar
399.333 408.7998 m
398.5107 410.5991 l
S
300 Ar
398.5107 410.5991 m
397.7412 412.3335 l
S
300 Ar
397.7412 412.3335 m
396.8682 414.1328 l
S
300 Ar
396.8682 414.1328 m
396.3018 415.2896 l
S
300 Ar
396.3018 415.2896 m
396.0459 415.8672 l
S
300 Ar
396.0459 415.8672 m
395.2744 417.667 l
S
300 Ar
395.2744 417.667 m
394.5049 419.4019 l
S
300 Ar
394.5049 419.4019 m
393.6826 421.2002 l
S
300 Ar
393.6826 421.2002 m
393.2197 422.1641 l
S
300 Ar
393.2197 422.1641 m
392.8604 422.9355 l
S
300 Ar
392.8604 422.9355 m
392.1406 424.7344 l
S
300 Ar
392.1406 424.7344 m
391.4209 426.4697 l
S
300 Ar
391.4209 426.4697 m
390.6514 428.2676 l
S
300 Ar
390.6514 428.2676 m
390.1367 429.4888 l
S
300 Ar
390.1367 429.4888 m
389.8799 430.0669 l
S
300 Ar
389.8799 430.0669 m
389.2627 431.8018 l
S
300 Ar
389.2627 431.8018 m
388.5439 433.6006 l
S
300 Ar
388.5439 433.6006 m
387.876 435.3359 l
S
300 Ar
387.876 435.3359 m
387.208 437.1348 l
S
300 Ar
387.208 437.1348 m
387.0537 437.6484 l
S
300 Ar
387.0537 437.6484 m
386.5928 438.8691 l
S
300 Ar
386.5928 438.8691 m
386.0771 440.6689 l
S
300 Ar
386.0771 440.6689 m
385.5127 442.4033 l
S
300 Ar
385.5127 442.4033 m
384.999 444.2026 l
S
300 Ar
384.999 444.2026 m
384.5889 445.9375 l
S
300 Ar
384.5889 445.9375 m
384.126 447.7363 l
S
300 Ar
384.126 447.7363 m
383.9717 448.4434 l
S
300 Ar
383.9717 448.4434 m
383.7666 449.4707 l
S
300 Ar
383.7666 449.4707 m
383.5088 451.2705 l
S
300 Ar
383.5088 451.2705 m
383.2529 453.0044 l
S
300 Ar
383.2529 453.0044 m
383.1494 454.8037 l
S
300 Ar
383.1494 454.8037 m
383.1494 456.5381 l
S
300 Ar
383.1494 456.5381 m
383.2012 458.3379 l
S
300 Ar
383.2012 458.3379 m
383.458 460.0723 l
S
300 Ar
383.458 460.0723 m
383.8174 461.8716 l
S
300 Ar
383.8174 461.8716 m
383.9717 462.3213 l
S
300 Ar
383.9717 462.3213 m
384.5361 463.6704 l
S
300 Ar
384.5361 463.6704 m
385.5635 465.4053 l
S
300 Ar
385.5635 465.4053 m
387.0029 467.2041 l
S
300 Ar
387.0029 467.2041 m
387.0537 467.2041 l
S
300 Ar
387.0537 467.2041 m
389.8291 468.9395 l
S
300 Ar
389.8291 468.9395 m
390.1367 469.0674 l
S
300 Ar
390.1367 469.0674 m
393.2197 469.8389 l
S
300 Ar
393.2197 469.8389 m
396.3018 469.9033 l
S
300 Ar
396.3018 469.9033 m
399.3857 469.3887 l
S
300 Ar
399.3857 469.3887 m
400.8232 468.9395 l
S
300 Ar
400.8232 468.9395 m
402.4678 468.4253 l
S
300 Ar
402.4678 468.4253 m
405.2939 467.2041 l
S
300 Ar
405.2939 467.2041 m
405.5498 467.0757 l
S
300 Ar
405.5498 467.0757 m
408.3252 465.4053 l
S
300 Ar
408.3252 465.4053 m
408.6338 465.2129 l
S
300 Ar
408.6338 465.2129 m
410.8428 463.6704 l
S
300 Ar
410.8428 463.6704 m
411.7158 463.0283 l
S
300 Ar
411.7158 463.0283 m
413.0518 461.8716 l
S
300 Ar
413.0518 461.8716 m
414.7988 460.3936 l
S
300 Ar
414.7988 460.3936 m
415.0557 460.0723 l
S
300 Ar
415.0557 460.0723 m
416.8027 458.3379 l
S
300 Ar
416.8027 458.3379 m
417.8818 457.2451 l
S
300 Ar
417.8818 457.2451 m
418.498 456.5381 l
S
300 Ar
418.498 456.5381 m
419.9365 454.8037 l
S
300 Ar
419.9365 454.8037 m
420.9639 453.6465 l
S
300 Ar
420.9639 453.6465 m
421.4268 453.0044 l
S
300 Ar
421.4268 453.0044 m
422.71 451.2705 l
S
300 Ar
422.71 451.2705 m
423.9951 449.4707 l
S
300 Ar
423.9951 449.4707 m
424.0459 449.4707 l
S
300 Ar
424.0459 449.4707 m
425.126 447.7363 l
S
*U
*u
300 Ar
425.126 447.7363 m
426.2568 445.9375 l
S
300 Ar
426.2568 445.9375 m
427.1299 444.6523 l
S
300 Ar
427.1299 444.6523 m
427.3877 444.2017 l
S
300 Ar
427.3877 444.2017 m
428.3115 442.4033 l
S
300 Ar
428.3115 442.4033 m
429.3389 440.668 l
S
300 Ar
429.3389 440.668 m
430.2119 439.062 l
S
300 Ar
430.2119 439.062 m
430.2627 438.8691 l
S
300 Ar
430.2627 438.8691 m
431.1377 437.1348 l
S
300 Ar
431.1377 437.1348 m
431.96 435.3359 l
S
300 Ar
431.96 435.3359 m
432.7803 433.6006 l
S
300 Ar
432.7803 433.6006 m
433.2959 432.5088 l
S
300 Ar
433.2959 432.5088 m
433.6025 431.8018 l
S
300 Ar
433.6025 431.8018 m
434.2705 430.0669 l
S
300 Ar
434.2705 430.0669 m
434.9893 428.2676 l
S
300 Ar
434.9893 428.2676 m
435.71 426.4697 l
S
300 Ar
435.71 426.4697 m
436.3779 424.8623 l
S
300 Ar
436.3779 424.8623 m
436.4287 424.7344 l
S
300 Ar
436.4287 424.7344 m
436.9951 422.9346 l
S
300 Ar
436.9951 422.9346 m
437.6104 421.2002 l
S
300 Ar
437.6104 421.2002 m
438.2275 419.4009 l
S
300 Ar
438.2275 419.4009 m
438.7412 417.667 l
S
300 Ar
438.7412 417.667 m
439.3584 415.8672 l
S
300 Ar
439.3584 415.8672 m
439.46 415.6108 l
S
300 Ar
439.46 415.6108 m
439.8721 414.1328 l
S
300 Ar
439.8721 414.1328 m
440.333 412.3335 l
S
300 Ar
440.333 412.3335 m
440.8467 410.5991 l
S
300 Ar
440.8467 410.5991 m
441.3096 408.7998 l
S
300 Ar
441.3096 408.7998 m
441.7725 407.0654 l
S
300 Ar
441.7725 407.0654 m
442.2354 405.2656 l
S
300 Ar
442.2354 405.2656 m
442.5439 403.9814 l
S
300 Ar
442.5439 403.9814 m
442.6455 403.5313 l
S
300 Ar
442.6455 403.5313 m
443.0576 401.7319 l
S
300 Ar
443.0576 401.7319 m
443.417 399.9976 l
S
300 Ar
443.417 399.9976 m
443.7764 398.1982 l
S
300 Ar
443.7764 398.1982 m
444.1357 396.4639 l
S
300 Ar
444.1357 396.4639 m
444.4443 394.6641 l
S
300 Ar
444.4443 394.6641 m
444.8037 392.9297 l
S
300 Ar
444.8037 392.9297 m
445.1123 391.1309 l
S
300 Ar
445.1123 391.1309 m
445.4209 389.332 l
S
300 Ar
445.4209 389.332 m
445.626 388.3037 l
S
300 Ar
445.626 388.3037 m
445.7275 387.5967 l
S
300 Ar
445.7275 387.5967 m
445.9854 385.7988 l
S
300 Ar
445.9854 385.7988 m
446.1904 384.0635 l
S
300 Ar
446.1904 384.0635 m
446.4482 382.2637 l
S
300 Ar
446.4482 382.2637 m
446.7041 380.5293 l
S
300 Ar
446.7041 380.5293 m
446.8584 378.7305 l
S
300 Ar
446.8584 378.7305 m
447.0635 376.9961 l
S
300 Ar
447.0635 376.9961 m
447.2705 375.1973 l
S
300 Ar
447.2705 375.1973 m
447.4248 373.4629 l
S
300 Ar
447.4248 373.4629 m
447.6299 371.6631 l
S
300 Ar
447.6299 371.6631 m
447.7842 369.9277 l
S
300 Ar
447.7842 369.9277 m
447.8857 368.1289 l
S
300 Ar
447.8857 368.1289 m
447.9893 366.3945 l
S
300 Ar
447.9893 366.3945 m
448.1436 364.5947 l
S
300 Ar
448.1436 364.5947 m
448.1943 362.8604 l
S
300 Ar
407.9658 362.8604 m
407.2461 364.5957 l
S
300 Ar
407.2461 364.5957 m
406.4756 366.3945 l
S
300 Ar
406.4756 366.3945 m
405.7041 368.1289 l
S
300 Ar
405.7041 368.1289 m
405.5498 368.4492 l
S
300 Ar
405.5498 368.4492 m
404.9336 369.9277 l
S
300 Ar
404.9336 369.9277 m
404.2139 371.6631 l
S
300 Ar
404.2139 371.6631 m
403.3916 373.4629 l
S
300 Ar
403.3916 373.4629 m
402.5703 375.1973 l
S
300 Ar
402.5703 375.1973 m
402.4678 375.5176 l
S
300 Ar
402.4678 375.5176 m
401.8506 376.9961 l
S
300 Ar
401.8506 376.9961 m
401.0811 378.7305 l
S
300 Ar
401.0811 378.7305 m
400.2588 380.5293 l
S
300 Ar
400.2588 380.5293 m
399.4365 382.2637 l
S
300 Ar
399.4365 382.2637 m
399.3857 382.3926 l
S
300 Ar
399.3857 382.3926 m
398.665 384.0635 l
S
300 Ar
398.665 384.0635 m
397.8428 385.7988 l
S
300 Ar
397.8428 385.7988 m
397.0205 387.5967 l
S
300 Ar
397.0205 387.5967 m
396.3018 389.0752 l
S
300 Ar
396.3018 389.0752 m
396.1475 389.332 l
S
300 Ar
396.1475 389.332 m
395.3779 391.1309 l
S
300 Ar
395.3779 391.1309 m
394.5557 392.9297 l
S
300 Ar
394.5557 392.9297 m
393.7334 394.6641 l
S
300 Ar
393.7334 394.6641 m
393.2197 395.6929 l
S
300 Ar
393.2197 395.6929 m
392.8604 396.4639 l
S
300 Ar
392.8604 396.4639 m
392.0381 398.1982 l
S
300 Ar
392.0381 398.1982 m
391.2158 399.9976 l
S
300 Ar
391.2158 399.9976 m
390.3428 401.7319 l
S
300 Ar
390.3428 401.7319 m
390.1367 402.1816 l
S
300 Ar
390.1367 402.1816 m
389.4678 403.5313 l
S
300 Ar
389.4678 403.5313 m
388.6475 405.2656 l
S
300 Ar
388.6475 405.2656 m
387.7725 407.0654 l
S
300 Ar
387.7725 407.0654 m
387.0537 408.543 l
S
300 Ar
387.0537 408.543 m
386.8994 408.7998 l
S
300 Ar
386.8994 408.7998 m
386.0771 410.5991 l
S
300 Ar
386.0771 410.5991 m
385.2041 412.3335 l
S
300 Ar
385.2041 412.3335 m
384.3311 414.1328 l
S
300 Ar
384.3311 414.1328 m
383.9717 414.8398 l
S
300 Ar
383.9717 414.8398 m
383.458 415.8672 l
S
300 Ar
383.458 415.8672 m
382.6357 417.667 l
S
300 Ar
382.6357 417.667 m
381.7627 419.4019 l
S
300 Ar
381.7627 419.4019 m
380.8887 421.2002 l
S
300 Ar
380.8887 421.2002 m
380.0146 422.9355 l
S
300 Ar
380.0146 422.9355 m
379.1934 424.7344 l
S
300 Ar
379.1934 424.7344 m
378.3193 426.4697 l
S
300 Ar
378.3193 426.4697 m
377.8057 427.5615 l
S
300 Ar
377.8057 427.5615 m
377.4463 428.2676 l
S
300 Ar
377.4463 428.2676 m
376.624 430.0669 l
S
300 Ar
376.624 430.0669 m
375.8018 431.8018 l
S
300 Ar
375.8018 431.8018 m
374.9287 433.6006 l
S
300 Ar
374.9287 433.6006 m
374.7236 434.0513 l
S
300 Ar
374.7236 434.0513 m
374.1572 435.3359 l
S
300 Ar
374.1572 435.3359 m
373.3359 437.1348 l
S
300 Ar
373.3359 437.1348 m
372.5146 438.8691 l
S
300 Ar
372.5146 438.8691 m
371.6924 440.6689 l
S
300 Ar
371.6924 440.6689 m
371.6406 440.7969 l
S
300 Ar
371.6406 440.7969 m
370.9209 442.4033 l
S
300 Ar
370.9209 442.4033 m
370.2021 444.2026 l
S
300 Ar
370.2021 444.2026 m
369.4316 445.9375 l
S
300 Ar
369.4316 445.9375 m
368.7119 447.7363 l
S
300 Ar
368.7119 447.7363 m
368.5576 448.1216 l
S
300 Ar
368.5576 448.1216 m
367.9932 449.4707 l
S
300 Ar
367.9932 449.4707 m
367.376 451.2705 l
S
300 Ar
367.376 451.2705 m
366.708 453.0044 l
S
300 Ar
366.708 453.0044 m
366.0918 454.8037 l
S
300 Ar
366.0918 454.8037 m
365.4756 456.5381 l
S
300 Ar
365.4756 456.5381 m
364.9619 458.3379 l
S
300 Ar
364.9619 458.3379 m
364.4482 460.0723 l
S
300 Ar
364.4482 460.0723 m
363.9854 461.8716 l
S
300 Ar
363.9854 461.8716 m
363.5752 463.6704 l
S
300 Ar
363.5752 463.6704 m
363.2666 465.4053 l
S
300 Ar
363.2666 465.4053 m
362.958 467.2041 l
S
300 Ar
362.958 467.2041 m
362.752 468.9395 l
S
300 Ar
362.752 468.9395 m
362.5986 470.7383 l
S
300 Ar
362.5986 470.7383 m
362.5459 472.4731 l
S
300 Ar
362.5459 472.4731 m
362.5986 474.2715 l
S
300 Ar
362.5986 474.2715 m
362.8037 476.0068 l
S
300 Ar
362.8037 476.0068 m
363.1123 477.8057 l
S
300 Ar
363.1123 477.8057 m
363.5752 479.541 l
S
300 Ar
363.5752 479.541 m
364.1904 481.3389 l
S
300 Ar
417.6748 481.3403 m
417.8818 481.1465 l
S
300 Ar
417.8818 481.1465 m
419.6787 479.541 l
S
300 Ar
419.6787 479.541 m
420.9639 478.4482 l
S
300 Ar
420.9639 478.4482 m
421.6318 477.8057 l
S
300 Ar
421.6318 477.8057 m
423.3799 476.0068 l
S
300 Ar
423.3799 476.0068 m
424.0459 475.3643 l
S
300 Ar
424.0459 475.3643 m
425.0752 474.2715 l
S
300 Ar
425.0752 474.2715 m
426.667 472.4731 l
S
300 Ar
426.667 472.4731 m
427.1299 471.9585 l
S
300 Ar
427.1299 471.9585 m
428.1064 470.7383 l
S
300 Ar
428.1064 470.7383 m
429.5439 468.9395 l
S
300 Ar
429.5439 468.9395 m
430.2119 468.1045 l
S
300 Ar
430.2119 468.1045 m
430.8291 467.2041 l
S
300 Ar
430.8291 467.2041 m
432.1123 465.4053 l
S
300 Ar
432.1123 465.4053 m
433.2959 463.7993 l
S
300 Ar
433.2959 463.7993 m
433.3467 463.6704 l
S
300 Ar
433.3467 463.6704 m
434.5283 461.8716 l
S
300 Ar
434.5283 461.8716 m
435.6064 460.0732 l
S
300 Ar
435.6064 460.0732 m
436.3779 458.9155 l
S
300 Ar
436.3779 458.9155 m
436.6865 458.3379 l
S
300 Ar
436.6865 458.3379 m
437.7139 456.5381 l
S
300 Ar
437.7139 456.5381 m
438.6885 454.8037 l
S
300 Ar
438.6885 454.8037 m
439.46 453.4551 l
S
300 Ar
439.46 453.4551 m
439.665 453.0044 l
S
300 Ar
439.665 453.0044 m
440.5908 451.2705 l
S
300 Ar
440.5908 451.2705 m
441.4639 449.4707 l
S
300 Ar
441.4639 449.4707 m
442.3369 447.7363 l
S
300 Ar
442.3369 447.7363 m
442.5439 447.2866 l
S
300 Ar
442.5439 447.2866 m
443.1084 445.9375 l
S
300 Ar
443.1084 445.9375 m
443.9307 444.2026 l
S
300 Ar
443.9307 444.2026 m
444.7002 442.4033 l
S
300 Ar
444.7002 442.4033 m
445.4717 440.6689 l
S
300 Ar
445.4717 440.6689 m
445.626 440.2832 l
S
300 Ar
445.626 440.2832 m
446.1904 438.8691 l
S
300 Ar
446.1904 438.8691 m
446.8584 437.1348 l
S
300 Ar
446.8584 437.1348 m
447.5264 435.3359 l
S
300 Ar
447.5264 435.3359 m
448.1943 433.6016 l
S
300 Ar
448.1943 433.6016 m
448.708 432.251 l
S
300 Ar
448.708 432.251 m
448.8623 431.8018 l
S
300 Ar
448.8623 431.8018 m
449.4287 430.0669 l
S
300 Ar
449.4287 430.0669 m
450.0439 428.2676 l
S
300 Ar
450.0439 428.2676 m
450.6611 426.4697 l
S
300 Ar
450.6611 426.4697 m
451.2256 424.7344 l
S
300 Ar
451.2256 424.7344 m
451.792 422.999 l
S
300 Ar
451.792 422.999 m
451.792 422.9355 l
S
300 Ar
451.792 422.9355 m
452.3057 421.2002 l
S
300 Ar
452.3057 421.2002 m
452.8193 419.4019 l
S
300 Ar
452.8193 419.4019 m
453.333 417.667 l
S
300 Ar
453.333 417.667 m
453.7959 415.8682 l
S
300 Ar
453.7959 415.8682 m
454.3096 414.1328 l
S
300 Ar
454.3096 414.1328 m
454.7705 412.334 l
S
300 Ar
454.7705 412.334 m
454.874 412.0771 l
S
300 Ar
454.874 412.0771 m
455.2334 410.5991 l
S
300 Ar
455.2334 410.5991 m
455.6455 408.7998 l
S
300 Ar
455.6455 408.7998 m
456.1064 407.0654 l
S
300 Ar
456.1064 407.0654 m
456.5186 405.2656 l
S
300 Ar
456.5186 405.2656 m
456.9287 403.5313 l
S
300 Ar
456.9287 403.5313 m
457.3408 401.7319 l
S
300 Ar
457.3408 401.7319 m
457.7002 399.9976 l
S
300 Ar
457.7002 399.9976 m
457.9561 398.9697 l
S
300 Ar
457.9561 398.9697 m
458.1104 398.1982 l
S
300 Ar
458.1104 398.1982 m
458.4697 396.4639 l
S
300 Ar
458.4697 396.4639 m
458.7783 394.6641 l
S
300 Ar
458.7783 394.6641 m
459.1377 392.9297 l
S
300 Ar
459.1377 392.9297 m
459.4971 391.1309 l
S
300 Ar
459.4971 391.1309 m
459.8057 389.332 l
S
*U
*u
300 Ar
[]0 d
459.8057 389.332 m
460.1143 387.5967 l
S
300 Ar
460.1143 387.5967 m
460.4736 385.7988 l
S
300 Ar
460.4736 385.7988 m
460.7822 384.0635 l
S
300 Ar
460.7822 384.0635 m
461.04 382.6494 l
S
300 Ar
461.04 382.6494 m
461.0908 382.2637 l
S
300 Ar
461.0908 382.2637 m
461.3486 380.5293 l
S
300 Ar
461.3486 380.5293 m
461.6553 378.7305 l
S
300 Ar
461.6553 378.7305 m
461.9131 376.9961 l
S
300 Ar
461.9131 376.9961 m
462.1689 375.1973 l
S
300 Ar
462.1689 375.1973 m
462.4268 373.4629 l
S
300 Ar
462.4268 373.4629 m
462.6826 371.6631 l
S
300 Ar
462.6826 371.6631 m
462.9404 369.9277 l
S
300 Ar
462.9404 369.9277 m
463.1963 368.1289 l
S
300 Ar
463.1963 368.1289 m
463.4033 366.3945 l
S
300 Ar
463.4033 366.3945 m
463.6592 364.5957 l
S
300 Ar
463.6592 364.5957 m
463.8643 362.8604 l
S
300 Ar
396.3018 362.8604 m
396.3018 362.8604 l
S
300 Ar
396.3018 362.8604 m
395.583 364.5957 l
S
300 Ar
395.583 364.5957 m
394.8643 366.3945 l
S
300 Ar
394.8643 366.3945 m
394.0928 368.1289 l
S
300 Ar
394.0928 368.1289 m
393.3223 369.9277 l
S
300 Ar
393.3223 369.9277 m
393.2197 370.1211 l
S
300 Ar
393.2197 370.1211 m
392.5518 371.6631 l
S
300 Ar
392.5518 371.6631 m
391.833 373.4629 l
S
300 Ar
391.833 373.4629 m
391.0107 375.1973 l
S
300 Ar
391.0107 375.1973 m
390.1885 376.9961 l
S
300 Ar
390.1885 376.9961 m
390.1367 377.1875 l
S
300 Ar
390.1367 377.1875 m
389.4678 378.7305 l
S
300 Ar
389.4678 378.7305 m
388.6465 380.5293 l
S
300 Ar
388.6465 380.5293 m
387.8252 382.2637 l
S
300 Ar
387.8252 382.2637 m
387.0537 383.9355 l
S
300 Ar
387.0537 383.9355 m
387.0029 384.0635 l
S
300 Ar
387.0029 384.0635 m
386.2314 385.7988 l
S
300 Ar
386.2314 385.7988 m
385.4092 387.5967 l
S
300 Ar
385.4092 387.5967 m
384.5361 389.332 l
S
300 Ar
384.5361 389.332 m
383.9717 390.5527 l
S
300 Ar
383.9717 390.5527 m
383.6631 391.1309 l
S
300 Ar
383.6631 391.1309 m
382.8408 392.9297 l
S
300 Ar
382.8408 392.9297 m
382.0186 394.6641 l
S
300 Ar
382.0186 394.6641 m
381.0947 396.4639 l
S
300 Ar
381.0947 396.4639 m
380.8887 396.9136 l
S
300 Ar
380.8887 396.9136 m
380.2725 398.1982 l
S
300 Ar
380.2725 398.1982 m
379.3994 399.9976 l
S
300 Ar
379.3994 399.9976 m
378.5254 401.7319 l
S
300 Ar
378.5254 401.7319 m
377.8057 403.1455 l
S
300 Ar
377.8057 403.1455 m
377.6006 403.5313 l
S
300 Ar
377.6006 403.5313 m
376.7275 405.2656 l
S
300 Ar
376.7275 405.2656 m
375.8525 407.0654 l
S
300 Ar
375.8525 407.0654 m
374.9287 408.7998 l
S
300 Ar
374.9287 408.7998 m
374.7236 409.1855 l
S
300 Ar
374.7236 409.1855 m
374.0039 410.5991 l
S
300 Ar
374.0039 410.5991 m
373.1299 412.3335 l
S
300 Ar
373.1299 412.3335 m
372.1553 414.1328 l
S
300 Ar
372.1553 414.1328 m
371.6406 415.1611 l
S
300 Ar
371.6406 415.1611 m
371.2295 415.8672 l
S
300 Ar
371.2295 415.8672 m
370.3564 417.667 l
S
300 Ar
370.3564 417.667 m
369.3799 419.4019 l
S
300 Ar
369.3799 419.4019 m
368.5576 421.0078 l
S
300 Ar
368.5576 421.0078 m
368.4561 421.2002 l
S
300 Ar
368.4561 421.2002 m
367.5303 422.9355 l
S
300 Ar
367.5303 422.9355 m
366.6045 424.7344 l
S
300 Ar
366.6045 424.7344 m
365.6299 426.4697 l
S
300 Ar
365.6299 426.4697 m
365.4756 426.79 l
S
300 Ar
365.4756 426.79 m
364.7041 428.2676 l
S
300 Ar
364.7041 428.2676 m
363.7285 430.0669 l
S
300 Ar
363.7285 430.0669 m
362.8037 431.8018 l
S
300 Ar
362.8037 431.8018 m
362.3926 432.5732 l
S
300 Ar
362.3926 432.5732 m
361.8271 433.6006 l
S
300 Ar
361.8271 433.6006 m
360.9033 435.3359 l
S
300 Ar
360.9033 435.3359 m
359.9775 437.1348 l
S
300 Ar
359.9775 437.1348 m
359.3096 438.355 l
S
300 Ar
359.3096 438.355 m
359.001 438.8691 l
S
300 Ar
359.001 438.8691 m
358.0771 440.6689 l
S
300 Ar
358.0771 440.6689 m
357.1514 442.4033 l
S
300 Ar
357.1514 442.4033 m
356.2275 444.2026 l
S
300 Ar
356.2275 444.2026 m
355.3525 445.9375 l
S
300 Ar
355.3525 445.9375 m
354.4287 447.7363 l
S
300 Ar
354.4287 447.7363 m
353.5039 449.4707 l
S
300 Ar
353.5039 449.4707 m
353.1436 450.2422 l
S
300 Ar
353.1436 450.2422 m
352.6299 451.2705 l
S
300 Ar
352.6299 451.2705 m
351.8076 453.0044 l
S
300 Ar
351.8076 453.0044 m
350.9346 454.8037 l
S
300 Ar
350.9346 454.8037 m
350.0615 456.5381 l
S
300 Ar
350.0615 456.5381 m
350.0615 456.6025 l
S
300 Ar
350.0615 456.6025 m
349.291 458.3379 l
S
300 Ar
349.291 458.3379 m
348.4678 460.0723 l
S
300 Ar
348.4678 460.0723 m
347.749 461.8716 l
S
300 Ar
347.749 461.8716 m
346.9785 463.6704 l
S
300 Ar
346.9785 463.6704 m
346.2598 465.4053 l
S
300 Ar
346.2598 465.4053 m
345.5908 467.2041 l
S
300 Ar
345.5908 467.2041 m
344.9756 468.9395 l
S
300 Ar
344.9756 468.9395 m
344.3584 470.7383 l
S
300 Ar
344.3584 470.7383 m
343.8955 472.2803 l
S
300 Ar
343.8955 472.2803 m
343.8447 472.4731 l
S
300 Ar
343.8447 472.4731 m
343.3311 474.2715 l
S
300 Ar
343.3311 474.2715 m
342.9189 476.0068 l
S
300 Ar
342.9189 476.0068 m
342.5596 477.8057 l
S
300 Ar
342.5596 477.8057 m
342.251 479.541 l
S
300 Ar
342.251 479.541 m
341.9951 481.3389 l
S
300 Ar
441.7725 481.3403 m
442.5439 480.2471 l
S
300 Ar
442.5439 480.2471 m
443.0049 479.541 l
S
300 Ar
443.0049 479.541 m
444.1865 477.8057 l
S
300 Ar
444.1865 477.8057 m
445.3174 476.0068 l
S
300 Ar
445.3174 476.0068 m
445.626 475.6216 l
S
300 Ar
445.626 475.6216 m
446.4482 474.2715 l
S
300 Ar
446.4482 474.2715 m
447.4756 472.4731 l
S
300 Ar
447.4756 472.4731 m
448.5537 470.7383 l
S
300 Ar
448.5537 470.7383 m
448.708 470.4805 l
S
300 Ar
448.708 470.4805 m
449.5303 468.9395 l
S
300 Ar
449.5303 468.9395 m
450.4561 467.2041 l
S
300 Ar
450.4561 467.2041 m
451.3799 465.4053 l
S
300 Ar
451.3799 465.4053 m
451.792 464.6982 l
S
300 Ar
451.792 464.6982 m
452.3057 463.6704 l
S
300 Ar
452.3057 463.6704 m
453.1279 461.8716 l
S
300 Ar
453.1279 461.8716 m
454.001 460.0732 l
S
300 Ar
454.001 460.0723 m
454.8213 458.3379 l
S
300 Ar
454.8213 458.3379 m
454.874 458.2734 l
S
300 Ar
454.874 458.2734 m
455.5928 456.5381 l
S
300 Ar
455.5928 456.5381 m
456.3643 454.8037 l
S
300 Ar
456.3643 454.8037 m
457.083 453.0044 l
S
300 Ar
457.083 453.0044 m
457.8545 451.2705 l
S
300 Ar
457.8545 451.2705 m
457.9561 451.0127 l
S
300 Ar
457.9561 451.0127 m
458.5205 449.4707 l
S
300 Ar
458.5205 449.4707 m
459.1904 447.7363 l
S
300 Ar
459.1904 447.7363 m
459.8564 445.9375 l
S
300 Ar
459.8564 445.9375 m
460.5264 444.2026 l
S
300 Ar
460.5264 444.2026 m
461.04 442.8525 l
S
300 Ar
461.04 442.8525 m
461.1416 442.4033 l
S
300 Ar
461.1416 442.4033 m
461.7588 440.6689 l
S
300 Ar
461.7588 440.6689 m
462.376 438.8691 l
S
300 Ar
462.376 438.8691 m
462.9404 437.1348 l
S
300 Ar
462.9404 437.1348 m
463.5049 435.3359 l
S
300 Ar
463.5049 435.3359 m
464.0693 433.6016 l
S
300 Ar
464.0693 433.6016 m
464.1221 433.4722 l
S
300 Ar
464.1221 433.4722 m
464.585 431.8018 l
S
300 Ar
464.585 431.8018 m
465.0986 430.0669 l
S
300 Ar
465.0986 430.0669 m
465.6123 428.2676 l
S
300 Ar
465.6123 428.2676 m
466.126 426.4697 l
S
300 Ar
466.126 426.4697 m
466.6396 424.7344 l
S
300 Ar
466.6396 424.7344 m
467.1025 422.9355 l
S
300 Ar
467.1025 422.9355 m
467.2041 422.7422 l
S
300 Ar
467.2041 422.7422 m
467.5635 421.2002 l
S
300 Ar
467.5635 421.2002 m
468.0264 419.4019 l
S
300 Ar
468.0264 419.4019 m
468.4893 417.667 l
S
300 Ar
468.4893 417.667 m
468.8994 415.8682 l
S
300 Ar
468.8994 415.8682 m
469.3115 414.1328 l
S
300 Ar
469.3115 414.1328 m
469.7744 412.334 l
S
300 Ar
469.7744 412.334 m
470.1846 410.5991 l
S
300 Ar
470.1846 410.5991 m
470.2881 410.2129 l
S
300 Ar
470.2881 410.2129 m
470.5439 408.7998 l
S
300 Ar
470.5439 408.7998 m
470.9541 407.0654 l
S
300 Ar
470.9541 407.0654 m
471.3135 405.2656 l
S
300 Ar
471.3135 405.2656 m
471.7256 403.5313 l
S
300 Ar
471.7256 403.5313 m
472.0342 401.7319 l
S
300 Ar
472.0342 401.7319 m
472.4443 399.9976 l
S
300 Ar
472.4443 399.9976 m
472.8057 398.1982 l
S
300 Ar
472.8057 398.1982 m
473.1123 396.4639 l
S
300 Ar
473.1123 396.4639 m
473.3701 395.3071 l
S
300 Ar
364.1904 481.3403 m
365.0127 483.0742 l
S
300 Ar
365.0127 483.0742 m
365.4756 483.9102 l
S
300 Ar
365.4756 483.9102 m
366.0918 484.874 l
S
300 Ar
366.0918 484.874 m
367.5303 486.6079 l
S
300 Ar
367.5303 486.6079 m
368.5576 487.7012 l
S
300 Ar
368.5576 487.7012 m
369.3799 488.4072 l
S
300 Ar
369.3799 488.4072 m
371.6396 490.0137 l
S
300 Ar
371.6396 490.0137 m
371.8975 490.1416 l
S
300 Ar
371.8975 490.1416 m
374.7236 491.6201 l
S
300 Ar
374.7236 491.6201 m
375.5967 491.9414 l
S
300 Ar
375.5967 491.9414 m
377.8057 492.6484 l
S
300 Ar
377.8057 492.6484 m
380.8887 493.3545 l
S
300 Ar
380.8887 493.3545 m
383.9717 493.6758 l
S
300 Ar
383.9717 493.6758 m
384.2803 493.6758 l
S
300 Ar
384.2803 493.6758 m
387.0537 493.7402 l
S
300 Ar
387.0537 493.7402 m
387.9795 493.6758 l
S
300 Ar
387.9795 493.6758 m
390.1367 493.5479 l
S
300 Ar
390.1367 493.5479 m
393.2197 493.1611 l
S
300 Ar
393.2197 493.1611 m
396.3018 492.4551 l
S
300 Ar
396.3018 492.4551 m
398.2041 491.9414 l
S
300 Ar
398.2041 491.9414 m
399.3857 491.6201 l
S
300 Ar
399.3857 491.6201 m
402.4678 490.4634 l
S
300 Ar
402.4678 490.4634 m
403.1865 490.1416 l
S
300 Ar
403.1865 490.1416 m
405.5498 489.1143 l
S
300 Ar
405.5498 489.1143 m
406.9375 488.4072 l
S
300 Ar
406.9375 488.4072 m
408.6338 487.5073 l
S
300 Ar
408.6338 487.5073 m
410.123 486.6079 l
S
300 Ar
410.123 486.6079 m
411.7158 485.7085 l
S
300 Ar
411.7158 485.7085 m
412.8975 484.874 l
S
300 Ar
412.8975 484.874 m
414.7988 483.5889 l
S
300 Ar
414.7988 483.5889 m
415.415 483.0742 l
S
300 Ar
415.415 483.0742 m
417.6748 481.3389 l
S
300 Ar
341.9951 481.3403 m
341.8408 483.0742 l
S
300 Ar
341.8408 483.0742 m
341.7383 484.873 l
S
300 Ar
341.7383 484.874 m
341.79 486.6079 l
S
300 Ar
341.79 486.6079 m
341.8916 488.4072 l
S
300 Ar
341.8916 488.4072 m
342.0986 490.1416 l
S
300 Ar
342.0986 490.1416 m
342.5088 491.9414 l
S
300 Ar
342.5088 491.9414 m
342.9707 493.6758 l
S
300 Ar
342.9707 493.6758 m
343.5869 495.4751 l
S
300 Ar
343.5869 495.4751 m
343.8955 496.1177 l
S
300 Ar
343.8955 496.1177 m
344.4092 497.2739 l
S
*U
*u
300 Ar
[11.9995 11.9995 ]0 d
344.4092 497.2739 m
345.4365 499.0088 l
S
300 Ar
345.4365 499.0088 m
346.6709 500.8076 l
S
300 Ar
346.6709 500.8076 m
346.9785 501.1929 l
S
300 Ar
346.9785 501.1929 m
348.1611 502.543 l
S
300 Ar
348.1611 502.543 m
349.9072 504.3413 l
S
300 Ar
349.9072 504.3413 m
350.0615 504.4702 l
S
300 Ar
350.0615 504.4702 m
352.1162 506.0767 l
S
300 Ar
352.1162 506.0767 m
353.1436 506.8472 l
S
300 Ar
353.1436 506.8472 m
354.6846 507.875 l
S
300 Ar
354.6846 507.875 m
356.2275 508.7754 l
S
300 Ar
356.2275 508.7754 m
357.9229 509.6104 l
S
300 Ar
357.9229 509.6104 m
359.3096 510.2524 l
S
300 Ar
359.3096 510.2524 m
362.0322 511.4092 l
S
300 Ar
362.0322 511.4092 m
362.3916 511.5371 l
S
300 Ar
362.3916 511.5371 m
365.4756 512.5015 l
S
300 Ar
365.4756 512.5015 m
368.0439 513.1436 l
S
300 Ar
368.0439 513.1436 m
368.5576 513.2725 l
S
300 Ar
368.5576 513.2725 m
371.6396 513.915 l
S
300 Ar
371.6396 513.915 m
374.7236 514.3003 l
S
300 Ar
374.7236 514.3003 m
377.8057 514.5576 l
S
300 Ar
377.8057 514.5576 m
380.8887 514.6855 l
S
300 Ar
380.8887 514.6855 m
383.9717 514.6855 l
S
300 Ar
383.9717 514.6855 m
387.0537 514.4932 l
S
300 Ar
387.0537 514.4932 m
390.1367 514.1719 l
S
300 Ar
390.1367 514.1719 m
393.2197 513.7227 l
S
300 Ar
393.2197 513.7227 m
396.0459 513.1436 l
S
300 Ar
396.0459 513.1436 m
396.3018 513.1436 l
S
300 Ar
396.3018 513.1436 m
399.3857 512.373 l
S
300 Ar
399.3857 512.373 m
402.4678 511.4736 l
S
300 Ar
402.4678 511.4736 m
402.6221 511.4092 l
S
300 Ar
402.6221 511.4092 m
405.5498 510.3809 l
S
300 Ar
405.5498 510.3809 m
407.3994 509.6104 l
S
300 Ar
407.3994 509.6104 m
408.6338 509.0962 l
S
300 Ar
408.6338 509.0962 m
411.4072 507.875 l
S
300 Ar
411.4072 507.875 m
411.7158 507.6826 l
S
300 Ar
411.7158 507.6826 m
414.7988 506.0767 l
S
300 Ar
414.7988 506.0767 m
417.8301 504.3413 l
S
300 Ar
417.8301 504.3413 m
417.8818 504.2769 l
S
300 Ar
417.8818 504.2769 m
420.501 502.543 l
S
300 Ar
420.501 502.543 m
420.9639 502.2861 l
S
300 Ar
420.9639 502.2861 m
422.9678 500.8076 l
S
300 Ar
422.9678 500.8076 m
424.0459 499.9727 l
S
300 Ar
424.0459 499.9727 m
425.2275 499.0088 l
S
300 Ar
425.2275 499.0088 m
427.1299 497.4668 l
S
300 Ar
427.1299 497.4668 m
427.3857 497.2739 l
S
300 Ar
427.3857 497.2739 m
429.3389 495.4751 l
S
300 Ar
429.3389 495.4751 m
430.2119 494.7041 l
S
300 Ar
430.2119 494.7041 m
431.1885 493.6758 l
S
300 Ar
431.1885 493.6758 m
432.9873 491.9414 l
S
300 Ar
432.9873 491.9414 m
433.2959 491.6201 l
S
300 Ar
433.2959 491.6201 m
434.6318 490.1416 l
S
300 Ar
434.6318 490.1416 m
436.2236 488.4072 l
S
300 Ar
436.2236 488.4072 m
436.3779 488.2139 l
S
300 Ar
436.3779 488.2139 m
437.6611 486.6079 l
S
300 Ar
437.6611 486.6079 m
439.1006 484.873 l
S
300 Ar
439.1006 484.874 m
439.46 484.4229 l
S
300 Ar
439.46 484.4229 m
440.4365 483.0742 l
S
300 Ar
440.4365 483.0742 m
441.7725 481.3389 l
S
300 Ar
478.4561 362.8604 m
478.6631 361.0615 l
S
300 Ar
478.6631 361.0615 m
478.9189 359.3262 l
S
300 Ar
478.9189 359.3262 m
479.124 357.5273 l
S
300 Ar
479.124 357.5273 m
479.3311 355.7285 l
S
300 Ar
479.3311 355.7285 m
479.5361 354.3789 l
S
300 Ar
479.5361 354.3789 m
479.5361 353.9941 l
S
300 Ar
479.5361 353.9941 m
479.7412 352.1953 l
S
300 Ar
479.7412 352.1953 m
479.9463 350.4609 l
S
300 Ar
479.9463 350.4609 m
480.1514 348.6602 l
S
300 Ar
480.1514 348.6602 m
480.3584 346.9258 l
S
300 Ar
480.3584 346.9258 m
480.5107 345.127 l
S
300 Ar
480.5107 345.127 m
480.7178 343.3926 l
S
300 Ar
480.7178 343.3926 m
480.9229 341.5938 l
S
300 Ar
480.9229 341.5938 m
481.0771 339.8584 l
S
300 Ar
481.0771 339.8584 m
481.2314 338.0596 l
S
300 Ar
481.2314 338.0596 m
481.4365 336.3242 l
S
300 Ar
481.4365 336.3242 m
481.5908 334.5254 l
S
300 Ar
481.5908 334.5254 m
481.7959 332.791 l
S
300 Ar
481.7959 332.791 m
481.9502 330.9922 l
S
300 Ar
481.9502 330.9922 m
482.1045 329.2559 l
S
300 Ar
482.1045 329.2559 m
482.2588 327.458 l
S
300 Ar
482.2588 327.458 m
482.4131 325.7227 l
S
300 Ar
482.4131 325.7227 m
482.5674 323.9238 l
S
300 Ar
482.5674 323.9238 m
482.6182 323.7324 l
S
300 Ar
482.6182 323.7324 m
482.7217 322.126 l
S
300 Ar
482.7217 322.126 m
482.874 320.3906 l
S
300 Ar
482.874 320.3906 m
482.9775 318.5908 l
S
300 Ar
482.9775 318.5908 m
483.1318 316.8574 l
S
300 Ar
483.1318 316.8574 m
483.2861 315.0566 l
S
300 Ar
483.2861 315.0566 m
483.3896 313.3223 l
S
300 Ar
483.3896 313.3223 m
483.5439 311.5234 l
S
300 Ar
483.5439 311.5234 m
483.6455 309.7891 l
S
300 Ar
483.6455 309.7891 m
483.7998 307.9893 l
S
300 Ar
483.7998 307.9893 m
483.9033 306.2559 l
S
300 Ar
483.9033 306.2559 m
484.0049 304.4561 l
S
300 Ar
484.0049 304.4561 m
484.1592 302.7217 l
S
300 Ar
484.1592 302.7217 m
484.2627 300.9219 l
S
300 Ar
484.2627 300.9219 m
484.3662 299.1875 l
S
300 Ar
484.3662 299.1875 m
484.4678 297.3887 l
S
300 Ar
484.4678 297.3887 m
484.5693 295.6543 l
S
300 Ar
484.5693 295.6543 m
484.6729 293.8545 l
S
300 Ar
484.6729 293.8545 m
484.7744 292.1201 l
S
300 Ar
484.7744 292.1201 m
484.9307 290.3203 l
S
300 Ar
484.9307 290.3203 m
484.9814 288.5225 l
S
300 Ar
484.9814 288.5225 m
485.085 286.7871 l
S
300 Ar
485.085 286.7871 m
485.1865 284.9883 l
S
300 Ar
485.1865 284.9883 m
485.29 283.2539 l
S
300 Ar
485.29 283.2539 m
485.3936 281.4551 l
S
300 Ar
485.3936 281.4551 m
485.4951 279.7188 l
S
300 Ar
485.4951 279.7188 m
485.5986 277.9209 l
S
300 Ar
485.5986 277.9209 m
485.6494 276.1855 l
S
300 Ar
485.6494 276.1855 m
485.7002 275.6074 l
S
300 Ar
485.7002 275.6074 m
485.7529 274.3867 l
S
300 Ar
485.7529 274.3867 m
485.8037 272.6523 l
S
300 Ar
485.8037 272.6523 m
485.9053 270.8535 l
S
300 Ar
485.9053 270.8535 m
485.958 269.1182 l
S
300 Ar
485.958 269.1182 m
486.0615 267.3203 l
S
300 Ar
486.0615 267.3203 m
486.1123 265.584 l
S
300 Ar
486.1123 265.584 m
486.1631 263.7852 l
S
300 Ar
486.1631 263.7852 m
486.2666 262.0508 l
S
300 Ar
486.2666 262.0508 m
486.3174 260.251 l
S
300 Ar
486.3174 260.251 m
486.3682 258.5166 l
S
300 Ar
486.3682 258.5166 m
486.4209 256.7168 l
S
300 Ar
486.4209 256.7168 m
486.4717 254.918 l
S
300 Ar
486.4717 254.918 m
486.5752 253.1836 l
S
300 Ar
486.5752 253.1836 m
486.626 251.3848 l
S
300 Ar
486.626 251.3848 m
486.6768 249.6504 l
S
300 Ar
486.6768 249.6504 m
486.7295 247.8516 l
S
300 Ar
486.7295 247.8516 m
486.7803 246.1152 l
S
300 Ar
486.7803 246.1152 m
486.8311 244.3164 l
S
300 Ar
473.3701 395.3071 m
473.4736 394.6641 l
S
300 Ar
473.4736 394.6641 m
473.7822 392.9297 l
S
300 Ar
473.7822 392.9297 m
474.0889 391.1309 l
S
300 Ar
474.0889 391.1309 m
474.3975 389.332 l
S
300 Ar
474.3975 389.332 m
474.7061 387.5967 l
S
300 Ar
474.7061 387.5967 m
475.0146 385.7988 l
S
300 Ar
475.0146 385.7988 m
475.3213 384.0635 l
S
300 Ar
475.3213 384.0635 m
475.6299 382.2637 l
S
300 Ar
475.6299 382.2637 m
475.8877 380.5293 l
S
300 Ar
475.8877 380.5293 m
476.1963 378.7305 l
S
300 Ar
476.1963 378.7305 m
476.4521 377.1875 l
S
300 Ar
476.4521 377.1875 m
476.4521 376.9961 l
S
300 Ar
476.4521 376.9961 m
476.71 375.1973 l
S
300 Ar
476.71 375.1973 m
476.9658 373.4629 l
S
300 Ar
476.9658 373.4629 m
477.2236 371.6631 l
S
300 Ar
477.2236 371.6631 m
477.4814 369.9277 l
S
300 Ar
477.4814 369.9277 m
477.7373 368.1289 l
S
300 Ar
477.7373 368.1289 m
477.9932 366.3945 l
S
300 Ar
477.9932 366.3945 m
478.2002 364.5957 l
S
300 Ar
478.2002 364.5957 m
478.4561 362.8604 l
S
*U
U
LB
%AI5_EndLayer--
gsave annotatepage grestore showpage
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec

%%EndDocument
 @endspecial 523 2290 a Fs(Fig.)15 b(6.)30 b Ft(Left)d(panel:)g(Con)n
(tours)g(of)h Fq(\012)1655 2298 y Fd(M)1749 2290 y Ft(v)n(ersus)e
Fq(w)2036 2298 y Fd(x)2102 2290 y Ft(from)g(curren)n(t)g(observ)l
(ational)i(data.)f(Righ)n(t)523 2381 y(P)n(anel:)h(Con)n(tours)g(of)g
Fq(\012)1239 2389 y Fd(M)1334 2381 y Ft(v)n(ersus)e Fq(w)1621
2389 y Fd(x)1688 2381 y Ft(from)h(curren)n(t)f(observ)l(ational)i
(data,)g(where)g(the)f(curren)n(t)523 2472 y(v)l(alue)g(of)h
Fq(\012)871 2480 y Fd(M)966 2472 y Ft(is)g(obtained)g(from)f(the)g(2dF)
g(redshift)h(surv)n(ey)-6 b(.)26 b(F)-6 b(or)28 b(b)r(oth)f(panels)h
Fq(\012)2997 2480 y Fd(M)3082 2472 y Ft(+)18 b Fq(\012)3219
2480 y Fd(x)3283 2472 y Ft(=)24 b(1)523 2564 y(is)i(tak)n(en)f(as)i(a)f
(prior.)523 2827 y Fw(is)33 b(sp)r(ectacular,)f(esp)r(ecially)g
(considering)g(the)h(t)n(w)n(o)f(programs)f(ha)n(v)n(e)g(w)n(ork)n(ed)g
(in)j(almost)523 2927 y(complete)28 b(isolation)e(from)h(eac)n(h)g
(other.)648 3027 y(The)e(easiest)g(solution)g(to)h(explain)f(the)h
(observ)n(ed)e(acceleration)g(is)h(to)g(include)h(an)g(ad-)523
3126 y(ditional)c(comp)r(onen)n(t)g(of)g(matter)g(with)h(an)e(equation)
h(of)g(state)g(parameter)f(more)g(negativ)n(e)523 3226
y(than)33 b Fm(w)g(<)e Fj(\000)p Fw(1)p Fm(=)p Fw(3;)f(the)j(most)f
(familiar)g(b)r(eing)h(the)f(cosmological)e(constan)n(t)i(\()p
Fm(w)i Fw(=)c Fj(\000)p Fw(1\).)523 3326 y(Fig.)g(5)f(sho)n(ws)f(the)i
(join)n(t)g(con\014dence)g(con)n(tours)e(for)h(v)-5 b(alues)29
b(of)h Fm(\012)2627 3338 y Fl(M)2730 3326 y Fw(and)g
Fm(\012)2958 3338 y Fl(\003)3038 3326 y Fw(from)g(b)r(oth)523
3425 y(exp)r(erimen)n(ts.)d(If)g(w)n(e)f(assume)g(the)i(Univ)n(erse)e
(is)g(comp)r(osed)h(only)f(of)h(normal)f(matter)g(and)523
3525 y(a)j(cosmological)e(constan)n(t,)i(then)h(with)h(greater)c(than)j
(99.9\045)f(con\014dence)g(the)h(Univ)n(erse)523 3624
y(has)d(a)g(non-zero)f(cosmological)f(constan)n(t)i(or)g(some)g(other)g
(form)g(of)h(dark)e(energy.)648 3724 y(Of)k(course,)g(w)n(e)g(do)g(not)
h(kno)n(w)f(the)h(form)f(of)h(dark)e(energy)h(whic)n(h)h(is)f(leading)g
(to)h(the)523 3824 y(acceleration,)e(and)i(it)h(is)f(w)n(orth)n(while)f
(in)n(v)n(estigating)f(what)i(other)g(forms)f(of)h(energy)f(are)523
3923 y(p)r(ossible)i(additional)g(comp)r(onen)n(ts.)g(Fig.)g(6)g(sho)n
(ws)f(the)i(join)n(t)g(con\014dence)f(con)n(tours)f(for)523
4023 y(the)39 b Fi(HZSNS)p Fw(+)p Fi(SCP)g Fw(observ)-5
b(ations)38 b(for)g Fm(\012)1899 4035 y Fl(M)2012 4023
y Fw(and)h Fm(w)2244 4035 y Fl(x)2325 4023 y Fw(\(the)h(equation)f(of)g
(state)g(of)g(the)523 4123 y(unkno)n(wn)24 b(comp)r(onen)n(t)f(causing)
g(the)i(acceleration\).)d(Because)h(this)i(in)n(tro)r(duces)e(an)h
(extra)523 4222 y(parameter,)c(w)n(e)g(apply)h(the)h(additional)e
(constrain)n(t)g(that)h Fm(\012)2417 4234 y Fl(M)2496
4222 y Fw(+)5 b Fm(\012)2630 4234 y Fl(x)2695 4222 y
Fw(=)23 b(1,)e(as)f(indicated)h(b)n(y)523 4322 y(the)j
Fi(CMB)f Fw(exp)r(erimen)n(ts)g([14].)f(The)h(cosmological)e(constan)n
(t)i(is)g(preferred,)f(but)i(an)n(ything)523 4421 y(with)37
b(a)g Fm(w)k(<)d Fj(\000)p Fw(0)p Fm(:)p Fw(5)e(is)g(acceptable)h
([23,77].)e(Additionally)-7 b(,)37 b(w)n(e)f(can)h(add)g(information)
523 4521 y(ab)r(out)25 b(the)g(v)-5 b(alue)24 b(of)h
Fm(\012)1265 4533 y Fl(M)1339 4521 y Fw(,)g(as)f(supplied)h(b)n(y)f
(recen)n(t)g(2dF)h(redshift)g(surv)n(ey)e(results)i([98],)f(as)523
4621 y(sho)n(wn)30 b(in)g(the)h(2nd)f(panel,)g(where)g(the)g(constrain)
n(t)g(strengthens)f(to)h Fm(w)g(<)e Fj(\000)p Fw(0)p
Fm(:)p Fw(6)h(at)h(95\045)523 4720 y(con\014dence)d([69].)p
eop
%%Page: 20 20
20 19 bop 523 232 a Ft(20)199 b(P)n(erlm)n(utter)25 b(and)g(Sc)n(hmidt)
547 1830 y @beginspecial 14 @llx 329 @lly 576 @urx 626
@ury 3401 @rwi @setspecial
%%BeginDocument: PerlmutterSchmidtfig7.eps
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: 13 10 599 776
%AI3_DocumentPreview: Header
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 1 0 1 0 1 1 0 0
%AI5_TargetResolution: 300
%AI5_NumLayers: 8
%AI5_OpenToView: -96 755 1 1586 1095 18 0 1 8 66 0 0
%AI5_OpenViewLayers: 37333333
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 50 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 40 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIDataProc null def
	/XIVersion 6 def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
end
currentdict /_colorimage known not {
	/colorimage where {
		/colorimage get /_colorimage exch def
	}{
		/_colorimage null def
	} ifelse
} if
/_image systemdict /image get def
/_currenttransfer systemdict /currenttransfer get def
/FourEqual {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual { 
				/plateindex 0 def
			}{
				0 1 0 0 FourEqual { 
					/plateindex 1 def
				}{
					0 0 1 0 FourEqual {
						/plateindex 2 def
					}{
						0 0 0 1 FourEqual { 
							/plateindex 3 def
						}{
							0 0 0 0 FourEqual {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/clrspaceissepn {
	type /arraytype eq 
} def
/clrspacegetname {
	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse
} def
/clrspacegetalt {
	aload pop pop pop colormake
} def
/clrspacegetcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/clrspacemarksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				/findcmykcustomcolor where {
					pop
					dup length 2 sub get
					0.1 0.1 0.1 0.1 5 -1 roll
					findcmykcustomcolor 1 setcustomcolor
					systemdict /currentgray get exec
					1 ne
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/colormake {
	dup clrspacegetcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/colorexpand {
	dup clrspacegetname exch
	dup clrspaceissepn {
		clrspacegetalt
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				clrspacegetalt colortint colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/WalkRGBString {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/CMYKToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/SeparateCMYKImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne {
			sourcearray plateindex get exec
		}{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub {
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/ColorImageCompositeEmulator {
	pop true eq {
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/colorimage {
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index
 end
	
	dup 8 eq exch 1 eq or not {
		/_colorimage load null ne {
			_colorimage
		}{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}{
		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {
			/_colorimage load null eq {
				ColorImageCompositeEmulator
			}{
				dup 1 eq {
					pop pop image
				}{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						grestore
					} if
				} ifelse
			} ifelse
		}{
			dup 1 eq {
				pop pop
				image
			}{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0 {			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace clrspacegetcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] makeimagedict _image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] makeimagedict _image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} stringapply
			} concatprocs _image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} stringapply
			} concatprocs false _pticomps
			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse
		} ifelse
	} ifelse
} def
/graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray proctintimage
} def
/cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK proctintimage
} def
/rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB proctintimage
} def
/tintimage {
	TestPlateIndex -1 eq {
		colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop graytintimage
		}{
			dup /DeviceRGB eq {
				pop rgbtintimage
			}{
				pop cmyktintimage
			} ifelse
		} ifelse
	}{
		dup clrspacemarksplate {
			plateindex 5 lt {
				colortocmyk plateindex get 1 exch sub
				exch {1 0}{0 1} ifelse () graytintimage
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage
			} ifelse
		}{
			pop pop pop
			{pop 1} 0 1 () /DeviceGray proctintimage
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace tintimage
} def
/XIImage {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIType 1 eq {
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEncoding 0 ne XIVersion 6 le and {
			currentfile 128 string readline pop pop
		} if
		XICompression 0 eq {
			/XIBuffer1 XIRowBytes string def
			XIEncoding 0 eq {
				{currentfile XIBuffer1 readhexstring pop}
			}{
				{currentfile XIBuffer1 readstring pop}
			} ifelse
		}{
			/XIBuffer1 256 string def
			/XIBuffer2 XIRowBytes string def
			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
			/ASCIIHexDecode filter /DCTDecode filter
			/XIFile exch def
			{XIFile XIBuffer2 readstring pop}
		} ifelse
		/XIDataProc exch def
		
		XIVersion 6 le {
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIType 1 eq {
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		XIEnable {
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		grestore
 end
} def
end
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
userdict /_useSmoothShade true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _ArialMT ArialMT
[/_ArialMT/ArialMT 0 0 0 TZ
%AI3_EndEncoding TrueType
%AI55J_Tsume: None
%AI3_BeginEncoding: _Arial-BoldMT Arial-BoldMT
[/_Arial-BoldMT/Arial-BoldMT 0 0 0 TZ
%AI3_EndEncoding TrueType
%AI55J_Tsume: None
%AI3_BeginEncoding: _Tahoma-Bold Tahoma-Bold
[/_Tahoma-Bold/Tahoma-Bold 0 0 0 TZ
%AI3_EndEncoding TrueType
%AI55J_Tsume: None
%AI3_BeginEncoding: _TimesNewRomanPSMT TimesNewRomanPSMT
[/_TimesNewRomanPSMT/TimesNewRomanPSMT 0 0 0 TZ
%AI3_EndEncoding TrueType
%AI55J_Tsume: None
%AI3_BeginEncoding: _TimesNewRomanPS-ItalicMT TimesNewRomanPS-ItalicMT
[/_TimesNewRomanPS-ItalicMT/TimesNewRomanPS-ItalicMT 0 0 0 TZ
%AI3_EndEncoding TrueType
%AI55J_Tsume: None
%AI3_BeginEncoding: _TimesNewRomanPS-BoldItalicMT TimesNewRomanPS-BoldItalicMT
[/_TimesNewRomanPS-BoldItalicMT/TimesNewRomanPS-BoldItalicMT 0 0 0 TZ
%AI3_EndEncoding TrueType
%AI55J_Tsume: None
%AI3_BeginEncoding: _Symbol Symbol
[/_Symbol/Symbol 0 0 0 TZ
%AI3_EndEncoding AdobeType
%AI55J_Tsume: None
%AI3_BeginEncoding: _Times-Italic Times-Italic
[/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI55J_Tsume: None
%AI3_BeginEncoding: _Times-Roman Times-Roman
[/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI5_Begin_NonPrinting
Np
4 Bn
%AI5_BeginGradient: (Black, White)
(Black, White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Chrome)
(Chrome) 0 6 Bd
[
<
1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A19191919191919191818181818181818181717
17171717171716161616161616161515151515151515151515151515151514141414141414141413
13131313131313121212121212121211111111111111111010101010101010100F0F0F0F0F0F0F0F
0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C
0C0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0909090909090909090808080808080807070707080808
08080808080808080909080808080808090808080808080808080807070707070707060605050505
05050404030303030202020101010000
>
<
515150505050504E4E4E4D4D4D4D4D4D4C4C4B4B4B4A4A4A49494948484747474646474646464545
44444443434343434242424141414040403F3F3E3E3E3D3D3D3C3C3C3B3B3B3B3B3A3A3A39393938
38373737363636363636353534343433333332323231313030302F2F2F2F2F2E2E2E2D2D2D2C2C2C
2B2B2B2B2A2A2A2A2929292828272727262626252525242423232322222221212120201F1F1F1E1E
1E1E1E1E1D1D1C1C1C1B1B1B1A1A1A19191919191818181717171616151616151515141414131312
11111110100F0F0F0E0E0D0D0D0C0C0C0B0B0B0A0A0A0A0909090908080707070606060505050404
04040403030302020201010101010000
>
<
EDEDEDECECECECECECEBEBEBEAEAE9E9E8E8E7E7E6E5E4E4E3E2E1E1E0DFDEDDDCDBDAD9D8D7D6D5
D4D2D1D0CFCDCCCBCAC9C8C7C5C4C3C2C1C0BFBEBCBBBAB9B8B7B6B4B3B2B1B0AFAEADABAAA9A8A7
A6A5A4A2A1A09F9E9D9C9B9A9997969594939291908F8E8D8C8A8A8887868584838281807F7E7D7C
7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565654
53535150504F4E4D4C4B4A49484746454444434141403F3E3D3C3B3A3A3938373635343332313030
2F2E2D2C2B2A2928282726252423222121201F1E1D1C1B1A1A19181716161514131211100F0E0E0D
0C0B0A0A090807060505040302020100
>
<
05050505050505050505050505040404040404040404040404040404040404040404040404040404
04040404040403030303030303030303030303030303020203030303030302020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
>
<
E0E0E0E0E0E1E1E1E1E1E1E1E1E2E2E2E2E2E2E2E2E3E3E3E3E3E3E3E3E4E4E4E4E4E4E4E4E4E5E5
E5E5E5E5E5E5E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9EA
EAEAEAEAEAEAEAEBEBEBEBEBEBEBEBECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEE
EFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3
F3F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F8F8F8F8F8F8
F8F8F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFDFDFDFDFD
FDFDFDFEFEFEFEFEFEFEFEFFFFFFFFFF
>
<
A2A2A3A3A3A4A4A5A5A5A6A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACADADADAEAEAEAFAFAFB0B0
B1B1B1B2B2B2B3B3B4B4B4B5B5B5B6B6B6B7B7B8B8B8B9B9B9BABABABBBBBCBCBCBDBDBDBEBEBEBF
BFC0C0C0C1C1C1C2C2C2C3C3C4C4C4C5C5C5C6C6C6C7C7C8C8C8C9C9C9CACACACBCBCCCCCCCDCDCD
CECECECFCFD0D0D0D1D1D1D2D2D3D3D3D4D4D4D5D5D5D6D6D7D7D7D8D8D8D9D9D9DADADBDBDBDCDC
DCDDDDDDDEDEDFDFDFE0E0E0E1E1E1E2E2E3E3E3E4E4E4E5E5E5E6E6E7E7E7E8E8E8E9E9E9EAEAEB
EBEBECECECEDEDEDEEEEEFEFEFF0F0F0F1F1F2F2F2F3F3F3F4F4F4F5F5F6F6F6F7F7F7F8F8F8F9F9
FAFAFAFBFBFBFCFCFCFDFDFEFEFEFFFF
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
4 %_Br
<
4D4C4B4B4A4A49484847474645454444434242414140403F3E3E3D3D3C3B3B3A3A39383837363535
34333332313130302F2E2D2D2C2B2B2A29282827262525242323222120201F1E1D1D1C1B
>
<
686868686766676666656565646364636363636262626161606160605F605F5E5F5E5E5D5E5D5D5D
5D5D5C5B5C5B5B5B5B5A595A595958595857575756565656555455545453545352525251
>
<
F0F0F0F0F0F1F1F1F2F2F2F3F3F4F4F5F5F5F6F7F7F8F9F9FAFAFBFBFAFBFAFAFAF9F8F7F7F6F5F4
F4F3F3F2F2F1F1F1F0F0EFEFEFEEEEEEEDEDEDEDEDECECECECECECECECECECECECECEDED
>
<
2C2B2B2A2929282727262525242323222121201F1E1E1D1C1C1B1A1A191918181716161515141313
1212111110100F0E0E0E0D0D0C0C0C0B0B0B0A0A0A090908080807070706060605050505
>
<
9495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BBBC
BDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0
>
<
6B6C6C6D6E6F6F707172727374757576777778797A7A7B7C7D7D7E7F808081828283848585868788
88898A8B8B8C8D8D8E8F90909192939394959696979898999A9B9B9C9D9E9E9FA0A1A1A2
>
0
4 %_Br
<
0001010203030404040505060607070708080909090A0A0B0B0B0C0C0D0D0E0E0D0E0E0F0F10100F
10101111111212131314141415141615151616171718181819191A191A1A1A1B1B1C1C1C1D1C1D1D
1E1E1E1F1E1F1F202020212022212122222323242423252425252526262727282827292829292A2A
2A2B2A2C2B2B2C2C2D2D2E2D2D2E2E2F2F2E2F2F3030313030313132323332323332343333343435
34353535363636363637373838383838393939393A3A3A3B3B3B3B3B3C3C3D3D3D3D3D3E3E3E3E3F
3F3F3F3F404040404041414142424242434343434344444545454545464647474747474848484848
49494A4A4A4A4A4B4B4B4B4B4C4C4D4D
>
<
0001010101020203030304040505060606070708080909090A0B0B0C0C0C0C0D0E0E0F0F10101111
11121213141314141515161616171718191819191A1A1B1B1B1C1C1D1C1D1E1E1F1E1F2020212122
2122232323232424252525262627282728282928292A2A2B2A2B2C2C2D2C2D2D2E2F2F302F303031
3231323233343334343535363636373738393839393A393A3B3B3C3B3C3C3D3E3D3E3E3F403F4040
414041424243424344444544454546474647474847494A494A4A4B4C4B4C4C4D4C4D4F4E4F4E504F
5051515251525353545354545556555756575858595859595A5B5A5C5B5C5C5D5E5D5F5E5F616061
60626162646364646566666766686768
>
<
00010102030304050506070808090A0A0B0C0D0D0E0F0F101112131314151616171818191A1B1C1C
1D1E1F1F202122232324252627272829292B2B2C2D2E2F2F3031323334343536373839393A3B3C3D
3E3F3F4041424344444546474849494B4B4C4D4E4F50515153535455565758595A5B5C5D5E5F6061
61636365666668686A6A6C6D6D6F6F7172727474767778797A7B7C7D7E7F8081828385858688898A
8B8C8D8E8F90929394959697989A9B9C9D9EA0A1A2A3A4A5A7A8A9AAACADAEAFB1B2B3B5B6B7B8BA
BBBCBEBFC0C1C3C4C5C7C8CACBCCCECFD1D2D4D5D6D8D9DADBDDDEDFE0E1E2E3E4E5E6E7E8E8E9EA
EBEBECEDEDEEEEEEEFEFEFEFEFEFF0F0
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000001010101010101010101010101010102020202020202020202020202020303030303030303
03040404040405050505050505060606060606060707070707070807080808080808080908090909
09090A0A0A0A0A0B0A0B0B0B0B0B0C0C0C0C0C0D0D0D0D0D0E0E0E0E0F0E0F0F0F10101011111111
12121212131313141414141515151515161616161717171717181818191919191A1A1A1B1B1B1B1C
1C1C1D1D1D1D1D1E1E1F1F2020202020212121222222222323232424242425252526262626262727
282829292929292A2A2A2B2B2B2B2C2C
>
<
FFFFFEFEFDFDFCFCFCFBFBFAFAFAF9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F2F2F2F1F1F0F0EFEFEF
EEEEEDEDEDECECEBEBEAEAEAE9E9E8E8E8E7E7E6E6E5E5E5E4E4E3E3E2E2E2E1E1E0E0E0DFDFDEDE
DDDDDDDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D0D0D0CFCFCECECDCD
CDCCCCCBCBCBCACAC9C9C8C8C8C7C7C6C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0C0BFBFBEBEBEBDBDBC
BCBBBBBBBABAB9B9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B3B2B2B1B1B1B0B0AFAFAEAEAEADADACACAB
ABABAAAAA9A9A9A8A8A7A7A6A6A6A5A5A4A4A4A3A3A2A2A1A1A1A0A09F9F9E9E9E9D9D9C9C9C9B9B
9A9A9999999898979797969695959494
>
<
FFFEFEFDFDFCFCFBFAFAF9F9F8F7F7F6F6F5F5F4F3F3F2F2F1F0F0EFEFEEEEEDECECEBEBEAEAE9E8
E8E7E7E6E5E5E4E4E3E3E2E1E1E0E0DFDEDEDDDDDCDCDBDADAD9D9D8D8D7D6D6D5D5D4D3D3D2D2D1
D1D0CFCFCECECDCDCCCBCBCACAC9C8C8C7C7C6C6C5C4C4C3C3C2C1C1C0C0BFBFBEBDBDBCBCBBBBBA
B9B9B8B8B7B6B6B5B5B4B4B3B2B2B1B1B0AFAFAEAEADADACABABAAAAA9A9A8A7A7A6A6A5A4A4A3A3
A2A2A1A0A09F9F9E9D9D9C9C9B9B9A9999989897979695959494939292919190908F8E8E8D8D8C8C
8B8A8A89898887878686858584838382828180807F7F7E7E7D7C7C7B7B7A7A797878777776757574
74737372717170706F6E6E6D6D6C6C6B
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
0
0
0
0
1
1
1
4 %_Br
<
EEEEEEEEEEEDEDEDECECECEBEBEAEAE9E9E9E8E7E7E6E5E5E4E3E3E2E1E1E0DFDEDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A4A3A2A1A09F9E9D9C9B9A9998979695949392918F8E8D8C8B8A8988878685
84838281807F7E7D7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C
5B5A5858565554535251504F4E4D4C4B4A494847464544434241403F3E3C3B3A3938373635343332
312F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09
0808070605040302020100
>
<
4F4E4E4C4D4B4C4A4949484847474645454444434342424140413F403F3F3E3D3D3C3C3B3B3A393A
39393839373637363635353433343333323331313130302F302F2F2E2D2E2D2D2C2D2C2B2B2A2B2A
2A29292928292828272627262625262524252424242423222322222222212221202020201F201F1E
1F1E1E1E1E1D1C1D1C1C1C1C1B1B1B1A1B1A1A191919181918181718171617161716161615161515
1515141414131413141312131212121211111110111010100F100F100F100F0F0F0E0F0E0F0E0E0E
0D0E0D0D0D0D0D0C0C0C0C0C0C0B0B0B0A0A0A0A0A09090909080808070707070606060605050504
0403030302020101010100
>
<
0E0E0D0D0D0D0D0D0C0C0C0C0C0C0C0B0B0B0A0A0A09090908080808080808070707060606060505
050505040505040505060505060506060606070707080708080808090A090A0A0A0A0B0B0B0B0B0B
0B0B0C0C0B0B0C0C0C0C0C0C0C0C0B0C0C0B0C0C0B0B0B0B0B0B0B0A0A0A0A0A0A09090908080808
08070707070606060606050505050404040403030302030303030303030404040405040506050606
06060707070808080809090909090909090A0A0A0A0A0A0A0A0B0A0A0B0A0A0A0A0B0B0A0A0B0A0A
0A0A0A0A0A0A0A0A0909090909090909090808080807070707070706060605050505050404040403
0303030202020101010000
>
<
02020202020202020101010101010101010101010101010000000000000000000000000000000000
00000000000100010101010101010101010101010102010202020202020202020202020202020202
02020202010101010101010101010101010101010101010101010101010101010101010100000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000101010101010101010101010101010101010101010101010101010101010101010101010101
01010000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000
>
<
05060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C
2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F5051525354
55565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C
7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4
A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCC
CDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4
F5F6F7F8F9FAFBFCFDFEFF
>
<
7172727373747475767677777878797A7A7B7B7C7C7D7D7E7F7F8080818182838384848585868787
888889898A8B8B8C8C8D8D8E8F8F9090919192939394949595969697989899999A9A9B9C9C9D9D9E
9E9FA0A0A1A1A2A2A3A4A4A5A5A6A6A7A8A8A9A9AAAAABACACADADAEAEAFAFB0B1B1B2B2B3B3B4B5
B5B6B6B7B7B8B9B9BABABBBBBCBDBDBEBEBFBFC0C1C1C2C2C3C3C4C4C5C6C6C7C7C8C8C9CACACBCB
CCCCCDCECECFCFD0D0D1D2D2D3D3D4D4D5D6D6D7D7D8D8D9DADADBDBDCDCDDDDDEDFDFE0E0E1E1E2
E3E3E4E4E5E5E6E7E7E8E8E9E9EAEBEBECECEDEDEEEFEFF0F0F1F1F2F3F3F4F4F5F5F6F6F7F8F8F9
F9FAFAFBFCFCFDFDFEFEFF
>
<
B0B0B1B1B1B2B2B2B3B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9BABABABBBBBBBCBCBC
BDBDBDBEBEBEBFBFBFBFC0C0C0C1C1C1C2C2C2C3C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C9C9
C9CACACACBCBCBCBCCCCCCCDCDCDCECECECFCFCFD0D0D0D1D1D1D1D2D2D2D3D3D3D4D4D4D5D5D5D6
D6D6D7D7D7D8D8D8D8D9D9D9DADADADBDBDBDCDCDCDDDDDDDEDEDEDEDFDFDFE0E0E0E1E1E1E2E2E2
E3E3E3E4E4E4E4E5E5E5E6E6E6E7E7E7E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEFEF
EFF0F0F0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6F6F6F7F7F7F8F8F8F9F9F9FAFAFAFBFBFBFC
FCFCFCFDFDFDFEFEFEFFFF
>
4 %_Br
[
1 0 50 92 %_Bs
0.1059 0.3176 0.9294 0.0196 0.8784 0.6353 0 2 50 59 %_Bs
0.302 0.4078 0.9412 0.1725 0.5804 0.4196 0 2 50 50 %_Bs
1 0 50 49 %_Bs
1 0 50 41 %_Bs
0.9333 0.3098 0.0549 0.0078 0.0196 0.4431 0.6902 2 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
F9F9F9F8F8F7F7F6F5F4F4F3F2F1F0EFEEEDECEBEAE9E7E6E5E4E3E1E0DFDEDDDBDAD9D8D7D5D4D3
D2D1CFCECDCCCBC9C8C7C6C4C3C2C1BFBEBDBBBAB9B8B6B5B4B3B2B1AFAEADACABAAA8A7A6A5A4A3
A2A19F9E9D9C9B9998979695949391908F8E8D8C8B8988878685848382817F7F7D7C7B7A79787675
747371706F6E6D6B6A6968676664636261605E5D5C5B5A5958575554535251504F4D4C4B4A494846
4544434241403E3D3C3B3A39383635343332312F2E2D2C2B2A29282625242322211F1E1D1C1B1A19
18171514131211100F0E0D0C0B0A0908070605030302
>
0.9882
<
050404040404040404040505060607070708080909090A0A0B0B0C0C0C0D0D0D0E0E0E0E0E0E0E0E
0E0E0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0C0C0C0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0E
0E0E0E0F0F0F0F10101010101010100F0F0F0F0E0E0E0D0D0C0C0B0A0A0908060605040404040505
0606070708080809090A0A0B0B0C0C0D0D0E0E0E0F0F0F1010101111111111111212121212121212
12121212111111111110101010101010101011111111111111101010101111111111111111111111
11111111101010100F0F0F0E0E0D0D0C0B0B0A090908
>
<
01010101010101010101010101010102020202020202020202020202020202020202020202020202
02020202020201010101010101010101010101010101010101010202020202020202020303030303
03030303030303030303030303030303030303030202020202020202020101010101010101010101
01010102020202020202020202020203030303030303030303030302020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020201010101010101010101010101010000000000
>
<
131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A
3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162
636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A
8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2
B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA
DBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010102020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202
>
<
7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7C7D7D7D
7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D
7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7D7E7E7E7E7E7E7E7E7E
7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E
7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F
>
4 %_Br
<
E8E8E7E7E7E7E7E7E7E7E7E7E7E7E7E7E7E8E8E8E8E9E9E9EAEAEBECECEDEEEEEEEEEEEEEEEEEEEE
EEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F1F1F2F2F3F4F4F4F4F4F3F3F2F2F1F1F1F1F0
F0F0EFEFEFEEEEEEEEEFEFEFEFF0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F3F3F3F3F4F4F4
F5F5F6F6F6F5F5F4F4F4F4F4F4F4F5F4F5F5F5F6F6F6F7F7F7F7F8F8F8F9F9F9F9F9F9F9F9
>
<
14151618191A1B1D1E202123242628292B2C2E2F303233343637393A3B3C3D3F4041424445474849
4B4C4E4F5152545557585A5C5D5F606263656668696B6C6D6E707172747577797B7C7E8082838587
898B8C8E909293959698999B9D9E9FA1A2A4A5A7A8AAACADAFB0B2B3B5B7B8BABBBDBEBFC1C2C4C5
C7C8C9CBCDCFD1D3D5D6D8DADCDEE0E2E4E6E8EAECEDEFF1F2F4F5F7F8F9F9FAFAFAFBFBFC
>
<
090809070806070607060706070605060606070708080809090909090A0A0B0B0B0B0C0C0D0D0D0D
0D0E0D0E0E0E0E0E0E0E0E0E0D0D0D0D0D0C0C0C0C0B0B0A0B0A0909080807080708070807070605
060606060606070607070808090A0A0A0B0B0B0C0C0C0C0D0C0C0D0C0C0C0C0C0C0B0C0B0B0A0A0A
09090808070707080708070607060606060505040404040303030303020202030304040505
>
0.0039
<
01010101010202020202020202030303030303030303040404040404040404050505050505050506
060606060606060607070707070707070708080808080808080909090909090909090A0A0A0A0A0A
0A0A0A0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0F0F0F
0F0F0F0F0F0F10101010101010101011111111111111111212121212121212121313131313
>
<
9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978777675
74737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D
4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928272625
24232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
C4C4C3C3C2C2C1C1C0C0BFBFBEBEBEBDBDBCBCBBBBBABAB9B9B8B8B8B7B7B6B6B5B5B4B4B3B3B2B2
B2B1B1B0B0AFAFAEAEADADACACACABABAAAAA9A9A8A8A7A7A6A6A6A5A5A4A4A3A3A2A2A1A1A0A0A0
9F9F9E9E9D9D9C9C9B9B9A9A9A9999989897979696959594949493939292919190908F8F8E8E8E8D
8D8C8C8B8B8A8A898988888887878686858584848383828282818180807F7F7E7E7D7D7C7C
>
4 %_Br
<
ECECECECECECECECECECECECECECECECECECEBEBECECECECECEBEBEBECECECECECECECECEDEDEEED
EEEEEFEFF0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0EFEFEEEEEDEDEDEDECECECEC
EBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEBEAEAEAEAEBEBEBEAEBEBEBEBEBEBEAEAEAEAEBEBEBEAEAEA
EAEAEAE9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8
>
<
1313131312121212131313121212121212131212121212121211111111121211111111111010100F
0F0F0F0F0F0F0E0E0E0E0E0E0F0E0E0E0E0F0F0F0E0E0F0F0F10100F101010111112121112121212
13131212121313131312121213131313121212121212121111111112121211111111111111101011
11111112111111121212131212121313131413131414
>
<
EFEDECEAE9E8E6E4E3E1DFDEDDDBD9D7D6D4D3D1CFCECCCAC9C7C6C4C2C0BFBDBCBAB8B6B4B3B1B0
AEACABA9A7A6A5A3A19F9E9C9A9997969492908E8E8C8A88868583827F7D7B7977757372706E6C6A
68666563615F5E5C5A5957555352504E4D4B4A4846444342403E3D3B3937363432302F2D2B2A2827
252321201F1E1C1B19181616141312100F0D0D0C0B09
>
<
03030303030303030303030303030302020202020202020202020202020202020202020202010101
01010101010101010101020202020202020202020202020202030302030303030303030303030303
03030303030303030303030303020202020202020202020202020202020201010101010101010101
01010101010101010101010101010101010101010101
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101
>
<
88888888898989898989898A8A8A8A8A8A8A8B8B8B8B8B8B8B8C8C8C8C8C8C8C8D8D8D8D8D8D8D8E
8E8E8E8E8E8E8F8F8F8F8F8F8F909090909090909191919191919192929292929292929393939393
93939494949494949495959595959595969696969696969797979797979798989898989898999999
999999999A9A9A9A9A9A9A9B9B9B9B9B9B9B9C9C9C9C
>
<
3738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E
5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F80818283848586
8788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAE
AFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4
>
4 %_Br
<
080809090A0A0B0B0C0D0D0E0E0F0F10111212131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9E9FA0
A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C4C5C6C7C8CACB
CCCDCFD0D1D2D3D5D6D7D8D9DADBDCDEDEDFE0E1E2E3E4E5E5E6E7E7E8E9E9EAEAEBEBEBECECECEC
ECEDEDEDEDEDEDEDEDECECECECECECEC
>
<
05050505060506060606060607060707060707070707070707070707070707060606060606060606
06060605050505050405040404040404030403040303030303030303030303030404040404040405
04050505050505050506060506060606060607060707070707070707070707070707070707070707
07070706070607060606060606060605050505050505040504040404040403030303030203030303
03030303030303040404040505050506060606070707070708080808080809080909090909090909
090909090909090A090A0909090909090A090A090A090A090A0A090A090A0A0A0A0A0A0B0B0B0B0C
0B0B0C0C0D0D0E0E0F0F101011111313
>
<
E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEBEBEBECECEDEDEDEEEEEFEFEFF0F0F1F1F2F3F3F4
F4F5F6F6F7F7F8F9F9F9F9F9F9F9F9F9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F2F2F1F1F1
F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F1F0F1F1F1F2F1F2F2F2F3F3F3F4F4F4F5F5F6F6F7
F7F7F8F8F9F9FAFBFAFBFAFAFAF9F8F9F9F7F7F7F7F6F6F5F5F5F5F4F4F4F4F3F3F3F3F3F3F3F3F3
F2F3F3F3F3F3F3F3F4F4F4F4F4F5F5F5F5F6F6F6F6F7F7F7F7F8F8F9F9F9FAFAFAF9F9F9F9FAF9F9
F9F9F9F8F9F8F8F7F8F7F8F7F7F7F7F7F6F7F6F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5
F6F6F6F6F5F5F5F5F5F3F2F2F1F0EFEF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000100010101010101010101
01010101010101010101010101010101000100000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010202020202
02020202020202020202030303030303
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFFFEFEFDFDFCFCFBFBFAFAF9F9F8F8F8F7F7F6F6F5F5F4F4F3F3F2F2F1F1F1F0F0EFEFEEEEEDED
ECECEBEBEAEAEAE9E9E8E8E7E7E6E6E5E5E4E4E3E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDCDBDBDA
DAD9D9D8D8D7D7D6D6D5D5D5D4D4D3D3D2D2D1D1D0D0CFCFCECECECDCDCCCCCBCBCACAC9C9C8C8C7
C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0C0C0BFBFBEBEBDBDBCBCBBBBBABAB9B9B9B8B8B7B7B6B6B5B5
B4B4B3B3B2B2B2B1B1B0B0AFAFAEAEADADACACABABABAAAAA9A9A8A8A7A7A6A6A5A5A4A4A4A3A3A2
A2A1A1A0A09F9F9E9E9D9D9D9C9C9B9B9A9A9999989897979696969595949493939292919190908F
8F8F8E8E8D8D8C8C8B8B8A8A89898888
>
<
00000001010101020202020203030303030404040405050505050606060606070707070808080808
09090909090A0A0A0A0B0B0B0B0B0C0C0C0C0D0D0D0D0D0E0E0E0E0E0F0F0F0F1010101010111111
1111121212121313131313141414141415151515161616161617171717181818181819191919191A
1A1A1A1B1B1B1B1B1C1C1C1C1C1D1D1D1D1E1E1E1E1E1F1F1F1F1F20202020212121212122222222
2323232323242424242425252525262626262627272727272828282829292929292A2A2A2A2A2B2B
2B2B2C2C2C2C2C2D2D2D2D2E2E2E2E2E2F2F2F2F2F30303030313131313132323232323333333334
34343434353535353536363636373737
>
4 %_Br
<
03030303040404040404040404040404040505050505050505050606060606060606060606060606
06060606060606060606060606060505050505040404040404040404040404050505050606060606
06070707070707070707070606060606050505050505050505050505050505060606060607070707
07070707070707060606060605050505050505050505050505060606060707070707070707070707
07060606060505050404040404040404040505060606060707070707070707070707060606060505
04040403020202020203030404050506060607070707070707070707070707060606060505040403
03030303030304050506060607070708
>
<
F5F5F4F4F4F4F4F3F3F3F2F2F1F1F0F0EFEFEEEDEDECEBEAEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDB
DAD9D8D7D6D5D4D2D1D0CFCECDCBCAC9C8C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6B6A696867666564636261605F5E
5D5C5B5A595857565655545251504F4E4D4C4B4A4948464544434241403F3E3D3C3B3A3A39383736
353434333231302F2E2D2B2A2928272524232221201F1E1D1C1B1A19181716151413121211100F0F
0E0D0C0C0B0A0A090808070706060505
>
0.9137
0
1
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
4 %_Br
[
0.0078 0.9882 0.0314 0 0.9412 0.0078 0.498 2 50 100 %_Bs
0.9765 0.9882 0.0196 0.0039 0.0745 0 0.4863 2 50 80 %_Bs
0.9098 0.0784 0.0353 0.0039 0.0039 0.6118 0.7686 2 50 60 %_Bs
0.9255 0.0745 0.9373 0.0118 0 0.5333 0.2157 2 50 40 %_Bs
0.0314 0.0196 0.9137 0 1 1 0 2 50 20 %_Bs
0.0118 0.9608 0.9137 0 1 0 0 2 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
<
08070707070606060605050403030303030303030404050505060606060707070707070707070707
07070706060605050504040303020202020203040404050506060606060707070707070707070707
07070606060505050505050505050505050506060607070707070707070707070707070707060606
0606060606060505050505060606060707070707070707070707070707
>
<
05050506060707080808090A0A0B0B0C0C0D0E0F0F1011111212131415161718191A1A1B1C1D1E1F
202122232425272828292A2B2D2E2F3031323334343536373839393A3A3B3C3D3E3F404142434445
4647494A4B4C4D4E4F50515253545556565758595A5B5C5D5E5F606162636465666768696A6B6C6E
6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B
>
<
E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E9E9E9E9E9EAEAEAEAEBEBEBEBEBECECECEC
ECEDEDEDEDEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFF0F0F0F1F1F1F1F2F2F2F2F2F2F2F2F3F3F3F3F3
F3F3F4F4F4F4F4F4F3F3F2F2F2F1F0F0F0F0EFEFEEEEEDEDEDECECECEBEBEAEAEAEAE9E9E8E8E8E8
E8E7E7E6E6E6E6E6E6E5E4E4E4E4E4E4E4E3E3E3E2E2E2E2E2E1E1E1E1
>
<
00000000000000000000000000000000000000000000000000000000000001010101010101010101
01010101000000000000000000000000000000000000000001010101010101010101010101010101
01010101010101010101010000000000000000000101010101010101010101010101010101010000
0001010101010101000000000000000000010101010101010101010101
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
>
<
FFFEFEFDFCFBFAF9F9F8F7F6F5F4F4F3F2F1F0EFEEEDECECEBEAE9E8E7E6E5E4E3E2E2E1E0DFDEDD
DCDBDAD9D8D7D6D5D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C4C3C2C1C0BFBEBDBCBBBAB9B8B7
B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190
8F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776757473
>
<
00000000000101010101010101010202020202020202030303030303030303040404040404040405
050505050505060606060606060607070707070707070808080808080808090909090909090A0A0A
0A0A0A0A0A0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F
0F0F0F1010101010101011111111111111121212121212121213131313
>
4 %_Br
[
0.0314 0.0196 0.9137 0 1 1 0 2 52 19 %_Bs
0.0275 0.5451 0.8824 0.0039 0.9961 0.451 0.0745 2 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Brick)
(Brick) 0 0 72 72 [
%AI3_Tile
(0 O 0 R 0.702 0.1333 0.0941 Xa
 0.702 0.1333 0.0941 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
0 0 m
0 72 L
72 72 L
72 0 L
0 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d
0 XR
0 68.4097 m
72 68.4097 l
S
0 61.209 m
72 61.209 L
S
0 54.0088 m
72 54.0088 L
S
0 46.8076 m
72 46.8076 L
S
0 39.6084 m
72 39.6084 L
S
0 32.4072 m
72 32.4072 L
S
0 25.207 m
72 25.207 L
S
0 18.0059 m
72 18.0059 L
S
0 10.8057 m
72 10.8057 L
S
0 3.6064 m
72 3.6064 L
S
68.4102 68.4097 m
68.4102 61.2217 l
S
54.0098 68.4097 m
54.0098 61.2217 L
S
39.6094 68.4097 m
39.6094 61.2217 L
S
25.21 68.4097 m
25.21 61.2217 L
S
10.8105 68.4097 m
10.8105 61.2217 L
S
68.4102 53.9717 m
68.4102 46.7842 l
S
54.0098 53.9717 m
54.0098 46.7842 L
S
39.6094 53.9717 m
39.6094 46.7842 L
S
25.21 53.9717 m
25.21 46.7842 L
S
10.8105 53.9717 m
10.8105 46.7842 L
S
68.4102 39.5967 m
68.4102 32.4092 l
S
54.0098 39.5967 m
54.0098 32.4092 L
S
39.6094 39.5967 m
39.6094 32.4092 L
S
25.21 39.5967 m
25.21 32.4092 L
S
10.8105 39.5967 m
10.8105 32.4092 L
S
68.4102 25.2217 m
68.4102 18.0342 l
S
54.0098 25.2217 m
54.0098 18.0342 L
S
39.6094 25.2217 m
39.6094 18.0342 L
S
25.21 25.2217 m
25.21 18.0342 L
S
10.8105 25.2217 m
10.8105 18.0342 L
S
68.4102 10.7842 m
68.4102 3.5967 l
S
54.0098 10.7842 m
54.0098 3.5967 L
S
39.6094 10.7842 m
39.6094 3.5967 L
S
25.21 10.7842 m
25.21 3.5967 L
S
10.8105 10.7842 m
10.8105 3.5967 L
S
61.1973 3.5967 m
61.1973 0 L
S
46.7969 3.5967 m
46.7969 0 L
S
32.3965 3.5967 m
32.3965 0 L
S
17.9971 3.5967 m
17.9971 0 L
S
3.5967 3.5967 m
3.5967 0 l
S
61.1973 18.0342 m
61.1973 10.8467 L
S
46.7969 18.0342 m
46.7969 10.8467 L
S
32.3965 18.0342 m
32.3965 10.8467 L
S
17.9971 18.0342 m
17.9971 10.8467 L
S
3.5967 18.0342 m
3.5967 10.8467 l
S
61.1973 32.4092 m
61.1973 25.2217 L
S
46.7969 32.4092 m
46.7969 25.2217 L
S
17.9971 32.4092 m
17.9971 25.2217 L
S
3.5967 32.4092 m
3.5967 25.2217 l
S
61.1973 46.7842 m
61.1973 39.5967 L
S
46.7969 46.7842 m
46.7969 39.5967 L
S
32.3965 46.7842 m
32.3965 39.5967 L
S
17.9971 46.7842 m
17.9971 39.5967 L
S
3.5967 46.7842 m
3.5967 39.5967 l
S
61.1973 61.2217 m
61.1973 54.0347 L
S
46.7969 61.2217 m
46.7969 54.0347 L
S
32.3965 61.2217 m
32.3965 54.0347 L
S
17.9971 61.2217 m
17.9971 54.0347 L
S
3.5967 61.2217 m
3.5967 54.0347 l
S
61.1973 71.959 m
61.1973 68.4717 L
S
46.7969 71.959 m
46.7969 68.4717 L
S
32.3965 71.959 m
32.3965 68.4717 L
S
17.9971 71.959 m
17.9971 68.4717 L
S
3.5967 71.959 m
3.5967 68.4717 l
S
32.3965 32.4092 m
32.3965 25.2217 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Confetti)
(Confetti) 4.85 3.617 76.85 75.617 [
%AI3_Tile
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
4.85 3.617 m
4.85 75.617 L
76.85 75.617 L
76.85 3.617 L
4.85 3.617 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d
0 XR
10.6 64.867 m
7.85 62.867 l
S
9.1 8.617 m
6.85 6.867 l
S
78.1 68.617 m
74.85 67.867 l
S
76.85 56.867 m
74.35 55.117 l
S
79.6 51.617 m
76.6 51.617 l
S
76.35 44.117 m
73.6 45.867 l
S
78.6 35.867 m
76.6 34.367 l
S
76.1 23.867 m
73.35 26.117 l
S
78.1 12.867 m
73.85 13.617 l
S
68.35 14.617 m
66.1 12.867 l
S
76.6 30.617 m
73.6 30.617 l
S
62.85 58.117 m
60.956 60.941 l
S
32.85 59.617 m
31.196 62.181 l
S
47.891 64.061 m
49.744 66.742 l
S
72.814 2.769 m
73.928 5.729 l
S
67.976 2.633 m
67.35 5.909 l
S
61.85 27.617 m
59.956 30.441 l
S
53.504 56.053 m
51.85 58.617 l
S
52.762 1.779 m
52.876 4.776 l
S
45.391 5.311 m
47.244 7.992 l
S
37.062 3.375 m
35.639 5.43 l
S
55.165 34.828 m
57.518 37.491 l
S
20.795 3.242 m
22.12 5.193 l
S
14.097 4.747 m
15.008 8.965 l
S
9.736 1.91 m
8.073 4.225 l
S
31.891 5.573 m
32.005 8.571 l
S
12.1 70.367 m
15.6 68.867 l
S
9.35 54.867 m
9.6 58.117 l
S
12.85 31.867 m
14.35 28.117 l
S
10.1 37.367 m
12.35 41.117 l
S
34.1 71.117 m
31.85 68.617 l
S
38.35 71.117 m
41.6 68.367 l
S
55.1 71.117 m
58.35 69.117 l
S
57.35 65.117 m
55.35 61.867 l
S
64.35 66.367 m
69.35 68.617 l
S
71.85 62.867 m
69.35 61.117 l
S
23.6 70.867 m
23.6 67.867 l
S
20.6 65.867 m
17.35 65.367 l
S
24.85 61.367 m
25.35 58.117 l
S
25.85 65.867 m
29.35 66.617 l
S
14.1 54.117 m
16.85 56.117 l
S
12.35 11.617 m
12.6 15.617 l
S
12.1 19.867 m
14.35 22.367 l
S
26.1 9.867 m
23.6 13.367 l
S
34.6 47.117 m
32.1 45.367 l
S
62.6 41.867 m
59.85 43.367 l
S
31.6 35.617 m
27.85 36.367 l
S
36.35 26.117 m
34.35 24.617 l
S
33.85 14.117 m
31.1 16.367 l
S
37.1 9.867 m
35.1 11.117 l
S
34.35 20.867 m
31.35 20.867 l
S
44.6 56.617 m
42.1 54.867 l
S
47.35 51.367 m
44.35 51.367 l
S
44.1 43.867 m
41.35 45.617 l
S
43.35 33.117 m
42.6 30.617 l
S
43.85 23.617 m
41.1 25.867 l
S
44.35 15.617 m
42.35 16.867 l
S
67.823 31.1 m
64.823 31.1 l
S
27.1 32.617 m
29.6 30.867 l
S
31.85 55.117 m
34.85 55.117 l
S
19.6 40.867 m
22.1 39.117 l
S
16.85 35.617 m
19.85 35.617 l
S
20.1 28.117 m
22.85 29.867 l
S
52.1 42.617 m
54.484 44.178 l
S
52.437 50.146 m
54.821 48.325 l
S
59.572 54.133 m
59.35 51.117 l
S
50.185 10.055 m
53.234 9.928 l
S
51.187 15.896 m
53.571 14.075 l
S
58.322 19.883 m
59.445 16.823 l
S
53.1 32.117 m
50.6 30.367 l
S
52.85 24.617 m
49.6 25.617 l
S
61.85 9.117 m
59.1 10.867 l
S
69.35 34.617 m
66.6 36.367 l
S
67.1 23.617 m
65.1 22.117 l
S
24.435 46.055 m
27.484 45.928 l
S
25.437 51.896 m
27.821 50.075 l
S
62.6 47.117 m
65.321 46.575 l
S
19.85 19.867 m
20.35 16.617 l
S
21.85 21.867 m
25.35 22.617 l
S
37.6 62.867 m
41.6 62.117 l
S
38.323 42.1 m
38.823 38.6 l
S
69.35 52.617 m
66.85 53.867 l
S
14.85 62.117 m
18.1 59.367 l
S
9.6 46.117 m
7.1 44.367 l
S
20.6 51.617 m
18.6 50.117 l
S
46.141 70.811 m
47.994 73.492 l
S
69.391 40.561 m
71.244 43.242 l
S
38.641 49.311 m
39.35 52.117 l
S
25.141 16.811 m
25.85 19.617 l
S
36.6 32.867 m
34.6 31.367 l
S
6.1 68.617 m
2.85 67.867 l
S
4.85 56.867 m
2.35 55.117 l
S
7.6 51.617 m
4.6 51.617 l
S
6.6 35.867 m
4.6 34.367 l
S
6.1 12.867 m
1.85 13.617 l
S
4.6 30.617 m
1.6 30.617 l
S
72.814 74.769 m
73.928 77.729 l
S
67.976 74.633 m
67.35 77.909 l
S
52.762 73.779 m
52.876 76.776 l
S
37.062 75.375 m
35.639 77.43 l
S
20.795 75.242 m
22.12 77.193 l
S
9.736 73.91 m
8.073 76.225 l
S
10.1 23.617 m
6.35 24.367 l
S
73.217 18.276 m
71.323 21.1 l
S
28.823 39.6 m
29.505 42.389 l
S
49.6 38.617 m
47.6 37.117 l
S
60.323 73.6 m
62.323 76.6 l
S
60.323 1.6 m
62.323 4.6 l
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Leaves - Fall )
(Leaves - Fall ) 0 0 64.0781 78.9336 [
%AI3_Tile
(0 O 0 R 0.949 0.7804 0.0078 Xa
 0.949 0.7804 0.0078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
64.0781 78.9336 m
64.0781 0 L
0 0 L
0 78.9336 L
64.0781 78.9336 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1725 0.6118 0.1804 Xa
 0.1725 0.6118 0.1804 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d
0 XR
29.7578 0.9902 m
30.4346 1.1914 30.7246 1.3428 V
29.2559 4.0547 33.707 8.3359 34.627 9.0762 C
35.2275 8.8506 35.3477 6.3184 34.6699 4.9805 C
35.5137 5.1035 37.7031 3.7256 38.4609 2.4365 C
38.5254 3.125 40.0957 6.0664 40.9219 6.4434 C
40.002 6.8408 39.3359 8.3135 38.5742 9.7617 C
39.5957 9.9287 40.9961 9.0078 42.4668 8.1025 C
42.9814 8.9043 44.3555 9.875 45.6143 10.3916 C
44.5264 11.0781 44.0313 11.8203 43.5352 13.2793 C
42.4922 12.7139 40.3057 12.5645 39.7764 12.8516 C
40.291 13.9648 42.5371 14.5078 43.2676 14.4551 C
43.0137 15.3164 42.8652 17.4697 43.0391 20.0625 C
41.3789 18.7461 39.834 17.4297 38.1738 17.4883 C
38.4434 16.0664 37.8076 14.2607 37.4307 13.7676 C
36.8574 14.5117 36.4463 15.3389 36.8008 17.3164 C
35.3486 17.8008 34.1113 18.3467 32.7373 19.6045 C
32.7373 17.7734 32.166 16.5723 31.2969 15.2959 C
32.5576 14.8076 33.8301 13.6045 33.8252 12.5664 C
32.9775 12.7178 31.2852 13.4619 30.793 14.4551 C
30.0742 13.707 28.3906 12.3984 26.7871 12.3945 C
27.9746 11.5391 28.8945 10.5059 28.9893 8.5938 C
30.2422 9.5645 32.6953 10.1797 34.0752 9.582 C
29.2344 5.3457 29.7031 2.3125 29.7578 0.9902 C
f
13.8525 29.9844 m
13.3281 29.5127 13.1309 29.25 V
15.623 27.4326 13.3691 21.6074 12.8555 20.5439 C
12.2168 20.4883 10.8096 23.2285 10.8457 24.7266 C
9.7129 23.9707 8.0488 24.0918 6.4463 24.3779 C
7.0186 23.2891 6.6172 21.3447 5.8164 20.5439 C
6.8184 20.5801 8.1699 19.8652 9.4785 18.8838 C
8.6436 18.0645 6.8164 18.2246 4.9004 18.8838 C
4.9004 17.5107 4.0781 15.7734 3.2412 14.5918 C
4.5576 14.6484 5.7031 13.9629 6.5605 12.9316 C
7.2256 14.5 9.2598 15.6133 10.166 15.5645 C
10.1826 14.1992 8.6094 12.1094 7.5879 11.7109 C
8.1875 11.041 9.207 9.5107 10.166 7.0947 C
10.9648 9.0205 12.1348 10.2627 13.3672 11.1953 C
12.2256 12.7578 12.3994 13.6289 12.7988 15.1074 C
13.541 14.5664 14.5723 14.1338 14.7441 12.1309 C
16.4609 12.416 17.5957 12.3447 19.0938 11.4434 C
18.6387 13.1055 18.6348 14.707 18.9551 16.4063 C
17.1055 16.2666 15.5449 16.4795 14.5156 17.9688 C
15.3457 18.1953 17.6055 18.2549 18.4795 17.3223 C
18.8066 18.3047 19.7012 19.7109 21.1475 20.4043 C
19.707 20.6641 18.7227 21.7637 17.8135 23.4492 C
17.1006 22.0332 14.873 20.3691 13.3711 20.3145 C
15.373 24.3779 15.373 27.2959 13.8525 29.9844 C
f
41.2324 26.0742 m
41.5518 26.7021 41.7549 26.959 V
44.1523 25.0176 48.958 28.3262 49.8535 29.0957 C
49.7432 29.7266 47.6182 30.8643 45.9004 29.834 C
46.3408 31.123 45.4395 33.084 44.2402 34.126 C
45.9805 34.0254 48.126 35.3867 48.6484 36.1289 C
48.8701 35.1514 50.0527 33.8809 51.3379 32.8672 C
51.6895 33.8398 50.9941 35.958 50.0781 37.5605 C
51.3125 38.0605 52.4248 38.9912 52.8828 40.25 C
53.3398 38.9336 54.3428 38.2598 55.6875 37.5039 C
54.5273 36.0762 53.7471 33.9023 54.0273 33.0391 C
55.3496 33.374 56.9209 36.0918 57.0439 37.1816 C
57.9189 36.415 59.4727 35.7285 62.0537 35.4219 C
60.3535 34.3438 59.9902 32.3516 59.4063 30.9219 C
58.2588 31.3682 56.0898 31.4277 55.1152 30.8643 C
55.8281 30.2852 57.168 29.7344 59.1777 29.7207 C
59.1777 28.1758 59.6406 27.043 60.8945 25.8281 C
59.1719 25.8418 57.0723 25.3555 55.5762 24.9629 C
55.3281 26.292 54.4844 27.8887 53.3398 28.2891 C
53.334 27.4277 53.5996 25.1797 54.4844 24.5117 C
53.6201 23.9443 52.3672 22.5674 51.9102 20.8496 C
51.2881 22.1758 50.4268 23.4805 48.5645 23.9238 C
49.749 24.9766 50.584 26.9941 50.25 28.4609 C
45.1973 24.4785 42.5215 25.7773 41.2324 26.0742 C
f
27.7578 38.7324 m
28.4346 38.9316 28.7246 39.084 V
27.2559 41.7969 31.707 46.0776 32.627 46.8169 C
33.2275 46.5918 33.3477 44.0586 32.6699 42.7227 C
33.5137 42.8457 35.7031 41.4678 36.4609 40.1787 C
36.5254 40.8652 38.0957 43.8066 38.9219 44.1846 C
38.002 44.582 37.3359 46.0547 36.5742 47.5039 C
37.5957 47.6709 38.9961 46.7485 40.4668 45.8438 C
40.9814 46.6445 42.3555 47.6177 43.6143 48.1328 C
42.5264 48.8198 42.0313 49.5615 41.5352 51.0205 C
40.4922 50.4556 38.3057 50.3057 37.7764 50.5938 C
38.291 51.7056 40.5371 52.2485 41.2676 52.1958 C
41.0137 53.0576 40.8652 55.2109 41.0391 57.8037 C
39.3789 56.4878 37.834 55.1719 36.1738 55.2285 C
36.4434 53.8076 35.8076 52.002 35.4307 51.5088 C
34.8574 52.2529 34.4463 53.0796 34.8008 55.0576 C
33.3486 55.5425 32.1113 56.0879 30.7373 57.3467 C
30.7373 55.5146 30.166 54.314 29.2969 53.0366 C
30.5576 52.5488 31.8301 51.3467 31.8252 50.3076 C
30.9775 50.46 29.2852 51.2036 28.793 52.1958 C
28.0742 51.4497 26.3906 50.1396 24.7871 50.1357 C
25.9746 49.2817 26.8945 48.2466 26.9893 46.335 C
28.2422 47.3057 30.6953 47.9209 32.0752 47.3237 C
27.2344 43.0869 27.7031 40.0547 27.7578 38.7324 C
f
13.5195 70.3916 m
12.9941 69.9209 12.7988 69.6587 V
15.2891 67.8418 13.0352 62.0146 12.5225 60.9517 C
11.8828 60.8955 10.4766 63.6367 10.5117 65.1348 C
9.3809 64.3789 7.7148 64.4995 6.1133 64.7856 C
6.6855 63.6987 6.2842 61.7529 5.4834 60.9517 C
6.4854 60.9878 7.8359 60.2729 9.1455 59.2925 C
8.3105 58.4717 6.4834 58.6338 4.5674 59.2925 C
4.5674 57.9189 3.7461 56.1816 2.9082 54.9995 C
4.2246 55.0576 5.3691 54.3706 6.2275 53.3408 C
6.8926 54.9097 8.9258 56.0215 9.832 55.9727 C
9.8496 54.6079 8.2764 52.5176 7.2539 52.1187 C
7.8545 51.4497 8.873 49.9189 9.832 47.5039 C
10.6309 49.4297 11.8008 50.6719 13.0342 51.6045 C
11.8926 53.1655 12.0664 54.0366 12.4648 55.5146 C
13.209 54.9746 14.2393 54.5415 14.4102 52.5386 C
16.127 52.8247 17.2637 52.7529 18.7598 51.8525 C
18.3057 53.5137 18.3027 55.1147 18.623 56.8149 C
16.7725 56.6748 15.2129 56.8887 14.1826 58.377 C
15.0117 58.6035 17.2725 58.6626 18.1465 57.731 C
18.4736 58.7129 19.3691 60.1187 20.8145 60.8125 C
19.375 61.0728 18.3896 62.1719 17.4805 63.8579 C
16.7676 62.4429 14.541 60.7769 13.0371 60.7227 C
15.041 64.7856 15.041 67.7046 13.5195 70.3916 C
f
41.2324 64.4824 m
41.5518 65.1113 41.7549 65.3682 V
44.1523 63.4272 48.958 66.7354 49.8535 67.5034 C
49.7432 68.1362 47.6182 69.2725 45.9004 68.2422 C
46.3408 69.5313 45.4395 71.4922 44.2402 72.5342 C
45.9805 72.4341 48.126 73.7954 48.6484 74.5371 C
48.8701 73.5601 50.0527 72.29 51.3379 71.2754 C
51.6895 72.249 50.9941 74.3662 50.0781 75.9683 C
51.3125 76.4692 52.4248 77.3994 52.8828 78.6582 C
53.3398 77.3423 54.3428 76.667 55.6875 75.9111 C
54.5273 74.4844 53.7471 72.3101 54.0273 71.4473 C
55.3496 71.7822 56.9209 74.5 57.0439 75.5903 C
57.9189 74.8232 59.4727 74.1372 62.0537 73.8311 C
60.3535 72.7534 59.9902 70.7612 59.4063 69.3301 C
58.2588 69.7773 56.0898 69.8364 55.1152 69.2725 C
55.8281 68.6934 57.168 68.1431 59.1777 68.1284 C
59.1777 66.583 59.6406 65.4512 60.8945 64.2373 C
59.1719 64.249 57.0723 63.7632 55.5762 63.3721 C
55.3281 64.7002 54.4844 66.2974 53.3398 66.6973 C
53.334 65.8364 53.5996 63.5874 54.4844 62.9214 C
53.6201 62.353 52.3672 60.9751 51.9102 59.2583 C
51.2881 60.583 50.4268 61.8882 48.5645 62.333 C
49.749 63.3862 50.584 65.4033 50.25 66.8691 C
45.1973 62.8872 42.5215 64.1851 41.2324 64.4824 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Stripes)
(Stripes) 8.45 4.6001 80.45 76.6001 [
%AI3_Tile
(0 O 0 R 0 0.4941 0.2 Xa
 0 0.4941 0.2 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 3.6 w 4 M []0 d
0 XR
8.2 8.2 m
80.7 8.2 L
S
8.2 22.6001 m
80.7 22.6001 L
S
8.2 37.0002 m
80.7 37.0002 L
S
8.2 51.4 m
80.7 51.4 L
S
8.2 65.8001 m
80.7 65.8001 L
S
8.2 15.4 m
80.7 15.4 L
S
8.2 29.8001 m
80.7 29.8001 L
S
8.2 44.2 m
80.7 44.2 L
S
8.2 58.6001 m
80.7 58.6001 L
S
8.2 73.0002 m
80.7 73.0002 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0 0 0 Xa
([Registration]) Pc
1 1 1 Xa
(C=0 M=0 Y=0 K=0) Pc
0 0 0 Xa
(C=0 M=0 Y=0 K=100) Pc
1 0.902 0 Xa
(C=0 M=10 Y=100 K=0) Pc
0.9686 0.5059 0.749 Xa
(C=0 M=50 Y=0 K=0) Pc
1 0.498 0 Xa
(C=0 M=50 Y=100 K=0) Pc
0 0.2392 0.098 Xa
(C=100 M=55 Y=100 K=0) Pc
0.0627 0.0667 0.4667 Xa
(C=100 M=90 Y=10 K=0) Pc
0.851 0 0 Xa
(C=15 M=100 Y=100 K=0) Pc
0.549 0.0941 0.5333 Xa
(C=45 M=90 Y=0 K=0) Pc
0.502 0.4824 0.5333 Xa
(C=50 M=40 Y=30 K=0) Pc
0.498 0.1176 0.0078 Xa
(C=50 M=85 Y=100 K=0) Pc
0.251 0.6157 0.1529 Xa
(C=75 M=5 Y=100 K=0) Pc
0.2902 0.0784 0.5255 Xa
(C=75 M=90 Y=0 K=0) Pc
0.2078 0.6667 0.8039 Xa
(C=80 M=5 Y=0 K=0) Pc
Bb
2 (Black, White) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Black, White) Pc
Bb
2 (Chrome) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Chrome) Pc
Bb
2 (Rainbow) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Rainbow) Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Yellow & Orange Radial) Pc
(Brick) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Brick) Pc
(Confetti) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Confetti) Pc
(Leaves - Fall ) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Leaves - Fall ) Pc
(Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Stripes) Pc
PB
%AI5_EndPalette
%AI5_BeginLayer
1 1 0 1 0 0 5 255 79 255 Lb
(om-w0) Ln
1 A
0 A
1 Ap
0 O
1 1 1 Xa
0 J 0 j 1 w 4 M []0 d
0 XR
142.3667 329.6426 m
99.7021 329.6426 L
99.7021 388.1543 L
142.3667 388.1543 L
142.3667 329.6426 L
f
u
u
*u
0 Ap
300 Ar
1 D
0 R
0 0 0 XA
1 j 10 M
52.0186 388.5342 m
208.4868 388.5342 l
208.4868 622.2007 l
52.0186 622.2007 l
52.0186 388.5342 l
208.4868 388.5342 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
52.0186 388.5342 m
208.4868 388.5342 l
S
/BBAccumRotation (0.000000) XT
300 Ar
57.2451 388.5342 m
57.2451 391.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
67.6973 388.5342 m
67.6973 391.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
78.1484 388.5342 m
78.1484 394.5918 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
75.1069 383.5244 m
74.561 383.1768 l
74.1704 382.3613 l
74.0151 380.9629 l
74.0151 380.1465 l
74.1704 378.749 l
74.561 377.8174 l
75.1069 377.585 l
75.4971 377.585 l
76.043 377.8174 l
76.4326 378.749 l
76.5889 380.1465 l
76.5889 380.9629 l
76.4326 382.3613 l
76.043 383.1768 l
75.4971 383.5244 l
75.1069 383.5244 l
74.7173 383.1768 l
74.561 382.9434 l
74.3267 382.3613 l
74.1704 380.9629 l
74.1704 380.1465 l
74.3267 378.749 l
74.561 378.167 l
74.7173 377.8174 l
75.1069 377.585 l
S
/BBAccumRotation (0.000000) XT
300 Ar
75.4971 377.585 m
75.8867 377.8174 l
76.043 378.167 l
76.1987 378.749 l
76.4326 380.1465 l
76.4326 380.9629 l
76.1987 382.3613 l
76.043 382.9434 l
75.8867 383.1768 l
75.4971 383.5244 l
S
/BBAccumRotation (0.000000) XT
300 Ar
78.1484 378.167 m
77.915 377.8174 l
78.1484 377.585 l
78.3047 377.8174 l
78.1484 378.167 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
79.7871 382.3613 m
80.0205 382.0117 l
79.7871 381.7783 l
79.6309 382.0117 l
79.6309 382.3613 l
79.7871 382.9434 l
80.0205 383.1768 l
80.5669 383.5244 l
81.2686 383.5244 l
81.8931 383.1768 l
82.0488 382.9434 l
82.2827 382.3613 l
82.2827 381.7783 l
82.0488 381.1963 l
81.5029 380.6123 l
80.5669 380.1465 l
80.1768 379.7979 l
79.7871 379.2168 l
79.6309 378.4014 l
79.6309 377.585 l
S
/BBAccumRotation (0.000000) XT
300 Ar
81.2686 383.5244 m
81.6587 383.1768 l
81.8931 382.9434 l
82.0488 382.3613 l
82.0488 381.7783 l
81.8931 381.1963 l
81.2686 380.6123 l
80.5669 380.1465 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
79.6309 378.167 m
79.7871 378.4014 l
80.1768 378.4014 l
81.1128 377.8174 l
81.6587 377.8174 l
82.0488 378.167 l
82.2827 378.4014 l
S
/BBAccumRotation (0.000000) XT
300 Ar
80.1768 378.4014 m
81.1128 377.585 l
81.8931 377.585 l
82.0488 377.8174 l
82.2827 378.4014 l
82.2827 378.9824 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
88.5225 388.5342 m
88.5225 391.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
98.9746 388.5342 m
98.9746 391.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
109.4268 388.5342 m
109.4268 391.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
119.8008 388.5342 m
119.8008 391.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
130.2529 388.5342 m
130.2529 394.5918 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
127.2891 383.5244 m
126.665 383.1768 l
126.3525 382.3613 l
126.1191 380.9629 l
126.1191 380.1465 l
126.3525 378.749 l
126.665 377.8174 l
127.2891 377.585 l
127.6006 377.585 l
128.2246 377.8174 l
128.6152 378.749 l
128.7705 380.1465 l
128.7705 380.9629 l
128.6152 382.3613 l
128.2246 383.1768 l
127.6006 383.5244 l
127.2891 383.5244 l
126.8984 383.1768 l
126.665 382.9434 l
126.5088 382.3613 l
126.3525 380.9629 l
126.3525 380.1465 l
126.5088 378.749 l
126.665 378.167 l
126.8984 377.8174 l
127.2891 377.585 l
S
/BBAccumRotation (0.000000) XT
300 Ar
127.6006 377.585 m
127.9912 377.8174 l
128.2246 378.167 l
128.3809 378.749 l
128.6152 380.1465 l
128.6152 380.9629 l
128.3809 382.3613 l
128.2246 382.9434 l
127.9912 383.1768 l
127.6006 383.5244 l
S
/BBAccumRotation (0.000000) XT
300 Ar
130.2529 378.167 m
130.0967 377.8174 l
130.2529 377.585 l
130.4868 377.8174 l
130.2529 378.167 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
131.9692 382.3613 m
132.1245 382.0117 l
131.9692 381.7783 l
131.7349 382.0117 l
131.7349 382.3613 l
131.9692 382.9434 l
132.1245 383.1768 l
132.6704 383.5244 l
133.4507 383.5244 l
133.9966 383.1768 l
134.231 382.5938 l
134.231 381.7783 l
133.9966 381.1963 l
133.4507 380.9629 l
132.9048 380.9629 l
S
/BBAccumRotation (0.000000) XT
300 Ar
133.4507 383.5244 m
133.8408 383.1768 l
133.9966 382.5938 l
133.9966 381.7783 l
133.8408 381.1963 l
133.4507 380.9629 l
133.8408 380.6123 l
134.231 380.1465 l
134.3867 379.5645 l
134.3867 378.749 l
134.231 378.167 l
133.9966 377.8174 l
133.4507 377.585 l
132.6704 377.585 l
132.1245 377.8174 l
131.9692 378.167 l
131.7349 378.749 l
131.7349 378.9824 l
131.9692 379.2168 l
132.1245 378.9824 l
131.9692 378.749 l
S
/BBAccumRotation (0.000000) XT
300 Ar
133.9966 380.3809 m
134.231 379.5645 l
134.231 378.749 l
133.9966 378.167 l
133.8408 377.8174 l
133.4507 377.585 l
S
/BBAccumRotation (0.000000) XT
300 Ar
140.7046 388.5342 m
140.7046 391.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
151.1567 388.5342 m
151.1567 391.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
161.5308 388.5342 m
161.5308 391.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
171.9829 388.5342 m
171.9829 391.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
182.4351 388.5342 m
182.4351 394.5918 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
179.3931 383.5244 m
178.8467 383.1768 l
178.457 382.3613 l
178.3008 380.9629 l
178.3008 380.1465 l
178.457 378.749 l
178.8467 377.8174 l
179.3931 377.585 l
179.7827 377.585 l
180.3286 377.8174 l
180.7192 378.749 l
180.9526 380.1465 l
180.9526 380.9629 l
180.7192 382.3613 l
180.3286 383.1768 l
179.7827 383.5244 l
179.3931 383.5244 l
179.0029 383.1768 l
178.8467 382.9434 l
178.6909 382.3613 l
178.457 380.9629 l
178.457 380.1465 l
178.6909 378.749 l
178.8467 378.167 l
179.0029 377.8174 l
179.3931 377.585 l
S
/BBAccumRotation (0.000000) XT
300 Ar
179.7827 377.585 m
180.1724 377.8174 l
180.3286 378.167 l
180.563 378.749 l
180.7192 380.1465 l
180.7192 380.9629 l
180.563 382.3613 l
180.3286 382.9434 l
180.1724 383.1768 l
179.7827 383.5244 l
S
/BBAccumRotation (0.000000) XT
300 Ar
182.4351 378.167 m
182.2007 377.8174 l
182.4351 377.585 l
182.5908 377.8174 l
182.4351 378.167 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
185.6328 382.9434 m
185.6328 377.585 l
S
/BBAccumRotation (0.000000) XT
300 Ar
185.7891 383.5244 m
185.7891 377.585 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
185.7891 383.5244 m
183.7607 379.2168 l
186.7246 379.2168 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
185.0088 377.585 m
186.335 377.585 l
S
/BBAccumRotation (0.000000) XT
300 Ar
192.8091 388.5342 m
192.8091 391.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
203.2607 388.5342 m
203.2607 391.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
52.0186 622.2007 m
208.4868 622.2007 l
S
/BBAccumRotation (0.000000) XT
300 Ar
57.2451 622.2007 m
57.2451 619.1719 l
S
/BBAccumRotation (0.000000) XT
300 Ar
67.6973 622.2007 m
67.6973 619.1719 l
S
/BBAccumRotation (0.000000) XT
300 Ar
78.1484 622.2007 m
78.1484 616.2598 l
S
/BBAccumRotation (0.000000) XT
300 Ar
88.5225 622.2007 m
88.5225 619.1719 l
S
/BBAccumRotation (0.000000) XT
300 Ar
98.9746 622.2007 m
98.9746 619.1719 l
S
/BBAccumRotation (0.000000) XT
300 Ar
109.4268 622.2007 m
109.4268 619.1719 l
S
/BBAccumRotation (0.000000) XT
300 Ar
119.8008 622.2007 m
119.8008 619.1719 l
S
/BBAccumRotation (0.000000) XT
300 Ar
130.2529 622.2007 m
130.2529 616.2598 l
S
/BBAccumRotation (0.000000) XT
300 Ar
140.7046 622.2007 m
140.7046 619.1719 l
S
/BBAccumRotation (0.000000) XT
300 Ar
151.1567 622.2007 m
151.1567 619.1719 l
S
/BBAccumRotation (0.000000) XT
300 Ar
161.5308 622.2007 m
161.5308 619.1719 l
S
/BBAccumRotation (0.000000) XT
300 Ar
171.9829 622.2007 m
171.9829 619.1719 l
S
/BBAccumRotation (0.000000) XT
300 Ar
182.4351 622.2007 m
182.4351 616.2598 l
S
/BBAccumRotation (0.000000) XT
300 Ar
192.8091 622.2007 m
192.8091 619.1719 l
S
/BBAccumRotation (0.000000) XT
300 Ar
203.2607 622.2007 m
203.2607 619.1719 l
S
/BBAccumRotation (0.000000) XT
300 Ar
52.0186 388.5342 m
52.0186 622.2007 l
S
/BBAccumRotation (0.000000) XT
300 Ar
52.0186 388.5342 m
54.0474 388.5342 l
S
/BBAccumRotation (0.000000) XT
300 Ar
52.0186 398.3203 m
54.0474 398.3203 l
S
/BBAccumRotation (0.000000) XT
300 Ar
52.0186 407.9873 m
56.0747 407.9873 l
S
/BBAccumRotation (0.000000) XT
300 Ar
35.0933 407.6387 m
38.5244 407.6387 l
S
/BBAccumRotation (0.000000) XT
300 Ar
40.397 409.8506 m
40.709 410.083 l
41.333 411.0156 l
41.333 405.0752 l
S
/BBAccumRotation (0.000000) XT
300 Ar
41.0986 410.666 m
41.0986 405.0752 l
S
/BBAccumRotation (0.000000) XT
300 Ar
40.397 405.0752 m
42.0347 405.0752 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
43.9067 405.6582 m
43.7505 405.4248 l
43.9067 405.0752 l
44.1411 405.4248 l
43.9067 405.6582 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
47.105 410.4346 m
47.105 405.0752 l
S
/BBAccumRotation (0.000000) XT
300 Ar
47.3389 411.0156 m
47.3389 405.0752 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
47.3389 411.0156 m
45.2329 406.8232 l
48.2744 406.8232 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
46.5591 405.0752 m
47.8848 405.0752 l
S
/BBAccumRotation (0.000000) XT
300 Ar
52.0186 417.7715 m
54.0474 417.7715 l
S
/BBAccumRotation (0.000000) XT
300 Ar
52.0186 427.5557 m
54.0474 427.5557 l
S
/BBAccumRotation (0.000000) XT
300 Ar
52.0186 437.2236 m
54.0474 437.2236 l
S
/BBAccumRotation (0.000000) XT
300 Ar
52.0186 447.0098 m
56.0747 447.0098 l
S
/BBAccumRotation (0.000000) XT
300 Ar
35.0933 446.543 m
38.5244 446.543 l
S
/BBAccumRotation (0.000000) XT
300 Ar
40.397 448.7559 m
40.709 449.1064 l
41.333 449.9214 l
41.333 443.98 l
S
/BBAccumRotation (0.000000) XT
300 Ar
41.0986 449.6885 m
41.0986 443.98 l
S
/BBAccumRotation (0.000000) XT
300 Ar
40.397 443.98 m
42.0347 443.98 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
43.9067 444.5625 m
43.7505 444.3301 l
43.9067 443.98 l
44.1411 444.3301 l
43.9067 444.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
45.6226 448.7559 m
45.7788 448.5229 l
45.6226 448.291 l
45.4673 448.5229 l
45.4673 448.7559 l
45.6226 449.3394 l
45.7788 449.6885 l
46.4028 449.9214 l
47.105 449.9214 l
47.6509 449.6885 l
47.8848 449.3394 l
48.041 448.7559 l
48.041 448.291 l
47.8848 447.707 l
47.3389 447.126 l
46.4028 446.543 l
46.0132 446.3105 l
45.6226 445.728 l
45.4673 444.9126 l
45.4673 443.98 l
S
/BBAccumRotation (0.000000) XT
300 Ar
47.105 449.9214 m
47.4951 449.6885 l
47.6509 449.3394 l
47.8848 448.7559 l
47.8848 448.291 l
47.6509 447.707 l
47.105 447.126 l
46.4028 446.543 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
45.4673 444.5625 m
45.6226 444.9126 l
46.0132 444.9126 l
46.9487 444.3301 l
47.4951 444.3301 l
47.8848 444.5625 l
48.041 444.9126 l
S
/BBAccumRotation (0.000000) XT
300 Ar
46.0132 444.9126 m
46.9487 443.98 l
47.6509 443.98 l
47.8848 444.3301 l
S
/BBAccumRotation (0.000000) XT
*U
/BBAccumRotation (0.000000) XT
*u
300 Ar
47.8848 444.3301 m
48.041 444.9126 l
48.041 445.4946 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
52.0186 456.6768 m
54.0474 456.6768 l
S
/BBAccumRotation (0.000000) XT
300 Ar
52.0186 466.4619 m
54.0474 466.4619 l
S
/BBAccumRotation (0.000000) XT
300 Ar
52.0186 476.1299 m
54.0474 476.1299 l
S
/BBAccumRotation (0.000000) XT
300 Ar
52.0186 485.9146 m
56.0747 485.9146 l
S
/BBAccumRotation (0.000000) XT
300 Ar
40.709 485.4487 m
44.1411 485.4487 l
S
/BBAccumRotation (0.000000) XT
300 Ar
46.0132 487.7783 m
46.4028 488.0117 l
46.9487 488.8267 l
46.9487 483.0029 l
S
/BBAccumRotation (0.000000) XT
300 Ar
46.7148 488.5942 m
46.7148 483.0029 l
S
/BBAccumRotation (0.000000) XT
300 Ar
46.0132 483.0029 m
47.6509 483.0029 l
S
/BBAccumRotation (0.000000) XT
300 Ar
52.0186 495.6992 m
54.0474 495.6992 l
S
/BBAccumRotation (0.000000) XT
300 Ar
52.0186 505.3672 m
54.0474 505.3672 l
S
/BBAccumRotation (0.000000) XT
300 Ar
52.0186 515.1523 m
54.0474 515.1523 l
S
/BBAccumRotation (0.000000) XT
300 Ar
52.0186 524.8203 m
56.0747 524.8203 l
S
/BBAccumRotation (0.000000) XT
300 Ar
35.0933 524.4707 m
38.5244 524.4707 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
40.9429 527.8486 m
40.397 527.4995 l
40.0068 526.6836 l
39.7725 525.2856 l
39.7725 524.4707 l
40.0068 523.0728 l
40.397 522.1411 l
40.9429 521.9082 l
41.333 521.9082 l
41.8789 522.1411 l
42.2686 523.0728 l
42.4248 524.4707 l
42.4248 525.2856 l
42.2686 526.6836 l
41.8789 527.4995 l
41.333 527.8486 l
40.9429 527.8486 l
40.5527 527.4995 l
40.397 527.2666 l
40.1631 526.6836 l
40.0068 525.2856 l
40.0068 524.4707 l
40.1631 523.0728 l
40.397 522.4907 l
40.5527 522.1411 l
40.9429 521.9082 l
S
/BBAccumRotation (0.000000) XT
300 Ar
41.333 521.9082 m
41.645 522.1411 l
41.8789 522.4907 l
42.0347 523.0728 l
42.2686 524.4707 l
42.2686 525.2856 l
42.0347 526.6836 l
41.8789 527.2666 l
41.645 527.4995 l
41.333 527.8486 l
S
/BBAccumRotation (0.000000) XT
300 Ar
43.9067 522.4907 m
43.7505 522.1411 l
43.9067 521.9082 l
44.1411 522.1411 l
43.9067 522.4907 l
S
/BBAccumRotation (0.000000) XT
300 Ar
46.4028 527.8486 m
45.7788 527.4995 l
45.6226 526.9165 l
45.6226 526.1016 l
45.7788 525.5195 l
46.4028 525.2856 l
47.105 525.2856 l
47.6509 525.5195 l
47.8848 526.1016 l
47.8848 526.9165 l
47.6509 527.4995 l
47.105 527.8486 l
46.4028 527.8486 l
46.0132 527.4995 l
45.7788 526.9165 l
45.7788 526.1016 l
46.0132 525.5195 l
46.4028 525.2856 l
S
/BBAccumRotation (0.000000) XT
300 Ar
47.105 525.2856 m
47.4951 525.5195 l
47.6509 526.1016 l
47.6509 526.9165 l
47.4951 527.4995 l
47.105 527.8486 l
S
/BBAccumRotation (0.000000) XT
300 Ar
46.4028 525.2856 m
45.7788 525.0532 l
45.6226 524.7036 l
45.4673 524.1211 l
45.4673 523.0728 l
45.6226 522.4907 l
45.7788 522.1411 l
46.4028 521.9082 l
47.105 521.9082 l
47.6509 522.1411 l
47.8848 522.4907 l
48.041 523.0728 l
48.041 524.1211 l
47.8848 524.7036 l
47.6509 525.0532 l
47.105 525.2856 l
S
/BBAccumRotation (0.000000) XT
300 Ar
46.4028 525.2856 m
46.0132 525.0532 l
45.7788 524.7036 l
45.6226 524.1211 l
45.6226 523.0728 l
45.7788 522.4907 l
46.0132 522.1411 l
46.4028 521.9082 l
S
/BBAccumRotation (0.000000) XT
300 Ar
47.105 521.9082 m
47.4951 522.1411 l
47.6509 522.4907 l
47.8848 523.0728 l
47.8848 524.1211 l
47.6509 524.7036 l
47.4951 525.0532 l
47.105 525.2856 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
52.0186 534.6045 m
54.0474 534.6045 l
S
/BBAccumRotation (0.000000) XT
300 Ar
52.0186 544.2729 m
54.0474 544.2729 l
S
/BBAccumRotation (0.000000) XT
300 Ar
52.0186 554.0571 m
54.0474 554.0571 l
S
/BBAccumRotation (0.000000) XT
300 Ar
52.0186 563.8423 m
56.0747 563.8423 l
S
/BBAccumRotation (0.000000) XT
300 Ar
35.0933 563.3765 m
38.5244 563.3765 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
40.9429 566.7539 m
40.397 566.4048 l
40.0068 565.5894 l
39.7725 564.1919 l
39.7725 563.3765 l
40.0068 561.9785 l
40.397 561.1631 l
40.9429 560.8135 l
41.333 560.8135 l
41.8789 561.1631 l
42.2686 561.9785 l
42.4248 563.3765 l
42.4248 564.1919 l
42.2686 565.5894 l
41.8789 566.4048 l
41.333 566.7539 l
40.9429 566.7539 l
40.5527 566.4048 l
40.397 566.1724 l
40.1631 565.5894 l
40.0068 564.1919 l
40.0068 563.3765 l
40.1631 561.9785 l
40.397 561.396 l
40.5527 561.1631 l
40.9429 560.8135 l
S
/BBAccumRotation (0.000000) XT
300 Ar
41.333 560.8135 m
41.645 561.1631 l
41.8789 561.396 l
42.0347 561.9785 l
42.2686 563.3765 l
42.2686 564.1919 l
42.0347 565.5894 l
41.8789 566.1724 l
41.645 566.4048 l
41.333 566.7539 l
S
/BBAccumRotation (0.000000) XT
300 Ar
43.9067 561.396 m
43.7505 561.1631 l
43.9067 560.8135 l
44.1411 561.1631 l
43.9067 561.396 l
S
/BBAccumRotation (0.000000) XT
300 Ar
47.6509 565.9385 m
47.4951 565.5894 l
47.6509 565.3564 l
47.8848 565.5894 l
47.8848 565.9385 l
47.6509 566.4048 l
47.3389 566.7539 l
46.7148 566.7539 l
46.1685 566.4048 l
45.7788 565.9385 l
45.6226 565.3564 l
45.4673 564.1919 l
45.4673 562.561 l
45.6226 561.7456 l
46.0132 561.1631 l
46.5591 560.8135 l
46.9487 560.8135 l
47.4951 561.1631 l
47.8848 561.7456 l
48.041 562.561 l
48.041 562.7939 l
47.8848 563.6089 l
47.4951 564.1919 l
46.9487 564.541 l
46.7148 564.541 l
46.1685 564.1919 l
45.7788 563.6089 l
45.6226 562.7939 l
S
/BBAccumRotation (0.000000) XT
300 Ar
46.7148 566.7539 m
46.4028 566.4048 l
46.0132 565.9385 l
45.7788 565.3564 l
45.6226 564.1919 l
45.6226 562.561 l
45.7788 561.7456 l
46.1685 561.1631 l
46.5591 560.8135 l
S
/BBAccumRotation (0.000000) XT
300 Ar
46.9487 560.8135 m
47.3389 561.1631 l
47.6509 561.7456 l
47.8848 562.561 l
47.8848 562.7939 l
47.6509 563.6089 l
47.3389 564.1919 l
46.9487 564.541 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
52.0186 573.5103 m
54.0474 573.5103 l
S
/BBAccumRotation (0.000000) XT
300 Ar
52.0186 583.2949 m
54.0474 583.2949 l
S
/BBAccumRotation (0.000000) XT
300 Ar
52.0186 592.9629 m
54.0474 592.9629 l
S
/BBAccumRotation (0.000000) XT
300 Ar
52.0186 602.7476 m
56.0747 602.7476 l
S
/BBAccumRotation (0.000000) XT
300 Ar
35.0933 602.2817 m
38.5244 602.2817 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
40.9429 605.6602 m
40.397 605.4272 l
40.0068 604.6113 l
39.7725 603.2139 l
39.7725 602.2817 l
40.0068 600.8843 l
40.397 600.0684 l
40.9429 599.8359 l
41.333 599.8359 l
41.8789 600.0684 l
42.2686 600.8843 l
42.4248 602.2817 l
42.4248 603.2139 l
42.2686 604.6113 l
41.8789 605.4272 l
41.333 605.6602 l
40.9429 605.6602 l
40.5527 605.4272 l
40.397 605.0771 l
40.1631 604.6113 l
40.0068 603.2139 l
40.0068 602.2817 l
40.1631 600.8843 l
40.397 600.3018 l
40.5527 600.0684 l
40.9429 599.8359 l
S
/BBAccumRotation (0.000000) XT
300 Ar
41.333 599.8359 m
41.645 600.0684 l
41.8789 600.3018 l
42.0347 600.8843 l
42.2686 602.2817 l
42.2686 603.2139 l
42.0347 604.6113 l
41.8789 605.0771 l
41.645 605.4272 l
41.333 605.6602 l
S
/BBAccumRotation (0.000000) XT
300 Ar
43.9067 600.3018 m
43.7505 600.0684 l
43.9067 599.8359 l
44.1411 600.0684 l
43.9067 600.3018 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
47.105 605.0771 m
47.105 599.8359 l
S
/BBAccumRotation (0.000000) XT
300 Ar
47.3389 605.6602 m
47.3389 599.8359 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
47.3389 605.6602 m
45.2329 601.4663 l
48.2744 601.4663 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
46.5591 599.8359 m
47.8848 599.8359 l
S
/BBAccumRotation (0.000000) XT
300 Ar
52.0186 612.4155 m
54.0474 612.4155 l
S
/BBAccumRotation (0.000000) XT
300 Ar
52.0186 622.2007 m
54.0474 622.2007 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 388.5342 m
208.4868 622.2007 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 388.5342 m
206.459 388.5342 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 398.3203 m
206.459 398.3203 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 407.9873 m
204.5088 407.9873 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 417.7715 m
206.459 417.7715 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 427.5557 m
206.459 427.5557 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 437.2236 m
206.459 437.2236 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 447.0098 m
204.5088 447.0098 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 456.6768 m
206.459 456.6768 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 466.4619 m
206.459 466.4619 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 476.1299 m
206.459 476.1299 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 485.9146 m
204.5088 485.9146 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 495.6992 m
206.459 495.6992 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 505.3672 m
206.459 505.3672 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 515.1523 m
206.459 515.1523 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 524.8203 m
204.5088 524.8203 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 534.6045 m
206.459 534.6045 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 544.2729 m
206.459 544.2729 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 554.0571 m
206.459 554.0571 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 563.8423 m
204.5088 563.8423 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 573.5103 m
206.459 573.5103 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 583.2949 m
206.459 583.2949 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 592.9629 m
206.459 592.9629 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 602.7476 m
204.5088 602.7476 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 612.4155 m
206.459 612.4155 l
S
/BBAccumRotation (0.000000) XT
300 Ar
208.4868 622.2007 m
206.459 622.2007 l
S
/BBAccumRotation (0.000000) XT
*U
/BBAccumRotation (0.000000) XT
U
/BBAccumRotation (0.000000) XT
U
/BBAccumRotation (0.000000) XT
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 0 1 0 0 -1 255 102 0 Lb
(poor omega_m constraint) Ln
1 A
0 A
1 D
0 R
0 0 0 XA
0 J 1 j 0.5 w 10 M [2 2 ]0 d
0 XR
44.3101 533.2329 m
46.7627 528.7188 l
50.9424 524.3604 l
55.1221 520.1572 l
60.7549 516.1089 l
65.5708 511.9058 l
71.1123 507.8594 l
76.019 503.6558 l
81.2891 499.6084 l
86.5586 495.4058 l
91.374 491.2021 l
96.5532 487.1543 l
101.0049 482.9512 l
106.0928 478.748 l
110.4541 474.5454 l
115.2695 470.3423 l
119.4492 465.9839 l
124.083 461.7808 l
128.0801 457.5786 l
132.5322 453.374 l
136.439 449.0161 l
140.7095 444.6572 l
144.5259 440.4531 l
148.5229 436.0947 l
152.3389 431.7363 l
156.2461 427.5332 l
159.9712 423.1748 l
163.7876 418.8154 l
167.6943 414.458 l
171.4189 410.0986 l
175.7803 405.8936 l
180.2324 401.5361 l
187.2285 397.8008 l
189.8633 403.5605 l
188.4102 412.5889 l
185.5928 421.6182 l
182.0498 430.6465 l
177.6885 439.5195 l
172.7822 448.3921 l
167.1489 457.2666 l
162.8281 463.2754 159.1582 469.5215 153.793 474.7012 c
149.9766 479.0601 l
145.7983 483.4185 l
141.4365 487.6221 l
136.8027 491.98 l
131.9873 496.1831 l
126.8081 500.3862 l
121.2656 504.4341 l
115.4512 508.4819 l
109.2729 512.5288 l
102.6401 516.4209 l
95.5537 520.3125 l
88.0122 524.0483 l
79.835 527.6294 l
70.9312 530.8984 l
61.0278 533.855 l
55.4854 535.1006 l
49.3979 535.7236 l
44.3101 533.2329 l
S
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 0 1 0 0 5 255 79 255 Lb
(white out) Ln
1 A
0 A
1 Ap
0 D
0 O
1 1 1 Xa
0 J 0 j 1 w 4 M []0 d
0 XR
138.1079 422.4067 m
79.6079 422.4067 L
79.6079 473.1064 L
138.1079 473.1064 L
138.1079 422.4067 L
f
121.5107 451.4043 m
63.0107 451.4043 L
63.0107 502.104 L
121.5107 502.104 L
121.5107 451.4043 L
f
142.0859 492.5181 m
105.0361 492.5181 L
105.0361 517.8677 L
142.0859 517.8677 L
142.0859 492.5181 L
f
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 0 1 0 0 8 0 0 0 Lb
(SNAP poor omega) Ln
1 A
0 A
0 Ap
1 D
0 O
0.8196 0.8196 0.8196 Xa
0 R
0 0 0 XA
0 J 1 j 0.5 w 10 M [1 1 ]0 d
0 XR
102.626 505.9668 m
103.4268 503.3423 L
104.8091 500.6445 L
105.5371 499.3325 L
106.4106 498.0205 L
107.2109 496.7075 L
108.957 494.083 L
109.7578 492.77 L
110.7036 491.4585 L
111.5771 490.145 L
112.522 488.833 L
113.3237 487.5205 L
114.3418 486.2085 L
115.2158 484.896 L
116.1611 483.5835 L
117.0347 482.271 L
118.0532 480.959 L
118.9268 479.646 L
119.9453 478.3345 L
120.7456 477.0215 L
121.8369 475.7095 L
122.856 474.4697 L
123.8018 473.1572 L
124.8936 471.8452 L
125.8394 470.5322 L
127.0034 469.2207 L
128.0229 467.9082 L
130.7876 465.4287 L
133.043 464.3359 L
134.1353 466.1577 L
133.771 468.8555 L
132.9712 471.4805 L
131.9517 474.1782 L
130.7876 476.8032 L
129.4048 479.4272 L
128.75 480.7402 L
127.9492 481.9795 L
127.2222 483.292 L
126.3491 484.604 L
125.5483 485.917 L
124.6025 487.1558 L
123.8018 488.4692 L
122.7832 489.7813 L
121.8369 491.0938 L
120.7456 492.333 L
119.7998 493.645 L
118.6357 494.8848 L
117.6162 496.124 L
116.3071 497.4365 L
115.2158 498.6763 L
113.833 499.915 L
112.5962 501.1553 L
111.0674 502.3945 L
109.6123 503.6338 L
107.9385 504.8008 L
106.1191 505.9668 L
105.0273 506.5508 L
103.5728 506.9873 L
102.626 505.9668 L
B
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 0 1 0 0 2 79 255 79 Lb
(om-w) Ln
1 A
0 A
*u
300 Ar
0 D
0 R
0 0 0 XA
0 J 1 j 2.5 w 10 M []0 d
0 XR
136.1797 455.603 m
132.1787 456.4189 l
129.355 457.5845 l
124.8833 460.498 l
121.1963 463.293 l
117.9014 466.3228 l
114.9199 469.2358 l
112.1738 472.2642 l
109.5859 475.1763 l
107.2324 478.2061 l
104.958 481.3521 l
102.918 484.3809 l
101.0352 487.4102 l
99.3872 490.4395 l
97.896 493.5854 l
96.7988 496.73 l
95.7007 502.9053 l
96.7988 507.9155 l
99.1519 510.3618 l
101.4272 511.4106 l
104.8794 511.8765 l
109.1152 511.2935 l
112.4883 510.2451 l
115.313 509.0806 l
117.7446 507.6826 l
121.8237 504.8862 l
125.2754 501.9741 l
128.2563 499.061 l
130.7671 496.1484 l
133.041 493.1191 l
135.0815 490.0894 l
136.8081 487.0605 l
138.376 484.0313 l
139.71 481.0024 l
140.8081 477.9736 l
141.749 474.9438 l
142.4556 471.915 l
143.1611 465.7397 l
142.3774 460.3804 l
140.8862 457.7007 l
136.1797 455.603 l
S
/BBAccumRotation (0.000000) XT
*U
/BBAccumRotation (0.000000) XT
u
*u
300 Ar
0 O
0.4118 0.4118 0.4118 Xa
0 j 0.5 w 4 M
131.0796 467.1382 m
129.041 468.0693 l
127.7861 469.1177 l
126.6084 470.1665 l
125.5889 471.2153 l
123.6274 473.4292 l
121.8237 475.5264 l
120.0981 477.7407 l
118.3716 479.9531 l
116.7246 482.1675 l
115.2344 484.3809 l
113.5864 486.4785 l
112.1738 488.6914 l
110.7627 490.9048 l
109.3501 493.1191 l
108.0957 495.3325 l
106.9189 497.6626 l
105.8984 499.8765 l
105.3496 502.0898 l
106.5264 503.3716 l
108.8013 502.6729 l
110.4487 501.624 l
111.8608 500.6919 l
113.1157 499.6436 l
114.4497 498.5947 l
115.4697 497.5469 l
116.6465 496.498 l
117.5874 495.4492 l
119.4697 493.353 l
121.2739 491.1387 l
123.0005 489.0415 l
124.4907 486.8271 l
125.9819 484.6143 l
127.3149 482.5171 l
128.4917 480.3032 l
129.5898 478.0894 l
130.6099 475.876 l
131.4727 473.6621 l
132.1006 471.4492 l
132.3354 469.2358 l
131.0796 467.1382 l
B
/BBAccumRotation (0.000000) XT
*U
/BBAccumRotation (0.000000) XT
U
/BBAccumRotation (0.000000) XT
*u
300 Ar
0.7882 0.7882 0.7882 XA
1 j 0.7 w 10 M
136.1797 455.603 m
132.1787 456.4189 l
129.355 457.5845 l
124.8833 460.498 l
121.1963 463.293 l
117.9014 466.3228 l
114.9199 469.2358 l
112.1738 472.2642 l
109.5859 475.1763 l
107.2324 478.2061 l
104.958 481.3521 l
102.918 484.3809 l
101.0352 487.4102 l
99.3872 490.4395 l
97.896 493.5854 l
96.7988 496.73 l
95.7007 502.9053 l
96.7988 507.9155 l
99.1519 510.3618 l
101.4272 511.4106 l
104.8794 511.8765 l
109.1152 511.2935 l
112.4883 510.2451 l
115.313 509.0806 l
117.7446 507.6826 l
121.8237 504.8862 l
125.2754 501.9741 l
128.2563 499.061 l
130.7671 496.1484 l
133.041 493.1191 l
135.0815 490.0894 l
136.8081 487.0605 l
138.376 484.0313 l
139.71 481.0024 l
140.8081 477.9736 l
141.749 474.9438 l
142.4556 471.915 l
143.1611 465.7397 l
142.3774 460.3804 l
140.8862 457.7007 l
136.1797 455.603 l
S
/BBAccumRotation (0.000000) XT
*U
/BBAccumRotation (0.000000) XT
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 0 1 0 0 -1 102 0 102 Lb
(new w1-w0) Ln
1 A
0 A
1 D
0 R
0 0 0 XA
0 J 1 j 3 w 10 M []0 d
0 XR
471.123 575.1538 m
472.3604 567.418 L
474.6016 559.6831 L
477.3838 551.9473 L
480.4746 544.3413 L
482.0195 540.4731 L
483.7207 536.7349 L
485.4199 532.8672 L
487.2754 528.9995 L
488.9746 525.2607 L
490.9072 521.3926 L
492.7617 517.5254 L
494.7705 513.7866 L
496.7021 509.9194 L
498.7891 506.0513 L
500.7988 502.313 L
502.9619 498.4453 L
505.0488 494.7061 L
507.2891 490.8384 L
509.4531 487.0996 L
511.9258 483.2324 L
514.168 479.4937 L
516.7949 475.6255 L
519.1904 471.8872 L
522.0498 468.1484 L
524.6777 464.2808 L
528 460.542 L
531.5547 456.8032 L
533.7969 454.998 L
537.4287 453.3218 L
540.0557 458.0918 L
539.0508 465.8276 L
536.9648 473.4341 L
534.3369 481.0405 L
531.4004 488.7764 L
529.9316 492.5142 L
528.1543 496.3823 L
526.5322 500.1206 L
524.6777 503.9888 L
522.9766 507.7271 L
520.9678 511.5952 L
519.1904 515.333 L
517.0264 519.0728 L
515.1719 522.9404 L
512.9307 526.6792 L
510.999 530.5469 L
508.6807 534.2847 L
506.5938 538.0239 L
504.1211 541.7632 L
501.957 545.6304 L
499.4072 549.3691 L
497.0889 553.1079 L
494.3838 556.8462 L
491.9111 560.7144 L
488.8984 564.4526 L
485.9609 568.1919 L
482.793 571.9307 L
479.1611 575.6689 L
476.9199 577.4741 L
473.2871 579.0205 L
471.123 575.1538 L
S
*u
0.7882 0.7882 0.7882 XA
1 w
471.123 575.1538 m
472.3604 567.418 l
474.6016 559.6831 l
477.3838 551.9473 l
480.4746 544.3413 l
482.0195 540.4731 l
483.7207 536.7349 l
485.4199 532.8672 l
487.2754 528.9995 l
488.9746 525.2607 l
490.9072 521.3926 l
492.7617 517.5254 l
494.7705 513.7866 l
496.7021 509.9194 l
498.7891 506.0513 l
500.7988 502.313 l
502.9619 498.4453 l
505.0488 494.7061 l
507.2891 490.8384 l
509.4531 487.0996 l
511.9258 483.2324 l
514.168 479.4937 l
516.7949 475.6255 l
519.1904 471.8872 l
522.0498 468.1484 l
524.6777 464.2808 l
528 460.542 l
531.5547 456.8032 l
533.7969 454.998 l
535.0068 454.4395 536.2178 453.8809 537.4287 453.3218 C
538.3037 454.9116 539.1816 456.5049 540.0557 458.0918 c
539.0508 465.8276 l
536.9648 473.4341 l
534.3369 481.0405 l
531.4004 488.7764 l
529.9316 492.5142 l
528.1543 496.3823 l
526.5322 500.1206 l
524.6777 503.9888 l
522.9766 507.7271 l
520.9678 511.5952 l
519.1904 515.333 l
517.0264 519.0728 l
515.1719 522.9404 l
512.9307 526.6792 l
510.999 530.5469 l
508.6807 534.2847 l
506.5938 538.0239 l
504.1211 541.7632 l
501.957 545.6304 l
499.4072 549.3691 l
497.0889 553.1079 l
494.3838 556.8462 l
491.9111 560.7144 l
488.8984 564.4526 l
485.9609 568.1919 l
482.793 571.9307 l
479.1611 575.6689 l
476.9873 577.4194 476.9199 577.4736 v
475.6289 578.5117 473.8438 579.2651 472.7383 578.0942 c
472.0645 577.3813 471.6152 576.0288 471.123 575.1538 c
S
*U
*u
0 0 0 XA
419.9658 389.1201 m
574.9854 389.1201 L
574.9854 621.7563 L
419.9658 621.7563 L
419.9658 389.1201 L
574.9854 389.1201 L
S
0 D
419.9658 389.1201 m
574.9854 389.1201 L
S
419.9658 389.1201 m
419.9658 395.8232 L
S
416.4883 379.8369 m
419.8115 379.8369 L
S
421.2803 382.2861 m
421.5117 381.8994 L
421.2803 381.6426 L
421.125 381.8994 L
421.125 382.2861 L
421.2803 382.9316 L
421.5117 383.1885 L
422.0527 383.5752 L
422.748 383.5752 L
423.3662 383.1885 L
423.5205 382.9316 L
423.6758 382.2861 L
423.6758 381.6426 L
423.5205 380.9971 L
422.9795 380.3516 L
422.0527 379.8369 L
421.666 379.4502 L
421.2803 378.8057 L
421.125 377.9033 L
421.125 377.001 L
S
422.748 383.5752 m
423.1348 383.1885 L
423.3662 382.9316 L
423.5205 382.2861 L
423.5205 381.6426 L
423.3662 380.9971 L
422.748 380.3516 L
422.0527 379.8369 L
S
1 D
421.125 377.6445 m
421.2803 377.9033 L
421.666 377.9033 L
422.5928 377.2588 L
423.1348 377.2588 L
423.5205 377.6445 L
423.6758 377.9033 L
S
421.666 377.9033 m
422.5928 377.001 L
423.3662 377.001 L
423.5205 377.2588 L
423.6758 377.9033 L
423.6758 378.5459 L
S
0 D
428.6201 389.1201 m
428.6201 392.4707 L
S
437.1982 389.1201 m
437.1982 392.4707 L
S
445.8535 389.1201 m
445.8535 392.4707 L
S
454.4316 389.1201 m
454.4316 392.4707 L
S
463.0098 389.1201 m
463.0098 395.8232 L
S
456.75 379.8369 m
460.0732 379.8369 L
S
461.9277 382.2861 m
462.3145 382.5439 L
462.8555 383.5752 L
462.8555 377.001 L
S
462.7002 383.1885 m
462.7002 377.001 L
S
461.9277 377.001 m
463.6279 377.001 L
S
1 D
465.4824 377.6445 m
465.251 377.2588 L
465.4824 377.001 L
465.6377 377.2588 L
465.4824 377.6445 L
S
0 D
467.3369 383.5752 m
466.9502 380.3516 L
467.3369 380.9971 L
467.8779 381.3848 L
468.4189 381.3848 L
468.96 380.9971 L
469.3457 380.3516 L
469.5781 379.4502 L
469.5781 378.8057 L
469.3457 377.9033 L
468.96 377.2588 L
468.4189 377.001 L
467.8779 377.001 L
467.3369 377.2588 L
467.1055 377.6445 L
466.9502 378.29 L
466.9502 378.5459 L
467.1055 378.8057 L
467.3369 378.5459 L
467.1055 378.29 L
S
468.4189 381.3848 m
468.8057 380.9971 L
469.1924 380.3516 L
469.3457 379.4502 L
469.3457 378.8057 L
469.1924 377.9033 L
468.8057 377.2588 L
468.4189 377.001 L
S
467.3369 383.5752 m
469.1924 383.5752 L
S
1 D
467.3369 383.1885 m
468.2646 383.1885 L
469.1924 383.5752 L
S
0 D
471.665 389.1201 m
471.665 392.4707 L
S
480.2422 389.1201 m
480.2422 392.4707 L
S
488.8984 389.1201 m
488.8984 392.4707 L
S
497.4756 389.1201 m
497.4756 392.4707 L
S
506.1299 389.1201 m
506.1299 395.8232 L
S
502.5752 379.8369 m
505.8984 379.8369 L
S
507.7529 382.2861 m
508.1396 382.5439 L
508.6807 383.5752 L
508.6807 377.001 L
S
508.5254 383.1885 m
508.5254 377.001 L
S
507.7529 377.001 m
509.4531 377.001 L
S
514.708 389.1201 m
514.708 392.4707 L
S
523.2861 389.1201 m
523.2861 392.4707 L
S
531.9414 389.1201 m
531.9414 392.4707 L
S
540.5195 389.1201 m
540.5195 392.4707 L
S
549.1738 389.1201 m
549.1738 395.8232 L
S
542.8379 379.8369 m
546.1611 379.8369 L
S
1 D
548.6338 383.5752 m
548.0156 383.1885 L
547.7061 382.2861 L
547.4746 380.7393 L
547.4746 379.8369 L
547.7061 378.29 L
548.0156 377.2588 L
548.6338 377.001 L
548.9424 377.001 L
549.5605 377.2588 L
549.8691 378.29 L
550.1006 379.8369 L
550.1006 380.7393 L
549.8691 382.2861 L
549.5605 383.1885 L
548.9424 383.5752 L
548.6338 383.5752 L
548.2461 383.1885 L
548.0156 382.9316 L
547.8604 382.2861 L
547.7061 380.7393 L
547.7061 379.8369 L
547.8604 378.29 L
548.0156 377.6445 L
548.2461 377.2588 L
548.6338 377.001 L
S
548.9424 377.001 m
549.3291 377.2588 L
549.5605 377.6445 L
549.7158 378.29 L
549.8691 379.8369 L
549.8691 380.7393 L
549.7158 382.2861 L
549.5605 382.9316 L
549.3291 383.1885 L
548.9424 383.5752 L
S
551.5703 377.6445 m
551.415 377.2588 L
551.5703 377.001 L
551.7246 377.2588 L
551.5703 377.6445 L
S
0 D
553.4238 383.5752 m
553.0381 380.3516 L
553.4238 380.9971 L
553.9658 381.3848 L
554.584 381.3848 L
555.125 380.9971 L
555.5117 380.3516 L
555.665 379.4502 L
555.665 378.8057 L
555.5117 377.9033 L
555.125 377.2588 L
554.584 377.001 L
553.9658 377.001 L
553.4238 377.2588 L
553.2705 377.6445 L
553.0381 378.29 L
553.0381 378.5459 L
553.2705 378.8057 L
553.4238 378.5459 L
553.2705 378.29 L
S
554.584 381.3848 m
554.8936 380.9971 L
555.2793 380.3516 L
555.5117 379.4502 L
555.5117 378.8057 L
555.2793 377.9033 L
554.8936 377.2588 L
554.584 377.001 L
S
553.4238 383.5752 m
555.2793 383.5752 L
S
1 D
553.4238 383.1885 m
554.3516 383.1885 L
555.2793 383.5752 L
S
0 D
557.7529 389.1201 m
557.7529 392.4707 L
S
566.4072 389.1201 m
566.4072 392.4707 L
S
574.9854 389.1201 m
574.9854 392.4707 L
S
419.9658 621.7563 m
574.9854 621.7563 L
S
428.6201 621.7563 m
428.6201 618.4038 L
S
437.1982 621.7563 m
437.1982 618.4038 L
S
445.8535 621.7563 m
445.8535 618.4038 L
S
454.4316 621.7563 m
454.4316 618.4038 L
S
463.0098 621.7563 m
463.0098 615.1812 L
S
471.665 621.7563 m
471.665 618.4038 L
S
480.2422 621.7563 m
480.2422 618.4038 L
S
488.8984 621.7563 m
488.8984 618.4038 L
S
497.4756 621.7563 m
497.4756 618.4038 L
S
506.1299 621.7563 m
506.1299 615.1812 L
S
514.708 621.7563 m
514.708 618.4038 L
S
523.2861 621.7563 m
523.2861 618.4038 L
S
531.9414 621.7563 m
531.9414 618.4038 L
S
540.5195 621.7563 m
540.5195 618.4038 L
S
549.1738 621.7563 m
549.1738 615.1812 L
S
557.7529 621.7563 m
557.7529 618.4038 L
S
566.4072 621.7563 m
566.4072 618.4038 L
S
419.9658 389.1201 m
419.9658 621.8237 L
S
419.9658 389.1201 m
421.9746 389.1201 L
S
419.9658 402.1406 m
421.9746 402.1406 L
S
419.9658 415.0322 m
423.9844 415.0322 L
S
408.7607 414.5176 m
412.1611 414.5176 L
S
415.0977 417.6113 m
415.0977 411.8096 L
S
415.3291 418.2559 m
415.3291 411.8096 L
S
1 D
415.3291 418.2559 m
413.2422 413.6143 L
416.2559 413.6143 L
S
0 D
414.5566 411.8096 m
415.8701 411.8096 L
S
419.9658 427.9258 m
421.9746 427.9258 L
S
419.9658 440.8169 m
421.9746 440.8169 L
S
419.9658 453.8379 m
421.9746 453.8379 L
S
419.9658 466.7305 m
423.9844 466.7305 L
S
408.7607 466.2148 m
412.1611 466.2148 L
S
413.6289 468.793 m
413.7842 468.4058 L
413.6289 468.1484 L
413.4746 468.4058 L
413.4746 468.793 L
413.6289 469.4375 L
413.7842 469.6953 L
414.4023 469.9531 L
415.0977 469.9531 L
415.6387 469.6953 L
415.8701 469.4375 L
416.0244 468.793 L
416.0244 468.1484 L
415.8701 467.5034 L
415.3291 466.8589 L
414.4023 466.2148 L
414.0156 465.9565 L
413.6289 465.312 L
413.4746 464.4097 L
413.4746 463.5063 L
S
415.0977 469.9531 m
415.4834 469.6953 L
415.6387 469.4375 L
415.8701 468.793 L
415.8701 468.1484 L
415.6387 467.5034 L
415.0977 466.8589 L
414.4023 466.2148 L
S
1 D
413.4746 464.1519 m
413.6289 464.4097 L
414.0156 464.4097 L
414.9434 463.7656 L
415.4834 463.7656 L
415.8701 464.1519 L
416.0244 464.4097 L
S
414.0156 464.4097 m
414.9434 463.5063 L
415.6387 463.5063 L
415.8701 463.7656 L
416.0244 464.4097 L
416.0244 465.0537 L
S
0 D
419.9658 479.6221 m
421.9746 479.6221 L
S
419.9658 492.6431 m
421.9746 492.6431 L
S
419.9658 505.5356 m
421.9746 505.5356 L
S
419.9658 518.4282 m
423.9844 518.4282 L
S
1 D
414.5566 521.6509 m
414.0156 521.3926 L
413.6289 520.4902 L
413.4746 518.9438 L
413.4746 518.0415 L
413.6289 516.4941 L
414.0156 515.4629 L
414.5566 515.2046 L
414.9434 515.2046 L
415.4834 515.4629 L
415.8701 516.4941 L
416.0244 518.0415 L
416.0244 518.9438 L
415.8701 520.4902 L
415.4834 521.3926 L
414.9434 521.6509 L
414.5566 521.6509 L
414.1699 521.3926 L
414.0156 521.1353 L
413.7842 520.4902 L
413.6289 518.9438 L
413.6289 518.0415 L
413.7842 516.4941 L
414.0156 515.8491 L
414.1699 515.4629 L
414.5566 515.2046 L
S
414.9434 515.2046 m
415.3291 515.4629 L
415.4834 515.8491 L
415.6387 516.4941 L
415.8701 518.0415 L
415.8701 518.9438 L
415.6387 520.4902 L
415.4834 521.1353 L
415.3291 521.3926 L
414.9434 521.6509 L
S
0 D
419.9658 531.3203 m
421.9746 531.3203 L
S
419.9658 544.3413 m
421.9746 544.3413 L
S
419.9658 557.2334 m
421.9746 557.2334 L
S
419.9658 570.1255 m
423.9844 570.1255 L
S
413.6289 572.1885 m
413.7842 571.9307 L
413.6289 571.5435 L
413.4746 571.9307 L
413.4746 572.1885 L
413.6289 572.8335 L
413.7842 573.0908 L
414.4023 573.4775 L
415.0977 573.4775 L
415.6387 573.0908 L
415.8701 572.8335 L
S
*U
*u
415.8701 572.8335 m
416.0244 572.1885 L
416.0244 571.5435 L
415.8701 570.8994 L
415.3291 570.2544 L
414.4023 569.7383 L
414.0156 569.3521 L
413.6289 568.7075 L
413.4746 567.8047 L
413.4746 566.9023 L
S
415.0977 573.4775 m
415.4834 573.0908 L
415.6387 572.8335 L
415.8701 572.1885 L
415.8701 571.5435 L
415.6387 570.8994 L
415.0977 570.2544 L
414.4023 569.7383 L
S
1 D
413.4746 567.5469 m
413.6289 567.8047 L
414.0156 567.8047 L
414.9434 567.1606 L
415.4834 567.1606 L
415.8701 567.5469 L
416.0244 567.8047 L
S
414.0156 567.8047 m
414.9434 566.9023 L
415.6387 566.9023 L
415.8701 567.1606 L
416.0244 567.8047 L
416.0244 568.4497 L
S
0 D
419.9658 583.1465 m
421.9746 583.1465 L
S
419.9658 596.0391 m
421.9746 596.0391 L
S
419.9658 608.9312 m
421.9746 608.9312 L
S
419.9658 621.8237 m
423.9844 621.8237 L
S
415.0977 624.5303 m
415.0977 618.6001 L
S
415.3291 625.1753 m
415.3291 618.6001 L
S
1 D
415.3291 625.1753 m
413.2422 620.5337 L
416.2559 620.5337 L
S
0 D
414.5566 618.6001 m
415.8701 618.6001 L
S
574.9854 389.1201 m
574.9854 621.8237 L
S
574.9854 389.1201 m
572.9756 389.1201 L
S
574.9854 402.1406 m
572.9756 402.1406 L
S
574.9854 415.0322 m
571.0439 415.0322 L
S
574.9854 427.9258 m
572.9756 427.9258 L
S
574.9854 440.8169 m
572.9756 440.8169 L
S
574.9854 453.8379 m
572.9756 453.8379 L
S
574.9854 466.7305 m
571.0439 466.7305 L
S
574.9854 479.6221 m
572.9756 479.6221 L
S
574.9854 492.6431 m
572.9756 492.6431 L
S
574.9854 505.5356 m
572.9756 505.5356 L
S
574.9854 518.4282 m
571.0439 518.4282 L
S
574.9854 531.3203 m
572.9756 531.3203 L
S
574.9854 544.3413 m
572.9756 544.3413 L
S
574.9854 557.2334 m
572.9756 557.2334 L
S
574.9854 570.1255 m
571.0439 570.1255 L
S
574.9854 583.1465 m
572.9756 583.1465 L
S
574.9854 596.0391 m
572.9756 596.0391 L
S
574.9854 608.9312 m
572.9756 608.9312 L
S
574.9854 621.8237 m
571.0439 621.8237 L
S
*U
*u
1 D
0 O
0.4706 0.4706 0.4706 Xa
0.25 w
497.5537 520.6191 m
497.7842 518.1699 L
498.248 515.7207 L
499.0205 513.3999 L
500.0254 510.9502 L
500.5664 509.79 L
501.2617 508.5015 L
501.957 507.3408 L
502.7305 506.1797 L
503.6572 505.02 L
504.7393 503.7305 L
506.0537 502.5708 L
507.0576 502.0547 L
508.6807 501.6685 L
509.8398 501.9263 L
510.458 502.4414 L
511.2305 503.3442 L
512.1582 505.1489 L
512.6992 506.8242 L
513.1631 508.6299 L
513.4717 510.4351 L
513.7031 512.2397 L
513.8584 514.0444 L
513.8584 517.3965 L
513.626 518.9438 L
513.3174 520.6191 L
512.7764 522.1665 L
511.9258 523.7134 L
510.5352 525.2607 L
509.5303 526.0347 L
508.2939 526.8076 L
506.5166 527.4521 L
505.3574 527.7104 L
503.9658 527.8389 L
502.2666 527.7104 L
501.1074 527.3237 L
499.6387 526.4209 L
498.248 524.3584 L
497.707 522.5537 L
497.5537 520.6191 L
B
*U
*u
0 D
1 w
428.6201 477.0439 m
S
428.6201 477.0439 m
S
*U
[7.68 5.76 ]0 d
557.7529 539.1841 m
S
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 -1 0 85 0 Lb
(labels) Ln
0 A
2 To
1 0 0 1 -7885 8587 1.5 Tp
0 Tv
1 Ap
0 J 0 j 1 w 4 M []0 d
0 XR
491.1934 495.4878 m
485.8428 488.75 473.0742 489.9844 462.6719 498.2441 c
452.2695 506.5044 448.1748 518.6621 453.5244 525.3989 c
458.874 532.1362 471.6436 530.9023 482.0459 522.6426 c
492.4473 514.3823 496.543 502.2251 491.1934 495.4878 c
n
TP
-0.1463 0.9892 -0.9892 -0.1463 451.8037 512.7725 Tm
0 Tr
0 O
1 1 1 Xa
%_ 0 50 XQ
/_Tahoma-Bold 9.75 9.75 -2.0186 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
1 TA
%_ 0 XL
0 TY
0 TV
23.4 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
0 Tc
0 Tw
(S) Tx 1 0 Tk
0.2828 0.9592 -0.9592 0.2828 450.6133 518.208 Tm
(N) Tx 1 0 Tk
0.751 0.6603 -0.6603 0.751 452.2822 524.5239 Tm
(A) Tx 1 0 Tk
0.9697 0.2443 -0.2443 0.9697 456.6592 528.478 Tm
(P) Tx 1 0 Tk
(SNAP) TX
(\r) TX 
TO
0 To
1 0 0 1 114.4624 562.6641 0 Tp
0 Tv
TP
0 Tr
0 0 0 Xa
/_TimesNewRomanPS-BoldItalicMT 7.15 7.15 -2.1925 Tf
100 93 Tz
(\r) TX 1 0 Tk
TO
0 To
1 0 0 1 104.1997 559.6606 0 Tp
0 Tv
TP
-29.8495 0 Td
0 Tr
/_Times-Roman 10 8.7799 -2.5699 Tf
100 100 Tz
27.7992 0 Xb
XB
1 Ta
8.8803 0 Tl
(\(except dashed\r) Tx 1 0 Tk
10.9647 -8.8803 Td
(contours\)) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 102.2656 595.5386 0 Tp
0 Tv
TP
-20.2078 0 Td
0 Tr
/_Times-Roman 10.465 9.1882 -2.6894 Tf
25.74 0 Xb
XB
8.97 0 Tl
(with tight\r) Tx 1 0 Tk
-2.4643 -8.97 Td
(constraints\r) Tx 1 0 Tk
8.05 -8.97 Td
(on ) Tx 1 0 Tk
/_Symbol 10.465 8.6963 -2.6163 Tf
(W) Tx 1 0 Tk
/_Times-Roman 8.2225 7.2193 -2.1131 Tf
-1.6445 Ts
(M) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 467.0605 448.4497 0 Tp
0 Tv
TP
-20.2078 0 Td
0 Tr
/_Times-Roman 10.465 9.1882 -2.6894 Tf
0 Ts
(with tight\r) Tx 1 0 Tk
-2.4643 -8.97 Td
(constraints\r) Tx 1 0 Tk
8.05 -8.97 Td
(on ) Tx 1 0 Tk
/_Symbol 10.465 8.6963 -2.6163 Tf
(W) Tx 1 0 Tk
/_Times-Roman 8.2225 7.2193 -2.1131 Tf
-1.6445 Ts
(M) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 119.3203 362.3936 0 Tp
0 Tv
TP
0 Tr
/_Symbol 10.465 8.6963 -2.6163 Tf
0 Ts
28.08 0 Xb
XB
0 Ta
(W) Tx 1 0 Tk
/_Times-Roman 8.073 7.088 -2.0747 Tf
-2.99 Ts
(M) Tx 1 0 Tk
(\r) TX 
TO
0 To
0.7237 0.6901 -0.6901 0.7237 503.1211 508.3472 0 Tp
0 Tv
TP
0 Tr
1 1 1 Xa
/_Arial-BoldMT 9.1 9.1 -3.4258 Tf
0 Ts
65 116 Tz
23.4 0 Xb
XB
0 0 Tl
(SNAP) Tx 1 0 Tk
(\r) TX 
TO
/BBAccumRotation (0.761675) XT
0 To
0.5799 -0.8147 0.8147 0.5799 109.9087 492.5879 0 Tp
0 Tv
TP
0 Tr
88 103 Tz
(SNAP) Tx 1 0 Tk
(\r) TX 
TO
0 To
0 1 -1 0 26.6895 463.9761 0 Tp
0 Tv
TP
0 Tr
0 0 0 Xa
/_TimesNewRomanPSMT 11.2125 11.2125 -3.4382 Tf
100 100 Tz
28.08 0 Xb
XB
8.97 0 Tl
(constant ) Tx 1 0 Tk
/_TimesNewRomanPS-ItalicMT 11.96 11.96 -3.6674 Tf
(w) Tx 1 0 Tk
(\r) TX 
TO
/BBAccumRotation (1.570796) XT
0 To
0 1 -1 0 411.8652 495.4956 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 11.2125 11.2125 -3.4382 Tf
(w') Tx 1 0 Tk
(\r) TX 
TO
/BBAccumRotation (1.570796) XT
0 To
1 0 0 1 490.3428 362.8076 0 Tp
0 Tv
TP
0 Tr
(w) Tx 1 0 Tk
/_TimesNewRomanPSMT 8.2225 8.2225 -2.5214 Tf
-2.2425 Ts
(0) Tx 1 0 Tk
(\r) TX 
TO
1 1 1 Xa
51.0571 528.3936 m
43.5039 528.3936 L
43.5039 540.0142 L
51.0571 540.0142 L
51.0571 528.3936 L
f
50.9878 522.5376 m
48.5269 522.5376 L
48.5269 533.5771 L
50.9878 533.5771 L
50.9878 522.5376 L
f
0 Ap
0 R
0 0 0 XA
0.5 w
105.0273 506.5508 m
102.9233 547.6055 l
90.7358 523.7178 l
S
1 Ap
0 O
1 1 1 Xa
1 w
533.0244 582.1646 m
462.8242 582.1646 L
462.8242 606.8647 L
533.0244 606.8647 L
533.0244 582.1646 L
f
0 To
1 0 0 1 431.543 597.5186 0 Tp
0 Tv
TP
0 Tr
0 0 0 Xa
/_ArialMT 11 11 -3.5718 Tf
0 Ts
91 101 Tz
23.4 0 Xb
XB
0 0 Tl
(     200 high-redshift SN) Tx
(\r) TX 1 0 Tk
0 -13 Td
(      + 300 low-redshift SN) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 171.8354 601.4731 0 Tp
0 Tv
TP
-21.8025 0 Td
0 Tr
/_Times-Italic 11.2125 9.8445 -2.8815 Tf
100 100 Tz
1 Ta
9.7175 0 Tl
(Assuming\r) Tx 1 0 Tk
-2.8031 -9.7175 Td
(constant-w\r) Tx 1 0 Tk
13.0793 -9.7175 Td
(prior) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 352.8359 599.4731 0 Tp
0 Tv
TP
-30.8011 0 Td
0 Tr
96 102 Tz
(Marginalizing\r) Tx 1 0 Tk
14.9669 -9.7175 Td
(over w) Tx 1 0 Tk
/_Times-Italic 13 11.4139 -3.3409 Tf
-2 Ts
(') Tx 1 0 Tk
(\r) TX 
TO
u
2 To
0.6281 -0.7782 0.7782 0.6281 -7885 8587 2 Tp
0 Tv
122.3745 481.2646 m
109.5791 497.1191 93.4263 505.3066 86.2974 499.5527 c
79.168 493.7988 83.7617 476.2813 96.5581 460.4277 c
109.354 444.5742 125.5063 436.3867 132.6348 442.1406 c
139.7646 447.8955 135.1704 465.4121 122.3745 481.2646 c
n
TP
-0.1914 -0.9816 0.9816 -0.1914 83.7295 496.6226 Tm
0 Tr
0 O
0 0 0 Xa
/_ArialMT 10.47 10.47 -3.3997 Tf
0 Ts
91 97 Tz
27.7992 0 Xb
XB
8.8803 0 Tl
(2) Tx 1 0 Tk
0.1554 -0.9879 0.9879 0.1554 82.8428 489.7095 Tm
(0) Tx 1 0 Tk
0.3152 -0.9491 0.9491 0.3152 83.8877 483.7153 Tm
(0) Tx 1 0 Tk
0.4597 -0.8881 0.8881 0.4597 86.9204 475.563 Tm
(h) Tx 1 0 Tk
0.5102 -0.8601 0.8601 0.5102 89.5327 470.6372 Tm
(i) Tx 1 0 Tk
0.5548 -0.832 0.832 0.5548 90.7153 468.5771 Tm
(g) Tx 1 0 Tk
0.6117 -0.7911 0.7911 0.6117 93.8569 463.8916 Tm
(h) Tx 1 0 Tk
0.6536 -0.7569 0.7569 0.6536 97.2856 459.5151 Tm
(-) Tx 1 0 Tk
0.6846 -0.729 0.729 0.6846 99.4907 456.9663 Tm
(r) Tx 1 0 Tk
0.7264 -0.6874 0.6874 0.7264 101.8345 454.4341 Tm
(e) Tx 1 0 Tk
0.7806 -0.6251 0.6251 0.7806 105.9644 450.54 Tm
(d) Tx 1 0 Tk
0.8364 -0.5483 0.5483 0.8364 110.4434 446.9834 Tm
(s) Tx 1 0 Tk
0.9004 -0.4352 0.4352 0.9004 114.9717 444.0195 Tm
(h) Tx 1 0 Tk
0.9538 -0.3007 0.3007 0.9538 120.4287 441.5439 Tm
(i) Tx 1 0 Tk
0.9872 -0.1596 0.1596 0.9872 123.1113 440.7168 Tm
(f) Tx 1 0 Tk
0.9905 0.138 -0.138 0.9905 127.1519 440.2256 Tm
(t) Tx 1 0 Tk
(200 high-redshift) TX
(\r) TX 
TO
2 To
0.6281 -0.7782 0.7782 0.6281 -7885 8587 2 Tp
0 Tv
114.2285 474.2432 m
100.6538 491.0625 83.5176 499.749 75.9546 493.6445 c
68.3906 487.54 73.2642 468.9561 86.8398 452.1367 c
100.415 435.3184 117.5513 426.6318 125.1133 432.7363 c
132.6777 438.8418 127.8037 457.4248 114.2285 474.2432 c
n
TP
-0.1602 -0.9871 0.9871 -0.1602 73.0552 490.0581 Tm
0 Tr
0 O
0 0 0 Xa
/_ArialMT 10.45 10.45 -3.3932 Tf
29.4922 0 Xb
XB
9.4211 0 Tl
(+) Tx 1 0 Tk
0.1561 -0.9878 0.9878 0.1561 72.3159 483.0166 Tm
(3) Tx 1 0 Tk
0.3072 -0.9517 0.9517 0.3072 73.3462 477.0737 Tm
(0) Tx 1 0 Tk
0.4071 -0.9134 0.9134 0.4071 75.1699 471.5586 Tm
(0) Tx 1 0 Tk
0.5276 -0.8495 0.8495 0.5276 80.2266 461.541 Tm
(l) Tx 1 0 Tk
0.5679 -0.8231 0.8231 0.5679 81.439 459.5298 Tm
(o) Tx 1 0 Tk
0.6275 -0.7787 0.7787 0.6275 84.6372 454.8701 Tm
(w) Tx 1 0 Tk
0.6729 -0.7398 0.7398 0.6729 89.1216 449.4009 Tm
(-) Tx 1 0 Tk
0.702 -0.7122 0.7122 0.702 91.3833 446.9189 Tm
(r) Tx 1 0 Tk
0.7416 -0.6709 0.6709 0.7416 93.7769 444.4565 Tm
(e) Tx 1 0 Tk
0.7932 -0.609 0.609 0.7932 97.9775 440.6685 Tm
(d) Tx 1 0 Tk
0.8465 -0.5324 0.5324 0.8465 102.5137 437.2139 Tm
(s) Tx 1 0 Tk
0.9076 -0.4201 0.4201 0.9076 107.0811 434.3447 Tm
(h) Tx 1 0 Tk
0.9576 -0.2881 0.2881 0.9576 112.5518 431.9683 Tm
(i) Tx 1 0 Tk
0.9883 -0.1531 0.1531 0.9883 115.2124 431.1851 Tm
(f) Tx 1 0 Tk
0.9933 0.1158 -0.1158 0.9933 119.1235 430.7134 Tm
(t) Tx 1 0 Tk
(+300  low-redshift) TX
(\r) TX 
TO
U
0 To
0.9718 0.2359 -0.2359 0.9718 127.2451 431.8418 0 Tp
0 Tv
TP
-2.7313 0 Td
0 Tr
/_ArialMT 9 9 -2.9224 Tf
(S) Tx 1 0 Tk
(\r) TX 
TO
/BBAccumRotation (0.238191) XT
0 To
0.8681 0.4963 -0.4963 0.8681 133.3486 433.8423 0 Tp
0 Tv
TP
-2.9573 0 Td
0 Tr
(N) Tx 1 0 Tk
(\r) TX 
TO
/BBAccumRotation (0.519364) XT
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 0 1 0 0 -1 0 85 0 Lb
(not constant w - om) Ln
1 A
0 A
0 O
1 1 1 Xa
0 J 0 j 1 w 4 M []0 d
0 XR
331.8525 329.6426 m
289.188 329.6426 L
289.188 388.1543 L
331.8525 388.1543 L
331.8525 329.6426 L
f
0 Ap
1 D
0 R
0 0 0 XA
1 j 3 w 10 M
285.6753 496.8062 m
286.0391 485.4429 L
286.312 479.6816 L
286.9473 474.0791 L
287.584 468.3179 L
288.583 462.7144 L
289.4917 456.9546 L
290.7632 451.3496 L
292.126 445.5903 L
293.7617 439.8311 L
295.4878 434.2275 L
297.6685 428.4668 L
300.2129 422.8633 L
303.2109 417.2578 L
305.0283 414.3008 L
307.209 411.499 L
310.0254 408.8516 L
312.0234 407.4512 L
315.3857 406.6738 L
317.8389 407.2969 L
319.748 408.2295 L
321.8369 410.4102 L
324.3809 414.6133 L
326.2891 418.9717 L
327.5605 423.1748 L
329.6504 431.7363 L
331.0137 440.2979 L
331.9219 448.8599 L
332.5586 457.4229 L
332.9219 465.9839 L
333.1035 474.5454 L
332.8301 485.5981 L
332.2852 496.8062 L
331.2852 508.0151 L
330.7402 513.4624 L
329.9229 519.0674 L
329.0137 524.6719 L
327.9238 530.2754 L
326.6523 535.8799 L
325.0176 541.3281 L
323.1094 546.9321 L
320.6563 552.5366 L
319.1113 555.3389 L
317.1123 558.1411 L
314.3867 560.7871 L
312.3877 562.188 L
308.9355 562.9658 L
306.3906 562.3438 L
304.3916 561.5649 L
301.7578 559.542 L
299.9399 557.5176 L
298.3955 555.3389 L
295.9424 551.29 L
293.9434 547.0879 L
292.3081 542.8848 L
291.0361 538.6816 L
288.9463 530.2754 L
287.4019 521.8696 L
286.4023 513.6191 L
285.8574 505.2124 L
285.6753 496.8062 L
S
u
u
*u
300 Ar
1 w
241.5044 388.5342 m
397.9727 388.5342 l
397.9727 622.2007 l
241.5044 622.2007 l
241.5044 388.5342 l
397.9727 388.5342 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
241.5044 388.5342 m
397.9727 388.5342 l
S
/BBAccumRotation (0.000000) XT
300 Ar
246.7314 388.5342 m
246.7314 391.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
257.1831 388.5342 m
257.1831 391.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
267.6348 388.5342 m
267.6348 394.5918 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
264.5928 383.5244 m
264.0469 383.1768 l
263.6567 382.3613 l
263.501 380.9629 l
263.501 380.1465 l
263.6567 378.749 l
264.0469 377.8174 l
264.5928 377.585 l
264.9834 377.585 l
265.5293 377.8174 l
265.9189 378.749 l
266.0752 380.1465 l
266.0752 380.9629 l
265.9189 382.3613 l
265.5293 383.1768 l
264.9834 383.5244 l
264.5928 383.5244 l
264.2031 383.1768 l
264.0469 382.9434 l
263.813 382.3613 l
263.6567 380.9629 l
263.6567 380.1465 l
263.813 378.749 l
264.0469 378.167 l
264.2031 377.8174 l
264.5928 377.585 l
S
/BBAccumRotation (0.000000) XT
300 Ar
264.9834 377.585 m
265.373 377.8174 l
265.5293 378.167 l
265.6846 378.749 l
265.9189 380.1465 l
265.9189 380.9629 l
265.6846 382.3613 l
265.5293 382.9434 l
265.373 383.1768 l
264.9834 383.5244 l
S
/BBAccumRotation (0.000000) XT
300 Ar
267.6348 378.167 m
267.4009 377.8174 l
267.6348 377.585 l
267.791 377.8174 l
267.6348 378.167 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
269.2729 382.3613 m
269.5068 382.0117 l
269.2729 381.7783 l
269.1167 382.0117 l
269.1167 382.3613 l
269.2729 382.9434 l
269.5068 383.1768 l
270.0532 383.5244 l
270.7544 383.5244 l
271.3794 383.1768 l
271.5347 382.9434 l
271.769 382.3613 l
271.769 381.7783 l
271.5347 381.1963 l
270.9888 380.6123 l
270.0532 380.1465 l
269.6626 379.7979 l
269.2729 379.2168 l
269.1167 378.4014 l
269.1167 377.585 l
S
/BBAccumRotation (0.000000) XT
300 Ar
270.7544 383.5244 m
271.145 383.1768 l
271.3794 382.9434 l
271.5347 382.3613 l
271.5347 381.7783 l
271.3794 381.1963 l
270.7544 380.6123 l
270.0532 380.1465 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
269.1167 378.167 m
269.2729 378.4014 l
269.6626 378.4014 l
270.5991 377.8174 l
271.145 377.8174 l
271.5347 378.167 l
271.769 378.4014 l
S
/BBAccumRotation (0.000000) XT
300 Ar
269.6626 378.4014 m
270.5991 377.585 l
271.3794 377.585 l
271.5347 377.8174 l
271.769 378.4014 l
271.769 378.9824 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
278.0088 388.5342 m
278.0088 391.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
288.4609 388.5342 m
288.4609 391.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
298.9126 388.5342 m
298.9126 391.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
309.2871 388.5342 m
309.2871 391.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
319.7383 388.5342 m
319.7383 394.5918 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
316.7754 383.5244 m
316.1504 383.1768 l
315.8389 382.3613 l
315.6055 380.9629 l
315.6055 380.1465 l
315.8389 378.749 l
316.1504 377.8174 l
316.7754 377.585 l
317.0869 377.585 l
317.7109 377.8174 l
318.1016 378.749 l
318.2568 380.1465 l
318.2568 380.9629 l
318.1016 382.3613 l
317.7109 383.1768 l
317.0869 383.5244 l
316.7754 383.5244 l
316.3848 383.1768 l
316.1504 382.9434 l
315.9951 382.3613 l
315.8389 380.9629 l
315.8389 380.1465 l
315.9951 378.749 l
316.1504 378.167 l
316.3848 377.8174 l
316.7754 377.585 l
S
/BBAccumRotation (0.000000) XT
300 Ar
317.0869 377.585 m
317.4766 377.8174 l
317.7109 378.167 l
317.8672 378.749 l
318.1016 380.1465 l
318.1016 380.9629 l
317.8672 382.3613 l
317.7109 382.9434 l
317.4766 383.1768 l
317.0869 383.5244 l
S
/BBAccumRotation (0.000000) XT
300 Ar
319.7383 378.167 m
319.582 377.8174 l
319.7383 377.585 l
319.9727 377.8174 l
319.7383 378.167 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
321.4551 382.3613 m
321.6113 382.0117 l
321.4551 381.7783 l
321.2207 382.0117 l
321.2207 382.3613 l
321.4551 382.9434 l
321.6113 383.1768 l
322.1563 383.5244 l
322.9365 383.5244 l
323.4824 383.1768 l
323.7168 382.5938 l
323.7168 381.7783 l
323.4824 381.1963 l
322.9365 380.9629 l
322.3906 380.9629 l
S
/BBAccumRotation (0.000000) XT
300 Ar
322.9365 383.5244 m
323.3271 383.1768 l
323.4824 382.5938 l
323.4824 381.7783 l
323.3271 381.1963 l
322.9365 380.9629 l
323.3271 380.6123 l
323.7168 380.1465 l
323.873 379.5645 l
323.873 378.749 l
323.7168 378.167 l
323.4824 377.8174 l
322.9365 377.585 l
322.1563 377.585 l
321.6113 377.8174 l
321.4551 378.167 l
321.2207 378.749 l
321.2207 378.9824 l
321.4551 379.2168 l
321.6113 378.9824 l
321.4551 378.749 l
S
/BBAccumRotation (0.000000) XT
300 Ar
323.4824 380.3809 m
323.7168 379.5645 l
323.7168 378.749 l
323.4824 378.167 l
323.3271 377.8174 l
322.9365 377.585 l
S
/BBAccumRotation (0.000000) XT
300 Ar
330.1914 388.5342 m
330.1914 391.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
340.6426 388.5342 m
340.6426 391.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
351.0166 388.5342 m
351.0166 391.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
361.4688 388.5342 m
361.4688 391.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
371.9209 388.5342 m
371.9209 394.5918 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
368.8789 383.5244 m
368.333 383.1768 l
367.9424 382.3613 l
367.7871 380.9629 l
367.7871 380.1465 l
367.9424 378.749 l
368.333 377.8174 l
368.8789 377.585 l
369.2686 377.585 l
369.8145 377.8174 l
370.2051 378.749 l
370.4385 380.1465 l
370.4385 380.9629 l
370.2051 382.3613 l
369.8145 383.1768 l
369.2686 383.5244 l
368.8789 383.5244 l
368.4883 383.1768 l
368.333 382.9434 l
368.1768 382.3613 l
367.9424 380.9629 l
367.9424 380.1465 l
368.1768 378.749 l
368.333 378.167 l
368.4883 377.8174 l
368.8789 377.585 l
S
/BBAccumRotation (0.000000) XT
300 Ar
369.2686 377.585 m
369.6582 377.8174 l
369.8145 378.167 l
370.0488 378.749 l
370.2051 380.1465 l
370.2051 380.9629 l
370.0488 382.3613 l
369.8145 382.9434 l
369.6582 383.1768 l
369.2686 383.5244 l
S
/BBAccumRotation (0.000000) XT
300 Ar
371.9209 378.167 m
371.6865 377.8174 l
371.9209 377.585 l
372.0771 377.8174 l
371.9209 378.167 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
375.1191 382.9434 m
375.1191 377.585 l
S
/BBAccumRotation (0.000000) XT
300 Ar
375.2754 383.5244 m
375.2754 377.585 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
375.2754 383.5244 m
373.2471 379.2168 l
376.2109 379.2168 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
374.4951 377.585 m
375.8213 377.585 l
S
/BBAccumRotation (0.000000) XT
300 Ar
382.2949 388.5342 m
382.2949 391.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
392.7471 388.5342 m
392.7471 391.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
241.5044 622.2007 m
397.9727 622.2007 l
S
/BBAccumRotation (0.000000) XT
300 Ar
246.7314 622.2007 m
246.7314 619.1719 l
S
/BBAccumRotation (0.000000) XT
300 Ar
257.1831 622.2007 m
257.1831 619.1719 l
S
/BBAccumRotation (0.000000) XT
300 Ar
267.6348 622.2007 m
267.6348 616.2598 l
S
/BBAccumRotation (0.000000) XT
300 Ar
278.0088 622.2007 m
278.0088 619.1719 l
S
/BBAccumRotation (0.000000) XT
300 Ar
288.4609 622.2007 m
288.4609 619.1719 l
S
/BBAccumRotation (0.000000) XT
300 Ar
298.9126 622.2007 m
298.9126 619.1719 l
S
/BBAccumRotation (0.000000) XT
300 Ar
309.2871 622.2007 m
309.2871 619.1719 l
S
/BBAccumRotation (0.000000) XT
300 Ar
319.7383 622.2007 m
319.7383 616.2598 l
S
/BBAccumRotation (0.000000) XT
300 Ar
330.1914 622.2007 m
330.1914 619.1719 l
S
/BBAccumRotation (0.000000) XT
300 Ar
340.6426 622.2007 m
340.6426 619.1719 l
S
/BBAccumRotation (0.000000) XT
300 Ar
351.0166 622.2007 m
351.0166 619.1719 l
S
/BBAccumRotation (0.000000) XT
300 Ar
361.4688 622.2007 m
361.4688 619.1719 l
S
/BBAccumRotation (0.000000) XT
300 Ar
371.9209 622.2007 m
371.9209 616.2598 l
S
/BBAccumRotation (0.000000) XT
300 Ar
382.2949 622.2007 m
382.2949 619.1719 l
S
/BBAccumRotation (0.000000) XT
300 Ar
392.7471 622.2007 m
392.7471 619.1719 l
S
/BBAccumRotation (0.000000) XT
300 Ar
241.5044 388.5342 m
241.5044 622.2007 l
S
/BBAccumRotation (0.000000) XT
300 Ar
241.5044 388.5342 m
243.5332 388.5342 l
S
/BBAccumRotation (0.000000) XT
300 Ar
241.5044 398.3203 m
243.5332 398.3203 l
S
/BBAccumRotation (0.000000) XT
300 Ar
241.5044 407.9873 m
245.5605 407.9873 l
S
/BBAccumRotation (0.000000) XT
300 Ar
224.5791 407.6387 m
228.0107 407.6387 l
S
/BBAccumRotation (0.000000) XT
300 Ar
229.8833 409.8506 m
230.1948 410.083 l
230.8188 411.0156 l
230.8188 405.0752 l
S
/BBAccumRotation (0.000000) XT
300 Ar
230.5845 410.666 m
230.5845 405.0752 l
S
/BBAccumRotation (0.000000) XT
300 Ar
229.8833 405.0752 m
231.521 405.0752 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
233.3931 405.6582 m
233.2368 405.4248 l
233.3931 405.0752 l
233.627 405.4248 l
233.3931 405.6582 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
236.5908 410.4346 m
236.5908 405.0752 l
S
/BBAccumRotation (0.000000) XT
300 Ar
236.8252 411.0156 m
236.8252 405.0752 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
236.8252 411.0156 m
234.7188 406.8232 l
237.7607 406.8232 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
236.0449 405.0752 m
237.3711 405.0752 l
S
/BBAccumRotation (0.000000) XT
300 Ar
241.5044 417.7715 m
243.5332 417.7715 l
S
/BBAccumRotation (0.000000) XT
300 Ar
241.5044 427.5557 m
243.5332 427.5557 l
S
/BBAccumRotation (0.000000) XT
300 Ar
241.5044 437.2236 m
243.5332 437.2236 l
S
/BBAccumRotation (0.000000) XT
300 Ar
241.5044 447.0098 m
245.5605 447.0098 l
S
/BBAccumRotation (0.000000) XT
300 Ar
224.5791 446.543 m
228.0107 446.543 l
S
/BBAccumRotation (0.000000) XT
300 Ar
229.8833 448.7559 m
230.1948 449.1064 l
230.8188 449.9214 l
230.8188 443.98 l
S
/BBAccumRotation (0.000000) XT
300 Ar
230.5845 449.6885 m
230.5845 443.98 l
S
/BBAccumRotation (0.000000) XT
300 Ar
229.8833 443.98 m
231.521 443.98 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
233.3931 444.5625 m
233.2368 444.3301 l
233.3931 443.98 l
233.627 444.3301 l
233.3931 444.5625 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
235.1089 448.7559 m
235.2646 448.5229 l
235.1089 448.291 l
234.9531 448.5229 l
234.9531 448.7559 l
235.1089 449.3394 l
235.2646 449.6885 l
235.8887 449.9214 l
236.5908 449.9214 l
237.1367 449.6885 l
237.3711 449.3394 l
237.5273 448.7559 l
237.5273 448.291 l
237.3711 447.707 l
236.8252 447.126 l
235.8887 446.543 l
235.499 446.3105 l
235.1089 445.728 l
234.9531 444.9126 l
234.9531 443.98 l
S
/BBAccumRotation (0.000000) XT
300 Ar
236.5908 449.9214 m
236.9814 449.6885 l
237.1367 449.3394 l
237.3711 448.7559 l
237.3711 448.291 l
237.1367 447.707 l
236.5908 447.126 l
235.8887 446.543 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
234.9531 444.5625 m
235.1089 444.9126 l
235.499 444.9126 l
236.4346 444.3301 l
236.9814 444.3301 l
237.3711 444.5625 l
237.5273 444.9126 l
S
/BBAccumRotation (0.000000) XT
300 Ar
235.499 444.9126 m
236.4346 443.98 l
237.1367 443.98 l
237.3711 444.3301 l
S
/BBAccumRotation (0.000000) XT
*U
/BBAccumRotation (0.000000) XT
*u
300 Ar
237.3711 444.3301 m
237.5273 444.9126 l
237.5273 445.4946 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
241.5044 456.6768 m
243.5332 456.6768 l
S
/BBAccumRotation (0.000000) XT
300 Ar
241.5044 466.4619 m
243.5332 466.4619 l
S
/BBAccumRotation (0.000000) XT
300 Ar
241.5044 476.1299 m
243.5332 476.1299 l
S
/BBAccumRotation (0.000000) XT
300 Ar
241.5044 485.9146 m
245.5605 485.9146 l
S
/BBAccumRotation (0.000000) XT
300 Ar
230.1948 485.4487 m
233.627 485.4487 l
S
/BBAccumRotation (0.000000) XT
300 Ar
235.499 487.7783 m
235.8887 488.0117 l
236.4346 488.8267 l
236.4346 483.0029 l
S
/BBAccumRotation (0.000000) XT
300 Ar
236.2012 488.5942 m
236.2012 483.0029 l
S
/BBAccumRotation (0.000000) XT
300 Ar
235.499 483.0029 m
237.1367 483.0029 l
S
/BBAccumRotation (0.000000) XT
300 Ar
241.5044 495.6992 m
243.5332 495.6992 l
S
/BBAccumRotation (0.000000) XT
300 Ar
241.5044 505.3672 m
243.5332 505.3672 l
S
/BBAccumRotation (0.000000) XT
300 Ar
241.5044 515.1523 m
243.5332 515.1523 l
S
/BBAccumRotation (0.000000) XT
300 Ar
241.5044 524.8203 m
245.5605 524.8203 l
S
/BBAccumRotation (0.000000) XT
300 Ar
224.5791 524.4707 m
228.0107 524.4707 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
230.4292 527.8486 m
229.8833 527.4995 l
229.4927 526.6836 l
229.2588 525.2856 l
229.2588 524.4707 l
229.4927 523.0728 l
229.8833 522.1411 l
230.4292 521.9082 l
230.8188 521.9082 l
231.3647 522.1411 l
231.7544 523.0728 l
231.9106 524.4707 l
231.9106 525.2856 l
231.7544 526.6836 l
231.3647 527.4995 l
230.8188 527.8486 l
230.4292 527.8486 l
230.0386 527.4995 l
229.8833 527.2666 l
229.6489 526.6836 l
229.4927 525.2856 l
229.4927 524.4707 l
229.6489 523.0728 l
229.8833 522.4907 l
230.0386 522.1411 l
230.4292 521.9082 l
S
/BBAccumRotation (0.000000) XT
300 Ar
230.8188 521.9082 m
231.1313 522.1411 l
231.3647 522.4907 l
231.521 523.0728 l
231.7544 524.4707 l
231.7544 525.2856 l
231.521 526.6836 l
231.3647 527.2666 l
231.1313 527.4995 l
230.8188 527.8486 l
S
/BBAccumRotation (0.000000) XT
300 Ar
233.3931 522.4907 m
233.2368 522.1411 l
233.3931 521.9082 l
233.627 522.1411 l
233.3931 522.4907 l
S
/BBAccumRotation (0.000000) XT
300 Ar
235.8887 527.8486 m
235.2646 527.4995 l
235.1089 526.9165 l
235.1089 526.1016 l
235.2646 525.5195 l
235.8887 525.2856 l
236.5908 525.2856 l
237.1367 525.5195 l
237.3711 526.1016 l
237.3711 526.9165 l
237.1367 527.4995 l
236.5908 527.8486 l
235.8887 527.8486 l
235.499 527.4995 l
235.2646 526.9165 l
235.2646 526.1016 l
235.499 525.5195 l
235.8887 525.2856 l
S
/BBAccumRotation (0.000000) XT
300 Ar
236.5908 525.2856 m
236.9814 525.5195 l
237.1367 526.1016 l
237.1367 526.9165 l
236.9814 527.4995 l
236.5908 527.8486 l
S
/BBAccumRotation (0.000000) XT
300 Ar
235.8887 525.2856 m
235.2646 525.0532 l
235.1089 524.7036 l
234.9531 524.1211 l
234.9531 523.0728 l
235.1089 522.4907 l
235.2646 522.1411 l
235.8887 521.9082 l
236.5908 521.9082 l
237.1367 522.1411 l
237.3711 522.4907 l
237.5273 523.0728 l
237.5273 524.1211 l
237.3711 524.7036 l
237.1367 525.0532 l
236.5908 525.2856 l
S
/BBAccumRotation (0.000000) XT
300 Ar
235.8887 525.2856 m
235.499 525.0532 l
235.2646 524.7036 l
235.1089 524.1211 l
235.1089 523.0728 l
235.2646 522.4907 l
235.499 522.1411 l
235.8887 521.9082 l
S
/BBAccumRotation (0.000000) XT
300 Ar
236.5908 521.9082 m
236.9814 522.1411 l
237.1367 522.4907 l
237.3711 523.0728 l
237.3711 524.1211 l
237.1367 524.7036 l
236.9814 525.0532 l
236.5908 525.2856 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
241.5044 534.6045 m
243.5332 534.6045 l
S
/BBAccumRotation (0.000000) XT
300 Ar
241.5044 544.2729 m
243.5332 544.2729 l
S
/BBAccumRotation (0.000000) XT
300 Ar
241.5044 554.0571 m
243.5332 554.0571 l
S
/BBAccumRotation (0.000000) XT
300 Ar
241.5044 563.8423 m
245.5605 563.8423 l
S
/BBAccumRotation (0.000000) XT
300 Ar
224.5791 563.3765 m
228.0107 563.3765 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
230.4292 566.7539 m
229.8833 566.4048 l
229.4927 565.5894 l
229.2588 564.1919 l
229.2588 563.3765 l
229.4927 561.9785 l
229.8833 561.1631 l
230.4292 560.8135 l
230.8188 560.8135 l
231.3647 561.1631 l
231.7544 561.9785 l
231.9106 563.3765 l
231.9106 564.1919 l
231.7544 565.5894 l
231.3647 566.4048 l
230.8188 566.7539 l
230.4292 566.7539 l
230.0386 566.4048 l
229.8833 566.1724 l
229.6489 565.5894 l
229.4927 564.1919 l
229.4927 563.3765 l
229.6489 561.9785 l
229.8833 561.396 l
230.0386 561.1631 l
230.4292 560.8135 l
S
/BBAccumRotation (0.000000) XT
300 Ar
230.8188 560.8135 m
231.1313 561.1631 l
231.3647 561.396 l
231.521 561.9785 l
231.7544 563.3765 l
231.7544 564.1919 l
231.521 565.5894 l
231.3647 566.1724 l
231.1313 566.4048 l
230.8188 566.7539 l
S
/BBAccumRotation (0.000000) XT
300 Ar
233.3931 561.396 m
233.2368 561.1631 l
233.3931 560.8135 l
233.627 561.1631 l
233.3931 561.396 l
S
/BBAccumRotation (0.000000) XT
300 Ar
237.1367 565.9385 m
236.9814 565.5894 l
237.1367 565.3564 l
237.3711 565.5894 l
237.3711 565.9385 l
237.1367 566.4048 l
236.8252 566.7539 l
236.2012 566.7539 l
235.6548 566.4048 l
235.2646 565.9385 l
235.1089 565.3564 l
234.9531 564.1919 l
234.9531 562.561 l
235.1089 561.7456 l
235.499 561.1631 l
236.0449 560.8135 l
236.4346 560.8135 l
236.9814 561.1631 l
237.3711 561.7456 l
237.5273 562.561 l
237.5273 562.7939 l
237.3711 563.6089 l
236.9814 564.1919 l
236.4346 564.541 l
236.2012 564.541 l
235.6548 564.1919 l
235.2646 563.6089 l
235.1089 562.7939 l
S
/BBAccumRotation (0.000000) XT
300 Ar
236.2012 566.7539 m
235.8887 566.4048 l
235.499 565.9385 l
235.2646 565.3564 l
235.1089 564.1919 l
235.1089 562.561 l
235.2646 561.7456 l
235.6548 561.1631 l
236.0449 560.8135 l
S
/BBAccumRotation (0.000000) XT
300 Ar
236.4346 560.8135 m
236.8252 561.1631 l
237.1367 561.7456 l
237.3711 562.561 l
237.3711 562.7939 l
237.1367 563.6089 l
236.8252 564.1919 l
236.4346 564.541 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
241.5044 573.5103 m
243.5332 573.5103 l
S
/BBAccumRotation (0.000000) XT
300 Ar
241.5044 583.2949 m
243.5332 583.2949 l
S
/BBAccumRotation (0.000000) XT
300 Ar
241.5044 592.9629 m
243.5332 592.9629 l
S
/BBAccumRotation (0.000000) XT
300 Ar
241.5044 602.7476 m
245.5605 602.7476 l
S
/BBAccumRotation (0.000000) XT
300 Ar
224.5791 602.2817 m
228.0107 602.2817 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
230.4292 605.6602 m
229.8833 605.4272 l
229.4927 604.6113 l
229.2588 603.2139 l
229.2588 602.2817 l
229.4927 600.8843 l
229.8833 600.0684 l
230.4292 599.8359 l
230.8188 599.8359 l
231.3647 600.0684 l
231.7544 600.8843 l
231.9106 602.2817 l
231.9106 603.2139 l
231.7544 604.6113 l
231.3647 605.4272 l
230.8188 605.6602 l
230.4292 605.6602 l
230.0386 605.4272 l
229.8833 605.0771 l
229.6489 604.6113 l
229.4927 603.2139 l
229.4927 602.2817 l
229.6489 600.8843 l
229.8833 600.3018 l
230.0386 600.0684 l
230.4292 599.8359 l
S
/BBAccumRotation (0.000000) XT
300 Ar
230.8188 599.8359 m
231.1313 600.0684 l
231.3647 600.3018 l
231.521 600.8843 l
231.7544 602.2817 l
231.7544 603.2139 l
231.521 604.6113 l
231.3647 605.0771 l
231.1313 605.4272 l
230.8188 605.6602 l
S
/BBAccumRotation (0.000000) XT
300 Ar
233.3931 600.3018 m
233.2368 600.0684 l
233.3931 599.8359 l
233.627 600.0684 l
233.3931 600.3018 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
236.5908 605.0771 m
236.5908 599.8359 l
S
/BBAccumRotation (0.000000) XT
300 Ar
236.8252 605.6602 m
236.8252 599.8359 l
S
/BBAccumRotation (0.000000) XT
300 Ar
1 D
236.8252 605.6602 m
234.7188 601.4663 l
237.7607 601.4663 l
S
/BBAccumRotation (0.000000) XT
300 Ar
0 D
236.0449 599.8359 m
237.3711 599.8359 l
S
/BBAccumRotation (0.000000) XT
300 Ar
241.5044 612.4155 m
243.5332 612.4155 l
S
/BBAccumRotation (0.000000) XT
300 Ar
241.5044 622.2007 m
243.5332 622.2007 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 388.5342 m
397.9727 622.2007 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 388.5342 m
395.9453 388.5342 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 398.3203 m
395.9453 398.3203 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 407.9873 m
393.9951 407.9873 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 417.7715 m
395.9453 417.7715 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 427.5557 m
395.9453 427.5557 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 437.2236 m
395.9453 437.2236 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 447.0098 m
393.9951 447.0098 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 456.6768 m
395.9453 456.6768 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 466.4619 m
395.9453 466.4619 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 476.1299 m
395.9453 476.1299 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 485.9146 m
393.9951 485.9146 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 495.6992 m
395.9453 495.6992 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 505.3672 m
395.9453 505.3672 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 515.1523 m
395.9453 515.1523 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 524.8203 m
393.9951 524.8203 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 534.6045 m
395.9453 534.6045 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 544.2729 m
395.9453 544.2729 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 554.0571 m
395.9453 554.0571 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 563.8423 m
393.9951 563.8423 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 573.5103 m
395.9453 573.5103 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 583.2949 m
395.9453 583.2949 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 592.9629 m
395.9453 592.9629 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 602.7476 m
393.9951 602.7476 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 612.4155 m
395.9453 612.4155 l
S
/BBAccumRotation (0.000000) XT
300 Ar
397.9727 622.2007 m
395.9453 622.2007 l
S
/BBAccumRotation (0.000000) XT
*U
/BBAccumRotation (0.000000) XT
*u
300 Ar
0 O
0.6118 0.6118 0.6118 Xa
0.25 w
318.0234 466.5781 m
312.875 467.3931 l
308.9746 468.9082 l
305.8545 470.5386 l
303.0469 472.2866 l
300.5508 474.0337 l
298.2886 475.8975 l
296.1045 477.7607 l
294.3105 479.624 l
292.5171 481.4883 l
291.0347 483.3521 l
289.4751 485.2163 l
288.3047 487.1958 l
286.4331 491.04 l
285.6533 495 l
286.2773 497.7959 l
288.5386 500.5923 l
290.8013 501.873 l
293.999 502.8047 l
297.7427 503.3872 l
301.7207 503.5039 l
306.0889 503.3872 l
310.3008 502.9219 l
314.2793 502.106 l
317.8672 501.1738 l
320.9082 500.0093 l
323.5605 498.728 l
327.3047 495.8159 l
329.4883 492.9038 l
330.8145 489.7588 l
331.5176 486.73 l
331.751 483.7012 l
331.6729 481.3721 l
331.2832 479.1587 l
330.6582 476.8291 l
329.8008 474.6152 l
328.5527 472.2866 l
326.6816 470.0728 l
323.6387 467.8594 l
321.2988 466.9277 l
318.0234 466.5781 l
B
/BBAccumRotation (0.000000) XT
*U
/BBAccumRotation (0.000000) XT
*u
300 Ar
1 w
305.1533 503.3872 m
306.4004 503.3872 l
S
/BBAccumRotation (0.000000) XT
*U
/BBAccumRotation (0.000000) XT
U
/BBAccumRotation (0.000000) XT
U
/BBAccumRotation (0.000000) XT
1 D
0.7882 0.7882 0.7882 XA
285.6753 496.8062 m
286.0391 485.4429 L
286.312 479.6816 L
286.9473 474.0791 L
287.584 468.3179 L
288.583 462.7144 L
289.4917 456.9546 L
290.7632 451.3496 L
292.126 445.5903 L
293.7617 439.8311 L
295.4878 434.2275 L
297.6685 428.4668 L
300.2129 422.8633 L
303.2109 417.2578 L
305.0283 414.3008 L
307.209 411.499 L
310.0254 408.8516 L
312.0234 407.4512 L
315.3857 406.6738 L
317.8389 407.2969 L
319.748 408.2295 L
321.8369 410.4102 L
324.3809 414.6133 L
326.2891 418.9717 L
327.5605 423.1748 L
329.6504 431.7363 L
331.0137 440.2979 L
331.9219 448.8599 L
332.5586 457.4229 L
332.9219 465.9839 L
333.1035 474.5454 L
332.8301 485.5981 L
332.2852 496.8062 L
331.2852 508.0151 L
330.7402 513.4624 L
329.9229 519.0674 L
329.0137 524.6719 L
327.9238 530.2754 L
326.6523 535.8799 L
325.0176 541.3281 L
323.1094 546.9321 L
320.6563 552.5366 L
319.1113 555.3389 L
317.1123 558.1411 L
314.3867 560.7871 L
312.3877 562.188 L
308.9355 562.9658 L
306.3906 562.3438 L
304.3916 561.5649 L
301.7578 559.542 L
299.9399 557.5176 L
298.3955 555.3389 L
295.9424 551.29 L
293.9434 547.0879 L
292.3081 542.8848 L
291.0361 538.6816 L
288.9463 530.2754 L
287.4019 521.8696 L
286.4023 513.6191 L
285.8574 505.2124 L
285.6753 496.8062 L
S
1 Ap
0 D
0 O
1 1 1 Xa
0 j 4 M
389.4219 418.418 m
356.2715 418.418 L
356.2715 445.7178 L
389.4219 445.7178 L
389.4219 418.418 L
f
390.9824 519.2119 m
310.2529 519.2119 L
310.2529 547.6167 L
390.9824 547.6167 L
390.9824 519.2119 L
f
2 To
1 0 0 1 -7885 8587 1.9095 Tp
0 Tv
320.5889 508.1094 m
308.625 517.6084 293.9409 519.0278 287.7891 511.2798 c
281.6367 503.5322 286.3457 489.5508 298.3086 480.0513 c
310.2715 470.5532 324.9551 469.1338 331.1084 476.8813 c
337.2607 484.6294 332.5498 498.6104 320.5889 508.1094 c
n
TP
0.7844 -0.6202 0.6202 0.7844 295.4414 482.3179 Tm
0 Tr
0 O
1 1 1 Xa
%_ 0 50 XQ
/_Arial-BoldMT 11.2125 11.2125 -4.2211 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
1 TA
%_ 0 XL
0 TY
0 TV
26.91 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
0 Tc
0 Tw
(S) Tx 1 0 Tk
0.8992 -0.4375 0.4375 0.8992 302.2856 477.0024 Tm
(N) Tx 1 0 Tk
0.9861 -0.1659 0.1659 0.9861 311.0176 472.9204 Tm
(A) Tx 1 0 Tk
0.9443 0.3291 -0.3291 0.9443 321.7432 471.6118 Tm
(P) Tx 1 0 Tk
(SNAP) TX
(\r) TX 
TO
0 To
1 0 0 1 299.3135 535.9824 0 Tp
0 Tv
TP
0 Tr
0 0 0 Xa
/_ArialMT 10.465 10.465 -3.3981 Tf
91 97 Tz
(200 high-redshift SN) Tx
(\r) TX 1 0 Tk
0 -12.465 Td
(    + 300 low-redshift) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 303.9482 561.3643 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-BoldItalicMT 7.15 7.15 -2.1925 Tf
100 93 Tz
23.4 0 Xb
XB
(\r) TX 1 0 Tk
TO
0 To
1 0 0 1 363.1484 429.2036 0 Tp
0 Tv
TP
-18.8625 0 Td
0 Tr
/_Times-Roman 9.7683 8.5765 -2.5103 Tf
100 100 Tz
27.7992 0 Xb
XB
1 Ta
8.8803 0 Tl
(with tight\r) Tx 1 0 Tk
-2.3003 -8.8803 Td
(constraints\r) Tx 1 0 Tk
7.3731 -8.8803 Td
(on ) Tx 1 0 Tk
/_Symbol 9.7683 8.1174 -2.4421 Tf
(W) Tx 1 0 Tk
/_Times-Roman 7.9923 7.0172 -2.0539 Tf
-1.7761 Ts
(M) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 308.8066 362.3936 0 Tp
0 Tv
TP
0 Tr
/_Symbol 10.465 8.6963 -2.6163 Tf
0 Ts
28.08 0 Xb
XB
0 Ta
8.97 0 Tl
(W) Tx 1 0 Tk
/_Times-Roman 8.073 7.088 -2.0747 Tf
-2.99 Ts
(M) Tx 1 0 Tk
(\r) TX 
TO
0 To
0 1 -1 0 223.9829 461.062 0 Tp
0 Tv
TP
0 Tr
/_TimesNewRomanPS-ItalicMT 11.2125 11.2125 -3.4382 Tf
0 Ts
(w ) Tx 1 0 Tk
/_TimesNewRomanPSMT 11.2125 11.2125 -3.4382 Tf
(today) Tx 1 0 Tk
/_TimesNewRomanPS-ItalicMT 11.2125 11.2125 -3.4382 Tf
(, w) Tx 1 0 Tk
/_TimesNewRomanPSMT 8.2225 8.2225 -2.5214 Tf
-2.2425 Ts
(0) Tx 1 0 Tk
(\r) TX 
TO
/BBAccumRotation (1.570796) XT
1 1 1 Xa
240.543 529.3936 m
232.9897 529.3936 L
232.9897 541.0142 L
240.543 541.0142 L
240.543 529.3936 L
f
240.4741 522.5376 m
238.0132 522.5376 L
238.0132 533.5771 L
240.4741 533.5771 L
240.4741 522.5376 L
f
LB
%AI5_EndLayer--
gsave annotatepage grestore showpage
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec

%%EndDocument
 @endspecial 523 1946 a Fs(Fig.)15 b(7.)35 b Ft(F)-6
b(uture)29 b(exp)r(ected)i(constrain)n(ts)g(on)g(dark)f(energy:)h
Fc(L)l(eft)i(p)l(anel:)d Ft(Estimated)h(68\045)g(con-)523
2038 y(\014dence)37 b(regions)h(for)g(a)g(constan)n(t)f(equation)h(of)g
(state)g(parameter)e(for)j(the)e(dark)f(energy)-6 b(,)38
b Fq(w)r Ft(,)523 2129 y(v)n(ersus)33 b(mass)f(densit)n(y)-6
b(,)32 b(for)i(a)f(ground-based)f(study)g(with)h(200)h(SNe)e(b)r(et)n
(w)n(een)g Fq(z)37 b Ft(=)32 b(0)p Fq(:)p Ft(3)23 b Fr(\000)f
Ft(0)p Fq(:)p Ft(7)523 2220 y(\(op)r(en)g(con)n(tours\),)h(and)f(for)i
(the)e(satellite-based)i Fa(SNAP)d Ft(exp)r(erimen)n(t)g(with)i(2,000)h
(SNe)e(b)r(et)n(w)n(een)523 2312 y Fq(z)39 b Ft(=)c(0)p
Fq(:)p Ft(3)24 b Fr(\000)e Ft(1)p Fq(:)p Ft(7)35 b(\(\014lled)g(con)n
(tours\).)f(Both)h(exp)r(erimen)n(ts)e(are)h(assumed)g(to)g(also)i(use)
e(300)i(SNe)523 2403 y(b)r(et)n(w)n(een)31 b Fq(z)j Ft(=)c(0)p
Fq(:)p Ft(02)22 b Fr(\000)f Ft(0)p Fq(:)p Ft(08.)33 b(A)e(\015at)g
(cosmology)h(is)g(assumed)e(\(based)i(on)f Fa(Cosmic)h(Micro)n(w)n(a)n
(v)n(e)523 2494 y(Bac)n(kground)20 b(\(CMB\))g Ft(constrain)n(ts\))g
(and)g(the)f(inner)g(\(solid)i(line\))e(con)n(tours)h(for)h(eac)n(h)e
(exp)r(erimen)n(t)523 2586 y(include)h(tigh)n(t)g(constrain)n(ts)h
(\(from)f(large)h(scale)g(structure)f(surv)n(eys\))f(on)h
Fq(\012)2694 2594 y Fd(M)2762 2586 y Ft(,)g(at)g(the)g
Fr(\006)p Ft(0)p Fq(:)p Ft(03)h(lev)n(el.)523 2677 y(F)-6
b(or)29 b(the)f Fa(SNAP)f Ft(exp)r(erimen)n(t,)g(systematic)i
(uncertain)n(t)n(y)e(is)i(tak)n(en)f(as)h Fq(dm)c Ft(=)h(0)p
Fq(:)p Ft(02\()p Fq(z)s(=)p Ft(1)p Fq(:)p Ft(7\),)31
b(and)523 2768 y(for)i(the)f(ground-based)f(exp)r(erimen)n(t,)g
Fq(dm)h Ft(=)f(0)p Fq(:)p Ft(03\()p Fq(z)s(=)p Ft(0)p
Fq(:)p Ft(5\).)36 b(Suc)n(h)31 b(ground-based)g(studies)h(will)523
2860 y(test)i(the)g(h)n(yp)r(othesis)g(that)g(the)f(dark)h(energy)g(is)
h(in)f(the)g(form)g(of)g(a)h(cosmological)h(constan)n(t,)523
2951 y(for)g(whic)n(h)f Fq(w)j Ft(=)f Fr(\000)p Ft(1)e(at)g(all)g
(times.)g Fc(Midd)t(le)h(p)l(anel:)e Ft(The)h(same)g(con\014dence)g
(regions)h(for)f(the)523 3042 y(same)c(exp)r(erimen)n(ts)g(not)g
(assuming)h(the)f(equation)h(of)g(state)g(parameter,)g
Fq(w)r Ft(,)g(to)g(b)r(e)f(constan)n(t,)523 3134 y(but)24
b(instead)h(marginalizing)h(o)n(v)n(er)f Fq(w)1625 3102
y Fp(0)1647 3134 y Ft(,)g(where)h Fq(w)r Ft(\()p Fq(z)s
Ft(\))21 b(=)g Fq(w)2228 3142 y Fu(0)2278 3134 y Ft(+)15
b Fq(w)2410 3102 y Fp(0)2432 3134 y Fq(z)s Ft(.)25 b(\(W)-6
b(eller)26 b(and)e(Albrec)n(h)n(t)g([103])523 3225 y(recommend)h(this)i
(parameterization)g(of)h Fq(w)r Ft(\()p Fq(z)s Ft(\))e(o)n(v)n(er)g
(the)h(others)g(that)f(ha)n(v)n(e)g(b)r(een)h(prop)r(osed)g(to)523
3316 y(c)n(haracterize)32 b(w)n(ell)g(the)e(curren)n(t)g(range)h(of)g
(dark)g(energy)f(mo)r(dels.\))h(Note)f(that)h(these)f(planned)523
3408 y(ground-based)20 b(studies)h(will)h(yield)e(impressiv)n(e)g
(constrain)n(ts)h(on)g(the)f(v)l(alue)g(of)h Fq(w)i Ft(to)r(da)n(y)-6
b(,)20 b Fq(w)3179 3416 y Fu(0)3214 3408 y Ft(,)h(ev)n(en)523
3499 y(without)k(assuming)f(constan)n(t)h Fq(w)r Ft(.)g(In)e(fact,)j
(these)f(constrain)n(ts)g(are)g(comparable)g(to)f(the)h(curren)n(t)523
3590 y(measuremen)n(ts)f(of)j Fq(w)h Ft(assuming)e(it)g(is)h(constan)n
(t)f(\(sho)n(wn)g(in)g(the)f(righ)n(t)h(panel)g(of)h(Fig.)g(6\).)f
Fc(R)n(ight)523 3682 y(p)l(anel:)c Ft(Estimated)h(68\045)g
(con\014dence)f(regions)i(of)f(the)f(\014rst)g(deriv)l(ativ)n(e)g(of)h
(the)f(equation)h(of)g(state,)523 3773 y Fq(w)580 3741
y Fp(0)602 3773 y Ft(,)j(v)n(ersus)g(its)g(v)l(alue)f(to)r(da)n(y)-6
b(,)26 b Fq(w)1472 3781 y Fu(0)1506 3773 y Ft(,)g(for)h(the)e(same)h
(exp)r(erimen)n(ts.)523 4036 y Fo(6)112 b(The)38 b(F)-9
b(uture)523 4236 y Fw(Ho)n(w)24 b(far)g(can)g(w)n(e)g(push)g(the)h(SN)g
(measuremen)n(ts?)f(Finding)g(more)g(and)g(more)g(SNe)g(allo)n(ws)523
4335 y(us)41 b(to)g(b)r(eat)h(do)n(wn)e(statistical)h(errors)e(to)i
(arbitrarily)e(small)i(lev)n(els)g(but,)g(ultimately)-7
b(,)523 4435 y(systematic)41 b(e\013ects)g(will)g(limit)h(the)g
(precision)e(to)h(whic)n(h)g(SNIa)g(magnitudes)g(can)g(b)r(e)523
4535 y(applied)36 b(to)f(measure)g(distances.)g(Our)f(b)r(est)i
(estimate)g(is)f(that)h(it)g(will)g(b)r(e)g(p)r(ossible)f(to)523
4634 y(con)n(trol)e(systematic)h(e\013ects)h(from)f(ground-based)e(exp)
r(erimen)n(ts)i(to)g(a)g(lev)n(el)g(of)g Fj(\030)g Fw(0)p
Fm(:)p Fw(03)523 4734 y(mag.)28 b(Carefully)f(con)n(trolled)g
(ground-based)f(exp)r(erimen)n(ts)i(on)g(200)f(SNe)h(will)h(reac)n(h)e
(this)523 4833 y(statistical)32 b(uncertain)n(t)n(y)f(in)i
Fm(z)h Fw(=)c(0)p Fm(:)p Fw(1)h(redshift)i(bins)f(in)g(the)h(range)e
Fm(z)j Fw(=)c(0)p Fm(:)p Fw(3)21 b Fj(\000)g Fw(0)p Fm(:)p
Fw(7,)31 b(and)p eop
%%Page: 21 21
21 20 bop 1829 232 a Ft(Measuring)27 b(cosmology)g(with)e(Sup)r(erno)n
(v)l(ae)198 b(21)523 415 y Fw(is)30 b(ac)n(hiev)-5 b(able)29
b(within)i(\014v)n(e)f(y)n(ears.)f(A)h(comparable)f(qualit)n(y)h(lo)n
(w)f(redshift)i(sample,)e(with)523 515 y(300)d(SNe)i(in)g
Fm(z)e Fw(=)d(0)p Fm(:)p Fw(02)17 b Fj(\000)h Fw(0)p
Fm(:)p Fw(08,)26 b(will)i(also)f(b)r(e)h(ac)n(hiev)-5
b(able)26 b(in)i(that)g(time)g(frame)f([2].)648 614 y(The)g
Fi(Sup)r(erNo)n(v)-5 b(a/Acceleration)25 b(Prob)r(e)i(\(SNAP\))h
Fw(collab)r(oration)2767 584 y Fv(1)2830 614 y Fw(has)f(prop)r(osed)f
(to)523 714 y(launc)n(h)34 b(a)f(dedicated)i(cosmology)c(satellite)j
([1,68])f({)h(the)g(ultimate)h(SNIa)f(exp)r(erimen)n(t.)523
814 y(This)d(satellite)g(will,)g(if)g(funded,)h(scan)e(man)n(y)g
(square)g(degrees)f(of)i(sky)-7 b(,)31 b(disco)n(v)n(ering)d(w)n(ell)
523 913 y(o)n(v)n(er)e(a)i(thousand)f(SNIa)h(p)r(er)g(y)n(ear)f(and)h
(obtain)f(their)h(sp)r(ectra)g(and)g(ligh)n(t)f(curv)n(es)g(out)h(to)
523 1013 y Fm(z)e Fw(=)d(1)p Fm(:)p Fw(7.)i(Besides)g(the)h(large)f(n)n
(um)n(b)r(ers)g(of)h(ob)5 b(jects)25 b(and)h(their)f(extended)h
(redshift)g(range,)523 1112 y(space-based)f(observ)-5
b(ations)25 b(will)i(also)e(pro)n(vide)h(the)h(opp)r(ortunit)n(y)f(to)h
(con)n(trol)e(man)n(y)h(sys-)523 1212 y(tematic)32 b(e\013ects)f(b)r
(etter)h(than)f(from)g(the)h(ground)e([21,53].)g(Fig.)h(7)g(sho)n(ws)f
(the)i(exp)r(ected)523 1312 y(precision)20 b(in)h(the)g
Fi(SNAP)g Fw(and)g(ground-based)e(exp)r(erimen)n(ts)h(for)h(measuring)e
Fm(w)r Fw(,)j(assuming)523 1411 y(a)27 b(\015at)h(Univ)n(erse.)f(P)n
(erhaps)f(the)i(most)f(imp)r(ortan)n(t)h(adv)-5 b(ance)27
b(will)h(b)r(e)g(the)g(\014rst)f(studies)h(of)523 1511
y(the)i(time)h(v)-5 b(ariation)29 b(of)h(the)g(equation)g(of)g(state)f
Fm(w)k Fw(\(see)d(the)h(righ)n(t)e(panel)h(of)g(Fig.)g(7)f(and)523
1611 y([40,103]\).)648 1710 y(With)34 b(rapidly)e(impro)n(ving)g
Fi(CMB)h Fw(data)g(from)g(in)n(terferometers,)f(the)h(satellites)g
Fi(Mi-)523 1810 y(cro)n(w)n(a)n(v)n(e)25 b(Anisotrop)n(y)i(Prob)r(e)g
(\(MAP\))i Fw(and)f Fi(Planc)n(k)p Fw(,)f(and)h(ballo)r(on-based)f
(instrumen)n(ta-)523 1910 y(tion)32 b(planned)f(for)g(the)h(next)f(sev)
n(eral)f(y)n(ears,)g Fi(CMB)h Fw(measuremen)n(ts)f(promise)h(dramatic)
523 2009 y(impro)n(v)n(emen)n(ts)18 b(in)i(precision)f(on)h(man)n(y)f
(of)h(the)g(cosmological)e(parameters.)g(Ho)n(w)n(ev)n(er,)g(the)523
2109 y Fi(CMB)28 b Fw(measuremen)n(ts)e(are)h(relativ)n(ely)g
(insensitiv)n(e)g(to)h(the)g(dark)f(energy)f(and)i(the)g(ep)r(o)r(c)n
(h)523 2208 y(of)34 b(cosmic)f(acceleration.)g(SNIa)h(are)f(curren)n
(tly)g(the)h(only)g(w)n(a)n(y)f(to)h(directly)f(study)i(this)523
2308 y(acceleration)g(ep)r(o)r(c)n(h)h(with)h(su\016cien)n(t)g
(precision)e(\(and)i(con)n(trol)e(on)h(systematic)g(uncer-)523
2408 y(tain)n(ties\))25 b(that)g(w)n(e)g(can)f(in)n(v)n(estigate)g(the)
h(prop)r(erties)f(of)h(the)g(dark)f(energy)-7 b(,)24
b(and)g(an)n(y)g(time)523 2507 y(dep)r(endence)i(in)f(these)g(prop)r
(erties.)f(This)i(am)n(bitious)e(goal)g(will)h(require)f(complemen)n
(tary)523 2607 y(and)36 b(supp)r(orting)f(measuremen)n(ts)g(of,)h(for)f
(example,)h Fm(\012)2348 2619 y Fl(M)2458 2607 y Fw(from)f
Fi(CMB)p Fw(,)h(w)n(eak)f(lensing,)523 2707 y(and)30
b(large)f(scale)g(structure.)h(The)g(SN)h(measuremen)n(ts)e(will)i
(also)e(pro)n(vide)g(a)h(test)g(of)h(the)523 2806 y(cosmological)c
(results)h(indep)r(enden)n(t)i(from)e(these)h(other)g(tec)n(hniques,)f
(whic)n(h)h(ha)n(v)n(e)f(their)523 2906 y(o)n(wn)37 b(systematic)g
(errors.)e(Mo)n(ving)h(forw)n(ard)g(sim)n(ultaneously)g(on)h(these)h
(exp)r(erimen)n(tal)523 3005 y(fron)n(ts)28 b(o\013ers)h(the)g
(plausible)g(and)g(exciting)f(p)r(ossibilit)n(y)h(of)g(ac)n(hieving)f
(a)g(comprehensiv)n(e)523 3105 y(measuremen)n(t)f(of)g(the)h(fundamen)n
(tal)g(prop)r(erties)f(of)g(our)g(Univ)n(erse.)523 3371
y Fo(References)583 3562 y Ft(1.)42 b(G.)26 b(Aldering)g(et)g(al.:)h
(SPIE)e Fs(4835)p Ft(,)i(21)f(\(2002\))583 3653 y(2.)42
b(G.)26 b(Aldering)g(et)g(al.:)h(SPIE)e Fs(4836)p Ft(,)i(93)f(\(2002\))
583 3744 y(3.)42 b(W.A.)26 b(Baum:)f(Astron.)h(J.)g Fs(62)p
Ft(,)h(6)f(\(1957\))583 3836 y(4.)42 b(N.)28 b(Benitez,)h(A.)e(Riess,)i
(P)-6 b(.)28 b(Nugen)n(t,)g(M.)g(Dic)n(kinson,)g(R.)g(Chorno)r(c)n(k,)g
(A.)g(Filipp)r(enk)n(o:)g(As-)684 3927 y(troph)n(ys.)d(J.)i(Lett.)e
Fs(577)p Ft(,)i(L1)f(\(2002\))583 4018 y(5.)42 b(M.)26
b(Bessell:)i(Pub.)e(Astron.)f(So)r(c.)i(P)n(aci\014c)f
Fs(102)p Ft(,)h(1181)g(\(1998\))583 4110 y(6.)42 b(D.)18
b(Branc)n(h:)h(In:)f Fc(Encyclop)l(e)l(dia)k(of)e(Astr)l(onomy)j(and)e
(Astr)l(ophysics)27 b Ft(\(Academic,)18 b(San)g(Diego)684
4201 y(1989\))27 b(p.)f(733)583 4292 y(7.)42 b(D.)26
b(Branc)n(h,)g(G.A.)g(T)-6 b(ammann:)24 b(Ann.)h(Rev.)g(Astron.)h
(Astroph)n(ys.)f Fs(30)p Ft(,)h(359)h(\(1992\))583 4384
y(8.)42 b(D.)26 b(Branc)n(h,)g(A.)f(Fisher,)i(P)-6 b(.)26
b(Nugen)n(t:)f(Astron.)g(J.)i Fs(106)p Ft(,)f(2383)i(\(1993\))583
4475 y(9.)42 b(D.)26 b(Branc)n(h,)g(A.)f(Fisher,)i(E.)f(Baron,)h(P)-6
b(.)26 b(Nugen)n(t:)f(Astroph)n(ys.)g(J.)h(Lett.)g Fs(470)p
Ft(,)h(L7)f(\(1996\))544 4566 y(10.)43 b(D.)18 b(Branc)n(h,)h(S.)g(P)n
(erlm)n(utter,)f(E.)h(Baron,)h(P)-6 b(.)18 b(Nugen)n(t:)g(In:)h
Fc(R)l(esour)l(c)l(e)k(Bo)l(ok)e(on)h(Dark)f(Ener)l(gy)p
Ft(,)684 4658 y(ed.)26 b(b)n(y)e(E.V.)j(Linder)e(\(Sno)n(wmass)g
(2001\))544 4749 y(11.)43 b(R.)25 b(Cadonau:)i(PhD)e(Thesis,)i(Univ)n
(ersit)n(y)e(of)h(Basel)i(\(1987\))p 523 4802 473 4 v
540 4856 a Fu(1)600 4888 y Ft(See)d Fc(http://snap.lbl.gov)p
eop
%%Page: 22 22
22 21 bop 523 232 a Ft(22)199 b(P)n(erlm)n(utter)25 b(and)g(Sc)n(hmidt)
544 415 y(12.)43 b(E.)27 b(Capp)r(ellaro,)i(M.)e(T)-6
b(uratto,)27 b(D.Y)-6 b(u.)26 b(Tsv)n(etk)n(o)n(v,)g(O.S.)h(Bartuno)n
(v,)f(C.)i(P)n(ollas,)g(R.)f(Ev)l(ans,)684 506 y(M.)f(Ham)n(uy:)e
(Astron.)i(Astroph)n(ys.)f Fs(322)p Ft(,)i(431)g(\(1997\))544
598 y(13.)43 b(P)-6 b(.)26 b(Coles,)h(F.)f(Lucc)n(hin:)g(In:)f
Fc(c)l(osmolo)l(gy)i Ft(\(Wiley)-6 b(,)26 b(Chicester)g(1995\))h(p.)f
(31)544 689 y(14.)43 b(P)-6 b(.)26 b(de)f(Bernardis)i(et)e(al.:)i
(Nature)f Fs(404)p Ft(,)g(955)h(\(2000\))544 780 y(15.)43
b(R.G.)26 b(Eastman,)g(R.P)-6 b(.)25 b(Kirshner:)h(Astroph)n(ys.)f(J.)i
Fs(347)p Ft(,)f(771)h(\(1989\))544 872 y(16.)43 b(R.G.)26
b(Eastman,)g(B.P)-6 b(.)26 b(Sc)n(hmidt,)e(R.)i(Kirshner:)g(Astroph)n
(ys.)f(J.)h Fs(466)p Ft(,)h(911)g(\(1996\))544 963 y(17.)43
b(A.)50 b(Fisher,)h(D.)f(Branc)n(h,)g(P)-6 b(.)50 b(Ho)r(e\015ic)n(h,)g
(A.)g(Khokhlo)n(v:)g(Astroph)n(ys.)f(J.)i(Lett.)f Fs(447)p
Ft(,)684 1054 y(L73)26 b(\(1995\))544 1146 y(18.)43 b(A.V.)18
b(Filipp)r(enk)n(o:)h(In:)f Fc(SN1987A)k(and)f(Other)h(Sup)l(ernovae)p
Ft(,)f(ed.)d(b)n(y)f(I.J.)j(Danziger,)f(K.)f(Kjar)684
1237 y(\(ESO,)25 b(Garc)n(hing)i(1991\))g(p.)e(343)544
1328 y(19.)43 b(A.V.)25 b(Fillip)r(enk)n(o)i(et)f(al.:)h(Astroph)n(ys.)
e(J.)h(Lett.)g Fs(384)p Ft(,)g(L15)h(\(1992\))544 1420
y(20.)43 b(W.L.)26 b(F)-6 b(reedman)25 b(et)g(al.:)i(Astroph)n(ys.)e
(J.)i Fs(553)p Ft(,)f(47)h(\(2001\))544 1511 y(21.)43
b(J.)26 b(F)-6 b(rieman,)26 b(D.)f(Huterer,)h(E.V.)g(Linder,)g(M.S.)g
(T)-6 b(urner:)25 b(astro-ph)h(0208100)i(\(2002\))544
1602 y(22.)43 b(P)-6 b(.)26 b(Garna)n(vic)n(h)g(et)f(al.:)i(Astroph)n
(ys.)e(J.)i(Lett.)e Fs(493)p Ft(,)i(L53)f(\(1998\))544
1694 y(23.)43 b(P)-6 b(.)26 b(Garna)n(vic)n(h)g(et)f(al.:)i(Astroph)n
(ys.)e(J.)i Fs(509)p Ft(,)f(74)h(\(1998\))544 1785 y(24.)43
b(L.G.)27 b(German)n(y)-6 b(,)24 b(A.G.)i(Riess,)h(B.P)-6
b(.)26 b(Sc)n(hmidt,)e(N.B.)i(Sun)n(tze\013:)f(in)h(preparation)g
(\(2003\))544 1876 y(25.)43 b(G.)37 b(Goldhab)r(er)g(et)f(al.:)i(In:)e
Fc(Thermonucle)l(ar)j(Sup)l(ernovae)p Ft(,)g(ed.)d(b)n(y)f(P)-6
b(.)37 b(Ruiz-Lapuen)n(te,)684 1968 y(R.)25 b(Canal,)j(J.)e(Isern)g
(\(Aiguabla)n(v)l(a,)g(June)f(1995;)j(NA)-6 b(TO)24 b(ASI,)h(1997\))544
2059 y(26.)43 b(G.)26 b(Goldhab)r(er)h(et)e(al.:)i(Astroph)n(ys.)e(J.)i
Fs(558)p Ft(,)f(359)h(\(2001\))544 2150 y(27.)43 b(A.)26
b(Go)r(obar,)h(S.)e(P)n(erlm)n(utter:)g(Astroph)n(ys.)g(J.)i
Fs(450)p Ft(,)f(14)h(\(1995\))544 2242 y(28.)43 b(M.)25
b(Ham)n(uy)-6 b(,)22 b(M.M.)k(Phillips,)f(J.)g(Maza,)h(M.)f(Wisc)n
(hnjewsky)-6 b(,)24 b(A.)g(Uomoto,)g(A.U.)g(Landolt,)684
2333 y(R.)h(Khat)n(w)n(ani:)i(Astron.)e(J.)i Fs(102)p
Ft(,)f(208)h(\(1991\))544 2424 y(29.)43 b(M.)35 b(Ham)n(uy)-6
b(,)32 b(M.M.)k(Phillips,)g(N.B.)e(Sun)n(tze\013,)g(R.A.)g(Sc)n
(hommer,)e(J.)j(Maza,)h(R.)e(Aviles:)684 2516 y(Astron.)26
b(J.)g Fs(112)p Ft(,)h(2391)g(\(1996\))544 2607 y(30.)43
b(M.)26 b(Ham)n(uy)-6 b(,)24 b(P)-6 b(.A.)26 b(Pin)n(to:)g(Astron.)g
(J.)g Fs(117)p Ft(,)h(1185)g(\(1999\))544 2698 y(31.)43
b(M.)26 b(Ham)n(uy)e(et)i(al.:)h(Astron.)e(J.)i Fs(106)p
Ft(,)f(2392)h(\(1993\))544 2790 y(32.)43 b(M.)26 b(Ham)n(uy)e(et)i
(al.:)h(Astron.)e(J.)i Fs(109)p Ft(,)f(1)g(\(1995\))544
2881 y(33.)43 b(M.)26 b(Ham)n(uy)e(et)i(al.:)h(Astron.)e(J.)i
Fs(112)p Ft(,)f(2408)h(\(1996\))544 2972 y(34.)43 b(M.)26
b(Ham)n(uy)e(et)i(al.:)h(Astroph)n(ys.)e(J.)h Fs(558)p
Ft(,)h(615)f(\(2001\))544 3064 y(35.)43 b(L.)31 b(Hansen,)f(H.E.)h
(Jorgensen,)h(H.U.)e(N\034rgaard-Nielsen,)i(R.S.)e(Ellis,)i(W.J.)g
(Couc)n(h:)e(As-)684 3155 y(tron.)c(Astroph)n(ys.)f Fs(211)p
Ft(,)i(L9)f(\(1989\))544 3246 y(36.)43 b(R.P)-6 b(.)35
b(Harkness,)h(J.C.)h(Wheeler:)f(In:)f Fc(Sup)l(ernovae)p
Ft(,)j(ed.)d(b)n(y)g(A.G.)g(P)n(etsc)n(hek)h(\(Springer-)684
3337 y(V)-6 b(erlag,)26 b(New)g(Y)-6 b(ork)25 b(1990\))i(p.)f(1)544
3429 y(37.)43 b(D.E.)26 b(Holz,)h(R.M.)f(W)-6 b(ald:)26
b(Ph)n(ys.)f(Rev.)g(D)h Fs(58)p Ft(,)g(063501)i(\(1998\))544
3520 y(38.)43 b(D.E.)26 b(Holz:)h(Astroph)n(ys.)e(J.)h
Fs(506)p Ft(,)h(1)f(\(1998\))544 3611 y(39.)43 b(M.L.)27
b(Humason,)e(N.U.)g(Ma)n(y)n(all,)i(A.R.)e(Sandage:)i(Astroph)n(ys.)e
(J.)h Fs(61)p Ft(,)h(97)f(\(1956\))544 3703 y(40.)43
b(D.)26 b(Huterer,)f(M.S.)h(T)-6 b(urner:)26 b(Ph)n(ys.)f(Rev.)h(D)f
Fs(64)p Ft(,)h(123527)i(\(2001\))544 3794 y(41.)43 b(S.)26
b(Jha:)g(PhD)f(Thesis,)i(Harv)l(ard)e(Univ)n(ersit)n(y)g(\(2002\))544
3885 y(42.)43 b(C.T.)27 b(Ko)n(w)n(al:)g(Astron.)f(J.)g
Fs(73)p Ft(,)h(1021)g(1968)544 3977 y(43.)43 b(A.)26
b(Kim,)e(A.)i(Go)r(obar,)h(S.)f(P)n(erlm)n(utter:)f(Pub.)g(Astron.)h
(So)r(c.)g(P)n(aci\014c)h Fs(108)p Ft(,)f(190)h(\(1996\))544
4068 y(44.)43 b(R.P)-6 b(.)26 b(Kirshner,)f(J.)i(Kw)n(an:)f(Astroph)n
(ys.)f(J.)h Fs(193)p Ft(,)h(27)f(\(1974\))544 4159 y(45.)43
b(R.)25 b(Kan)n(to)n(wski,)i(T.)f(V)-6 b(aughan,)25 b(D.)h(Branc)n(h:)g
(Astroph)n(ys.)f(J.)i Fs(447)p Ft(,)f(35)h(\(1995\))544
4251 y(46.)43 b(B.)26 b(Leibundgut:)f(PhD)g(Thesis,)j(Univ)n(ersit)n(y)
c(of)j(Basel)g(\(1988\))544 4342 y(47.)43 b(B.)26 b(Leibundgut,)f(G.A.)
h(T)-6 b(ammann:)25 b(Astron.)g(Astroph)n(ys.)g Fs(230)p
Ft(,)i(81)f(\(1990\))544 4433 y(48.)43 b(B.)f(Leibundgut,)e(G.A.)h(T)-6
b(ammann,)40 b(R.)g(Cadonau,)i(D.)f(Cerrito:)h(Astron.)f(Astroph)n(ys.)
684 4525 y(Suppl.)25 b(Ser.)h Fs(89)p Ft(,)g(537)h(\(1991\))544
4616 y(49.)43 b(B.)26 b(Leibundgut)f(et)h(al.:)h(Astron.)e(J.)i
Fs(105)p Ft(,)f(301)h(\(1993\))544 4707 y(50.)43 b(B.)26
b(Leibundgut)f(et)h(al.:)h(Astroph)n(ys.)e(J.)h(Lett.)g
Fs(466)p Ft(,)g(L21)h(\(1996\))544 4799 y(51.)43 b(D.C.)23
b(Leonard,)f(A.V.)g(Filipp)r(enk)n(o,)h(D.R.)f(Ardila,)g(M.S.)h
(Brotherton:)g(Astroph)n(ys.)e(J.)i Fs(553)p Ft(,)684
4890 y(861)k(\(2001\))p eop
%%Page: 23 23
23 22 bop 1829 232 a Ft(Measuring)27 b(cosmology)g(with)e(Sup)r(erno)n
(v)l(ae)198 b(23)544 415 y(52.)43 b(D.C.)26 b(Leonard)g(et)g(al.:)h
(Pub.)e(Astron.)h(So)r(c.)g(P)n(aci\014c)h Fs(114)p Ft(,)f(35)h
(\(2002\))544 504 y(53.)43 b(E.)26 b(Linder,)g(D.)g(Huterer:)f
(astro-ph)h(0208138)i(\(2002\))544 593 y(54.)43 b(D.L.)26
b(Miller,)h(D.)f(Branc)n(h:)g(Astron.)g(J.)g Fs(100)p
Ft(,)h(530)g(\(1990\))544 682 y(55.)43 b(E.)26 b(Mortsell,)i(C.)e
(Gunnarsson,)h(A.)e(Go)r(obar:)i(Astroph)n(ys.)e(J.)i
Fs(561)p Ft(,)f(106)h(\(2001\))544 770 y(56.)43 b(R.A.)34
b(Muller,)i(H.J.M.)f(Newb)r(erg,)g(C.R.)g(P)n(enn)n(ypac)n(k)n(er,)f
(S.)g(P)n(erlm)n(utter,)g(T.P)-6 b(.)35 b(Sasseen,)684
862 y(C.K.)26 b(Smith:)f(Astroph)n(ys.)g(J.)h(Lett.)g
Fs(384)p Ft(,)h(L9)f(\(1992\))544 951 y(57.)43 b(H.U.)17
b(N\034rgaard-Nielsen,)i(L.)f(Hansen,)g(H.E.)g(Jorgensen,)h(A.)e
(Aragon)h(Salamanca,)g(R.S.)g(El-)684 1042 y(lis:)27
b(Nature)e Fs(339)p Ft(,)i(523)g(\(1989\))544 1131 y(58.)43
b(P)-6 b(.)26 b(Nugen)n(t,)f(A.)g(Kim,)g(S.)h(P)n(erlm)n(utter:)f(Pub.)
h(Astron.)f(So)r(c.)i(P)n(aci\014c)f Fs(114)p Ft(,)h(803)f(\(2002\))544
1219 y(59.)43 b(N.)31 b(P)n(anagia:)i(In:)d Fc(Sup)l(ernovae)35
b(as)e(Distanc)l(e)g(Indic)l(ators)p Ft(,)g(ed.)e(b)n(y)e(N.)i(Bartel,)
i(\(Springer-)684 1311 y(V)-6 b(erlag,)26 b(Berlin)h(1985\))g(p.)f(14)
544 1400 y(60.)43 b(R.)25 b(P)n(ain)i(et)e(al.:)i(Astroph)n(ys.)e(J.)i
Fs(473)p Ft(,)f(356)h(\(1996\))544 1488 y(61.)43 b(R.)25
b(P)n(ain)i(et)e(al.:)i(Astroph)n(ys.)e(J.)i Fs(577)p
Ft(,)f(120)h(\(2002\))544 1577 y(62.)43 b(G.)28 b(P)n(earce,)h(B.)g(P)n
(atc)n(hett,)f(J.)g(Allington-Smith,)f(I.)h(P)n(arry:)g(Astroph)n(ys.)f
(Space)h(Sci.)g Fs(150)p Ft(,)684 1669 y(267)f(\(1988\))544
1757 y(63.)43 b(M.M.)27 b(Phillips)g(et)e(al.:)i(Pub.)f(Astron.)g(So)r
(c.)g(P)n(aci\014c)g Fs(99)p Ft(,)h(592)g(\(1987\))544
1846 y(64.)43 b(M.M.)27 b(Phillips:)g(Astroph)n(ys.)e(J.)i(Lett.)e
Fs(413)p Ft(,)i(L105)g(\(1993\))544 1935 y(65.)43 b(M.M.)30
b(Phillips,)g(P)-6 b(.)28 b(Lira,)i(N.B.)f(Sun)n(tze\013,)f(R.A.)g(Sc)n
(hommer,)f(M.)i(Ham)n(uy)-6 b(,)26 b(J.)j(Maza:)h(As-)684
2026 y(tron.)c(J.)g Fs(118)p Ft(,)h(1766)g(\(1999\))544
2115 y(66.)43 b(P)-6 b(.J.E.)30 b(P)n(eebles:)f(In:)f
Fc(Principles)i(of)g(Physic)l(al)g(c)l(osmolo)l(gy)g
Ft(\(Princeton)e(Univ)n(ersit)n(y)g(Press,)684 2207 y(Princeton)e
(1993\))544 2295 y(67.)43 b(S.)34 b(P)n(erlm)n(utter,)g(R.A.)g(Muller,)
i(H.J.M.)f(Newb)r(erg,)g(C.R.)g(P)n(enn)n(ypac)n(k)n(er,)f(T.P)-6
b(.)35 b(Sasseen,)684 2387 y(C.K.)26 b(Smith:)f(ASP)g(Conf.)i(Pro)r(c.)
g Fs(34)p Ft(,)f(67)h(\(1992\))544 2475 y(68.)43 b(S.)34
b(P)n(erlm)n(utter,)g(E.)g(Linder:)h(In)e Fc(Dark)j(Matter)h(2002,)e
(Pr)l(o)l(c.)h(5th)g(International)h(UCLA)684 2567 y(Symp)l(osium)g(on)
f(Sour)l(c)l(es)j(and)d(Dete)l(ction)i(of)e(Dark)i(Matter)f(and)g(Dark)
g(Ener)l(gy)h(in)e(the)684 2658 y(Universe)p Ft(,)27
b(ed.)f(b)n(y)f(D.B.)h(Cline)g(\(Elsevier,)h(Amsterdam)d(2003\))544
2747 y(69.)43 b(S.)26 b(P)n(erlm)n(utter,)f(M.)h(T)-6
b(urner,)26 b(M.)g(White:)g(Ph)n(ys.)f(Rev.)g(Lett.)h
Fs(83)p Ft(,)h(670)f(\(1999\))544 2836 y(70.)43 b(S.)26
b(P)n(erlm)n(utter)e(et)i(al.:)h(IA)n(UC)e(5956)i(\(1994\))544
2925 y(71.)43 b(S.)26 b(P)n(erlm)n(utter)e(et)i(al.:)h(IA)n(UC)e(6263)i
(\(1995\))544 3013 y(72.)43 b(S.)26 b(P)n(erlm)n(utter)e(et)i(al.:)h
(IA)n(UC)e(6270)i(\(1995\))544 3102 y(73.)43 b(S.)26
b(P)n(erlm)n(utter)e(et)i(al.:)h(Astroph)n(ys.)e(J.)h(Lett.)g
Fs(440)p Ft(,)h(L41)f(\(1995\))544 3191 y(74.)43 b(S.)26
b(P)n(erlm)n(utter)e(et)i(al.:)h(Astroph)n(ys.)e(J.)h
Fs(483)p Ft(,)h(565)g(\(1997\))544 3280 y(75.)43 b(S.)26
b(P)n(erlm)n(utter)e(et)i(al.:)h(Nature)e Fs(391)p Ft(,)i(51)f
(\(1998\))544 3369 y(76.)43 b(S.)37 b(P)n(erlm)n(utter)f(et)h(al.:)h
(In:)f Fc(Thermonucle)l(ar)i(Sup)l(ernovae)p Ft(,)h(ed.)d(b)n(y)f(P)-6
b(.)37 b(Ruiz-Lapuen)n(te,)684 3460 y(R.)25 b(Canal,)j(J.)e(Isern)g
(\(Aiguabla)n(v)l(a,)g(June)f(1995;)j(NA)-6 b(TO)24 b(ASI,)h(1997\))544
3549 y(77.)43 b(S.)26 b(P)n(erlm)n(utter)e(et)i(al.:)h(Astroph)n(ys.)e
(J.)h Fs(517)p Ft(,)h(565)g(\(1999\))544 3638 y(78.)43
b(M.M.)27 b(Phillips,)h(L.A.)e(W)-6 b(ells,)27 b(N.B.)f(Sun)n(tze\013,)
f(M.)i(Ham)n(uy)-6 b(,)24 b(B.)i(Leibundgut,)f(R.P)-6
b(.)26 b(Kirsh-)684 3729 y(ner,)g(C.B.)h(F)-6 b(oltz:)26
b(Astron.)g(J.)g Fs(103)p Ft(,)h(1632)g(\(1992\))544
3818 y(79.)43 b(A.G.)26 b(Riess,)h(W.H.)e(Press,)i(R.P)-6
b(.)26 b(Kirshner:)g(Astroph)n(ys.)f(J.)h Fs(473)p Ft(,)h(88)f
(\(1996\))544 3907 y(80.)43 b(A.G.)24 b(Riess,)g(P)-6
b(.)23 b(Nugen)n(t,)g(A.V.)g(Filipp)r(enk)n(o,)h(R.P)-6
b(.)23 b(Kirshner,)h(S.)f(P)n(erlm)n(utter:)f(Astroph)n(ys.)684
3998 y(J.)k Fs(504)p Ft(,)h(935)g(\(1998\))544 4087 y(81.)43
b(A.G.)26 b(Riess,)h(A.V.)e(Filipp)r(enk)n(o,)h(W.)g(Li,)g(B.P)-6
b(.)27 b(Sc)n(hmidt:)d(Astron.)i(J.)g Fs(118)p Ft(,)h(2668)g(\(1999\))
544 4176 y(82.)43 b(A.G.)26 b(Riess)g(et)g(al.:)h(Astron.)f(J.)g
Fs(114)p Ft(,)h(722)f(\(1997\))544 4264 y(83.)43 b(A.G.)26
b(Riess)g(et)g(al.:)h(Astron.)f(J.)g Fs(116)p Ft(,)h(1009)g(\(1998\))
544 4353 y(84.)43 b(A.G.)26 b(Riess)g(et)g(al.:)h(Astron.)f(J.)g
Fs(117)p Ft(,)h(707)f(\(1999\))544 4442 y(85.)43 b(A.G.)26
b(Riess)g(et)g(al.:)h(Astroph)n(ys.)e(J.)h Fs(560)p Ft(,)h(49)f
(\(2001\))544 4531 y(86.)43 b(B.P)-6 b(.)50 b(Sc)n(hmidt,)e(R.P)-6
b(.)50 b(Kirshner,)f(R.G.)h(Eastman,)g(M.M.)h(Phillips,)g(N.B.)f(Sun)n
(tze\013,)684 4622 y(N.B.)26 b(Ham)n(uy)-6 b(,)24 b(J.)i(Maza,)h(R.)f
(Aviles:)g(Astroph)n(ys.)f(J.)i Fs(432)p Ft(,)f(42)h(\(1994\))544
4711 y(87.)43 b(B.)26 b(Sc)n(hmidt)e(et)i(al.:)h(Astroph)n(ys.)e(J.)h
Fs(507)p Ft(,)h(46)f(\(1998\))544 4800 y(88.)43 b(A.)25
b(Saha,)g(A.)g(Sandage,)h(G.A.)f(T)-6 b(ammann,)24 b(A.E.)h(Dolphin,)g
(J.)h(Christensen,)g(N.)f(P)n(anagia,)684 4891 y(F.D.)h(Macc)n(hetto:)h
(Astroph)n(ys.)e(J.)h Fs(562)p Ft(,)h(313)g(\(2001\))p
eop
%%Page: 24 24
24 23 bop 523 232 a Ft(24)199 b(P)n(erlm)n(utter)25 b(and)g(Sc)n(hmidt)
544 415 y(89.)43 b(D.J.)26 b(Sc)n(hlegel,)h(D.P)-6 b(.)26
b(Finkb)r(einer,)g(M.)g(Da)n(vis:)g(Astroph)n(ys.)f(J.)h(Suppl.)f
Fs(500)p Ft(,)i(525)g(\(1998\))544 506 y(90.)43 b(A.)26
b(Sandage,)g(G.A.)g(T)-6 b(ammann:)24 b(Astroph)n(ys.)h(J.)i
Fs(415)p Ft(,)f(1)g(\(1993\))544 598 y(91.)43 b(M.)26
b(Sulliv)l(an)g(et)f(al.:)i(Mon.)g(Not.)e(R.)h(Astron.)g(So)r(c.)55
b(,)26 b(in)g(press)g(\(2003\))544 689 y(92.)43 b(G.A.)26
b(T)-6 b(ammann,)24 b(B.)j(Leibundgut:)e(Astron.)g(Astroph)n(ys.)g
Fs(236)p Ft(,)i(9)f(\(1990\))544 780 y(93.)43 b(G.A.)26
b(T)-6 b(ammann,)24 b(A.)i(Sandage:)g(Astroph)n(ys.)f(J.)i
Fs(452)p Ft(,)f(16)g(\(1995\))544 872 y(94.)43 b(A.)26
b(Uomoto,)f(R.P)-6 b(.)26 b(Kirshner:)g(Astron.)f(Astroph)n(ys.)g
Fs(149)p Ft(,)i(L7)f(\(1985\))544 963 y(95.)43 b(S.)26
b(v)l(an)f(den)g(Bergh:)h(Astroph)n(ys.)f(J.)i(Lett.)f
Fs(453)p Ft(,)g(L55)g(\(1995\))544 1054 y(96.)43 b(S.)26
b(v)l(an)f(den)g(Bergh,)h(J.)h(P)n(azder:)f(Astroph)n(ys.)f(J.)i
Fs(390)p Ft(,)f(34)g(\(1992\))544 1146 y(97.)43 b(T.E.)53
b(V)-6 b(aughan,)52 b(D.)g(Branc)n(h,)g(D.L.)g(Miller,)i(S.)e(P)n(erlm)
n(utter:)f(Astroph)n(ys.)g(J.)i Fs(439)p Ft(,)684 1237
y(558)27 b(\(1995\))544 1328 y(98.)43 b(L.)26 b(V)-6
b(erde)25 b(et)g(al.:)i(Mon.)g(Not.)e(R.)h(Astron.)g(So)r(c.)g
Fs(335)p Ft(,)h(432)f(\(2002\))544 1420 y(99.)43 b(R.V.)25
b(W)-6 b(agoner:)27 b(Astroph)n(ys.)e(J.)h(Lett.)g Fs(250)p
Ft(,)h(L65)f(\(1981\))523 1511 y(100.)43 b(J.)g(W)-6
b(am)n(bsgabss,)43 b(R.)f(Cen,)h(X.)f(Guohong,)h(J.)g(Ostrik)n(er:)g
(Astroph)n(ys.)e(J.)i(Lett.)g Fs(475)p Ft(,)684 1602
y(L81)26 b(\(1997\))523 1694 y(101.)43 b(L.)26 b(W)-6
b(ang,)26 b(A.D.)f(Ho)n(w)n(ell,)i(P)-6 b(.)26 b(H\177)-38
b(o\015ic)n(h,)26 b(J.C.)h(Wheeler:)f(Astroph)n(ys.)f(J.)i
Fs(550)p Ft(,)f(1030)h(\(2001\))523 1785 y(102.)43 b(J.C.)27
b(Wheeler,)g(R.)e(Levreault:)h(Astroph)n(ys.)f(J.)i(Lett.)e
Fs(294)p Ft(,)i(L17)f(\(1985\))523 1876 y(103.)43 b(J.)26
b(W)-6 b(eller,)27 b(A.)e(Albrec)n(h)n(t:)h(Ph)n(ys.)f(Rev.)g(D)g
Fs(65)p Ft(,)i(103512)h(\(2002\))523 1968 y(104.)43 b(D.M.)25
b(Wittman,)f(J.A.)h(T)n(yson,)g(G.M.)g(Bernstein,)h(R.W.)e(Lee,)h(I.P)
-6 b(.)25 b(dell'An)n(tonio,)g(P)-6 b(.)25 b(Fis-)684
2059 y(c)n(her,)h(D.R.)f(Smith,)g(M.M.)i(Blouk)n(e:)f(SPIE)f
Fs(3355)p Ft(,)i(626)g(\(1998\))p eop
%%Trailer
end 
end

userdict /end-hook known{end-hook}if
%%EOF
